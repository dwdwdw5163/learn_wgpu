(undo-tree-save-format-version . 1)
"60a07baac85c967d84ca3ff69ae6b70ebb612922"
[nil nil nil nil (26013 25526 915350 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 367 . 368) (nil fontified nil 367 . 368) (nil fontified nil 365 . 367) (nil fontified nil 364 . 365) (nil fontified nil 361 . 364) (nil fontified nil 360 . 361) (nil fontified nil 357 . 360) (nil fontified nil 354 . 357) (nil fontified nil 353 . 354) (nil fontified nil 352 . 353) (nil fontified nil 350 . 352) (nil fontified nil 341 . 350) (nil fontified nil 340 . 341) (nil fontified nil 337 . 340) (nil fontified nil 333 . 337) (nil fontified nil 289 . 333) (nil fontified nil 286 . 289) (nil fontified nil 282 . 286) (nil fontified nil 224 . 282) (nil fontified nil 221 . 224) (nil fontified nil 217 . 221) (nil fontified nil 216 . 217) (nil fontified nil 215 . 216) (nil fontified nil 214 . 215) (nil fontified nil 201 . 214) (nil fontified nil 200 . 201) (nil fontified nil 194 . 200) (nil fontified nil 193 . 194) (nil fontified nil 190 . 193) (nil fontified nil 189 . 190) (nil fontified nil 188 . 189) (nil fontified nil 187 . 188) (nil fontified nil 134 . 187) (nil fontified nil 133 . 134) (nil fontified nil 127 . 133) (nil fontified nil 126 . 127) (nil fontified nil 125 . 126) (nil fontified nil 84 . 125) (nil fontified nil 81 . 84) (nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil fontified nil 72 . 76) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (nil fontified nil 4 . 70) (nil fontified nil 1 . 4) (1 . 368) (t 26013 25486 229349 963000)) nil (26013 25526 915347 0) 0 nil])
([nil nil ((1 . 2)) nil (26013 25526 915332 0) 0 nil])
([nil nil ((#("Camera" 0 6 (face font-lock-type-face fontified t)) . -202) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) 208) nil (26013 25526 915331 0) 0 nil])
([nil nil ((202 . 208)) nil (26013 25526 915322 0) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-type-face fontified t)) . -207) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 208) nil (26013 25526 915320 0) 0 nil])
([nil nil ((207 . 211)) nil (26013 25526 915291 0) 0 nil])
([nil nil ((372 . 373) 211) nil (26013 25526 915288 0) 0 nil])
([nil nil ((1 . 2) (t 26013 25526 919392 288000)) nil (26013 25661 998459 0) 0 nil])
([nil nil ((1 . 9)) nil (26013 25661 998458 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8) (undo-tree-id41 . -1) 9) nil (26013 25661 998457 0) 0 nil])
([nil nil ((8 . 11)) nil (26013 25661 998455 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -10) (undo-tree-id40 . -1) 11) nil (26013 25661 998453 0) 0 nil])
([nil nil ((10 . 24)) nil (26013 25661 998451 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 24) (24 . 28) (23 . 25)) nil (26013 25661 998450 0) 0 nil])
([nil nil ((24 . 28)) nil (26013 25661 998448 0) 0 nil])
([nil nil ((28 . 33)) nil (26013 25661 998447 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -32) (undo-tree-id39 . -1) 33) nil (26013 25661 998446 0) 0 nil])
([nil nil ((32 . 39)) nil (26013 25661 998444 0) 0 nil])
([nil nil ((39 . 50)) nil (26013 25661 998443 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -45) (undo-tree-id34 . -1) (#("g" 0 1 (fontified t)) . -46) (undo-tree-id35 . -1) (#("m" 0 1 (fontified t)) . -47) (undo-tree-id36 . -1) (#("a" 0 1 (fontified t)) . -48) (undo-tree-id37 . -1) (#("x" 0 1 (fontified t)) . -49) (undo-tree-id38 . -1) 50) nil (26013 25661 998441 0) 0 nil])
([nil nil ((45 . 46)) nil (26013 25661 998434 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -45) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 46) nil (26013 25661 998433 0) 0 nil])
([nil nil ((45 . 48)) nil (26013 25661 998427 0) 0 nil])
([nil nil ((45 . 51) (#("cgm" 0 3 (fontified nil)) . 45) (45 . 48) (#("cgmath" 0 6 (fontified nil)) . -45) (45 . 51) (#("cgm" 0 3 (fontified t)) . -45) (undo-tree-id20 . -3) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -3) (undo-tree-id28 . -3) 48) nil (26013 25661 998425 0) 0 nil])
([nil nil ((51 . 54)) nil (26013 25661 998414 0) 0 nil])
([nil nil ((apply yas--snippet-revive 53 62 #s(yas--snippet nil nil #s(yas--exit 61 nil) 60 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 61 nil) 60 nil nil nil nil)) (53 . 62) (#("Vector3<$0>" 0 11 (fontified nil)) . 53) (53 . 64) (#("V" 0 1 (fontified nil)) . 53) (53 . 54) (#("Vector3<â€¦>" 0 10 (fontified nil)) . -53) (53 . 63) (#("V" 0 1 (face font-lock-type-face fontified t)) . -53) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 54) nil (26013 25661 998411 0) 0 nil])
([nil nil ((61 . 64)) nil (26013 25661 998392 0) 0 nil])
([nil nil ((65 . 66)) nil (26013 25661 998388 0) 0 nil])
([nil nil ((66 . 71) (t 26013 25662 4178 873000)) nil (26013 25714 500656 0) 0 nil])
([nil nil ((71 . 77)) nil (26013 25714 500655 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -75) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("o" 0 1 (fontified t)) . -76) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 77) nil (26013 25714 500653 0) 0 nil])
([nil nil ((75 . 81)) nil (26013 25714 500635 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -80) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) 81) nil (26013 25714 500634 0) 0 nil])
([nil nil ((80 . 93)) nil (26013 25714 500626 0) 0 nil])
([nil nil ((93 . 95)) nil (26013 25714 500626 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -93) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("e" 0 1 (fontified t)) . -94) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 95) nil (26013 25714 500624 0) 0 nil])
([nil nil ((93 . 94)) nil (26013 25714 500607 0) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -93) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 94) nil (26013 25714 500605 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -92) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 93) nil (26013 25714 500597 0) 0 nil])
([nil nil ((92 . 93)) nil (26013 25714 500572 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 102 . 103) (nil fontified nil 93 . 103) (93 . 103)) nil (26013 25714 500571 0) 0 nil])
([nil nil ((103 . 105)) nil (26013 25714 500569 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -103) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(":" 0 1 (fontified t)) . -104) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 105) nil (26013 25714 500567 0) 0 nil])
([nil nil ((103 . 105)) nil (26013 25714 500549 0) 0 nil])
([nil nil ((104 . 107)) nil (26013 25714 500548 0) 0 nil])
([nil nil ((108 . 109)) nil (26013 25714 500544 0) 0 nil])
([nil nil ((109 . 114) (t 26013 25714 506526 159000)) nil (26013 25730 887661 0) 0 nil])
([nil nil ((114 . 129)) nil (26013 25730 887656 0) 0 nil])
([nil nil ((131 . 133) (t 26013 25730 893390 660000)) nil (26013 25880 360780 0) 0 nil])
([nil nil ((133 . 135)) nil (26013 25880 360779 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -133) (undo-tree-id516 . -1) (#("n" 0 1 (fontified t)) . -134) (undo-tree-id517 . -1) 135) nil (26013 25880 360778 0) 0 nil])
([nil nil ((133 . 142)) nil (26013 25880 360774 0) 0 nil])
([nil nil ((138 . 147) (#("Tran" 0 4 (fontified nil)) . 138) (138 . 142) (#("Transform" 0 9 (fontified nil)) . -138) (138 . 147) (#("Tran" 0 4 (face font-lock-type-face fontified t)) . -138) (undo-tree-id515 . -4) 142) nil (26013 25880 360772 0) 0 nil])
([nil nil ((147 . 150)) nil (26013 25880 360769 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 151) (151 . 155) (151 . 152) (#("    " 0 4 (fontified nil)) . 150) (150 . 154) (149 . 151)) nil (26013 25880 360767 0) 0 nil])
([nil nil ((151 . 155)) nil (26013 25880 360765 0) 0 nil])
([nil nil ((150 . 154)) nil (26013 25880 360764 0) 0 nil])
([nil nil ((154 . 156)) nil (26013 25880 360763 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -154) (undo-tree-id513 . -1) (#("u" 0 1 (fontified t)) . -155) (undo-tree-id514 . -1) 156) nil (26013 25880 360762 0) 0 nil])
([nil nil ((154 . 155)) nil (26013 25880 360758 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -154) (undo-tree-id512 . -1) 155) nil (26013 25880 360757 0) 0 nil])
([nil nil ((154 . 166)) nil (26013 25880 360755 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -165) (undo-tree-id511 . -1) 166) nil (26013 25880 360754 0) 0 nil])
([nil nil ((165 . 174)) nil (26013 25880 360751 0) 0 nil])
([nil nil ((175 . 179) (#("        " 0 8 (fontified nil)) . 174) (174 . 182) (#("    " 0 4 (fontified nil)) . 174) (undo-tree-id510 . -4) (173 . 179)) nil (26013 25880 360750 0) 0 nil])
([nil nil ((174 . 182)) nil (26013 25880 360747 0) 0 nil])
([nil nil ((182 . 186)) nil (26013 25880 360746 0) 0 nil])
([nil nil ((182 . 191) (#("Tran" 0 4 (fontified nil)) . 182) (182 . 186) (#("Transform" 0 9 (fontified nil)) . -182) (182 . 191) (#("Tran" 0 4 (face font-lock-type-face fontified t)) . -182) (undo-tree-id509 . -4) 186) nil (26013 25880 360744 0) 0 nil])
([nil nil ((191 . 194)) nil (26013 25880 360741 0) 0 nil])
([nil nil ((196 . 204) (#("            " 0 12 (fontified nil)) . 195) (undo-tree-id507 . -8) (203 . 207) (195 . 204) (#("            " 0 12 (fontified nil)) . 194) (undo-tree-id508 . -8) (202 . 206) (193 . 203)) nil (26013 25880 360739 0) 0 nil])
([nil nil ((194 . 206)) nil (26013 25880 360735 0) 0 nil])
([nil nil ((206 . 217)) nil (26013 25880 360734 0) 0 nil])
([nil nil ((217 . 218)) nil (26013 25880 360733 0) 0 nil])
([nil nil ((#("            translation:" 0 12 (fontified t) 12 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t)) . 194)) nil (26013 25880 360732 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 194)) nil (26013 25880 360731 0) 0 nil])
([nil nil ((175 . 183) (#("        " 0 8 (fontified nil)) . 174) (undo-tree-id506 . -8) (173 . 183)) nil (26013 25880 360729 0) 0 nil])
([nil nil ((174 . 182)) nil (26013 25880 360727 0) 0 nil])
([nil nil ((182 . 187)) nil (26013 25880 360726 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -186) (undo-tree-id505 . -1) 187) nil (26013 25880 360725 0) 0 nil])
([nil nil ((186 . 190)) nil (26013 25880 360723 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -187) (undo-tree-id502 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -188) (undo-tree-id503 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -189) (undo-tree-id504 . -1) 190) nil (26013 25880 360721 0) 0 nil])
([nil nil ((187 . 201)) nil (26013 25880 360717 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -198) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("=" 0 1 (fontified t)) . -199) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#(" " 0 1 (fontified t)) . -200) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 201) nil (26013 25880 360714 0) 0 nil])
([nil nil ((198 . 202)) nil (26013 25880 360687 0) 0 nil])
([nil nil ((200 . 206) (#("cg" 0 2 (fontified nil)) . 200) (200 . 202) (#("cgmath" 0 6 (fontified nil)) . -200) (200 . 206) (#("cg" 0 2 (fontified t)) . -200) (undo-tree-id470 . -2) (undo-tree-id471 . -1) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) 202) nil (26013 25880 360685 0) 0 nil])
([nil nil ((206 . 209)) nil (26013 25880 360677 0) 0 nil])
([nil nil ((208 . 215) (#("V" 0 1 (fontified nil)) . 208) (208 . 209) (#("Vector3" 0 7 (fontified nil)) . -208) (208 . 215) (#("V" 0 1 (face font-lock-type-face fontified t)) . -208) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 209) nil (26013 25880 360675 0) 0 nil])
([nil nil ((215 . 218)) nil (26013 25880 360669 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -217) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) 218) nil (26013 25880 360667 0) 0 nil])
([nil nil ((217 . 219)) nil (26013 25880 360661 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -217) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("e" 0 1 (fontified t)) . -218) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 219) nil (26013 25880 360659 0) 0 nil])
([nil nil ((217 . 218)) nil (26013 25880 360640 0) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-type-face fontified t)) . -217) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) 218) nil (26013 25880 360639 0) 0 nil])
([nil nil ((217 . 218)) nil (26013 25880 360633 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 221 224 nil nil nil t #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil)))) #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil))) #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil))) #s(yas--exit 231 nil) 61 nil #s(yas--field 1 221 224 nil nil nil t #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil)))) nil nil)) (217 . 229) (#("new(${1:x}, ${2:y}, ${3:z})$0" 0 29 (fontified nil)) . 217) (217 . 246) (#("n" 0 1 (fontified nil)) . 217) (217 . 218) (#("new(â€¦)" 0 6 (fontified nil)) . -217) (217 . 223) (#("n" 0 1 (fontified t)) . -217) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 218) nil (26013 25880 360631 0) 0 nil])
([nil nil ((222 . 224) (#("x" 0 1 (fontified nil)) . 222) (undo-tree-id431 . -1) (221 . 222)) nil (26013 25880 360622 0) 0 nil])
([nil nil ((apply yas--snippet-revive 217 231 #s(yas--snippet nil (#s(yas--field 1 221 224 nil nil nil t #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil)))) #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil))) #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil))) #s(yas--exit 231 nil) 61 nil #s(yas--field 1 221 224 nil nil nil t #s(yas--field 2 226 227 nil nil nil nil #s(yas--field 3 229 230 nil nil nil nil #s(yas--exit 231 nil)))) nil nil))) nil (26013 25880 360620 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -222) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) 223) nil (26013 25880 360618 0) 0 nil])
([nil nil ((222 . 224)) nil (26013 25880 360609 0) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -223) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 224) nil (26013 25880 360608 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -226) (undo-tree-id418 . -1) (undo-tree-id419 . -1) 227) nil (26013 25880 360590 0) 0 nil])
([nil nil ((226 . 229)) nil (26013 25880 360587 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -227) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("0" 0 1 (fontified t)) . -228) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 229) nil (26013 25880 360585 0) 0 nil])
([nil nil ((227 . 230)) nil (26013 25880 360571 0) 0 nil])
([nil nil ((#("        let translation = cgmath::Vector3::new(0.0, 00.0, z)" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 23 (face font-lock-variable-name-face fontified t) 23 26 (fontified t) 26 32 (face font-lock-constant-face fontified t) 32 34 (fontified t) 34 41 (face font-lock-type-face fontified t) 41 43 (fontified t) 43 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-3-face) fontified t) 47 50 (fontified t) 50 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-3-face) fontified t)) . 174) (undo-tree-id223 . -24) (undo-tree-id224 . -24) (undo-tree-id225 . -24) (undo-tree-id226 . -24) (undo-tree-id227 . -24) (undo-tree-id228 . -24) (undo-tree-id229 . -24) (undo-tree-id230 . -24) (undo-tree-id231 . -24) (undo-tree-id232 . -24) (undo-tree-id233 . -24) (undo-tree-id234 . -24) (undo-tree-id235 . -24) (undo-tree-id236 . -24) (undo-tree-id237 . -24) (undo-tree-id238 . -24) (undo-tree-id239 . -24) (undo-tree-id240 . -24) (undo-tree-id241 . -24) (undo-tree-id242 . -25) (undo-tree-id243 . -25) (undo-tree-id244 . -26) (undo-tree-id245 . -26) (undo-tree-id246 . -26) (undo-tree-id247 . -26) (undo-tree-id248 . -26) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -26) (undo-tree-id254 . -26) (undo-tree-id255 . -32) (undo-tree-id256 . -32) (undo-tree-id257 . -32) (undo-tree-id258 . -33) (undo-tree-id259 . -33) (undo-tree-id260 . -34) (undo-tree-id261 . -34) (undo-tree-id262 . -34) (undo-tree-id263 . -34) (undo-tree-id264 . -34) (undo-tree-id265 . -34) (undo-tree-id266 . -34) (undo-tree-id267 . -41) (undo-tree-id268 . -41) (undo-tree-id269 . -41) (undo-tree-id270 . -42) (undo-tree-id271 . -42) (undo-tree-id272 . -43) (undo-tree-id273 . -43) (undo-tree-id274 . -43) (undo-tree-id275 . -43) (undo-tree-id276 . -43) (undo-tree-id277 . -43) (undo-tree-id278 . -43) (undo-tree-id279 . -43) (undo-tree-id280 . -43) (undo-tree-id281 . -43) (undo-tree-id282 . -43) (undo-tree-id283 . -43) (undo-tree-id284 . -43) (undo-tree-id285 . -43) (undo-tree-id286 . -43) (undo-tree-id287 . -43) (undo-tree-id288 . -43) (undo-tree-id289 . -43) (undo-tree-id290 . -43) (undo-tree-id291 . -43) (undo-tree-id292 . -43) (undo-tree-id293 . -43) (undo-tree-id294 . -43) (undo-tree-id295 . -43) (undo-tree-id296 . -43) (undo-tree-id297 . -43) (undo-tree-id298 . -43) (undo-tree-id299 . -43) (undo-tree-id300 . -43) (undo-tree-id301 . -43) (undo-tree-id302 . -43) (undo-tree-id303 . -43) (undo-tree-id304 . -43) (undo-tree-id305 . -43) (undo-tree-id306 . -43) (undo-tree-id307 . -43) (undo-tree-id308 . -43) (undo-tree-id309 . -43) (undo-tree-id310 . -60) (undo-tree-id311 . -60) (undo-tree-id312 . -47) (undo-tree-id313 . -47) (undo-tree-id314 . -47) (undo-tree-id315 . -47) (undo-tree-id316 . -47) (undo-tree-id317 . -47) (undo-tree-id318 . -47) (undo-tree-id319 . -47) (undo-tree-id320 . -47) (undo-tree-id321 . -47) (undo-tree-id322 . -47) (undo-tree-id323 . -47) (undo-tree-id324 . -48) (undo-tree-id325 . -48) (undo-tree-id326 . -48) (undo-tree-id327 . -48) (undo-tree-id328 . -48) (undo-tree-id329 . -48) (undo-tree-id330 . -48) (undo-tree-id331 . -50) (undo-tree-id332 . -50) (undo-tree-id333 . -50) (undo-tree-id334 . -50) (undo-tree-id335 . -50) (undo-tree-id336 . -51) (undo-tree-id337 . -51) (undo-tree-id338 . -51) (undo-tree-id339 . -51) (undo-tree-id340 . -51) (undo-tree-id341 . -51) (undo-tree-id342 . -51) (undo-tree-id343 . -50) (undo-tree-id344 . -48) (undo-tree-id345 . -48) (undo-tree-id346 . -48) (undo-tree-id347 . -49) (undo-tree-id348 . -49) (undo-tree-id349 . -49) (undo-tree-id350 . -49) (undo-tree-id351 . -49) (undo-tree-id352 . -49) (undo-tree-id353 . -49) (undo-tree-id354 . -50) (undo-tree-id355 . -50) (undo-tree-id356 . -50) (undo-tree-id357 . -49) (undo-tree-id358 . -49) (undo-tree-id359 . -49) (undo-tree-id360 . -50) (undo-tree-id361 . -51) (undo-tree-id362 . -51) (undo-tree-id363 . -51) (undo-tree-id364 . -52) (undo-tree-id365 . -52) (undo-tree-id366 . -52) (undo-tree-id367 . -52) (undo-tree-id368 . -52) (undo-tree-id369 . -52) (undo-tree-id370 . -52) (undo-tree-id371 . -52) (undo-tree-id372 . -52) (undo-tree-id373 . -52) (undo-tree-id374 . -52) (undo-tree-id375 . -52) (undo-tree-id376 . -52) (undo-tree-id377 . -53) (undo-tree-id378 . -53) (undo-tree-id379 . -53) (undo-tree-id380 . -53) (undo-tree-id381 . -53) (undo-tree-id382 . -53) (undo-tree-id383 . -53) (undo-tree-id384 . -53) (undo-tree-id385 . -53) (undo-tree-id386 . -53) (undo-tree-id387 . -53) (undo-tree-id388 . -53) (undo-tree-id389 . -53) (undo-tree-id390 . -53) (undo-tree-id391 . -53) (undo-tree-id392 . -53) (undo-tree-id393 . -54) (undo-tree-id394 . -54) (undo-tree-id395 . -55) (undo-tree-id396 . -55) (undo-tree-id397 . -56) (undo-tree-id398 . -52) (undo-tree-id399 . 4) (undo-tree-id400 . -56) (undo-tree-id401 . -56) (undo-tree-id402 . -56) (undo-tree-id403 . -56) (undo-tree-id404 . -60)) nil (26013 25880 360562 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 174) (undo-tree-id221 . 1) (undo-tree-id222 . -1)) nil (26013 25880 360358 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 174) (undo-tree-id219 . 9) (undo-tree-id220 . -9)) nil (26013 25880 360355 0) 0 nil])
([nil nil ((194 . 206)) nil (26013 25880 360352 0) 0 nil])
([nil nil ((206 . 211)) nil (26013 25880 360351 0) 0 nil])
([nil nil ((211 . 221)) nil (26013 25880 360350 0) 0 nil])
([nil nil ((219 . 225) (#("cg" 0 2 (fontified nil)) . 219) (219 . 221) (#("cgmath" 0 6 (fontified nil)) . -219) (219 . 225) (#("cg" 0 2 (fontified t)) . -219) (undo-tree-id210 . -2) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) 221) nil (26013 25880 360348 0) 0 nil])
([nil nil ((225 . 228)) nil (26013 25880 360334 0) 0 nil])
([nil nil ((227 . 234) (#("V" 0 1 (fontified nil)) . 227) (227 . 228) (#("Vector3" 0 7 (fontified nil)) . -227) (227 . 234) (#("V" 0 1 (face font-lock-type-face fontified t)) . -227) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 228) nil (26013 25880 360333 0) 0 nil])
([nil nil ((234 . 237)) nil (26013 25880 360324 0) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-type-face fontified t)) . -236) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 237) nil (26013 25880 360323 0) 0 nil])
([nil nil ((236 . 237)) nil (26013 25880 360315 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 240 243 nil nil nil t #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil)))) #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil))) #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil))) #s(yas--exit 250 nil) 62 nil #s(yas--field 1 240 243 nil nil nil t #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil)))) nil nil)) (236 . 248) (#("new(${1:x}, ${2:y}, ${3:z})$0" 0 29 (fontified nil)) . 236) (236 . 265) (#("n" 0 1 (fontified nil)) . 236) (236 . 237) (#("new(â€¦)" 0 6 (fontified nil)) . -236) (236 . 242) (#("n" 0 1 (fontified t)) . -236) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 237) nil (26013 25880 360313 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -240) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 241) nil (26013 25880 360295 0) 0 nil])
([nil nil ((240 . 243)) nil (26013 25880 360291 0) 0 nil])
([nil nil ((apply yas--snippet-revive 236 250 #s(yas--snippet nil (#s(yas--field 1 240 243 nil nil nil t #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil)))) #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil))) #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil))) #s(yas--exit 250 nil) 62 nil #s(yas--field 1 240 243 nil nil nil t #s(yas--field 2 245 246 nil nil nil nil #s(yas--field 3 248 249 nil nil nil nil #s(yas--exit 250 nil)))) nil nil))) nil (26013 25880 360290 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -245) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 246) nil (26013 25880 360289 0) 0 nil])
([nil nil ((245 . 248)) nil (26013 25880 360286 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -250) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 251) nil (26013 25880 360284 0) 0 nil])
([nil nil ((250 . 253)) nil (26013 25880 360281 0) 0 nil])
([nil nil ((254 . 255)) nil (26013 25880 360280 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -254) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 255) nil (26013 25880 360278 0) 0 nil])
([nil nil ((254 . 255)) nil (26013 25880 360266 0) 0 nil])
([nil nil ((255 . 268)) nil (26013 25880 360265 0) 0 nil])
([nil nil ((268 . 270)) nil (26013 25880 360264 0) 0 nil])
([nil nil ((270 . 280)) nil (26013 25880 360263 0) 0 nil])
([nil nil ((278 . 284) (#("cg" 0 2 (fontified nil)) . 278) (278 . 280) (#("cgmath" 0 6 (fontified nil)) . -278) (278 . 284) (#("cg" 0 2 (fontified t)) . -278) (undo-tree-id166 . -2) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) 280) nil (26013 25880 360261 0) 0 nil])
([nil nil ((284 . 287)) nil (26013 25880 360250 0) 0 nil])
([nil nil ((286 . 296) (#("Q" 0 1 (fontified nil)) . 286) (286 . 287) (#("Quaternion" 0 10 (fontified nil)) . -286) (286 . 296) (#("Q" 0 1 (face font-lock-type-face fontified t)) . -286) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 287) nil (26013 25880 360249 0) 0 nil])
([nil nil ((296 . 299)) nil (26013 25880 360239 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 302 305 nil nil nil t #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))))) #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil)))) #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))) #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))) #s(yas--exit 318 nil) 63 nil #s(yas--field 1 302 305 nil nil nil t #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))))) nil nil)) (298 . 316) (#("new(${1:w}, ${2:xi}, ${3:yj}, ${4:zk})$0" 0 40 (fontified nil)) . 298) (298 . 338) (#("n" 0 1 (fontified nil)) . 298) (298 . 299) (#("new(â€¦)" 0 6 (fontified nil)) . -298) (298 . 304) (#("n" 0 1 (fontified t)) . -298) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 299) nil (26013 25880 360237 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -302) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 303) nil (26013 25880 360225 0) 0 nil])
([nil nil ((302 . 305)) nil (26013 25880 360221 0) 0 nil])
([nil nil ((apply yas--snippet-revive 298 318 #s(yas--snippet nil (#s(yas--field 1 302 305 nil nil nil t #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))))) #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil)))) #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))) #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))) #s(yas--exit 318 nil) 63 nil #s(yas--field 1 302 305 nil nil nil t #s(yas--field 2 307 309 nil nil nil nil #s(yas--field 3 311 313 nil nil nil nil #s(yas--field 4 315 317 nil nil nil nil #s(yas--exit 318 nil))))) nil nil))) nil (26013 25880 360220 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -307) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("i" 0 1 (fontified t)) . -308) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 309) nil (26013 25880 360219 0) 0 nil])
([nil nil ((307 . 310)) nil (26013 25880 360211 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -312) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("j" 0 1 (fontified t)) . -313) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 314) nil (26013 25880 360209 0) 0 nil])
([nil nil ((312 . 315)) nil (26013 25880 360201 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -317) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("k" 0 1 (fontified t)) . -318) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 319) nil (26013 25880 360198 0) 0 nil])
([nil nil ((317 . 320)) nil (26013 25880 360178 0) 0 nil])
([nil nil ((321 . 322)) nil (26013 25880 360173 0) 0 nil])
([nil nil ((322 . 335) (t 26013 25880 368453 120000)) nil (26013 25888 390138 0) 0 nil])
([nil nil ((335 . 345)) nil (26013 25888 390136 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -342) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("." 0 1 (fontified t)) . -343) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("0" 0 1 (fontified t)) . -344) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) 345) nil (26013 25888 390133 0) 0 nil])
([nil nil ((342 . 346)) nil (26013 25888 390098 0) 0 nil])
([nil nil ((158 . 161) (t 26013 25888 397653 135000)) nil (26013 25913 651092 0) 0 nil])
([nil nil ((#("0)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t)) . -322) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) 324 (t 26013 25913 658937 409000)) nil (26013 26336 110766 0) 0 nil])
([nil nil ((#("0." 0 2 (fontified t)) . -320) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) 322) nil (26013 26336 110762 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -317) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) 320) nil (26013 26336 110758 0) 0 nil])
([nil nil ((#("0." 0 2 (fontified t)) . -315) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) 317) nil (26013 26336 110753 0) 0 nil])
([nil nil ((#("0, " 0 3 (fontified t)) . -312) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) 315) nil (26013 26336 110749 0) 0 nil])
([nil nil ((#("0." 0 2 (fontified t)) . -310) (undo-tree-id590 . -2) (undo-tree-id591 . -1) (undo-tree-id592 . -2) (undo-tree-id593 . -2) 312) nil (26013 26336 110745 0) 0 nil])
([nil nil ((#("0, " 0 1 (fontified t) 1 3 (fontified t)) . -307) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) 310) nil (26013 26336 110738 0) 0 nil])
([nil nil ((#("0." 0 2 (fontified t)) . -305) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) 307) nil (26013 26336 110733 0) 0 nil])
([nil nil ((#("new(" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-4-face) fontified t)) . -301) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) 305) nil (26013 26336 110728 0) 0 nil])
([nil nil ((301 . 305)) nil (26013 26336 110723 0) 0 nil])
([nil nil ((1 . 25) (301 . 301) (301 . 316) (#("from" 0 4 (fontified nil)) . 301) (301 . 305) (#("from_axis_angle (use cgmath::Rotation3)" 0 39 (fontified nil)) . -301) (301 . 340) (#("from" 0 4 (fontified t)) . -301) (undo-tree-id576 . -4) (undo-tree-id577 . -4) 305) nil (26013 26336 110721 0) 0 nil])
([nil nil ((340 . 342)) nil (26013 26336 110716 0) 0 nil])
([nil nil ((#("angle()" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t)) . -335) (undo-tree-id572 . -6) (undo-tree-id573 . -7) (undo-tree-id574 . -7) (undo-tree-id575 . -7) 342) nil (26013 26336 110715 0) 0 nil])
([nil nil ((#("axis_" 0 5 (fontified t)) . -330) (undo-tree-id566 . -5) (undo-tree-id567 . -4) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) 335) nil (26013 26336 110710 0) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -325) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) 330) nil (26013 26336 110702 0) 0 nil])
([nil nil ((325 . 326)) nil (26013 26336 110695 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 329 332 nil nil nil t #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))))) #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil)))) #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))) #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))) #s(yas--exit 345 nil) 64 nil #s(yas--field 1 329 332 nil nil nil t #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))))) nil nil)) (325 . 343) (#("new(${1:w}, ${2:xi}, ${3:yj}, ${4:zk})$0" 0 40 (fontified nil)) . 325) (325 . 365) (#("n" 0 1 (fontified nil)) . 325) (325 . 326) (#("new(â€¦)" 0 6 (fontified nil)) . -325) (325 . 331) (#("n" 0 1 (fontified t)) . -325) (undo-tree-id558 . -1) 326) nil (26013 26336 110693 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -329) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 330) nil (26013 26336 110688 0) 0 nil])
([nil nil ((329 . 332)) nil (26013 26336 110685 0) 0 nil])
([nil nil ((apply yas--snippet-revive 325 345 #s(yas--snippet nil (#s(yas--field 1 329 332 nil nil nil t #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))))) #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil)))) #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))) #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))) #s(yas--exit 345 nil) 64 nil #s(yas--field 1 329 332 nil nil nil t #s(yas--field 2 334 336 nil nil nil nil #s(yas--field 3 338 340 nil nil nil nil #s(yas--field 4 342 344 nil nil nil nil #s(yas--exit 345 nil))))) nil nil))) nil (26013 26336 110684 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -334) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("i" 0 1 (fontified t)) . -335) (undo-tree-id554 . -1) (undo-tree-id555 . -1) 336) nil (26013 26336 110683 0) 0 nil])
([nil nil ((334 . 337)) nil (26013 26336 110678 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -339) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("j" 0 1 (fontified t)) . -340) (undo-tree-id550 . -1) (undo-tree-id551 . -1) 341) nil (26013 26336 110676 0) 0 nil])
([nil nil ((339 . 342)) nil (26013 26336 110671 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -345) (undo-tree-id546 . -1) (undo-tree-id547 . -1) 346) nil (26013 26336 110666 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -344) (undo-tree-id544 . -1) (undo-tree-id545 . -1) 345) nil (26013 26336 110663 0) 0 nil])
([nil nil ((344 . 347)) nil (26013 26336 110659 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -344) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 345) nil (26013 26336 110657 0) 0 nil])
([nil nil ((344 . 345)) nil (26013 26336 110642 0) 0 nil])
([nil nil ((391 . 395) (#("    " 0 4 (fontified nil)) . 390) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (394 . 395) (t 26013 26336 119229 131000)) nil (26013 26412 667402 0) 0 nil])
([nil nil ((395 . 402)) nil (26013 26412 667388 0) 0 nil])
([nil nil ((402 . 422)) nil (26013 26412 667387 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -417) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -418) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -419) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -420) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -421) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) 422) nil (26013 26412 667382 0) 0 nil])
([nil nil ((417 . 422)) nil (26013 26412 667315 0) 0 nil])
([nil nil ((422 . 426)) nil (26013 26412 667314 0) 0 nil])
([nil nil ((425 . 430)) nil (26013 26412 667313 0) 0 nil])
([nil nil ((431 . 434)) nil (26013 26412 667312 0) 0 nil])
([nil nil ((435 . 439) (#("        " 0 8 (fontified nil)) . 434) (434 . 442) (#("    " 0 4 (fontified nil)) . 434) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (433 . 439)) nil (26013 26412 667310 0) 0 nil])
([nil nil ((432 . 436)) nil (26013 26412 667304 0) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -435) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) 436) nil (26013 26412 667303 0) 0 nil])
([nil nil ((435 . 437)) nil (26013 26412 667297 0) 0 nil])
([nil nil ((435 . 441) (#("cg" 0 2 (fontified nil)) . 435) (435 . 437) (#("cgmath" 0 6 (fontified nil)) . -435) (435 . 441) (#("cg" 0 2 (fontified t)) . -435) (undo-tree-id628 . -2) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) 437) nil (26013 26412 667295 0) 0 nil])
([nil nil ((441 . 445)) nil (26013 26412 667283 0) 0 nil])
([nil nil ((apply yas--snippet-revive 443 452 #s(yas--snippet nil nil #s(yas--exit 451 nil) 65 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 451 nil) 65 nil nil nil nil)) (443 . 452) (#("Matrix4<$0>" 0 11 (fontified nil)) . 443) (443 . 454) (#("Ma" 0 2 (fontified nil)) . 443) (443 . 445) (#("Matrix4<â€¦>" 0 10 (fontified nil)) . -443) (443 . 453) (#("Ma" 0 2 (face font-lock-type-face fontified t)) . -443) (undo-tree-id617 . -2) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) 445) nil (26013 26412 667281 0) 0 nil])
([nil nil ((451 . 452)) nil (26013 26412 667266 0) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-type-face fontified t)) . -451) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 452) nil (26013 26412 667264 0) 0 nil])
([nil nil ((451 . 454)) nil (26013 26412 667248 0) 0 nil])
([nil nil ((455 . 456)) nil (26013 26412 667243 0) 0 nil])
([nil nil ((458 . 466) (t 26013 26412 675711 175000)) nil (26013 26578 560324 0) 0 nil])
([nil nil ((466 . 481)) nil (26013 26578 560322 0) 0 nil])
([nil nil ((481 . 488)) nil (26013 26578 560321 0) 0 nil])
([nil nil ((486 . 494) (#("ro" 0 2 (fontified nil)) . 486) (486 . 488) (#("rotation" 0 8 (fontified nil)) . -486) (486 . 494) (#("ro" 0 2 (fontified t)) . -486) (undo-tree-id755 . -2) 488) nil (26013 26578 560320 0) 0 nil])
([nil nil ((494 . 497)) nil (26013 26578 560317 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -494) (undo-tree-id752 . -1) (#("r" 0 1 (fontified t)) . -495) (undo-tree-id753 . -1) (#("o" 0 1 (fontified t)) . -496) (undo-tree-id754 . -1) 497) nil (26013 26578 560315 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -481) (undo-tree-id739 . -1) (#("e" 0 1 (fontified t)) . -482) (undo-tree-id740 . -1) (#("l" 0 1 (fontified t)) . -483) (undo-tree-id741 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -484) (undo-tree-id742 . -1) (#("." 0 1 (fontified t)) . -485) (undo-tree-id743 . -1) (#("r" 0 1 (fontified t)) . -486) (undo-tree-id744 . -1) (#("o" 0 1 (fontified t)) . -487) (undo-tree-id745 . -1) (#("t" 0 1 (fontified t)) . -488) (undo-tree-id746 . -1) (#("a" 0 1 (fontified t)) . -489) (undo-tree-id747 . -1) (#("t" 0 1 (fontified t)) . -490) (undo-tree-id748 . -1) (#("i" 0 1 (fontified t)) . -491) (undo-tree-id749 . -1) (#("o" 0 1 (fontified t)) . -492) (undo-tree-id750 . -1) (#("n" 0 1 (fontified t)) . -493) (undo-tree-id751 . -1) 494) nil (26013 26578 560307 0) 0 nil])
([nil nil ((481 . 483)) nil (26013 26578 560288 0) 0 nil])
([nil nil ((481 . 487) (#("cg" 0 2 (fontified nil)) . 481) (481 . 483) (#("cgmath" 0 6 (fontified nil)) . -481) (481 . 487) (#("cg" 0 2 (fontified t)) . -481) (undo-tree-id738 . -2) 483) nil (26013 26578 560286 0) 0 nil])
([nil nil ((487 . 490)) nil (26013 26578 560282 0) 0 nil])
([nil nil ((489 . 496) (#("M" 0 1 (fontified nil)) . 489) (489 . 490) (#("Matrix4" 0 7 (fontified nil)) . -489) (489 . 496) (#("M" 0 1 (face font-lock-type-face fontified t)) . -489) (undo-tree-id737 . -1) 490) nil (26013 26578 560281 0) 0 nil])
([nil nil ((496 . 498)) nil (26013 26578 560277 0) 0 nil])
([nil nil ((497 . 500)) nil (26013 26578 560276 0) 0 nil])
([nil nil ((501 . 507)) nil (26013 26578 560275 0) 0 nil])
([nil nil ((507 . 511)) nil (26013 26578 560274 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -509) (undo-tree-id735 . -1) (#("i" 0 1 (fontified t)) . -510) (undo-tree-id736 . -1) 511) nil (26013 26578 560273 0) 0 nil])
([nil nil ((509 . 512)) nil (26013 26578 560269 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -509) (undo-tree-id732 . -1) (#("i" 0 1 (fontified t)) . -510) (undo-tree-id733 . -1) (#("x" 0 1 (fontified t)) . -511) (undo-tree-id734 . -1) 512) nil (26013 26578 560268 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -508) (undo-tree-id731 . -1) 509) nil (26013 26578 560259 0) 0 nil])
([nil nil ((508 . 518)) nil (26013 26578 560247 0) 0 nil])
([nil nil ((518 . 520) (t 26013 26578 569500 153000)) nil (26013 26603 718253 0) 0 nil])
([nil nil ((519 . 525)) nil (26013 26603 718252 0) 0 nil])
([nil nil ((524 . 532) (#("r" 0 1 (fontified nil)) . 524) (524 . 525) (#("rotation" 0 8 (fontified nil)) . -524) (524 . 532) (#("r" 0 1 (fontified t)) . -524) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) 525) nil (26013 26603 718249 0) 0 nil])
([nil nil ((533 . 534)) nil (26013 26603 718227 0) 0 nil])
([nil nil ((496 . 498) (t 26013 26603 726933 274000)) nil (26013 26615 900518 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -503) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#(":" 0 1 (fontified t)) . -504) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) 505 (t 26013 26615 909394 740000)) nil (26013 26618 818375 0) 0 nil])
([nil nil ((#("rotation)" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t)) . -524) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) 533 (t 26013 26618 826503 153000)) nil (26013 26663 694747 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -519) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) 524) nil (26013 26663 694742 0) 0 nil])
([nil nil ((#("angle(" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t)) . -513) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) 519) nil (26013 26663 694735 0) 0 nil])
([nil nil ((#("axis_" 0 5 (fontified t)) . -508) (undo-tree-id869 . -5) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) 513) nil (26013 26663 694730 0) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -503) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) 508) nil (26013 26663 694725 0) 0 nil])
([nil nil ((503 . 505)) nil (26013 26663 694720 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -504) (undo-tree-id864 . -1) 505) nil (26013 26663 694719 0) 0 nil])
([nil nil ((504 . 505)) nil (26013 26663 694716 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -504) (undo-tree-id863 . -1) 505) nil (26013 26663 694715 0) 0 nil])
([nil nil ((504 . 510)) nil (26013 26663 694713 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -496) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#(":" 0 1 (fontified t)) . -497) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("<" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -498) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("f" 0 1 (fontified t)) . -499) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("3" 0 1 (fontified t)) . -500) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -501) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (#(">" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -502) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#("f" 0 1 (fontified t)) . -503) (undo-tree-id856 . -1) (#("r" 0 1 (fontified t)) . -504) (undo-tree-id857 . -1) (#("o" 0 1 (fontified t)) . -505) (undo-tree-id858 . -1) (#("m" 0 1 (fontified t)) . -506) (undo-tree-id859 . -1) (#("_" 0 1 (fontified t)) . -507) (undo-tree-id860 . -1) (#("a" 0 1 (fontified t)) . -508) (undo-tree-id861 . -1) (#("x" 0 1 (fontified t)) . -509) (undo-tree-id862 . -1) 510) nil (26013 26663 694709 0) 0 nil])
([nil nil ((496 . 502)) nil (26013 26663 694666 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -499) (undo-tree-id825 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -500) (undo-tree-id826 . -1) (#("m" 0 1 (fontified t)) . -501) (undo-tree-id827 . -1) 502) nil (26013 26663 694664 0) 0 nil])
([nil nil ((499 . 505)) nil (26013 26663 694660 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 514 529 nil nil nil t #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) #s(yas--exit 537 nil) 66 nil #s(yas--field 1 514 529 nil nil nil t #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) nil nil)) (498 . 526) (#("from_axis_angle(${1:axis}, ${2:angle})$0" 0 40 (fontified nil)) . 498) (498 . 538) (#("from_ax" 0 7 (fontified nil)) . 498) (498 . 505) (#("from_axis_angle(â€¦)" 0 18 (fontified nil)) . -498) (498 . 516) (#("from_ax" 0 7 (fontified t)) . -498) (undo-tree-id823 . -7) (undo-tree-id824 . -4) 505) nil (26013 26663 694658 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -514) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (#("x" 0 1 (fontified t)) . -515) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (#("i" 0 1 (fontified t)) . -516) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#("s" 0 1 (fontified t)) . -517) (undo-tree-id821 . -1) (undo-tree-id822 . -1) 518) nil (26013 26663 694652 0) 0 nil])
([nil nil ((514 . 517)) nil (26013 26663 694642 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -515) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#("e" 0 1 (fontified t)) . -516) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 517) nil (26013 26663 694641 0) 0 nil])
([nil nil ((515 . 521)) nil (26013 26663 694635 0) 0 nil])
([nil nil ((519 . 527) (#("ro" 0 2 (fontified nil)) . 519) (519 . 521) (#("rotation" 0 8 (fontified nil)) . -519) (519 . 527) (#("ro" 0 2 (fontified t)) . -519) (undo-tree-id809 . -2) (undo-tree-id810 . -2) 521) nil (26013 26663 694633 0) 0 nil])
([nil nil ((527 . 528)) nil (26013 26663 694629 0) 0 nil])
([nil nil ((528 . 529) (#("v" 0 1 (fontified nil)) . -528) (528 . 529)) nil (26013 26663 694628 0) 0 nil])
([nil nil ((apply yas--snippet-revive 498 537 #s(yas--snippet nil (#s(yas--field 1 514 529 nil nil nil t #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) #s(yas--exit 537 nil) 66 nil #s(yas--field 1 514 529 nil nil nil t #s(yas--field 2 531 536 nil nil nil nil #s(yas--exit 537 nil))) nil nil))) nil (26013 26663 694626 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -531) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#("n" 0 1 (fontified t)) . -532) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (#("g" 0 1 (fontified t)) . -533) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#("l" 0 1 (fontified t)) . -534) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#("e" 0 1 (fontified t)) . -535) (undo-tree-id807 . -1) (undo-tree-id808 . -1) 536) nil (26013 26663 694624 0) 0 nil])
([nil nil ((531 . 532)) nil (26013 26663 694612 0) 0 nil])
([nil nil ((532 . 537)) nil (26013 26663 694611 0) 0 nil])
([nil nil ((536 . 544) (#("r" 0 1 (fontified nil)) . 536) (536 . 537) (#("rotation" 0 8 (fontified nil)) . -536) (536 . 544) (#("r" 0 1 (fontified t)) . -536) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) 537) nil (26013 26663 694609 0) 0 nil])
([nil nil ((544 . 546)) nil (26013 26663 694598 0) 0 nil])
([nil nil ((545 . 546) (#("s" 0 1 (fontified nil)) . 545) (545 . 546) (#("s" 0 1 (fontified t)) . -545) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) 546) nil (26013 26663 694594 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -545) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) 546 (t 26013 26663 703796 898000)) nil (26013 26688 685545 0) 0 nil])
([nil nil ((#("rotation." 0 9 (fontified t)) . -536) (undo-tree-id1270 . -9) (undo-tree-id1271 . -9) (undo-tree-id1272 . -9) (undo-tree-id1273 . -9) (undo-tree-id1274 . -9) (undo-tree-id1275 . -9) (undo-tree-id1276 . -9) (undo-tree-id1277 . -9) (undo-tree-id1278 . -9) (undo-tree-id1279 . -9) (undo-tree-id1280 . -8) (undo-tree-id1281 . -7) (undo-tree-id1282 . -6) (undo-tree-id1283 . -5) (undo-tree-id1284 . -4) (undo-tree-id1285 . -3) (undo-tree-id1286 . -2) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -2) (undo-tree-id1290 . -3) (undo-tree-id1291 . -4) (undo-tree-id1292 . -5) (undo-tree-id1293 . -6) (undo-tree-id1294 . -7) (undo-tree-id1295 . -8) (undo-tree-id1296 . -9) (undo-tree-id1297 . -9) (undo-tree-id1298 . -9) (undo-tree-id1299 . -9) (undo-tree-id1300 . -9) (undo-tree-id1301 . -9) (undo-tree-id1302 . -9) (undo-tree-id1303 . -9) (undo-tree-id1304 . -9) (undo-tree-id1305 . -9) (undo-tree-id1306 . -9) (undo-tree-id1307 . -9) (undo-tree-id1308 . -9) (undo-tree-id1309 . -9) (undo-tree-id1310 . -9) (undo-tree-id1311 . -9) (undo-tree-id1312 . -9) (undo-tree-id1313 . -9) (undo-tree-id1314 . -9) (undo-tree-id1315 . -9) (undo-tree-id1316 . -9) (undo-tree-id1317 . -9) (undo-tree-id1318 . -9) (undo-tree-id1319 . -9) 545) nil (26013 26688 685518 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -531) (undo-tree-id1201 . -5) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) (undo-tree-id1204 . -5) (undo-tree-id1205 . -5) (undo-tree-id1206 . -5) (undo-tree-id1207 . -5) (undo-tree-id1208 . -5) (undo-tree-id1209 . -5) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) (undo-tree-id1226 . -5) (undo-tree-id1227 . -4) (undo-tree-id1228 . -3) (undo-tree-id1229 . -2) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -2) (undo-tree-id1233 . -3) (undo-tree-id1234 . -4) (undo-tree-id1235 . -5) (undo-tree-id1236 . -5) (undo-tree-id1237 . -5) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) (undo-tree-id1247 . -5) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -5) (undo-tree-id1254 . -5) (undo-tree-id1255 . -5) (undo-tree-id1256 . -5) (undo-tree-id1257 . -5) (undo-tree-id1258 . -5) (undo-tree-id1259 . -5) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) 536) nil (26013 26688 685467 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -527) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (#("v" 0 1 (fontified t)) . -528) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (#("," 0 1 (fontified t)) . -529) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#(" " 0 1 (fontified t)) . -530) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) 531) nil (26013 26688 685385 0) 0 nil])
([nil nil ((147 . 148) (t 26013 26688 696545 347000)) nil (26013 26882 870385 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -146) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (#("\\" 0 1 (fontified t)) . -147) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) 148) nil (26013 26882 870383 0) 0 nil])
([nil nil ((146 . 149)) nil (26013 26882 870365 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -368) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) 369) nil (26013 26882 870363 0) 0 nil])
([nil nil ((368 . 371)) nil (26013 26882 870345 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -152) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("2" 0 1 (face font-lock-type-face fontified t)) . -153) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) 154 (t 26013 26882 880149 107000)) nil (26013 26911 116797 0) 0 nil])
([nil nil ((152 . 153)) nil (26013 26911 116778 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -151) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (#("c" 0 1 (fontified t)) . -152) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) 153) nil (26013 26911 116776 0) 0 nil])
([nil nil ((151 . 153)) nil (26013 26911 116757 0) 0 nil])
([nil nil ((151 . 157) (#("cg" 0 2 (fontified nil)) . 151) (151 . 153) (#("cgmath" 0 6 (fontified nil)) . -151) (151 . 157) (#("cg" 0 2 (fontified t)) . -151) (undo-tree-id1385 . -2) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -2) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -2) 153) nil (26013 26911 116755 0) 0 nil])
([nil nil ((157 . 159)) nil (26013 26911 116745 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -157) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (#(":" 0 1 (fontified t)) . -158) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) 159) nil (26013 26911 116744 0) 0 nil])
([nil nil ((157 . 160)) nil (26013 26911 116729 0) 0 nil])
([nil nil ((apply yas--snippet-revive 159 168 #s(yas--snippet nil nil #s(yas--exit 167 nil) 67 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 167 nil) 67 nil nil nil nil)) (159 . 168) (#("Vector3<$0>" 0 11 (fontified nil)) . 159) (159 . 170) (#("V" 0 1 (fontified nil)) . 159) (159 . 160) (#("Vector3<â€¦>" 0 10 (fontified nil)) . -159) (159 . 169) (#("V" 0 1 (face font-lock-type-face fontified t)) . -159) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) 160) nil (26013 26911 116726 0) 0 nil])
([nil nil ((167 . 170)) nil (26013 26911 116705 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -392) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) 393 (t 26013 26911 126849 562000)) nil (26013 26925 741598 0) 0 nil])
([nil nil ((#("1." 0 2 (fontified t)) . -390) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) 392) nil (26013 26925 741590 0) 0 nil])
([nil nil ((390 . 391)) nil (26013 26925 741579 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 408 411 nil nil nil t #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil)))) #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil))) #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil))) #s(yas--exit 427 nil) 68 nil #s(yas--field 1 408 411 nil nil nil t #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil)))) nil nil)) (390 . 429) (#("cgmath::Vector3 { x: ${1:()}, y: ${2:()}, z: ${3:()} }$0" 0 56 (fontified nil)) . 390) (390 . 446) (#("c" 0 1 (fontified nil)) . 390) (390 . 391) (#("cgmath::Vector3 {â€¦}" 0 19 (fontified nil)) . -390) (390 . 409) (#("c" 0 1 (fontified t)) . -390) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) 391) nil (26013 26925 741577 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -408) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (#(":" 0 1 (fontified t)) . -409) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (#(" " 0 1 (fontified t)) . -410) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -411) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -412) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) 413) nil (26013 26925 741564 0) 0 nil])
([nil nil ((408 . 411)) nil (26013 26925 741462 0) 0 nil])
([nil nil ((apply yas--snippet-revive 390 427 #s(yas--snippet nil (#s(yas--field 1 408 411 nil nil nil t #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil)))) #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil))) #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil))) #s(yas--exit 427 nil) 68 nil #s(yas--field 1 408 411 nil nil nil t #s(yas--field 2 416 418 nil nil nil nil #s(yas--field 3 423 425 nil nil nil nil #s(yas--exit 427 nil)))) nil nil))) nil (26013 26925 741460 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -413) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (#(":" 0 1 (fontified t)) . -414) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#(" " 0 1 (fontified t)) . -415) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -416) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -417) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) 418) nil (26013 26925 741455 0) 0 nil])
([nil nil ((413 . 416)) nil (26013 26925 741379 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -418) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (#(":" 0 1 (fontified t)) . -419) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (#(" " 0 1 (fontified t)) . -420) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -421) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -422) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) 423) nil (26013 26925 741374 0) 0 nil])
([nil nil ((418 . 421)) nil (26013 26925 741298 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -422) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) 423 (t 26013 26925 752009 598000)) nil (26013 26939 544404 0) 0 nil])
([nil nil ((422 . 423)) nil (26013 26939 544397 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -422) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) 423) nil (26013 26939 544396 0) 0 nil])
([nil nil ((422 . 423)) nil (26013 26939 544388 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -422) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) 423) nil (26013 26939 544387 0) 0 nil])
([nil nil ((422 . 423)) nil (26013 26939 544382 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -422) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) 423) nil (26013 26939 544381 0) 0 nil])
([nil nil ((422 . 423)) nil (26013 26939 544376 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -406) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (#(" " 0 1 (fontified t)) . -407) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) 408) nil (26013 26939 544372 0) 0 nil])
([nil nil ((406 . 407)) nil (26013 26939 544310 0) 0 nil])
([nil nil ((405 . 410)) nil (26013 26939 544309 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -410) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . 1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) 411) nil (26013 26939 544304 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -424) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 425 (t 26013 26939 555189 291000)) nil (26013 26942 83992 0) 0 nil])
([nil nil ((580 . 581) (t 26013 26942 94636 624000)) nil (26013 26969 848789 0) 0 nil])
([nil nil ((581 . 590)) nil (26013 26969 848788 0) 0 nil])
([nil nil ((590 . 591)) nil (26013 26969 848787 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -580) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (#("
" 0 1 (fontified t)) . -581) (undo-tree-id1932 . -1) (undo-tree-id1933 . 1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (#(" " 0 1 (fontified t)) . -582) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (#(" " 0 1 (fontified t)) . -583) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (#(" " 0 1 (fontified t)) . -584) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (#(" " 0 1 (fontified t)) . -585) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (#(" " 0 1 (fontified t)) . -586) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#(" " 0 1 (fontified t)) . -587) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (#(" " 0 1 (fontified t)) . -588) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (#(" " 0 1 (fontified t)) . -589) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (#("." 0 1 (fontified t)) . -590) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) 591) nil (26013 26969 848775 0) 0 nil])
([nil nil ((580 . 581)) nil (26013 26969 848552 0) 0 nil])
([nil nil ((581 . 582) (#("v" 0 1 (fontified nil)) . -581) (581 . 582)) nil (26013 26969 848551 0) 0 nil])
([nil nil ((582 . 587)) nil (26013 26969 848549 0) 0 nil])
([nil nil ((584 . 588) (#("sel" 0 3 (fontified nil)) . 584) (584 . 587) (#("self" 0 4 (fontified nil)) . -584) (584 . 588) (#("sel" 0 3 (fontified t)) . -584) (undo-tree-id1877 . -3) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -2) (undo-tree-id1884 . -2) (undo-tree-id1885 . -2) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) 587) nil (26013 26969 848547 0) 0 nil])
([nil nil ((588 . 591)) nil (26013 26969 848532 0) 0 nil])
([nil nil ((589 . 597) (#("ro" 0 2 (fontified nil)) . 589) (589 . 591) (#("rotation" 0 8 (fontified nil)) . -589) (589 . 597) (#("ro" 0 2 (fontified t)) . -589) (undo-tree-id1866 . -2) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -2) (undo-tree-id1873 . -2) (undo-tree-id1874 . -2) (undo-tree-id1875 . -2) (undo-tree-id1876 . -2) 591) nil (26013 26969 848530 0) 0 nil])
([nil nil ((597 . 598)) nil (26013 26969 848517 0) 0 nil])
([nil nil ((598 . 599)) nil (26013 26969 848516 0) 0 nil])
([nil nil ((598 . 599) (#("s" 0 1 (fontified nil)) . 598) (598 . 599) (#("s" 0 1 (fontified t)) . -598) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) 599) nil (26013 26969 848514 0) 0 nil])
([nil nil ((599 . 600)) nil (26013 26969 848503 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -599) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) 600) nil (26013 26969 848499 0) 0 nil])
([nil nil ((607 . 608) (t 26013 26969 859912 368000)) nil (26013 27035 550082 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -607) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) 608) nil (26013 27035 550080 0) 0 nil])
([nil nil ((599 . 603)) nil (26013 27035 550072 0) 0 nil])
([nil nil ((apply yas--snippet-revive 600 612 #s(yas--snippet nil nil #s(yas--exit 612 nil) 69 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 612 nil) 69 nil nil nil nil)) (600 . 612) (#("to_radians()$0" 0 14 (fontified nil)) . 600) (600 . 614) (#("rad" 0 3 (fontified nil)) . 600) (600 . 603) (#("to_radians()" 0 12 (fontified nil)) . -600) (600 . 612) (#("rad" 0 3 (fontified t)) . -600) (undo-tree-id2120 . -3) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -3) (undo-tree-id2127 . -3) (undo-tree-id2128 . -3) (undo-tree-id2129 . -3) 603) nil (26013 27035 550067 0) 0 nil])
([nil nil ((#("f32>" 0 3 (face font-lock-type-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t)) . -128) (undo-tree-id2161 . -4) (undo-tree-id2162 . -4) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) 132 (t 26013 27035 561279 414000)) nil (26013 27088 640712 0) 0 nil])
([nil nil ((#("Quaternion<" 0 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t rear-nonsticky t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t)) . -117) (undo-tree-id2146 . -6) (undo-tree-id2147 . -11) (undo-tree-id2148 . -11) (undo-tree-id2149 . -11) (undo-tree-id2150 . -11) (undo-tree-id2151 . -11) (undo-tree-id2152 . -11) (undo-tree-id2153 . -11) (undo-tree-id2154 . -11) (undo-tree-id2155 . -11) (undo-tree-id2156 . -11) (undo-tree-id2157 . -11) (undo-tree-id2158 . -11) (undo-tree-id2159 . -11) (undo-tree-id2160 . -11) 128) nil (26013 27088 640699 0) 0 nil])
([nil nil ((117 . 120)) nil (26013 27088 640683 0) 0 nil])
([nil nil ((apply yas--snippet-revive 117 126 #s(yas--snippet nil nil #s(yas--exit 125 nil) 70 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 125 nil) 70 nil nil nil nil)) (117 . 126) (#("Vector3<$0>" 0 11 (fontified nil)) . 117) (117 . 128) (#("vec" 0 3 (fontified nil)) . 117) (117 . 120) (#("Vector3<â€¦>" 0 10 (fontified nil)) . -117) (117 . 127) (#("vec" 0 3 (fontified t)) . -117) (undo-tree-id2136 . -3) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -3) (undo-tree-id2141 . -3) (undo-tree-id2142 . -3) (undo-tree-id2143 . -3) (undo-tree-id2144 . -3) (undo-tree-id2145 . -3) 120) nil (26013 27088 640680 0) 0 nil])
([nil nil ((125 . 128)) nil (26013 27088 640655 0) 0 nil])
([nil nil ((#("cgmath::Quaternion::new(0.0, 0.0, 0.0, 1.0)," 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t) 8 18 (face font-lock-type-face fontified t) 18 20 (fontified t) 20 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-4-face) fontified t) 24 27 (fontified t) 27 32 (fontified t) 32 37 (fontified t) 37 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-4-face) fontified t) 43 44 (fontified t)) . -321) (undo-tree-id2173 . -20) (undo-tree-id2174 . -20) (undo-tree-id2175 . -20) (undo-tree-id2176 . -44) (undo-tree-id2177 . -44) (undo-tree-id2178 . -1) (undo-tree-id2179 . -4) (undo-tree-id2180 . -7) (undo-tree-id2181 . -11) (undo-tree-id2182 . -15) (undo-tree-id2183 . -16) (undo-tree-id2184 . -19) (undo-tree-id2185 . -20) (undo-tree-id2186 . -23) (undo-tree-id2187 . -25) (undo-tree-id2188 . -27) (undo-tree-id2189 . -28) (undo-tree-id2190 . -29) (undo-tree-id2191 . -31) (undo-tree-id2192 . -32) (undo-tree-id2193 . -34) (undo-tree-id2194 . -35) (undo-tree-id2195 . -42) (undo-tree-id2196 . -44) (undo-tree-id2197 . -44) (undo-tree-id2198 . -44) 365 (t 26013 27088 652230 282000)) nil (26013 27094 684106 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 356 . 357) (nil fontified nil 356 . 357) (nil fontified nil 355 . 356) (nil fontified nil 345 . 355) (nil fontified nil 342 . 345) (nil fontified nil 341 . 342) (nil fontified nil 338 . 341) (nil fontified nil 336 . 338) (nil fontified nil 329 . 336) (nil fontified nil 327 . 329) (nil fontified nil 321 . 327) (321 . 357)) nil (26013 27094 684066 0) 0 nil])
([nil nil ((#("        let rotation = cgmath::Matrix4::from_axis_angle(self.rotation.v, self.rotation.s.to_radians());" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-variable-name-face fontified t) 20 23 (fontified t) 23 29 (face font-lock-constant-face fontified t) 29 31 (fontified t) 31 38 (face font-lock-type-face fontified t) 38 40 (fontified t) 40 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 60 (face font-lock-keyword-face fontified t) 60 61 (fontified t) 61 70 (fontified t) 70 73 (fontified t) 73 77 (face font-lock-keyword-face fontified t) 77 78 (fontified t) 78 87 (fontified t) 87 89 (fontified t) 89 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-4-face) fontified t) 100 101 (face (rainbow-delimiters-depth-4-face) fontified t) 101 102 (face (rainbow-delimiters-depth-3-face) fontified t) 102 103 (fontified t)) . 500) (undo-tree-id2222 . -94) (undo-tree-id2223 . -52) (undo-tree-id2224 . -50) (undo-tree-id2225 . -49) (undo-tree-id2226 . -94) (undo-tree-id2227 . -101) (undo-tree-id2228 . -103) (undo-tree-id2229 . -103) (t 26013 27094 695217 218000)) nil (26013 27149 475958 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 500)) nil (26013 27149 475948 0) 0 nil])
([nil nil ((501 . 505) (#("        " 0 8 (fontified nil)) . 500) (500 . 508) (#("    " 0 4 (fontified nil)) . 500) (undo-tree-id2221 . -4) (504 . 505)) nil (26013 27149 475947 0) 0 nil])
([nil nil ((500 . 508)) nil (26013 27149 475944 0) 0 nil])
([nil nil ((508 . 514)) nil (26013 27149 475943 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -512) (undo-tree-id2219 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -513) (undo-tree-id2220 . -1) 514) nil (26013 27149 475942 0) 0 nil])
([nil nil ((512 . 523)) nil (26013 27149 475938 0) 0 nil])
([nil nil ((523 . 524)) nil (26013 27149 475937 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -523) (undo-tree-id2218 . -1) 524) nil (26013 27149 475936 0) 0 nil])
([nil nil ((523 . 529)) nil (26013 27149 475934 0) 0 nil])
([nil nil ((526 . 530) (#("sel" 0 3 (fontified nil)) . 526) (526 . 529) (#("self" 0 4 (fontified nil)) . -526) (526 . 530) (#("sel" 0 3 (fontified t)) . -526) (undo-tree-id2217 . -3) 529) nil (26013 27149 475932 0) 0 nil])
([nil nil ((530 . 532)) nil (26013 27149 475929 0) 0 nil])
([nil nil ((531 . 542) (#("t" 0 1 (fontified nil)) . 531) (531 . 532) (#("translation" 0 11 (fontified nil)) . -531) (531 . 542) (#("t" 0 1 (fontified t)) . -531) (undo-tree-id2216 . -1) 532) nil (26013 27149 475928 0) 0 nil])
([nil nil ((542 . 543)) nil (26013 27149 475924 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -542) (undo-tree-id2215 . -1) 543) nil (26013 27149 475923 0) 0 nil])
([nil nil ((#("translation" 0 11 (fontified t)) . -531) (undo-tree-id2214 . -11) 542) nil (26013 27149 475921 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -526) (undo-tree-id2213 . -5) 531) nil (26013 27149 475918 0) 0 nil])
([nil nil ((526 . 527)) nil (26013 27149 475916 0) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-type-face fontified t)) . -526) (undo-tree-id2212 . -1) 527) nil (26013 27149 475915 0) 0 nil])
([nil nil ((526 . 528)) nil (26013 27149 475912 0) 0 nil])
([nil nil ((526 . 532) (#("cg" 0 2 (fontified nil)) . 526) (526 . 528) (#("cgmath" 0 6 (fontified nil)) . -526) (526 . 532) (#("cg" 0 2 (fontified t)) . -526) (undo-tree-id2211 . -2) 528) nil (26013 27149 475911 0) 0 nil])
([nil nil ((532 . 534)) nil (26013 27149 475907 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -532) (undo-tree-id2209 . -1) (#("a" 0 1 (fontified t)) . -533) (undo-tree-id2210 . -1) 534) nil (26013 27149 475906 0) 0 nil])
([nil nil ((532 . 535)) nil (26013 27149 475902 0) 0 nil])
([nil nil ((534 . 541) (#("M" 0 1 (fontified nil)) . 534) (534 . 535) (#("Matrix4" 0 7 (fontified nil)) . -534) (534 . 541) (#("M" 0 1 (face font-lock-type-face fontified t)) . -534) (undo-tree-id2208 . -1) 535) nil (26013 27149 475900 0) 0 nil])
([nil nil ((541 . 547)) nil (26013 27149 475897 0) 0 nil])
([nil nil ((543 . 559) (#("from" 0 4 (fontified nil)) . 543) (543 . 547) (#("from_translation" 0 16 (fontified nil)) . -543) (543 . 559) (#("from" 0 4 (fontified t)) . -543) (undo-tree-id2207 . -4) 547) nil (26013 27149 475895 0) 0 nil])
([nil nil ((559 . 561)) nil (26013 27149 475891 0) 0 nil])
([nil nil ((560 . 564)) nil (26013 27149 475890 0) 0 nil])
([nil nil ((564 . 566)) nil (26013 27149 475889 0) 0 nil])
([nil nil ((565 . 576) (#("t" 0 1 (fontified nil)) . 565) (565 . 566) (#("translation" 0 11 (fontified nil)) . -565) (565 . 576) (#("t" 0 1 (fontified t)) . -565) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) 566) nil (26013 27149 475887 0) 0 nil])
([nil nil ((577 . 578)) nil (26013 27149 475868 0) 0 nil])
([nil nil ((578 . 587) (t 26013 27149 487942 571000)) nil (26013 27222 180461 0) 0 nil])
([nil nil ((587 . 593)) nil (26013 27222 180459 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -591) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -592) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) 593) nil (26013 27222 180458 0) 0 nil])
([nil nil ((591 . 603)) nil (26013 27222 180440 0) 0 nil])
([nil nil ((603 . 604)) nil (26013 27222 180439 0) 0 nil])
([nil nil ((602 . 608) (#("cg" 0 2 (fontified nil)) . 602) (602 . 604) (#("cgmath" 0 6 (fontified nil)) . -602) (602 . 608) (#("cg" 0 2 (fontified t)) . -602) (undo-tree-id2407 . -2) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -2) (undo-tree-id2415 . -2) 604) nil (26013 27222 180438 0) 0 nil])
([nil nil ((608 . 611)) nil (26013 27222 180426 0) 0 nil])
([nil nil ((610 . 617) (#("M" 0 1 (fontified nil)) . 610) (610 . 611) (#("Matrix4" 0 7 (fontified nil)) . -610) (610 . 617) (#("M" 0 1 (face font-lock-type-face fontified t)) . -610) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) 611) nil (26013 27222 180424 0) 0 nil])
([nil nil ((617 . 623)) nil (26013 27222 180414 0) 0 nil])
([nil nil ((623 . 624)) nil (26013 27222 180413 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -619) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("r" 0 1 (fontified t)) . -620) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("o" 0 1 (fontified t)) . -621) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (#("m" 0 1 (fontified t)) . -622) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (#("r" 0 1 (fontified t)) . -623) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) 624) nil (26013 27222 180408 0) 0 nil])
([nil nil ((619 . 621)) nil (26013 27222 180328 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -620) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) 621) nil (26013 27222 180327 0) 0 nil])
([nil nil ((620 . 621)) nil (26013 27222 180319 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -619) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (#("o" 0 1 (fontified t)) . -620) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) 621) nil (26013 27222 180317 0) 0 nil])
([nil nil ((619 . 621)) nil (26013 27222 180294 0) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-type-face fontified t)) . -619) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -620) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) 621) nil (26013 27222 180292 0) 0 nil])
([nil nil ((619 . 623)) nil (26013 27222 180261 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -620) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("t" 0 1 (fontified t)) . -621) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (#("a" 0 1 (fontified t)) . -622) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) 623) nil (26013 27222 180258 0) 0 nil])
([nil nil ((#("Rotation3" 0 9 (face font-lock-type-face fontified t)) . -13) (undo-tree-id2236 . -9) (undo-tree-id2237 . -9) 22) nil (26013 27222 180228 0) 0 nil])
([nil nil ((13 . 14)) nil (26013 27222 180225 0) 0 nil])
([nil nil ((13 . 20) (#("V" 0 1 (fontified nil)) . 13) (13 . 14) (#("Vector3" 0 7 (fontified nil)) . -13) (13 . 20) (#("V" 0 1 (face font-lock-type-face fontified t)) . -13) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) 14) nil (26013 27222 180222 0) 0 nil])
([nil nil ((21 . 22)) nil (26013 27222 180200 0) 0 nil])
([nil nil ((21 . 22) (13 . 13) (13 . 14) (t 26013 27222 193421 749000)) nil (26013 27231 184786 0) 0 nil])
([nil nil ((21 . 22)) nil (26013 27231 184784 0) 0 nil])
([nil nil ((22 . 24)) nil (26013 27231 184783 0) 0 nil])
([nil nil ((23 . 30) (#("M" 0 1 (fontified nil)) . 23) (23 . 24) (#("Matrix4" 0 7 (fontified nil)) . -23) (23 . 30) (#("M" 0 1 (face font-lock-type-face fontified t)) . -23) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) 24) nil (26013 27231 184779 0) 0 nil])
([nil nil ((#("cgmath::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -79) (undo-tree-id2549 . -8) (undo-tree-id2550 . -8) (undo-tree-id2551 . -8) (undo-tree-id2552 . -8) (undo-tree-id2553 . -8) (undo-tree-id2554 . -8) (undo-tree-id2555 . -8) (undo-tree-id2556 . -8) (undo-tree-id2557 . -8) (undo-tree-id2558 . -8) 87 (t 26013 27231 197495 453000)) nil (26013 27260 189249 0) 0 nil])
([nil nil ((#("cgmath::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -111) (undo-tree-id2537 . -8) (undo-tree-id2538 . -8) (undo-tree-id2539 . -8) (undo-tree-id2540 . -8) (undo-tree-id2541 . -8) (undo-tree-id2542 . -8) (undo-tree-id2543 . -8) (undo-tree-id2544 . -8) (undo-tree-id2545 . -8) (undo-tree-id2546 . -8) (undo-tree-id2547 . -8) (undo-tree-id2548 . -8) 119) nil (26013 27260 189237 0) 0 nil])
([nil nil ((#("cgmath::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -142) (undo-tree-id2527 . -8) (undo-tree-id2528 . -8) (undo-tree-id2529 . -8) (undo-tree-id2530 . -8) (undo-tree-id2531 . -8) (undo-tree-id2532 . -8) (undo-tree-id2533 . -8) (undo-tree-id2534 . -8) (undo-tree-id2535 . -8) (undo-tree-id2536 . -8) 150) nil (26013 27260 189223 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 52) (#("cgmath" 0 6 (face font-lock-constant-face fontified t)) . -353) (apply deactivate-cursor-after-undo 52) (apply activate-cursor-for-undo 51) (#("cgmath" 0 6 (face font-lock-constant-face fontified t)) . -301) (apply deactivate-cursor-after-undo 51) (#("cgmath" 0 6 (face font-lock-constant-face fontified t)) . -248) (undo-tree-id2520 . -6) (undo-tree-id2521 . -6) (undo-tree-id2522 . -6) (undo-tree-id2523 . -6) (undo-tree-id2524 . -6) (undo-tree-id2525 . -6) (undo-tree-id2526 . -6) 254) nil (26013 27260 189211 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 52) (#(":" 0 1 (fontified t)) . -349) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (apply deactivate-cursor-after-undo 52) (apply activate-cursor-for-undo 51) (#(":" 0 1 (fontified t)) . -299) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (apply deactivate-cursor-after-undo 51) (#(":" 0 1 (fontified t)) . -248) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (apply activate-cursor-for-undo 52) (#(":" 0 1 (fontified t)) . -352) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (apply deactivate-cursor-after-undo 52) (apply activate-cursor-for-undo 51) (#(":" 0 1 (fontified t)) . -301) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (apply deactivate-cursor-after-undo 51) (#(":" 0 1 (fontified t)) . -249) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) 250) nil (26013 27260 189195 0) 0 nil])
([nil nil ((#("cgmath::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -439) (undo-tree-id2577 . -8) (undo-tree-id2578 . -8) (undo-tree-id2579 . -8) (undo-tree-id2580 . -8) (undo-tree-id2581 . -8) (undo-tree-id2582 . -8) (undo-tree-id2583 . -8) (undo-tree-id2584 . -8) (undo-tree-id2585 . -8) (undo-tree-id2586 . -8) (undo-tree-id2587 . -8) (undo-tree-id2588 . -8) 447 (t 26013 27260 201702 840000)) nil (26013 27269 184133 0) 0 nil])
([nil nil ((#("cgmath::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -480) (undo-tree-id2569 . -8) (undo-tree-id2570 . -8) (undo-tree-id2571 . -8) (undo-tree-id2572 . -8) (undo-tree-id2573 . -8) (undo-tree-id2574 . -8) (undo-tree-id2575 . -8) (undo-tree-id2576 . -8) 488) nil (26013 27269 184119 0) 0 nil])
([nil nil ((#("cgmath:" 0 6 (face font-lock-constant-face fontified t) 6 7 (fontified t)) . -548) (undo-tree-id2559 . -7) (undo-tree-id2560 . -7) (undo-tree-id2561 . -7) (undo-tree-id2562 . -7) (undo-tree-id2563 . -7) (undo-tree-id2564 . -7) (undo-tree-id2565 . -7) (undo-tree-id2566 . -7) (undo-tree-id2567 . -7) (undo-tree-id2568 . -7) 555) nil (26013 27269 184107 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -548) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) 549 (t 26013 27269 196733 69000)) nil (26013 27307 999800 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -557) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) 558) nil (26013 27307 999790 0) 0 nil])
([nil nil ((557 . 561)) nil (26013 27307 999763 0) 0 nil])
([nil nil ((557 . 569) (#("from" 0 4 (fontified nil)) . 557) (557 . 561) (#("from_angle_x" 0 12 (fontified nil)) . -557) (557 . 569) (#("from" 0 4 (fontified t)) . -557) (undo-tree-id2677 . -4) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -2) (undo-tree-id2681 . -2) (undo-tree-id2682 . -2) (undo-tree-id2683 . -3) (undo-tree-id2684 . -4) (undo-tree-id2685 . -4) (undo-tree-id2686 . -4) (undo-tree-id2687 . -4) 561) nil (26013 27307 999761 0) 0 nil])
([nil nil ((569 . 571)) nil (26013 27307 999748 0) 0 nil])
([nil nil ((570 . 573)) nil (26013 27307 999747 0) 0 nil])
([nil nil ((30 . 35) (570 . 570) (570 . 573) (#("Rad" 0 3 (fontified nil)) . 570) (570 . 573) (#("Rad (use cgmath::Rad)" 0 21 (fontified nil)) . -570) (570 . 591) (#("Rad" 0 3 (face font-lock-type-face fontified t)) . -570) (undo-tree-id2665 . -3) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -2) (undo-tree-id2671 . -2) (undo-tree-id2672 . -2) (undo-tree-id2673 . -3) (undo-tree-id2674 . -3) (undo-tree-id2675 . -3) (undo-tree-id2676 . -3) 573) nil (26013 27307 999745 0) 0 nil])
([nil nil ((578 . 580)) nil (26013 27307 999729 0) 0 nil])
([nil nil ((579 . 584)) nil (26013 27307 999728 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -581) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (#("f" 0 1 (fontified t)) . -582) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (#("." 0 1 (fontified t)) . -583) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) 584) nil (26013 27307 999725 0) 0 nil])
([nil nil ((581 . 583)) nil (26013 27307 999685 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -581) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (#("f" 0 1 (fontified t)) . -582) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) 583) nil (26013 27307 999683 0) 0 nil])
([nil nil ((581 . 585)) nil (26013 27307 999671 0) 0 nil])
([nil nil ((584 . 592) (#("r" 0 1 (fontified nil)) . 584) (584 . 585) (#("rotation" 0 8 (fontified nil)) . -584) (584 . 592) (#("r" 0 1 (fontified t)) . -584) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) 585) nil (26013 27307 999669 0) 0 nil])
([nil nil ((592 . 594)) nil (26013 27307 999662 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -592) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (#("0" 0 1 (fontified t)) . -593) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) 594) nil (26013 27307 999659 0) 0 nil])
([nil nil ((592 . 594)) nil (26013 27307 999626 0) 0 nil])
([nil nil ((593 . 594)) nil (26013 27307 999625 0) 0 nil])
([nil nil ((597 . 598)) nil (26013 27307 999619 0) 0 nil])
([nil nil ((598 . 607) (t 26013 27308 12498 970000)) nil (26013 27333 285131 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 674 . 675) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 672 . 673) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil fontified nil 661 . 669) (nil fontified nil 660 . 661) (nil fontified nil 656 . 660) (nil fontified nil 655 . 656) (nil fontified nil 652 . 655) (nil fontified nil 651 . 652) (nil fontified nil 639 . 651) (nil fontified nil 637 . 639) (nil fontified nil 630 . 637) (nil fontified nil 627 . 630) (nil fontified nil 619 . 627) (nil fontified nil 618 . 619) (nil fontified nil 615 . 618) (nil fontified nil 607 . 615) (607 . 675)) nil (26013 27333 285129 0) 0 nil])
([nil nil ((668 . 676) (#("        " 0 8 (fontified nil)) . -607) (675 . 676)) nil (26013 27333 285122 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 743 . 744) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 730 . 738) (nil fontified nil 729 . 730) (nil fontified nil 725 . 729) (nil fontified nil 724 . 725) (nil fontified nil 721 . 724) (nil fontified nil 720 . 721) (nil fontified nil 708 . 720) (nil fontified nil 706 . 708) (nil fontified nil 699 . 706) (nil fontified nil 696 . 699) (nil fontified nil 688 . 696) (nil fontified nil 687 . 688) (nil fontified nil 684 . 687) (nil fontified nil 676 . 684) (676 . 744)) nil (26013 27333 285120 0) 0 nil])
([nil nil ((737 . 745) (#("        " 0 8 (fontified nil)) . -676) (744 . 745)) nil (26013 27333 285113 0) 0 nil])
([nil nil ((550 . 552)) nil (26013 27333 285112 0) 0 nil])
([nil nil ((621 . 623)) nil (26013 27333 285111 0) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-variable-name-face fontified t)) . -622) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) 623) nil (26013 27333 285109 0) 0 nil])
([nil nil ((622 . 623)) nil (26013 27333 285100 0) 0 nil])
([nil nil ((692 . 693)) nil (26013 27333 285099 0) 0 nil])
([nil nil ((693 . 694)) nil (26013 27333 285098 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -646) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) 647) nil (26013 27333 285097 0) 0 nil])
([nil nil ((646 . 647)) nil (26013 27333 285086 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -717) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) 718) nil (26013 27333 285084 0) 0 nil])
([nil nil ((717 . 718)) nil (26013 27333 285072 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -666) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) 667) nil (26013 27333 285070 0) 0 nil])
([nil nil ((666 . 667)) nil (26013 27333 285058 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -737) (undo-tree-id2721 . -1) 738) nil (26013 27333 285055 0) 0 nil])
([nil nil ((737 . 738)) nil (26013 27333 285042 0) 0 nil])
([nil nil ((742 . 751) (t 26013 27333 298374 661000)) nil (26013 27353 678704 0) 0 nil])
([nil nil ((751 . 759)) nil (26013 27353 678703 0) 0 nil])
([nil nil ((759 . 762)) nil (26013 27353 678702 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -760) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -761) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) 762) nil (26013 27353 678701 0) 0 nil])
([nil nil ((760 . 767)) nil (26013 27353 678690 0) 0 nil])
([nil nil ((765 . 772) (#("Ma" 0 2 (fontified nil)) . 765) (765 . 767) (#("Matrix4" 0 7 (fontified nil)) . -765) (765 . 772) (#("Ma" 0 2 (face font-lock-type-face fontified t)) . -765) (undo-tree-id2796 . -2) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -2) (undo-tree-id2800 . -2) (undo-tree-id2801 . -2) 767) nil (26013 27353 678688 0) 0 nil])
([nil nil ((772 . 778)) nil (26013 27353 678679 0) 0 nil])
([nil nil ((774 . 784) (#("from" 0 4 (fontified nil)) . 774) (774 . 778) (#("from_scale" 0 10 (fontified nil)) . -774) (774 . 784) (#("from" 0 4 (fontified t)) . -774) (undo-tree-id2784 . -4) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -2) (undo-tree-id2790 . -2) (undo-tree-id2791 . -3) (undo-tree-id2792 . -4) (undo-tree-id2793 . -4) (undo-tree-id2794 . -4) (undo-tree-id2795 . -4) 778) nil (26013 27353 678677 0) 0 nil])
([nil nil ((784 . 786)) nil (26013 27354 689725 0) 0 nil])
([nil nil ((785 . 791)) nil (26013 27359 78983 0) 0 nil] [nil nil ((785 . 788)) ((#("se;" 0 3 (fontified t)) . 785) (undo-tree-id2833 . -3) (undo-tree-id2834 . -3) (undo-tree-id2835 . -3) (undo-tree-id2836 . -3) (undo-tree-id2837 . -3) (undo-tree-id2838 . -3) (undo-tree-id2839 . -3) (undo-tree-id2840 . -3) (undo-tree-id2841 . -3) (undo-tree-id2842 . -3) (undo-tree-id2843 . -3) (undo-tree-id2844 . -3) (undo-tree-id2845 . -3) (undo-tree-id2846 . -3) (undo-tree-id2847 . -3) (undo-tree-id2848 . -3) (undo-tree-id2849 . -3)) (26013 27354 241186 0) 0 nil])
([nil nil ((790 . 797) (#("s" 0 1 (fontified nil)) . 790) (790 . 791) (#("scaling" 0 7 (fontified nil)) . -790) (790 . 797) (#("s" 0 1 (fontified t)) . -790) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) 791) nil (26013 27359 78980 0) 0 nil])
([nil nil ((788 . 797)) ((#("
        " 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 788) (undo-tree-id2817 . -9) (undo-tree-id2818 . -9) (undo-tree-id2819 . -9) (undo-tree-id2820 . -9) (undo-tree-id2821 . -9) (undo-tree-id2822 . -9) (undo-tree-id2823 . -9) (undo-tree-id2824 . -9) (undo-tree-id2825 . -9) (undo-tree-id2826 . -8) (undo-tree-id2827 . -8) (undo-tree-id2828 . -9) (undo-tree-id2829 . -9) (undo-tree-id2830 . -1) (undo-tree-id2831 . -9) (undo-tree-id2832 . -9)) (26013 27353 912578 0) 0 nil])
([nil nil ((798 . 799)) nil (26013 27359 78961 0) 0 nil])
([nil nil ((797 . 798)) ((#("." 0 1 (fontified t)) . 797) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1)) (26013 27353 679220 0) 0 nil])
([nil nil ((#("scaling);" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t) 8 9 (fontified t)) . -790) (undo-tree-id2993 . -9) (undo-tree-id2994 . -9) (undo-tree-id2995 . -9) (undo-tree-id2996 . -9) (undo-tree-id2997 . -9) (undo-tree-id2998 . -9) (undo-tree-id2999 . -9) (undo-tree-id3000 . -9) (undo-tree-id3001 . -9) (undo-tree-id3002 . -9) (undo-tree-id3003 . -9) (undo-tree-id3004 . -9) (undo-tree-id3005 . -9) (undo-tree-id3006 . -9) (undo-tree-id3007 . -9) (undo-tree-id3008 . -9) (undo-tree-id3009 . -9) (undo-tree-id3010 . -9) (undo-tree-id3011 . -9) (undo-tree-id3012 . -9) (undo-tree-id3013 . -9) (undo-tree-id3014 . -9) (undo-tree-id3015 . -9) (undo-tree-id3016 . -9) (undo-tree-id3017 . -9) (undo-tree-id3018 . -9) 799 (t 26013 27359 92997 902000)) nil (26013 27384 117983 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -795) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (#(" " 0 1 (fontified t)) . -796) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (#("." 0 1 (fontified t)) . -797) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) 798) ((795 . 798)) (26013 27353 678654 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -785) (undo-tree-id2959 . -5) (undo-tree-id2960 . -5) (undo-tree-id2961 . -5) (undo-tree-id2962 . -5) (undo-tree-id2963 . -5) (undo-tree-id2964 . -5) (undo-tree-id2965 . -5) (undo-tree-id2966 . -5) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5) (undo-tree-id2969 . -5) (undo-tree-id2970 . -5) (undo-tree-id2971 . -5) (undo-tree-id2972 . -5) (undo-tree-id2973 . -5) (undo-tree-id2974 . -5) (undo-tree-id2975 . -5) (undo-tree-id2976 . -5) (undo-tree-id2977 . -5) (undo-tree-id2978 . -5) (undo-tree-id2979 . -5) (undo-tree-id2980 . -5) (undo-tree-id2981 . -5) (undo-tree-id2982 . -5) (undo-tree-id2983 . -5) (undo-tree-id2984 . -5) (undo-tree-id2985 . -5) (undo-tree-id2986 . -5) (undo-tree-id2987 . -5) (undo-tree-id2988 . -5) (undo-tree-id2989 . -5) (undo-tree-id2990 . -5) (undo-tree-id2991 . -5) (undo-tree-id2992 . -5) 790) nil (26013 27384 117956 0) 0 nil])
nil
([nil nil ((#("scale(" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t)) . -779) (undo-tree-id2922 . -6) (undo-tree-id2923 . -6) (undo-tree-id2924 . -6) (undo-tree-id2925 . -6) (undo-tree-id2926 . -6) (undo-tree-id2927 . -6) (undo-tree-id2928 . -6) (undo-tree-id2929 . -6) (undo-tree-id2930 . -6) (undo-tree-id2931 . -6) (undo-tree-id2932 . -6) (undo-tree-id2933 . -6) (undo-tree-id2934 . -6) (undo-tree-id2935 . -6) (undo-tree-id2936 . -6) (undo-tree-id2937 . -6) (undo-tree-id2938 . -6) (undo-tree-id2939 . -6) (undo-tree-id2940 . -6) (undo-tree-id2941 . -6) (undo-tree-id2942 . -6) (undo-tree-id2943 . -6) (undo-tree-id2944 . -6) (undo-tree-id2945 . -6) (undo-tree-id2946 . -6) (undo-tree-id2947 . -6) (undo-tree-id2948 . -6) (undo-tree-id2949 . -6) (undo-tree-id2950 . -6) (undo-tree-id2951 . -6) (undo-tree-id2952 . -6) (undo-tree-id2953 . -6) (undo-tree-id2954 . -6) (undo-tree-id2955 . -6) (undo-tree-id2956 . -6) (undo-tree-id2957 . -6) (undo-tree-id2958 . -6) 785) nil (26013 27384 117918 0) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -774) (undo-tree-id2883 . -5) (undo-tree-id2884 . -5) (undo-tree-id2885 . -5) (undo-tree-id2886 . -5) (undo-tree-id2887 . -5) (undo-tree-id2888 . -5) (undo-tree-id2889 . -5) (undo-tree-id2890 . -5) (undo-tree-id2891 . -5) (undo-tree-id2892 . -5) (undo-tree-id2893 . -5) (undo-tree-id2894 . -5) (undo-tree-id2895 . -5) (undo-tree-id2896 . -5) (undo-tree-id2897 . -5) (undo-tree-id2898 . -5) (undo-tree-id2899 . -5) (undo-tree-id2900 . -5) (undo-tree-id2901 . -5) (undo-tree-id2902 . -5) (undo-tree-id2903 . -5) (undo-tree-id2904 . -5) (undo-tree-id2905 . -5) (undo-tree-id2906 . -5) (undo-tree-id2907 . -5) (undo-tree-id2908 . -5) (undo-tree-id2909 . -5) (undo-tree-id2910 . -5) (undo-tree-id2911 . -5) (undo-tree-id2912 . -5) (undo-tree-id2913 . -5) (undo-tree-id2914 . -5) (undo-tree-id2915 . -5) (undo-tree-id2916 . -5) (undo-tree-id2917 . -5) (undo-tree-id2918 . -5) (undo-tree-id2919 . -5) (undo-tree-id2920 . -5) (undo-tree-id2921 . -5) 779) nil (26013 27384 117877 0) 0 nil])
([nil nil ((774 . 778)) nil (26013 27384 117837 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 796 796 nil nil nil t #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil)))) #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil))) #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil))) #s(yas--exit 797 nil) 71 nil #s(yas--field 1 796 796 nil nil nil t #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil)))) nil nil)) (774 . 804) (#("from_nonuniform_scale(${1:x}, ${2:y}, ${3:z})$0" 0 47 (fontified nil)) . 774) (774 . 821) (#("scal" 0 4 (fontified nil)) . 774) (774 . 778) (#("from_nonuniform_scale(â€¦)" 0 24 (fontified nil)) . -774) (774 . 798) (#("scal" 0 4 (fontified t)) . -774) (undo-tree-id2869 . -4) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -2) (undo-tree-id2873 . -2) (undo-tree-id2874 . -2) (undo-tree-id2875 . -2) (undo-tree-id2876 . -3) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) 778) nil (26013 27384 117835 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 796) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1)) nil (26013 27384 117817 0) 0 nil])
([nil nil ((#(", y" 0 3 (fontified t)) . 796) (undo-tree-id2864 . -2) (undo-tree-id2865 . -3) (undo-tree-id2866 . -3)) nil (26013 27384 117813 0) 0 nil])
([nil nil ((#(", z" 0 3 (fontified t)) . 796) (undo-tree-id2861 . -2) (undo-tree-id2862 . -3) (undo-tree-id2863 . -3)) nil (26013 27384 118330 0) 0 nil])
([nil nil ((apply yas--snippet-revive 774 821 #s(yas--snippet nil (#s(yas--field 1 796 796 nil nil nil t #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil)))) #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil))) #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil))) #s(yas--exit 797 nil) 71 nil #s(yas--field 1 796 796 nil nil nil t #s(yas--field 2 796 796 nil nil nil nil #s(yas--field 3 796 796 nil nil nil nil #s(yas--exit 797 nil)))) nil nil))) nil (26013 27389 824587 0) 0 nil] [nil nil ((#(")
        
    }
}

// We" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (fontified t) 2 10 (fontified t) 10 11 (fontified t) 11 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 23 (face font-lock-comment-delimiter-face fontified t) 23 25 (face font-lock-comment-face fontified t)) . 796) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -25)) ((796 . 821)) (26013 27384 117802 0) 0 nil])
([nil nil ((795 . 796)) nil (26013 27389 824586 0) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -795) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) 796) nil (26013 27389 824584 0) 0 nil])
([nil nil ((796 . 799)) nil (26013 27389 824575 0) 0 nil])
([nil nil ((796 . 800) (#("sel" 0 3 (fontified nil)) . 796) (796 . 799) (#("self" 0 4 (fontified nil)) . -796) (796 . 800) (#("sel" 0 3 (fontified t)) . -796) (undo-tree-id3025 . -3) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -3) (undo-tree-id3033 . -3) (undo-tree-id3034 . -3) 799) nil (26013 27389 824573 0) 0 nil])
([nil nil ((800 . 802)) nil (26013 27389 824559 0) 0 nil])
([nil nil ((801 . 808) (#("s" 0 1 (fontified nil)) . 801) (801 . 802) (#("scaling" 0 7 (fontified nil)) . -801) (801 . 808) (#("s" 0 1 (fontified t)) . -801) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) 802) nil (26013 27389 824556 0) 0 nil])
([nil nil ((809 . 810)) nil (26013 27389 824535 0) 0 nil])
([nil nil ((809 . 810) (t 26013 27389 838572 831000)) nil (26013 27396 913810 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -809) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) 810) nil (26013 27396 913808 0) 0 nil])
([nil nil ((808 . 810)) nil (26013 27396 913802 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -808) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (#("i" 0 1 (fontified t)) . -809) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) 810) nil (26013 27396 913800 0) 0 nil])
([nil nil ((808 . 811)) nil (26013 27396 913776 0) 0 nil])
([nil nil ((apply yas--snippet-revive 809 815 #s(yas--snippet nil nil #s(yas--exit 815 nil) 72 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 815 nil) 72 nil nil nil nil)) (809 . 815) (#("into()$0" 0 8 (fontified nil)) . 809) (809 . 817) (#("in" 0 2 (fontified nil)) . 809) (809 . 811) (#("into() (as Into)" 0 16 (fontified nil)) . -809) (809 . 825) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -809) (undo-tree-id3043 . -2) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) 811) nil (26013 27396 913771 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -808) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (#("i" 0 1 (fontified t)) . -809) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -810) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (#("t" 0 1 (fontified t)) . -811) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (#("o" 0 1 (fontified t)) . -812) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -813) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -814) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) 815 (t 26013 27396 927871 684000)) nil (26013 27420 692050 0) 0 nil])
([nil nil ((808 . 809)) nil (26013 27420 691551 0) 0 nil])
([nil nil ((809 . 810) (#("x" 0 1 (fontified nil)) . -809) (809 . 810)) nil (26013 27420 691546 0) 0 nil])
([nil nil ((810 . 811) (t 26013 27420 706753 848000)) nil (26013 27438 542919 0) 0 nil])
([nil nil ((811 . 815)) nil (26013 27438 542917 0) 0 nil])
([nil nil ((812 . 816) (#("sel" 0 3 (fontified nil)) . 812) (812 . 815) (#("self" 0 4 (fontified nil)) . -812) (812 . 816) (#("sel" 0 3 (fontified t)) . -812) (undo-tree-id3642 . -3) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -2) (undo-tree-id3648 . -2) (undo-tree-id3649 . -2) (undo-tree-id3650 . -3) (undo-tree-id3651 . -3) (undo-tree-id3652 . -3) (undo-tree-id3653 . -3) 815) nil (26013 27438 542915 0) 0 nil])
([nil nil ((816 . 818)) nil (26013 27438 542901 0) 0 nil])
([nil nil ((817 . 824) (#("s" 0 1 (fontified nil)) . 817) (817 . 818) (#("scaling" 0 7 (fontified nil)) . -817) (817 . 824) (#("s" 0 1 (fontified t)) . -817) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) 818) nil (26013 27438 542899 0) 0 nil])
([nil nil ((824 . 826)) nil (26013 27438 542887 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -824) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (#("." 0 1 (fontified t)) . -825) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) 826) nil (26013 27438 542885 0) 0 nil])
([nil nil ((824 . 825)) nil (26013 27438 542866 0) 0 nil])
([nil nil ((825 . 826) (#("y" 0 1 (fontified nil)) . -825) (825 . 826)) nil (26013 27438 542865 0) 0 nil])
([nil nil ((826 . 829)) nil (26013 27438 542864 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -828) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) 829) nil (26013 27438 542862 0) 0 nil])
([nil nil ((828 . 831)) nil (26013 27438 542851 0) 0 nil])
([nil nil ((828 . 832) (#("sel" 0 3 (fontified nil)) . 828) (828 . 831) (#("self" 0 4 (fontified nil)) . -828) (828 . 832) (#("sel" 0 3 (fontified t)) . -828) (undo-tree-id3596 . -3) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -2) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -3) (undo-tree-id3604 . -3) (undo-tree-id3605 . -3) (undo-tree-id3606 . -3) 831) nil (26013 27438 542849 0) 0 nil])
([nil nil ((832 . 833)) nil (26013 27438 542836 0) 0 nil])
([nil nil ((833 . 834)) nil (26013 27438 542835 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -833) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) 834) nil (26013 27438 542834 0) 0 nil])
([nil nil ((833 . 835)) nil (26013 27438 542828 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -833) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (#("s" 0 1 (fontified t)) . -834) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) 835) nil (26013 27438 542826 0) 0 nil])
([nil nil ((833 . 834)) nil (26013 27438 542809 0) 0 nil])
([nil nil ((833 . 840) (#("s" 0 1 (fontified nil)) . 833) (833 . 834) (#("scaling" 0 7 (fontified nil)) . -833) (833 . 840) (#("s" 0 1 (fontified t)) . -833) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) 834) nil (26013 27438 542807 0) 0 nil])
([nil nil ((840 . 842)) nil (26013 27438 542795 0) 0 nil])
([nil nil ((841 . 842) (#("z" 0 1 (fontified nil)) . 841) (841 . 842) (#("z" 0 1 (fontified t)) . -841) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) 842) nil (26013 27438 542791 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -594) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#("0" 0 1 (fontified t)) . -595) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -596) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) 597 (t 26013 27438 558296 254000)) nil (26013 27449 717884 0) 0 nil])
([nil nil ((594 . 596)) nil (26013 27449 717847 0) 0 nil])
([nil nil ((595 . 596) (#("x" 0 1 (fontified nil)) . 595) (595 . 596) (#("x" 0 1 (fontified t)) . -595) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) 596) nil (26013 27449 717845 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -664) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (#("1" 0 1 (fontified t)) . -665) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -666) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) 667) nil (26013 27449 717834 0) 0 nil])
([nil nil ((664 . 665)) nil (26013 27449 717794 0) 0 nil])
([nil nil ((665 . 666)) nil (26013 27449 717793 0) 0 nil])
([nil nil ((665 . 666) (#("y" 0 1 (fontified nil)) . 665) (665 . 666) (#("y" 0 1 (fontified t)) . -665) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) 666) nil (26013 27449 717791 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -734) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (#("2" 0 1 (fontified t)) . -735) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -736) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) 737) nil (26013 27449 717779 0) 0 nil])
([nil nil ((734 . 736)) nil (26013 27449 717757 0) 0 nil])
([nil nil ((735 . 736) (#("z" 0 1 (fontified nil)) . 735) (735 . 736) (#("z" 0 1 (fontified t)) . -735) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) 736) nil (26013 27449 717753 0) 0 nil])
([nil nil ((843 . 851) (#("        " 0 8 (fontified nil)) . 842) (undo-tree-id3814 . -8) (undo-tree-id3815 . -8) (undo-tree-id3816 . -8) (undo-tree-id3817 . -8) (850 . 851) (t 26013 27449 732960 683000)) nil (26013 27515 101764 0) 0 nil])
([nil nil ((851 . 858)) nil (26013 27515 101758 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -851) (undo-tree-id3807 . -1) (#("e" 0 1 (fontified t)) . -852) (undo-tree-id3808 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -853) (undo-tree-id3809 . -1) (#(" " 0 1 (fontified t)) . -854) (undo-tree-id3810 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -855) (undo-tree-id3811 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -856) (undo-tree-id3812 . -1) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -857) (undo-tree-id3813 . -1) 858) nil (26013 27515 101756 0) 0 nil])
([nil nil ((851 . 855)) nil (26013 27515 101747 0) 0 nil])
([nil nil ((851 . 862) (#("tran" 0 4 (fontified nil)) . 851) (851 . 855) (#("translation" 0 11 (fontified nil)) . -851) (851 . 862) (#("tran" 0 4 (fontified t)) . -851) (undo-tree-id3806 . -4) 855) nil (26013 27515 101745 0) 0 nil])
([nil nil ((862 . 863)) nil (26013 27515 101742 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -862) (undo-tree-id3805 . -1) 863) nil (26013 27515 101741 0) 0 nil])
([nil nil ((862 . 864)) nil (26013 27515 101738 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -863) (undo-tree-id3804 . -1) 864) nil (26013 27515 101737 0) 0 nil])
([nil nil ((863 . 864)) nil (26013 27515 101735 0) 0 nil])
([nil nil ((#("translation *" 0 13 (fontified t)) . -851) (undo-tree-id3803 . -13) 864) nil (26013 27515 101734 0) 0 nil])
([nil nil ((851 . 864)) nil (26013 27515 101731 0) 0 nil])
([nil nil ((864 . 868)) nil (26013 27515 101730 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -867) (undo-tree-id3802 . -1) 868) nil (26013 27515 101729 0) 0 nil])
([nil nil ((867 . 868)) nil (26013 27515 101727 0) 0 nil])
([nil nil ((867 . 878) (#("t" 0 1 (fontified nil)) . 867) (867 . 868) (#("translation" 0 11 (fontified nil)) . -867) (867 . 878) (#("t" 0 1 (fontified t)) . -867) (undo-tree-id3801 . -1) 868) nil (26013 27515 101725 0) 0 nil])
([nil nil ((878 . 882)) nil (26013 27515 101722 0) 0 nil])
([nil nil ((881 . 891) (#("r" 0 1 (fontified nil)) . 881) (881 . 882) (#("rotation_x" 0 10 (fontified nil)) . -881) (881 . 891) (#("r" 0 1 (fontified t)) . -881) (undo-tree-id3800 . -1) 882) nil (26013 27515 101720 0) 0 nil])
([nil nil ((891 . 894)) nil (26013 27515 101717 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -890) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (#(" " 0 1 (fontified t)) . -891) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (#("*" 0 1 (fontified t)) . -892) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (#(" " 0 1 (fontified t)) . -893) (undo-tree-id3799 . -1) 894) nil (26013 27515 101715 0) 0 nil])
([nil nil ((890 . 895)) nil (26013 27515 101706 0) 0 nil])
([nil nil ((894 . 904) (#("r" 0 1 (fontified nil)) . 894) (894 . 895) (#("rotation_y" 0 10 (fontified nil)) . -894) (894 . 904) (#("r" 0 1 (fontified t)) . -894) (undo-tree-id3792 . -1) 895) nil (26013 27515 101704 0) 0 nil])
([nil nil ((904 . 908)) nil (26013 27515 101701 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -907) (undo-tree-id3791 . -1) 908) nil (26013 27515 101699 0) 0 nil])
([nil nil ((907 . 908)) nil (26013 27515 101697 0) 0 nil])
([nil nil ((907 . 917) (#("r" 0 1 (fontified nil)) . 907) (907 . 908) (#("rotation_x" 0 10 (fontified nil)) . -907) (907 . 917) (#("r" 0 1 (fontified t)) . -907) (undo-tree-id3790 . -1) 908) nil (26013 27515 101695 0) 0 nil])
([nil nil ((917 . 921)) nil (26013 27515 101692 0) 0 nil])
([nil nil ((920 . 927) (#("s" 0 1 (fontified nil)) . 920) (920 . 921) (#("scaling" 0 7 (fontified nil)) . -920) (920 . 927) (#("s" 0 1 (fontified t)) . -920) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) 921) nil (26013 27515 101690 0) 0 nil])
([nil nil ((927 . 928)) nil (26013 27515 101683 0) 0 nil])
([nil nil ((930 . 938) (#("        " 0 8 (fontified nil)) . 929) (undo-tree-id3781 . -8) (undo-tree-id3782 . -8) (undo-tree-id3783 . -8) (undo-tree-id3784 . -8) (928 . 938)) nil (26013 27515 101681 0) 0 nil])
([nil nil ((938 . 940)) nil (26013 27515 101675 0) 0 nil])
([nil nil ((938 . 947) (#("mo" 0 2 (fontified nil)) . 938) (938 . 940) (#("model_mat" 0 9 (fontified nil)) . -938) (938 . 947) (#("mo" 0 2 (fontified t)) . -938) (undo-tree-id3773 . -2) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) 940) nil (26013 27515 101668 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 57) (778 . 779) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (707 . 708) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (633 . 634) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (559 . 560) (apply deactivate-cursor-after-undo 54) (485 . 486) (apply activate-cursor-for-undo 57) (773 . 774) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (703 . 704) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (630 . 631) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (557 . 558) (apply deactivate-cursor-after-undo 54) (484 . 485) (apply activate-cursor-for-undo 57) (768 . 769) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (699 . 700) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (627 . 628) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (555 . 556) (apply deactivate-cursor-after-undo 54) (483 . 484) (apply activate-cursor-for-undo 57) (763 . 764) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (695 . 696) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (624 . 625) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (553 . 554) (apply deactivate-cursor-after-undo 54) (482 . 483) (t 26013 27515 117357 812000)) nil (26013 27558 317939 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 57) (782 . 783) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (710 . 711) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (635 . 636) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (560 . 561) (apply deactivate-cursor-after-undo 54) (898 . 899) (t 26013 27558 333680 687000)) nil (26013 27571 503075 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 57) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -779) (apply deactivate-cursor-after-undo 57) (apply activate-cursor-for-undo 56) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -708) (apply deactivate-cursor-after-undo 56) (apply activate-cursor-for-undo 55) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -634) (apply deactivate-cursor-after-undo 55) (apply activate-cursor-for-undo 54) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -560) (apply deactivate-cursor-after-undo 54) (#("_" 0 1 (fontified t)) . -902) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) 903) nil (26013 27571 503069 0) 0 nil])
([nil nil ((898 . 899)) nil (26013 27571 503058 0) 0 nil])
([nil nil ((887 . 902) (#("translation_" 0 12 (fontified nil)) . 887) (887 . 899) (#("translation_mat" 0 15 (fontified nil)) . -887) (887 . 902) (#("translation_" 0 12 (fontified t)) . -887) (undo-tree-id3876 . -12) (undo-tree-id3877 . -11) (undo-tree-id3878 . -11) (undo-tree-id3879 . -11) (undo-tree-id3880 . -11) (undo-tree-id3881 . -11) (undo-tree-id3882 . -11) (undo-tree-id3883 . -11) (undo-tree-id3884 . -11) (undo-tree-id3885 . -11) (undo-tree-id3886 . -11) (undo-tree-id3887 . -11) (undo-tree-id3888 . -11) (undo-tree-id3889 . -11) (undo-tree-id3890 . -11) (undo-tree-id3891 . -11) (undo-tree-id3892 . -11) (undo-tree-id3893 . -11) (undo-tree-id3894 . -11) (undo-tree-id3895 . -11) (undo-tree-id3896 . -11) (undo-tree-id3897 . -11) (undo-tree-id3898 . -11) (undo-tree-id3899 . -11) (undo-tree-id3900 . -11) (undo-tree-id3901 . -12) (undo-tree-id3902 . -11) (undo-tree-id3903 . -12) (undo-tree-id3904 . -12) (undo-tree-id3905 . -12) 899) nil (26013 27571 503055 0) 0 nil])
([nil nil ((915 . 916)) nil (26013 27571 503024 0) 0 nil])
([nil nil ((905 . 919) (#("rotation_z_" 0 11 (fontified nil)) . 905) (905 . 916) (#("rotation_z_mat" 0 14 (fontified nil)) . -905) (905 . 919) (#("rotation_z_" 0 11 (fontified t)) . -905) (undo-tree-id3863 . -11) (undo-tree-id3864 . -10) (undo-tree-id3865 . -10) (undo-tree-id3866 . -10) (undo-tree-id3867 . -10) (undo-tree-id3868 . -10) (undo-tree-id3869 . -10) (undo-tree-id3870 . -10) (undo-tree-id3871 . -10) (undo-tree-id3872 . -11) (undo-tree-id3873 . -10) (undo-tree-id3874 . -11) (undo-tree-id3875 . -11) 916) nil (26013 27571 503022 0) 0 nil])
([nil nil ((932 . 933)) nil (26013 27571 503008 0) 0 nil])
([nil nil ((922 . 936) (#("rotation_y_" 0 11 (fontified nil)) . 922) (922 . 933) (#("rotation_y_mat" 0 14 (fontified nil)) . -922) (922 . 936) (#("rotation_y_" 0 11 (fontified t)) . -922) (undo-tree-id3851 . -11) (undo-tree-id3852 . -10) (undo-tree-id3853 . -10) (undo-tree-id3854 . -10) (undo-tree-id3855 . -10) (undo-tree-id3856 . -10) (undo-tree-id3857 . -10) (undo-tree-id3858 . -11) (undo-tree-id3859 . -11) (undo-tree-id3860 . -11) (undo-tree-id3861 . -11) (undo-tree-id3862 . -11) 933) nil (26013 27571 503006 0) 0 nil])
([nil nil ((949 . 950)) nil (26013 27571 502992 0) 0 nil])
([nil nil ((939 . 953) (#("rotation_x_" 0 11 (fontified nil)) . 939) (939 . 950) (#("rotation_x_mat" 0 14 (fontified nil)) . -939) (939 . 953) (#("rotation_x_" 0 11 (fontified t)) . -939) (undo-tree-id3830 . -11) (undo-tree-id3831 . -10) (undo-tree-id3832 . -10) (undo-tree-id3833 . -10) (undo-tree-id3834 . -10) (undo-tree-id3835 . -10) (undo-tree-id3836 . -10) (undo-tree-id3837 . -10) (undo-tree-id3838 . -10) (undo-tree-id3839 . -11) (undo-tree-id3840 . -10) (undo-tree-id3841 . -11) (undo-tree-id3842 . -11) (undo-tree-id3843 . -11) (undo-tree-id3844 . -11) (undo-tree-id3845 . -11) (undo-tree-id3846 . -11) (undo-tree-id3847 . -11) (undo-tree-id3848 . -11) (undo-tree-id3849 . -11) (undo-tree-id3850 . -11) 950) nil (26013 27571 502989 0) 0 nil])
([nil nil ((963 . 964)) nil (26013 27571 502965 0) 0 nil])
([nil nil ((956 . 967) (#("scaling_" 0 8 (fontified nil)) . 956) (956 . 964) (#("scaling_mat" 0 11 (fontified nil)) . -956) (956 . 967) (#("scaling_" 0 8 (fontified t)) . -956) (undo-tree-id3818 . -8) (undo-tree-id3819 . -7) (undo-tree-id3820 . -7) (undo-tree-id3821 . -7) (undo-tree-id3822 . -7) (undo-tree-id3823 . -7) (undo-tree-id3824 . -7) (undo-tree-id3825 . -8) (undo-tree-id3826 . -8) (undo-tree-id3827 . -8) (undo-tree-id3828 . -8) (undo-tree-id3829 . -8) 964) nil (26013 27571 502961 0) 0 nil])
([nil nil ((1368 . 1369) (t 26013 27571 519191 265000)) nil (26013 27655 86198 0) 0 nil])
([nil nil ((1369 . 1378)) nil (26013 27655 86197 0) 0 nil])
([nil nil ((1374 . 1390) (#("Tran" 0 4 (fontified nil)) . 1374) (1374 . 1378) (#("TransformUniform" 0 16 (fontified nil)) . -1374) (1374 . 1390) (#("Tran" 0 4 (face font-lock-type-face fontified t)) . -1374) (undo-tree-id3917 . -4) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -2) (undo-tree-id3921 . -3) (undo-tree-id3922 . -4) (undo-tree-id3923 . -4) (undo-tree-id3924 . -4) (undo-tree-id3925 . -4) 1378) nil (26013 27655 86195 0) 0 nil])
([nil nil ((1390 . 1393)) nil (26013 27655 86183 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1394) (1394 . 1398) (1394 . 1395) (#("    " 0 4 (fontified nil)) . 1393) (1393 . 1397) (1392 . 1394)) nil (26013 27655 86181 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1950 . 1951) (nil fontified nil 1950 . 1951) (nil fontified nil 1946 . 1950) (nil fontified nil 1945 . 1946) (nil fontified nil 1932 . 1945) (nil fontified nil 1924 . 1932) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1921 . 1922) (nil fontified nil 1912 . 1921) (nil fontified nil 1911 . 1912) (nil fontified nil 1897 . 1911) (nil fontified nil 1889 . 1897) (nil fontified nil 1887 . 1889) (nil fontified nil 1875 . 1887) (nil fontified nil 1873 . 1875) (nil fontified nil 1869 . 1873) (nil fontified nil 1866 . 1869) (nil fontified nil 1859 . 1866) (nil fontified nil 1857 . 1859) (nil fontified nil 1845 . 1857) (nil fontified nil 1843 . 1845) (nil fontified nil 1839 . 1843) (nil fontified nil 1837 . 1839) (nil fontified nil 1832 . 1837) (nil fontified nil 1816 . 1832) (nil fontified nil 1814 . 1816) (nil fontified nil 1813 . 1814) (nil fontified nil 1812 . 1813) (nil fontified nil 1808 . 1812) (nil fontified nil 1807 . 1808) (nil fontified nil 1806 . 1807) (nil fontified nil 1805 . 1806) (nil fontified nil 1804 . 1805) (nil fontified nil 1792 . 1804) (nil fontified nil 1784 . 1792) (nil fontified nil 1782 . 1784) (nil fontified nil 1774 . 1782) (nil fontified nil 1758 . 1774) (nil fontified nil 1756 . 1758) (nil fontified nil 1755 . 1756) (nil fontified nil 1740 . 1755) (nil fontified nil 1739 . 1740) (nil fontified nil 1735 . 1739) (nil fontified nil 1733 . 1735) (nil fontified nil 1728 . 1733) (nil fontified nil 1712 . 1728) (nil fontified nil 1711 . 1712) (nil fontified nil 1710 . 1711) (nil fontified nil 1709 . 1710) (nil fontified nil 1689 . 1709) (nil fontified nil 1687 . 1689) (nil fontified nil 1683 . 1687) (nil fontified nil 1681 . 1683) (nil fontified nil 1677 . 1681) (nil fontified nil 1676 . 1677) (nil fontified nil 1664 . 1676) (nil fontified nil 1663 . 1664) (nil fontified nil 1662 . 1663) (nil fontified nil 1634 . 1662) (nil fontified nil 1621 . 1634) (nil fontified nil 1620 . 1621) (nil fontified nil 1617 . 1620) (nil fontified nil 1609 . 1617) (nil fontified nil 1608 . 1609) (nil fontified nil 1607 . 1608) (nil fontified nil 1606 . 1607) (nil fontified nil 1600 . 1606) (nil fontified nil 1598 . 1600) (nil fontified nil 1595 . 1598) (nil fontified nil 1594 . 1595) (nil fontified nil 1593 . 1594) (nil fontified nil 1592 . 1593) (nil fontified nil 1590 . 1592) (nil fontified nil 1589 . 1590) (nil fontified nil 1585 . 1589) (nil fontified nil 1583 . 1585) (nil fontified nil 1581 . 1583) (nil fontified nil 1578 . 1581) (nil fontified nil 1577 . 1578) (nil fontified nil 1576 . 1577) (nil fontified nil 1574 . 1576) (nil fontified nil 1568 . 1574) (nil fontified nil 1566 . 1568) (nil fontified nil 1562 . 1566) (nil fontified nil 1561 . 1562) (nil fontified nil 1560 . 1561) (nil fontified nil 1555 . 1560) (nil fontified nil 1540 . 1555) (nil fontified nil 1539 . 1540) (nil fontified nil 1537 . 1539) (nil fontified nil 1536 . 1537) (nil fontified nil 1533 . 1536) (nil fontified nil 1529 . 1533) (nil fontified nil 1528 . 1529) (nil fontified nil 1527 . 1528) (nil fontified nil 1526 . 1527) (nil fontified nil 1522 . 1526) (nil fontified nil 1520 . 1522) (nil fontified nil 1519 . 1520) (nil fontified nil 1518 . 1519) (nil fontified nil 1513 . 1518) (nil fontified nil 1512 . 1513) (nil fontified nil 1511 . 1512) (nil fontified nil 1463 . 1511) (nil fontified nil 1459 . 1463) (nil fontified nil 1451 . 1459) (nil fontified nil 1450 . 1451) (nil fontified nil 1449 . 1450) (nil fontified nil 1448 . 1449) (nil fontified nil 1447 . 1448) (nil fontified nil 1441 . 1447) (nil fontified nil 1440 . 1441) (nil fontified nil 1438 . 1440) (nil fontified nil 1432 . 1438) (nil fontified nil 1430 . 1432) (nil fontified nil 1426 . 1430) (nil fontified nil 1425 . 1426) (nil fontified nil 1422 . 1425) (nil fontified nil 1421 . 1422) (nil fontified nil 1420 . 1421) (nil fontified nil 1404 . 1420) (nil fontified nil 1403 . 1404) (nil fontified nil 1401 . 1403) (nil fontified nil 1400 . 1401) (nil fontified nil 1397 . 1400) (nil fontified nil 1393 . 1397) (1393 . 1951)) nil (26013 27655 86173 0) 0 nil])
([nil nil ((1394 . 1398) (#("    " 0 4 (fontified nil)) . 1393) (undo-tree-id3913 . -4) (undo-tree-id3914 . -4) (undo-tree-id3915 . -4) (undo-tree-id3916 . -4) (1392 . 1398)) nil (26013 27655 86138 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1542 . 1543) (nil fontified nil 1542 . 1543) (nil fontified nil 1537 . 1542) (nil fontified nil 1536 . 1537) (nil fontified nil 1526 . 1536) (nil fontified nil 1525 . 1526) (nil fontified nil 1524 . 1525) (nil fontified nil 1519 . 1524) (nil fontified nil 1518 . 1519) (nil fontified nil 1517 . 1518) (nil fontified nil 1507 . 1517) (nil fontified nil 1500 . 1507) (nil fontified nil 1498 . 1500) (nil fontified nil 1492 . 1498) (nil fontified nil 1490 . 1492) (nil fontified nil 1481 . 1490) (nil fontified nil 1469 . 1481) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1462 . 1466) (nil fontified nil 1454 . 1462) (nil fontified nil 1452 . 1454) (nil fontified nil 1440 . 1452) (nil fontified nil 1438 . 1440) (nil fontified nil 1432 . 1438) (nil fontified nil 1431 . 1432) (nil fontified nil 1428 . 1431) (nil fontified nil 1420 . 1428) (nil fontified nil 1419 . 1420) (nil fontified nil 1418 . 1419) (nil fontified nil 1417 . 1418) (nil fontified nil 1413 . 1417) (nil fontified nil 1412 . 1413) (nil fontified nil 1411 . 1412) (nil fontified nil 1409 . 1411) (nil fontified nil 1408 . 1409) (nil fontified nil 1407 . 1408) (nil fontified nil 1404 . 1407) (nil fontified nil 1403 . 1404) (nil fontified nil 1401 . 1403) (nil fontified nil 1400 . 1401) (nil fontified nil 1397 . 1400) (nil fontified nil 1393 . 1397) (1393 . 1543)) nil (26013 27655 86126 0) 0 nil])
([nil nil ((2110 . 2111) 1543) nil (26013 27655 86110 0) 0 nil])
([nil nil ((#("Camera" 0 6 (face font-lock-type-face fontified t)) . -1597) (undo-tree-id4008 . -6) (undo-tree-id4009 . -6) (undo-tree-id4010 . -6) (undo-tree-id4011 . -6) (undo-tree-id4012 . -6) (undo-tree-id4013 . -6) (undo-tree-id4014 . -6) (undo-tree-id4015 . -6) (undo-tree-id4016 . -6) (undo-tree-id4017 . -6) 1603 (t 26013 27655 102942 679000)) nil (26013 27726 22181 0) 0 nil])
([nil nil ((#("camera: &" 0 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t) 8 9 (fontified t)) . -1588) (undo-tree-id3987 . -9) (undo-tree-id3988 . -9) (undo-tree-id3989 . -9) (undo-tree-id3990 . -9) (undo-tree-id3991 . -9) (undo-tree-id3992 . -9) (undo-tree-id3993 . -9) (undo-tree-id3994 . -9) (undo-tree-id3995 . -9) (undo-tree-id3996 . -9) (undo-tree-id3997 . -9) (undo-tree-id3998 . -9) (undo-tree-id3999 . -9) (undo-tree-id4000 . -9) (undo-tree-id4001 . -9) (undo-tree-id4002 . -9) (undo-tree-id4003 . -9) (undo-tree-id4004 . -9) (undo-tree-id4005 . -9) (undo-tree-id4006 . -9) (undo-tree-id4007 . -9) 1597) nil (26013 27726 22170 0) 0 nil])
([nil nil ((1588 . 1593)) nil (26013 27726 22148 0) 0 nil])
([nil nil ((1593 . 1603)) nil (26013 27726 22147 0) 0 nil])
([nil nil ((1599 . 1608) (#("Tran" 0 4 (fontified nil)) . 1599) (1599 . 1603) (#("Transform" 0 9 (fontified nil)) . -1599) (1599 . 1608) (#("Tran" 0 4 (face font-lock-type-face fontified t)) . -1599) (undo-tree-id3976 . -4) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -2) (undo-tree-id3980 . -2) (undo-tree-id3981 . -2) (undo-tree-id3982 . -3) (undo-tree-id3983 . -3) (undo-tree-id3984 . -4) (undo-tree-id3985 . -4) (undo-tree-id3986 . -4) 1603) nil (26013 27726 22145 0) 0 nil])
([nil nil ((#("proj" 0 4 (face font-lock-variable-name-face fontified t)) . -1345) (undo-tree-id3968 . -4) (undo-tree-id3969 . -4) (undo-tree-id3970 . -4) (undo-tree-id3971 . -4) (undo-tree-id3972 . -4) (undo-tree-id3973 . -4) (undo-tree-id3974 . -4) (undo-tree-id3975 . -4) 1349) nil (26013 27726 22131 0) 0 nil])
([nil nil ((#("view_" 0 5 (face font-lock-variable-name-face fontified t)) . -1340) (undo-tree-id3958 . -5) (undo-tree-id3959 . -5) (undo-tree-id3960 . -5) (undo-tree-id3961 . -5) (undo-tree-id3962 . -5) (undo-tree-id3963 . -5) (undo-tree-id3964 . -5) (undo-tree-id3965 . -5) (undo-tree-id3966 . -5) (undo-tree-id3967 . -5) 1345) nil (26013 27726 22122 0) 0 nil])
([nil nil ((1340 . 1345)) nil (26013 27726 22111 0) 0 nil])
([nil nil ((1345 . 1349)) nil (26013 27726 22110 0) 0 nil])
([nil nil ((1340 . 1346)) nil (26013 27726 22109 0) 0 nil])
([nil nil ((#("proj" 0 4 (face font-lock-variable-name-face fontified t)) . -1492) (undo-tree-id3946 . -4) (undo-tree-id3947 . -4) (undo-tree-id3948 . -4) (undo-tree-id3949 . -4) (undo-tree-id3950 . -4) (undo-tree-id3951 . -4) (undo-tree-id3952 . -4) (undo-tree-id3953 . -4) (undo-tree-id3954 . -4) (undo-tree-id3955 . -4) (undo-tree-id3956 . -4) (undo-tree-id3957 . -4) 1496) nil (26013 27726 22107 0) 0 nil])
([nil nil ((#("view_" 0 5 (face font-lock-variable-name-face fontified t)) . -1487) (undo-tree-id3932 . -5) (undo-tree-id3933 . -5) (undo-tree-id3934 . -5) (undo-tree-id3935 . -5) (undo-tree-id3936 . -5) (undo-tree-id3937 . -5) (undo-tree-id3938 . -5) (undo-tree-id3939 . -5) (undo-tree-id3940 . -5) (undo-tree-id3941 . -5) (undo-tree-id3942 . -5) (undo-tree-id3943 . -5) (undo-tree-id3944 . -5) (undo-tree-id3945 . -5) 1492) nil (26013 27726 22093 0) 0 nil])
([nil nil ((1487 . 1488)) nil (26013 27726 22078 0) 0 nil])
([nil nil ((1487 . 1502) (#("t" 0 1 (fontified nil)) . 1487) (1487 . 1488) (#("model_transform" 0 15 (fontified nil)) . -1487) (1487 . 1502) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1487) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) 1488) nil (26013 27726 22074 0) 0 nil])
([nil nil ((#("proj" 0 4 (fontified t)) . -1642) (undo-tree-id4109 . -4) (undo-tree-id4110 . -4) (undo-tree-id4111 . -4) (undo-tree-id4112 . -4) (undo-tree-id4113 . -4) (undo-tree-id4114 . -4) (undo-tree-id4115 . -4) 1646 (t 26013 27726 39566 306000)) nil (26013 27743 674043 0) 0 nil])
([nil nil ((#("view_" 0 5 (fontified t)) . -1637) (undo-tree-id4097 . -5) (undo-tree-id4098 . -5) (undo-tree-id4099 . -5) (undo-tree-id4100 . -5) (undo-tree-id4101 . -5) (undo-tree-id4102 . -5) (undo-tree-id4103 . -5) (undo-tree-id4104 . -5) (undo-tree-id4105 . -5) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) 1642) nil (26013 27743 674034 0) 0 nil])
([nil nil ((1637 . 1638)) nil (26013 27743 674021 0) 0 nil])
([nil nil ((1637 . 1652) (#("m" 0 1 (fontified nil)) . 1637) (1637 . 1638) (#("model_transform" 0 15 (fontified nil)) . -1637) (1637 . 1652) (#("m" 0 1 (fontified t)) . -1637) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) 1638) nil (26013 27743 674019 0) 0 nil])
([nil nil ((#("camera" 0 6 (fontified t)) . -1655) (undo-tree-id4080 . -6) (undo-tree-id4081 . -6) (undo-tree-id4082 . -6) (undo-tree-id4083 . -6) (undo-tree-id4084 . -6) (undo-tree-id4085 . -6) (undo-tree-id4086 . -6) (undo-tree-id4087 . -6) (undo-tree-id4088 . -6) (undo-tree-id4089 . -6) (undo-tree-id4090 . -6) (undo-tree-id4091 . -6) 1661) nil (26013 27743 674011 0) 0 nil])
([nil nil ((1655 . 1656)) nil (26013 27743 673994 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1655) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) 1656) nil (26013 27743 673993 0) 0 nil])
([nil nil ((1655 . 1656)) nil (26013 27743 673988 0) 0 nil])
([nil nil ((1655 . 1664) (#("t" 0 1 (fontified nil)) . 1655) (1655 . 1656) (#("transform" 0 9 (fontified nil)) . -1655) (1655 . 1664) (#("t" 0 1 (fontified t)) . -1655) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) 1656) nil (26013 27743 673986 0) 0 nil])
([nil nil ((#("matrix" 0 6 (fontified t)) . -1687) (undo-tree-id4064 . -6) (undo-tree-id4065 . -6) (undo-tree-id4066 . -6) (undo-tree-id4067 . -6) (undo-tree-id4068 . -6) (undo-tree-id4069 . -6) (undo-tree-id4070 . -6) 1693) nil (26013 27743 673978 0) 0 nil])
([nil nil ((#("projection_" 0 11 (fontified t)) . -1676) (undo-tree-id4052 . -11) (undo-tree-id4053 . -11) (undo-tree-id4054 . -11) (undo-tree-id4055 . -11) (undo-tree-id4056 . -11) (undo-tree-id4057 . -11) (undo-tree-id4058 . -11) (undo-tree-id4059 . -11) (undo-tree-id4060 . -11) (undo-tree-id4061 . -11) (undo-tree-id4062 . -11) (undo-tree-id4063 . -11) 1687) nil (26013 27743 673969 0) 0 nil])
([nil nil ((#("view_" 0 5 (fontified t)) . -1671) (undo-tree-id4038 . -5) (undo-tree-id4039 . -5) (undo-tree-id4040 . -5) (undo-tree-id4041 . -5) (undo-tree-id4042 . -5) (undo-tree-id4043 . -5) (undo-tree-id4044 . -5) (undo-tree-id4045 . -5) (undo-tree-id4046 . -5) (undo-tree-id4047 . -5) (undo-tree-id4048 . -5) (undo-tree-id4049 . -5) (undo-tree-id4050 . -5) (undo-tree-id4051 . -5) 1676) nil (26013 27743 673956 0) 0 nil])
([nil nil ((1671 . 1672)) nil (26013 27743 673941 0) 0 nil])
([nil nil ((1665 . 1687) (#("build_t" 0 7 (fontified nil)) . 1665) (1665 . 1672) (#("build_transform_matrix" 0 22 (fontified nil)) . -1665) (1665 . 1687) (#("build_t" 0 7 (fontified t)) . -1665) (undo-tree-id4018 . -7) (undo-tree-id4019 . -6) (undo-tree-id4020 . -6) (undo-tree-id4021 . -6) (undo-tree-id4022 . -6) (undo-tree-id4023 . -6) (undo-tree-id4024 . -6) (undo-tree-id4025 . -6) (undo-tree-id4026 . -6) (undo-tree-id4027 . -6) (undo-tree-id4028 . -6) (undo-tree-id4029 . -6) (undo-tree-id4030 . -6) (undo-tree-id4031 . -6) (undo-tree-id4032 . -6) (undo-tree-id4033 . -7) (undo-tree-id4034 . -6) (undo-tree-id4035 . -7) (undo-tree-id4036 . -7) (undo-tree-id4037 . -7) 1672) nil (26013 27743 673937 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 63 . 64) (nil fontified nil 63 . 64) (nil fontified nil 54 . 63) (nil fontified nil 52 . 54) (nil fontified nil 48 . 52) (nil fontified nil 46 . 48) (nil fontified nil 42 . 46) (nil fontified nil 41 . 42) (nil fontified nil 38 . 41) (38 . 64) (t 26013 27743 690966 570000)) nil (26013 27760 876784 0) 0 nil])
([nil nil ((#("camera" 0 6 (face font-lock-function-name-face fontified t)) . -1749) (undo-tree-id4181 . -6) (undo-tree-id4182 . -6) (undo-tree-id4183 . -6) (undo-tree-id4184 . -6) (undo-tree-id4185 . -6) (undo-tree-id4186 . -6) (undo-tree-id4187 . -6) (undo-tree-id4188 . -6) (undo-tree-id4189 . -6) (undo-tree-id4190 . -6) 1755 (t 26013 27760 893879 358000)) nil (26013 27777 186560 0) 0 nil])
([nil nil ((1749 . 1754)) nil (26013 27777 186549 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-function-name-face fontified t)) . -1753) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) 1754) nil (26013 27777 186548 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1749) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1750) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1751) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1752) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) 1753) nil (26013 27777 186538 0) 0 nil])
([nil nil ((1749 . 1764)) nil (26013 27777 186468 0) 0 nil])
([nil nil ((#("buffer" 0 6 (face font-lock-variable-name-face fontified t)) . -1839) (undo-tree-id4231 . -6) (undo-tree-id4232 . -6) (undo-tree-id4233 . -6) (undo-tree-id4234 . -6) (undo-tree-id4235 . -6) (undo-tree-id4236 . -6) (undo-tree-id4237 . -6) (undo-tree-id4238 . -6) (undo-tree-id4239 . -6) (undo-tree-id4240 . -6) (undo-tree-id4241 . -6) (undo-tree-id4242 . -6) 1845 (t 26013 27777 203836 27000)) nil (26013 27791 216738 0) 0 nil])
([nil nil ((#("camera_" 0 7 (face font-lock-variable-name-face fontified t)) . -1832) (undo-tree-id4217 . -7) (undo-tree-id4218 . -7) (undo-tree-id4219 . -7) (undo-tree-id4220 . -7) (undo-tree-id4221 . -7) (undo-tree-id4222 . -7) (undo-tree-id4223 . -7) (undo-tree-id4224 . -7) (undo-tree-id4225 . -7) (undo-tree-id4226 . -7) (undo-tree-id4227 . -7) (undo-tree-id4228 . -7) (undo-tree-id4229 . -7) (undo-tree-id4230 . -7) 1839) nil (26013 27791 216722 0) 0 nil])
([nil nil ((1832 . 1848)) nil (26013 27791 216707 0) 0 nil])
([nil nil ((#("buffer" 0 6 (fontified t)) . -2153) (undo-tree-id4209 . -6) (undo-tree-id4210 . -6) (undo-tree-id4211 . -6) (undo-tree-id4212 . -6) (undo-tree-id4213 . -6) (undo-tree-id4214 . -6) (undo-tree-id4215 . -6) (undo-tree-id4216 . -6) 2159) nil (26013 27791 216705 0) 0 nil])
([nil nil ((#("camera_" 0 7 (fontified t)) . -2146) (undo-tree-id4199 . -7) (undo-tree-id4200 . -7) (undo-tree-id4201 . -7) (undo-tree-id4202 . -7) (undo-tree-id4203 . -7) (undo-tree-id4204 . -7) (undo-tree-id4205 . -7) (undo-tree-id4206 . -7) (undo-tree-id4207 . -7) (undo-tree-id4208 . -7) 2153) nil (26013 27791 216696 0) 0 nil])
([nil nil ((2146 . 2148)) nil (26013 27791 216684 0) 0 nil])
([nil nil ((2146 . 2162) (#("tr" 0 2 (fontified nil)) . 2146) (2146 . 2148) (#("transform_buffer" 0 16 (fontified nil)) . -2146) (2146 . 2162) (#("tr" 0 2 (fontified t)) . -2146) (undo-tree-id4191 . -2) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -2) (undo-tree-id4195 . -2) (undo-tree-id4196 . -2) (undo-tree-id4197 . -2) (undo-tree-id4198 . -2) 2148) nil (26013 27791 216679 0) 0 nil])
([nil nil ((#("proj" 0 4 (face font-lock-function-name-face fontified t)) . -1610) (undo-tree-id4282 . -4) (undo-tree-id4283 . -4) (undo-tree-id4284 . -4) (undo-tree-id4285 . -4) (undo-tree-id4286 . -4) (undo-tree-id4287 . -4) (undo-tree-id4288 . -4) (undo-tree-id4289 . -4) (undo-tree-id4290 . -4) (undo-tree-id4291 . -4) (undo-tree-id4292 . -4) (undo-tree-id4293 . -4) (undo-tree-id4294 . -4) (undo-tree-id4295 . -4) 1614 (t 26013 27791 234152 739000)) nil (26013 28010 912040 0) 0 nil])
([nil nil ((#("view_" 0 5 (face font-lock-function-name-face fontified t)) . -1605) (undo-tree-id4266 . -5) (undo-tree-id4267 . -5) (undo-tree-id4268 . -5) (undo-tree-id4269 . -5) (undo-tree-id4270 . -5) (undo-tree-id4271 . -5) (undo-tree-id4272 . -5) (undo-tree-id4273 . -5) (undo-tree-id4274 . -5) (undo-tree-id4275 . -5) (undo-tree-id4276 . -5) (undo-tree-id4277 . -5) (undo-tree-id4278 . -5) (undo-tree-id4279 . -5) (undo-tree-id4280 . -5) (undo-tree-id4281 . -5) 1610) nil (26013 28010 912025 0) 0 nil])
([nil nil ((1605 . 1614)) nil (26013 28010 912007 0) 0 nil])
([nil nil ((1605 . 1608)) nil (26013 28010 912006 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1605) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (#("m" 0 1 (fontified t)) . -1606) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (#("o" 0 1 (fontified t)) . -1607) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) 1608) nil (26013 28010 912003 0) 0 nil])
([nil nil ((1605 . 1611)) nil (26013 28010 911966 0) 0 nil])
([nil nil ((1643 . 1644) (t 26013 28010 929855 88000)) nil (26013 28076 952925 0) 0 nil])
([nil nil ((2179 . 2181) (t 26013 28076 970215 874000)) nil (26014 13472 895435 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3226 . 3227) (nil fontified nil 3226 . 3227) (nil fontified nil 3225 . 3226) (nil fontified nil 3224 . 3225) (nil fontified nil 3223 . 3224) (nil fontified nil 3215 . 3223) (nil fontified nil 3213 . 3215) (nil fontified nil 3212 . 3213) (nil fontified nil 3190 . 3212) (nil fontified nil 3189 . 3190) (nil fontified nil 3185 . 3189) (nil fontified nil 3183 . 3185) (nil fontified nil 3178 . 3183) (nil fontified nil 3172 . 3178) (nil fontified nil 3166 . 3172) (nil fontified nil 3164 . 3166) (nil fontified nil 3163 . 3164) (nil fontified nil 3150 . 3163) (nil fontified nil 3149 . 3150) (nil fontified nil 3133 . 3149) (nil fontified nil 3131 . 3133) (nil fontified nil 3130 . 3131) (nil fontified nil 3129 . 3130) (nil fontified nil 3111 . 3129) (nil fontified nil 3095 . 3111) (nil fontified nil 3093 . 3095) (nil fontified nil 3085 . 3093) (nil fontified nil 3065 . 3085) (nil fontified nil 3060 . 3065) (nil fontified nil 3053 . 3060) (nil fontified nil 3033 . 3053) (nil fontified nil 3032 . 3033) (nil fontified nil 3031 . 3032) (nil fontified nil 3030 . 3031) (nil fontified nil 3016 . 3030) (nil fontified nil 3014 . 3016) (nil fontified nil 3010 . 3014) (nil fontified nil 2993 . 3010) (nil fontified nil 2992 . 2993) (nil fontified nil 2991 . 2992) (nil fontified nil 2989 . 2991) (nil fontified nil 2982 . 2989) (nil fontified nil 2970 . 2982) (nil fontified nil 2968 . 2970) (nil fontified nil 2941 . 2968) (nil fontified nil 2940 . 2941) (nil fontified nil 2938 . 2940) (nil fontified nil 2932 . 2938) (nil fontified nil 2920 . 2932) (nil fontified nil 2919 . 2920) (nil fontified nil 2918 . 2919) (nil fontified nil 2917 . 2918) (nil fontified nil 2898 . 2917) (nil fontified nil 2896 . 2898) (nil fontified nil 2892 . 2896) (nil fontified nil 2891 . 2892) (nil fontified nil 2890 . 2891) (nil fontified nil 2876 . 2890) (nil fontified nil 2873 . 2876) (nil fontified nil 2863 . 2873) (nil fontified nil 2852 . 2863) (nil fontified nil 2843 . 2852) (nil fontified nil 2842 . 2843) (nil fontified nil 2839 . 2842) (nil fontified nil 2831 . 2839) (nil fontified nil 2830 . 2831) (nil fontified nil 2828 . 2830) (nil fontified nil 2827 . 2828) (nil fontified nil 2826 . 2827) (nil fontified nil 2818 . 2826) (nil fontified nil 2816 . 2818) (nil fontified nil 2815 . 2816) (nil fontified nil 2786 . 2815) (nil fontified nil 2785 . 2786) (nil fontified nil 2781 . 2785) (nil fontified nil 2779 . 2781) (nil fontified nil 2774 . 2779) (nil fontified nil 2762 . 2774) (nil fontified nil 2760 . 2762) (nil fontified nil 2759 . 2760) (nil fontified nil 2746 . 2759) (nil fontified nil 2745 . 2746) (nil fontified nil 2727 . 2745) (nil fontified nil 2723 . 2727) (nil fontified nil 2721 . 2723) (nil fontified nil 2716 . 2721) (nil fontified nil 2694 . 2716) (nil fontified nil 2693 . 2694) (nil fontified nil 2673 . 2693) (nil fontified nil 2671 . 2673) (nil fontified nil 2667 . 2671) (nil fontified nil 2665 . 2667) (nil fontified nil 2649 . 2665) (nil fontified nil 2629 . 2649) (nil fontified nil 2623 . 2629) (nil fontified nil 2618 . 2623) (nil fontified nil 2616 . 2618) (nil fontified nil 2598 . 2616) (nil fontified nil 2572 . 2598) (nil fontified nil 2565 . 2572) (nil fontified nil 2563 . 2565) (nil fontified nil 2546 . 2563) (nil fontified nil 2544 . 2546) (nil fontified nil 2540 . 2544) (nil fontified nil 2538 . 2540) (nil fontified nil 2536 . 2538) (nil fontified nil 2511 . 2536) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2503 . 2509) (nil fontified nil 2501 . 2503) (nil fontified nil 2490 . 2501) (nil fontified nil 2488 . 2490) (nil fontified nil 2484 . 2488) (nil fontified nil 2482 . 2484) (nil fontified nil 2480 . 2482) (nil fontified nil 2460 . 2480) (nil fontified nil 2458 . 2460) (nil fontified nil 2452 . 2458) (nil fontified nil 2450 . 2452) (nil fontified nil 2438 . 2450) (nil fontified nil 2436 . 2438) (nil fontified nil 2432 . 2436) (nil fontified nil 2430 . 2432) (nil fontified nil 2420 . 2430) (nil fontified nil 2400 . 2420) (nil fontified nil 2395 . 2400) (nil fontified nil 2388 . 2395) (nil fontified nil 2367 . 2388) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2345 . 2365) (nil fontified nil 2343 . 2345) (nil fontified nil 2339 . 2343) (nil fontified nil 2323 . 2339) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2318 . 2320) (nil fontified nil 2317 . 2318) (nil fontified nil 2311 . 2317) (nil fontified nil 2299 . 2311) (nil fontified nil 2298 . 2299) (nil fontified nil 2297 . 2298) (nil fontified nil 2296 . 2297) (nil fontified nil 2271 . 2296) (nil fontified nil 2269 . 2271) (nil fontified nil 2265 . 2269) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2229 . 2263) (nil fontified nil 2211 . 2229) (nil fontified nil 2202 . 2211) (nil fontified nil 2201 . 2202) (nil fontified nil 2198 . 2201) (nil fontified nil 2190 . 2198) (nil fontified nil 2189 . 2190) (nil fontified nil 2181 . 2189) (2181 . 3227)) nil (26014 13472 895426 0) 0 nil])
([nil nil ((2181 . 2193)) nil (26014 13472 895381 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -2188) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2189) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2190) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -2191) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -2192) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) 2193) nil (26014 13472 895378 0) 0 nil])
([nil nil ((2188 . 2194)) nil (26014 13472 895343 0) 0 nil])
([nil nil ((2194 . 2209)) nil (26014 13472 895342 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2206) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -2207) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -2208) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) 2209) nil (26014 13472 895338 0) 0 nil])
([nil nil ((2206 . 2210)) nil (26014 13472 895292 0) 0 nil])
([nil nil ((2210 . 2216)) nil (26014 13472 895291 0) 0 nil])
([nil nil ((2215 . 2217)) nil (26014 13472 895289 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2215) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (#("e" 0 1 (fontified t)) . -2216) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) 2217) nil (26014 13472 895288 0) 0 nil])
([nil nil ((2216 . 2223)) nil (26014 13472 895272 0) 0 nil])
([nil nil ((35 . 62) (2220 . 2220) (2220 . 2228) (#("wpg" 0 3 (fontified nil)) . 2220) (2220 . 2223) (#("wrapping (use cgmath::num_traits::ops::wrapping)" 0 48 (fontified nil)) . -2220) (2220 . 2268) (#("wpg" 0 3 (fontified t)) . -2220) (undo-tree-id4426 . -3) (undo-tree-id4427 . -1) (undo-tree-id4428 . -2) (undo-tree-id4429 . -2) (undo-tree-id4430 . -3) (undo-tree-id4431 . -3) 2223) nil (26014 13472 895270 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -2254) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) 2255) nil (26014 13472 895258 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2248) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (#("a" 0 1 (fontified t)) . -2249) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (#("p" 0 1 (fontified t)) . -2250) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (#("p" 0 1 (fontified t)) . -2251) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (#("i" 0 1 (fontified t)) . -2252) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (#("n" 0 1 (fontified t)) . -2253) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) 2254) nil (26014 13472 895247 0) 0 nil])
([nil nil ((2248 . 2249)) nil (26014 13472 895175 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -2248) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) 2249) nil (26014 13472 895174 0) 0 nil])
([nil nil ((2248 . 2250)) nil (26014 13472 895170 0) 0 nil])
([nil nil ((2247 . 2251) (#("wgp" 0 3 (fontified nil)) . 2247) (2247 . 2250) (#("wgpu" 0 4 (fontified nil)) . -2247) (2247 . 2251) (#("wgp" 0 3 (fontified t)) . -2247) (undo-tree-id4327 . -3) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -2) (undo-tree-id4345 . -2) (undo-tree-id4346 . -3) (undo-tree-id4347 . -3) (undo-tree-id4348 . -3) (undo-tree-id4349 . -3) (undo-tree-id4350 . -3) 2250) nil (26014 13472 895167 0) 0 nil])
([nil nil ((2251 . 2255)) nil (26014 13472 895137 0) 0 nil])
([nil nil ((2253 . 2268) (#("BI" 0 2 (fontified nil)) . 2253) (2253 . 2255) (#("BindGroupLayout" 0 15 (fontified nil)) . -2253) (2253 . 2268) (#("BI" 0 2 (face font-lock-type-face fontified t)) . -2253) (undo-tree-id4316 . -2) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -2) (undo-tree-id4322 . -2) (undo-tree-id4323 . -2) (undo-tree-id4324 . -2) (undo-tree-id4325 . -2) (undo-tree-id4326 . -2) 2255) nil (26014 13472 895135 0) 0 nil])
([nil nil ((2268 . 2271)) nil (26014 13472 895119 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 2271) (2271 . 2275) (2270 . 2272)) nil (26014 13472 895118 0) 0 nil])
([nil nil ((#(" let transform_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"Transfrom_bind_group_layout\"),
        });" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 14 (face font-lock-variable-name-face fontified t) 14 32 (face font-lock-variable-name-face fontified t) 32 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 68 (face rust-ampersand-face fontified t) 68 72 (face font-lock-constant-face fontified t) 72 74 (fontified t) 74 99 (face font-lock-type-face fontified t) 99 100 (fontified t) 100 101 (face (rainbow-delimiters-depth-2-face) fontified t) 101 102 (fontified t) 102 114 (fontified t) 114 120 (face font-lock-variable-name-face fontified t) 120 121 (face font-lock-variable-name-face fontified t) 121 123 (fontified t) 123 124 (face rust-ampersand-face fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) fontified t) 125 126 (fontified t) 126 142 (fontified t) 142 146 (face font-lock-constant-face fontified t) 146 148 (fontified t) 148 168 (face font-lock-type-face fontified t) 168 169 (fontified t) 169 170 (face (rainbow-delimiters-depth-4-face) fontified t) 170 191 (fontified t) 191 198 (face font-lock-variable-name-face fontified t) 198 203 (fontified t) 203 223 (fontified t) 223 233 (face font-lock-variable-name-face fontified t) 233 235 (fontified t) 235 239 (face font-lock-constant-face fontified t) 239 241 (fontified t) 241 253 (face font-lock-type-face fontified t) 253 255 (fontified t) 255 261 (face font-lock-type-face fontified t) 261 263 (fontified t) 263 283 (fontified t) 283 285 (face font-lock-variable-name-face fontified t) 285 287 (fontified t) 287 291 (face font-lock-constant-face fontified t) 291 293 (fontified t) 293 304 (face font-lock-type-face fontified t) 304 306 (fontified t) 306 312 (face font-lock-type-face fontified t) 312 313 (fontified t) 313 314 (face (rainbow-delimiters-depth-5-face) fontified t) 314 339 (fontified t) 339 341 (face font-lock-variable-name-face fontified t) 341 343 (fontified t) 343 347 (face font-lock-constant-face fontified t) 347 349 (fontified t) 349 366 (face font-lock-type-face fontified t) 366 368 (fontified t) 368 375 (face font-lock-type-face fontified t) 375 401 (fontified t) 401 419 (face font-lock-variable-name-face fontified t) 419 421 (fontified t) 421 426 (face font-lock-keyword-face fontified t) 426 432 (fontified t) 432 452 (fontified t) 452 468 (face font-lock-variable-name-face fontified t) 468 470 (fontified t) 470 474 (face font-lock-type-face fontified t) 474 476 (fontified t) 476 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-5-face) fontified t) 497 519 (fontified t) 519 524 (face font-lock-variable-name-face fontified t) 524 526 (fontified t) 526 530 (face font-lock-type-face fontified t) 530 548 (fontified t) 548 549 (face (rainbow-delimiters-depth-4-face) fontified t) 549 562 (fontified t) 562 563 (face (rainbow-delimiters-depth-3-face) fontified t) 563 565 (fontified t) 565 577 (fontified t) 577 582 (face font-lock-variable-name-face fontified t) 582 584 (fontified t) 584 588 (face font-lock-type-face fontified t) 588 589 (face (rainbow-delimiters-depth-3-face) fontified t) 589 618 (face font-lock-string-face fontified t) 618 619 (face (rainbow-delimiters-depth-3-face) fontified t) 619 621 (fontified t) 621 629 (fontified t) 629 630 (face (rainbow-delimiters-depth-2-face) fontified t) 630 631 (face (rainbow-delimiters-depth-1-face) fontified t) 631 632 (fontified t)) . 2289) (undo-tree-id4302 . -632) (undo-tree-id4303 . -632) (undo-tree-id4304 . -632) (undo-tree-id4305 . -632) (undo-tree-id4306 . -581) (undo-tree-id4307 . -580) (undo-tree-id4308 . -564) (undo-tree-id4309 . -545) (undo-tree-id4310 . -511) (undo-tree-id4311 . -439) (undo-tree-id4312 . -387) (undo-tree-id4313 . -324) (undo-tree-id4314 . -1) (undo-tree-id4315 . -632)) nil (26014 13472 895116 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2902 . 2903) (nil fontified nil 2902 . 2903) (nil fontified nil 2901 . 2902) (nil fontified nil 2900 . 2901) (nil fontified nil 2892 . 2900) (nil fontified nil 2890 . 2892) (nil fontified nil 2889 . 2890) (nil fontified nil 2860 . 2889) (nil fontified nil 2859 . 2860) (nil fontified nil 2855 . 2859) (nil fontified nil 2853 . 2855) (nil fontified nil 2848 . 2853) (nil fontified nil 2836 . 2848) (nil fontified nil 2834 . 2836) (nil fontified nil 2833 . 2834) (nil fontified nil 2820 . 2833) (nil fontified nil 2819 . 2820) (nil fontified nil 2801 . 2819) (nil fontified nil 2797 . 2801) (nil fontified nil 2795 . 2797) (nil fontified nil 2790 . 2795) (nil fontified nil 2768 . 2790) (nil fontified nil 2767 . 2768) (nil fontified nil 2747 . 2767) (nil fontified nil 2745 . 2747) (nil fontified nil 2741 . 2745) (nil fontified nil 2739 . 2741) (nil fontified nil 2723 . 2739) (nil fontified nil 2703 . 2723) (nil fontified nil 2697 . 2703) (nil fontified nil 2692 . 2697) (nil fontified nil 2690 . 2692) (nil fontified nil 2672 . 2690) (nil fontified nil 2646 . 2672) (nil fontified nil 2639 . 2646) (nil fontified nil 2637 . 2639) (nil fontified nil 2620 . 2637) (nil fontified nil 2618 . 2620) (nil fontified nil 2614 . 2618) (nil fontified nil 2612 . 2614) (nil fontified nil 2610 . 2612) (nil fontified nil 2585 . 2610) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2577 . 2583) (nil fontified nil 2575 . 2577) (nil fontified nil 2564 . 2575) (nil fontified nil 2562 . 2564) (nil fontified nil 2558 . 2562) (nil fontified nil 2556 . 2558) (nil fontified nil 2554 . 2556) (nil fontified nil 2534 . 2554) (nil fontified nil 2532 . 2534) (nil fontified nil 2526 . 2532) (nil fontified nil 2524 . 2526) (nil fontified nil 2512 . 2524) (nil fontified nil 2510 . 2512) (nil fontified nil 2506 . 2510) (nil fontified nil 2504 . 2506) (nil fontified nil 2494 . 2504) (nil fontified nil 2474 . 2494) (nil fontified nil 2469 . 2474) (nil fontified nil 2462 . 2469) (nil fontified nil 2441 . 2462) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2419 . 2439) (nil fontified nil 2417 . 2419) (nil fontified nil 2413 . 2417) (nil fontified nil 2397 . 2413) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2392 . 2394) (nil fontified nil 2391 . 2392) (nil fontified nil 2385 . 2391) (nil fontified nil 2373 . 2385) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2345 . 2370) (nil fontified nil 2343 . 2345) (nil fontified nil 2339 . 2343) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2303 . 2337) (nil fontified nil 2285 . 2303) (nil fontified nil 2276 . 2285) (nil fontified nil 2275 . 2276) (nil fontified nil 2272 . 2275) (nil fontified nil 2271 . 2272) (2271 . 2903)) nil (26014 13472 895094 0) 0 nil])
([nil nil ((2897 . 2901) (#("       " 0 7 (fontified nil)) . -2893) (2903 . 2904)) nil (26014 13472 895067 0) 0 nil])
([nil nil ((2901 . 2903)) nil (26014 13472 895066 0) 0 nil])
([nil nil ((2901 . 2928) (#("tr" 0 2 (fontified nil)) . 2901) (2901 . 2903) (#("transform_bind_group_layout" 0 27 (fontified nil)) . -2901) (2901 . 2928) (#("tr" 0 2 (fontified t)) . -2901) (undo-tree-id4296 . -2) (undo-tree-id4297 . -1) (undo-tree-id4298 . -2) (undo-tree-id4299 . -2) (undo-tree-id4300 . -2) (undo-tree-id4301 . -2) 2903) nil (26014 13472 895061 0) 0 nil])
([nil nil ((#("       " 0 7 (fontified t)) . -2893) (undo-tree-id4578 . -7) (undo-tree-id4579 . -7) (undo-tree-id4580 . -7) (undo-tree-id4581 . -7) (undo-tree-id4582 . -7) (undo-tree-id4583 . -7) (undo-tree-id4584 . -7) (undo-tree-id4585 . -7) (undo-tree-id4586 . -7) (undo-tree-id4587 . -7) (undo-tree-id4588 . -7) (undo-tree-id4589 . -7) (undo-tree-id4590 . -7) (undo-tree-id4591 . -7) (undo-tree-id4592 . -7) (undo-tree-id4593 . -7) (undo-tree-id4594 . -7) (undo-tree-id4595 . -7) (undo-tree-id4596 . -7) (undo-tree-id4597 . -7) (2844 . 2847) (#("    " 0 4 (fontified t)) . -2799) (#("    " 0 4 (fontified t)) . -2788) (#("    " 0 4 (fontified t)) . -2778) (#("    " 0 4 (fontified t)) . -2753) (#("    " 0 4 (fontified t)) . -2734) (#("    " 0 4 (fontified t)) . -2694) (#("    " 0 4 (fontified t)) . -2647) (#("    " 0 4 (fontified t)) . -2589) (#("    " 0 4 (fontified t)) . -2537) (#("    " 0 4 (fontified t)) . -2481) (#("    " 0 4 (fontified t)) . -2453) (#("    " 0 4 (fontified t)) . -2408) (#("    " 0 4 (fontified t)) . -2384) (2272 . 2275) 2207 (t 26014 13472 915026 248000)) nil (26014 13508 722072 0) 0 nil])
([nil nil ((2893 . 2894)) nil (26014 13508 722048 0) 0 nil])
([nil nil ((2894 . 2895)) nil (26014 13508 722047 0) 0 nil])
([nil nil ((2895 . 2896)) nil (26014 13508 722046 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2895) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) 2896) nil (26014 13508 722044 0) 0 nil])
([nil nil ((2895 . 2911)) nil (26014 13508 722032 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-function-name-face fontified t)) . -2909) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -2910) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) 2911) nil (26014 13508 722030 0) 0 nil])
([nil nil ((2909 . 2915)) nil (26014 13508 722014 0) 0 nil])
([nil nil ((2915 . 2936)) nil (26014 13508 722013 0) 0 nil])
([nil nil ((2936 . 2937)) nil (26014 13508 722012 0) 0 nil])
([nil nil ((2935 . 2939) (#("wg" 0 2 (fontified nil)) . 2935) (2935 . 2937) (#("wgpu" 0 4 (fontified nil)) . -2935) (2935 . 2939) (#("wg" 0 2 (fontified t)) . -2935) (undo-tree-id4548 . -2) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -2) (undo-tree-id4552 . -2) (undo-tree-id4553 . -2) (undo-tree-id4554 . -2) (undo-tree-id4555 . -2) 2937) nil (26014 13508 722010 0) 0 nil])
([nil nil ((2939 . 2940)) nil (26014 13508 721999 0) 0 nil])
([nil nil ((2940 . 2945)) nil (26014 13508 721999 0) 0 nil])
([nil nil ((2941 . 2950) (#("Bind" 0 4 (fontified nil)) . 2941) (2941 . 2945) (#("BindGroup" 0 9 (fontified nil)) . -2941) (2941 . 2950) (#("Bind" 0 4 (face font-lock-type-face fontified t)) . -2941) (undo-tree-id4540 . -4) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -2) (undo-tree-id4545 . -2) (undo-tree-id4546 . -4) (undo-tree-id4547 . -4) 2945) nil (26014 13508 721997 0) 0 nil])
([nil nil ((2950 . 2953)) nil (26014 13508 721986 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 2954) (2954 . 2958) (2954 . 2955) (#("    " 0 4 (fontified nil)) . 2953) (2953 . 2957) (2952 . 2954)) nil (26014 13508 721985 0) 0 nil])
([nil nil ((#("
        let transform_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &transform_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: transform_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"Transform_bind_group\"),
        });" 0 1 (fontified t) 1 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 22 (face font-lock-variable-name-face fontified t) 22 33 (face font-lock-variable-name-face fontified t) 33 43 (fontified t) 43 46 (fontified t) 46 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 62 (face rust-ampersand-face fontified t) 62 66 (face font-lock-constant-face fontified t) 66 68 (fontified t) 68 87 (face font-lock-type-face fontified t) 87 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-2-face) fontified t) 89 90 (fontified t) 90 102 (fontified t) 102 108 (face font-lock-variable-name-face fontified t) 108 110 (fontified t) 110 111 (face rust-ampersand-face fontified t) 111 138 (fontified t) 138 140 (fontified t) 140 152 (fontified t) 152 159 (face font-lock-variable-name-face fontified t) 159 161 (fontified t) 161 162 (face rust-ampersand-face fontified t) 162 163 (face (rainbow-delimiters-depth-3-face) fontified t) 163 180 (fontified t) 180 184 (face font-lock-constant-face fontified t) 184 186 (fontified t) 186 200 (face font-lock-type-face fontified t) 200 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-4-face) fontified t) 202 203 (fontified t) 203 223 (fontified t) 223 230 (face font-lock-variable-name-face fontified t) 230 235 (fontified t) 235 255 (fontified t) 255 263 (face font-lock-variable-name-face fontified t) 263 265 (fontified t) 265 281 (fontified t) 281 299 (fontified t) 299 300 (face (rainbow-delimiters-depth-5-face) fontified t) 300 301 (face (rainbow-delimiters-depth-5-face) fontified t) 301 303 (fontified t) 303 319 (fontified t) 319 320 (face (rainbow-delimiters-depth-4-face) fontified t) 320 333 (fontified t) 333 334 (face (rainbow-delimiters-depth-3-face) fontified t) 334 336 (fontified t) 336 342 (fontified t) 342 348 (fontified t) 348 353 (face font-lock-variable-name-face fontified t) 353 355 (fontified t) 355 359 (face font-lock-type-face fontified t) 359 360 (face (rainbow-delimiters-depth-3-face) fontified t) 360 361 (face font-lock-string-face fontified t) 361 382 (face font-lock-string-face fontified t) 382 383 (face (rainbow-delimiters-depth-3-face) fontified t) 383 385 (fontified t) 385 393 (fontified t) 393 394 (face (rainbow-delimiters-depth-2-face) fontified t) 394 395 (face (rainbow-delimiters-depth-1-face) fontified t) 395 396 (fontified t rear-nonsticky t)) . 2957) (undo-tree-id4525 . -396) (undo-tree-id4526 . -396) (undo-tree-id4527 . -396) (undo-tree-id4528 . -396) (undo-tree-id4529 . -353) (undo-tree-id4530 . -351) (undo-tree-id4531 . -335) (undo-tree-id4532 . -248) (undo-tree-id4533 . -247) (undo-tree-id4534 . -214) (undo-tree-id4535 . -174) (undo-tree-id4536 . -173) (undo-tree-id4537 . -148) (undo-tree-id4538 . -8) (undo-tree-id4539 . -396)) nil (26014 13508 721982 0) 0 nil])
([nil nil ((nil fontified nil 3348 . 3349) (nil fontified nil 3347 . 3348) (nil fontified nil 3346 . 3347) (nil fontified nil 3338 . 3346) (nil fontified nil 3336 . 3338) (nil fontified nil 3335 . 3336) (nil fontified nil 3314 . 3335) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3308 . 3312) (nil fontified nil 3306 . 3308) (nil fontified nil 3301 . 3306) (nil fontified nil 3295 . 3301) (nil fontified nil 3289 . 3295) (nil fontified nil 3287 . 3289) (nil fontified nil 3286 . 3287) (nil fontified nil 3273 . 3286) (nil fontified nil 3272 . 3273) (nil fontified nil 3256 . 3272) (nil fontified nil 3254 . 3256) (nil fontified nil 3253 . 3254) (nil fontified nil 3252 . 3253) (nil fontified nil 3234 . 3252) (nil fontified nil 3218 . 3234) (nil fontified nil 3216 . 3218) (nil fontified nil 3208 . 3216) (nil fontified nil 3188 . 3208) (nil fontified nil 3183 . 3188) (nil fontified nil 3176 . 3183) (nil fontified nil 3156 . 3176) (nil fontified nil 3155 . 3156) (nil fontified nil 3154 . 3155) (nil fontified nil 3153 . 3154) (nil fontified nil 3139 . 3153) (nil fontified nil 3137 . 3139) (nil fontified nil 3133 . 3137) (nil fontified nil 3116 . 3133) (nil fontified nil 3115 . 3116) (nil fontified nil 3114 . 3115) (nil fontified nil 3112 . 3114) (nil fontified nil 3105 . 3112) (nil fontified nil 3093 . 3105) (nil fontified nil 3091 . 3093) (nil fontified nil 3064 . 3091) (nil fontified nil 3063 . 3064) (nil fontified nil 3061 . 3063) (nil fontified nil 3055 . 3061) (nil fontified nil 3043 . 3055) (nil fontified nil 3042 . 3043) (nil fontified nil 3041 . 3042) (nil fontified nil 3040 . 3041) (nil fontified nil 3021 . 3040) (nil fontified nil 3019 . 3021) (nil fontified nil 3015 . 3019) (nil fontified nil 3014 . 3015) (nil fontified nil 3013 . 3014) (nil fontified nil 2999 . 3013) (nil fontified nil 2996 . 2999) (nil fontified nil 2986 . 2996) (nil fontified nil 2975 . 2986) (nil fontified nil 2966 . 2975) (nil fontified nil 2965 . 2966) (nil fontified nil 2962 . 2965) (nil fontified nil 2954 . 2962) (nil fontified nil 2953 . 2954) (2953 . 3349)) nil (26014 13508 721962 0) 0 nil])
([nil nil ((3349 . 3354)) nil (26014 13508 721943 0) 0 nil])
([nil nil ((3354 . 3356)) nil (26014 13508 721942 0) 0 nil])
([nil nil ((3354 . 3374) (#("tr" 0 2 (fontified nil)) . 3354) (3354 . 3356) (#("transform_bind_group" 0 20 (fontified nil)) . -3354) (3354 . 3374) (#("tr" 0 2 (fontified t)) . -3354) (undo-tree-id4519 . -2) (undo-tree-id4520 . -1) (undo-tree-id4521 . -2) (undo-tree-id4522 . -2) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) 3356) nil (26014 13508 721938 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3306) (undo-tree-id4674 . -4) (#("    " 0 4 (fontified t)) . -3265) (#("    " 0 4 (fontified t)) . -3254) (#("    " 0 4 (fontified t)) . -3244) (#("    " 0 4 (fontified t)) . -3184) (#("    " 0 4 (fontified t)) . -3156) (#("    " 0 4 (fontified t)) . -3117) (#("    " 0 4 (fontified t)) . -3093) (#("    " 0 4 (fontified t)) . -3047) (#("    " 0 4 (fontified t)) . -2958) 2207 (t 26014 13508 741302 119000)) nil (26014 13524 767810 0) 0 nil])
([nil nil ((2242 . 2246)) nil (26014 13524 767806 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2243) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (#("i" 0 1 (fontified t)) . -2244) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (#("v" 0 1 (fontified t)) . -2245) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) 2246) nil (26014 13524 767803 0) 0 nil])
([nil nil ((2243 . 2248)) nil (26014 13524 767759 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2246) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (#("e" 0 1 (fontified t)) . -2247) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) 2248) nil (26014 13524 767757 0) 0 nil])
([nil nil ((2246 . 2248)) nil (26014 13524 767738 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2247) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) 2248) nil (26014 13524 767737 0) 0 nil])
([nil nil ((2247 . 2252)) nil (26014 13524 767731 0) 0 nil])
([nil nil ((2251 . 2255) (#("w" 0 1 (fontified nil)) . 2251) (2251 . 2252) (#("wgpu" 0 4 (fontified nil)) . -2251) (2251 . 2255) (#("w" 0 1 (fontified t)) . -2251) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) 2252) nil (26014 13524 767729 0) 0 nil])
([nil nil ((2255 . 2261)) nil (26014 13524 767721 0) 0 nil])
([nil nil ((2257 . 2263) (#("Devi" 0 4 (fontified nil)) . 2257) (2257 . 2261) (#("Device" 0 6 (fontified nil)) . -2257) (2257 . 2263) (#("Devi" 0 4 (face font-lock-type-face fontified t)) . -2257) (undo-tree-id4598 . -4) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -2) (undo-tree-id4603 . -2) (undo-tree-id4604 . -3) (undo-tree-id4605 . -3) (undo-tree-id4606 . -4) (undo-tree-id4607 . -4) 2261) nil (26014 13524 767717 0) 0 nil])
([nil nil ((2951 . 2952) (t 26014 13524 787053 266000)) nil (26014 13562 139094 0) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -2951) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) 2952) nil (26014 13562 139092 0) 0 nil])
([nil nil ((2951 . 2952)) nil (26014 13562 139089 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2951) (undo-tree-id4733 . -1) 2952) nil (26014 13562 139088 0) 0 nil])
([nil nil ((2951 . 2952)) nil (26014 13562 139086 0) 0 nil])
([nil nil ((2952 . 2955)) nil (26014 13562 139085 0) 0 nil])
([nil nil ((2951 . 2972) (#("devi" 0 4 (fontified nil)) . 2951) (2951 . 2955) (#("device: &wgpu::Device" 0 21 (fontified nil)) . -2951) (2951 . 2972) (#("devi" 0 4 (fontified t)) . -2951) (undo-tree-id4731 . -4) (undo-tree-id4732 . -4) 2955) nil (26014 13562 139083 0) 0 nil])
([nil nil ((2972 . 2983)) nil (26014 13562 139079 0) 0 nil])
([nil nil ((2983 . 3003)) nil (26014 13562 139078 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3000) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (#("i" 0 1 (fontified t)) . -3001) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (#("t" 0 1 (fontified t)) . -3002) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) 3003) nil (26014 13562 139076 0) 0 nil])
([nil nil ((3000 . 3003)) nil (26014 13562 139063 0) 0 nil])
([nil nil ((3003 . 3007)) nil (26014 13562 139063 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3005) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (#("r" 0 1 (fontified t)) . -3006) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) 3007) nil (26014 13562 139061 0) 0 nil])
([nil nil ((3005 . 3007)) nil (26014 13562 139048 0) 0 nil])
([nil nil ((3005 . 3009) (#("wp" 0 2 (fontified nil)) . 3005) (3005 . 3007) (#("wgpu" 0 4 (fontified nil)) . -3005) (3005 . 3009) (#("wp" 0 2 (fontified t)) . -3005) (undo-tree-id4705 . -2) (undo-tree-id4706 . -1) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) (undo-tree-id4709 . -2) 3007) nil (26014 13562 139046 0) 0 nil])
([nil nil ((3009 . 3015)) nil (26014 13562 139038 0) 0 nil])
([nil nil ((3011 . 3026) (#("BInd" 0 4 (fontified nil)) . 3011) (3011 . 3015) (#("BindGroupLayout" 0 15 (fontified nil)) . -3011) (3011 . 3026) (#("BInd" 0 4 (face font-lock-type-face fontified t)) . -3011) (undo-tree-id4685 . -4) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -2) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -3) (undo-tree-id4694 . -3) (undo-tree-id4695 . -3) (undo-tree-id4696 . -3) (undo-tree-id4697 . -4) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) 3015) nil (26014 13562 139035 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -3151) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) 3152) nil (26014 13562 139010 0) 0 nil])
([nil nil ((3026 . 3032) (t 26014 13562 158889 772000)) nil (26014 13588 854677 0) 0 nil])
([nil nil ((3032 . 3035)) nil (26014 13588 854675 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3034) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) 3035) nil (26014 13588 854674 0) 0 nil])
([nil nil ((3034 . 3040)) nil (26014 13588 854665 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -3037) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (#("u" 0 1 (fontified t)) . -3038) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (#("g" 0 1 (fontified t)) . -3039) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) 3040) nil (26014 13588 854663 0) 0 nil])
([nil nil ((3037 . 3041)) nil (26014 13588 854647 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3040) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) 3041) nil (26014 13588 854646 0) 0 nil])
([nil nil ((3040 . 3047)) nil (26014 13588 854640 0) 0 nil])
([nil nil ((3046 . 3050) (#("w" 0 1 (fontified nil)) . 3046) (3046 . 3047) (#("wgpu" 0 4 (fontified nil)) . -3046) (3046 . 3050) (#("w" 0 1 (fontified t)) . -3046) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) 3047) nil (26014 13588 854638 0) 0 nil])
([nil nil ((3050 . 3056)) nil (26014 13588 854631 0) 0 nil])
([nil nil ((3052 . 3058) (#("Buff" 0 4 (fontified nil)) . 3052) (3052 . 3056) (#("Buffer" 0 6 (fontified nil)) . -3052) (3052 . 3058) (#("Buff" 0 4 (face font-lock-type-face fontified t)) . -3052) (undo-tree-id4736 . -4) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -2) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -3) (undo-tree-id4746 . -3) (undo-tree-id4747 . -4) (undo-tree-id4748 . -4) 3056) nil (26014 13588 854624 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2980) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2981) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -2982) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) 2983 (t 26014 13588 874456 173000)) nil (26014 13599 821775 0) 0 nil])
([nil nil ((2980 . 2983)) nil (26014 13599 821737 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -2998) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) 2999 (t 26014 13599 841640 302000)) nil (26014 13604 411750 0) 0 nil])
([nil nil ((#("wrapping" 0 8 (fontified t)) . -54) (undo-tree-id4901 . -8) (undo-tree-id4902 . -8) (undo-tree-id4903 . -8) (undo-tree-id4904 . -8) (undo-tree-id4905 . -8) (undo-tree-id4906 . -8) (undo-tree-id4907 . -8) (undo-tree-id4908 . -8) (undo-tree-id4909 . -8) (undo-tree-id4910 . -8) (undo-tree-id4911 . -8) (undo-tree-id4912 . -8) 62 (t 26014 13604 432227 381000)) nil (26014 13613 947738 0) 0 nil])
([nil nil ((#("ops::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -49) (undo-tree-id4888 . -5) (undo-tree-id4889 . -5) (undo-tree-id4890 . -5) (undo-tree-id4891 . -5) (undo-tree-id4892 . -5) (undo-tree-id4893 . -5) (undo-tree-id4894 . -5) (undo-tree-id4895 . -5) (undo-tree-id4896 . -5) (undo-tree-id4897 . -5) (undo-tree-id4898 . -5) (undo-tree-id4899 . -5) (undo-tree-id4900 . -5) 54) nil (26014 13613 947723 0) 0 nil])
([nil nil ((#("traits::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -41) (undo-tree-id4873 . -8) (undo-tree-id4874 . -8) (undo-tree-id4875 . -8) (undo-tree-id4876 . -8) (undo-tree-id4877 . -8) (undo-tree-id4878 . -8) (undo-tree-id4879 . -8) (undo-tree-id4880 . -8) (undo-tree-id4881 . -8) (undo-tree-id4882 . -8) (undo-tree-id4883 . -8) (undo-tree-id4884 . -8) (undo-tree-id4885 . -8) (undo-tree-id4886 . -8) (undo-tree-id4887 . -8) 49) nil (26014 13613 947708 0) 0 nil])
([nil nil ((#("num_" 0 4 (fontified t)) . -37) (undo-tree-id4856 . -4) (undo-tree-id4857 . -4) (undo-tree-id4858 . -4) (undo-tree-id4859 . -4) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -4) (undo-tree-id4863 . -4) (undo-tree-id4864 . -4) (undo-tree-id4865 . -4) (undo-tree-id4866 . -4) (undo-tree-id4867 . -4) (undo-tree-id4868 . -4) (undo-tree-id4869 . -4) (undo-tree-id4870 . -4) (undo-tree-id4871 . -4) (undo-tree-id4872 . -4) 41) nil (26014 13613 947691 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -35) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (#(" " 0 1 (fontified t)) . -36) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) 37) nil (26014 13613 947669 0) 0 nil])
([nil nil ((#("Camera" 0 6 (face font-lock-string-face fontified t)) . -1962) (undo-tree-id4939 . -6) (undo-tree-id4940 . -6) (undo-tree-id4941 . -6) (undo-tree-id4942 . -6) (undo-tree-id4943 . -6) (undo-tree-id4944 . -6) (undo-tree-id4945 . -6) (undo-tree-id4946 . -6) 1968 (t 26014 13613 968377 457000)) nil (26014 13634 546477 0) 0 nil])
([nil nil ((1962 . 1968)) nil (26014 13634 546468 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -1967) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) 1968) nil (26014 13634 546466 0) 0 nil])
([nil nil ((1967 . 1971)) nil (26014 13634 546462 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2815) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2816) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) 2817) nil (26014 13634 546460 0) 0 nil])
([nil nil ((2815 . 2817)) nil (26014 13634 546446 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . -2815) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2816) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) 2817) nil (26014 13634 546444 0) 0 nil])
([nil current ((2815 . 2817)) nil (26014 13634 546418 0) 0 nil])
nil
