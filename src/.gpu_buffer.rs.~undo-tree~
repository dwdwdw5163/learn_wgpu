(undo-tree-save-format-version . 1)
"da39a3ee5e6b4b0d3255bfef95601890afd80709"
[nil nil nil nil (26016 200 210397 0) 0 nil]
([nil nil ((1 . 6) (t 26016 136 683938 417000)) nil (26016 200 210397 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-type-face fontified t)) . -5) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 6) nil (26016 200 210395 0) 0 nil])
([nil nil ((5 . 6)) nil (26016 200 210392 0) 0 nil])
([nil nil ((#("Trait" 0 5 (face font-lock-type-face fontified t)) . 1) (undo-tree-id117 . -1) (undo-tree-id118 . -2) (undo-tree-id119 . -3) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5)) nil (26016 200 210390 0) 0 nil])
([nil nil ((1 . 4)) nil (26016 200 210380 0) 0 nil])
([nil nil ((1 . 3)) nil (26016 200 210379 0) 0 nil])
([nil nil ((6 . 13)) nil (26016 200 210378 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -8) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -9) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -10) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -11) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(" " 0 1 (fontified t)) . -12) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 13) nil (26016 200 210373 0) 0 nil])
([nil nil ((8 . 9)) nil (26016 200 210285 0) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-type-face fontified t)) . -7) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -8) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 9) nil (26016 200 210282 0) 0 nil])
([nil nil ((7 . 9)) nil (26016 200 210252 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13 27 nil nil nil t #s(yas--exit 34 nil))) #s(yas--exit 34 nil) 34 nil #s(yas--field 1 13 27 nil nil nil t #s(yas--exit 34 nil)) nil nil)) (7 . 22) (#("trait $1 {
    $0
}" 0 19 (fontified nil)) . 7) (7 . 26) (#("tr" 0 2 (fontified nil)) . 7) (7 . 9) (#("trait" 0 5 (fontified nil)) . -7) (7 . 12) (#("tr" 0 2 (fontified t)) . -7) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -2) 9) nil (26016 200 210250 0) 0 nil])
([nil nil ((13 . 21)) nil (26016 200 210216 0) 0 nil])
([nil nil ((21 . 27)) nil (26016 200 210214 0) 0 nil])
([nil nil ((36 . 37) 27) nil (26016 200 210210 0) 0 nil])
([nil nil ((apply yas--snippet-revive 7 37 #s(yas--snippet nil (#s(yas--field 1 13 27 nil nil nil t #s(yas--exit 34 nil))) #s(yas--exit 34 nil) 34 nil #s(yas--field 1 13 27 nil nil nil t #s(yas--exit 34 nil)) nil nil))) nil (26016 1259 341229 0) 0 nil])
([nil nil ((1 . 2) (t 26016 200 214876 804000)) nil (26016 1259 341227 0) 0 nil])
([nil nil ((2 . 9)) nil (26016 1259 341226 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12 29 nil nil nil t #s(yas--exit 36 nil))) #s(yas--exit 36 nil) 35 nil #s(yas--field 1 12 29 nil nil nil t #s(yas--exit 36 nil)) nil nil)) (6 . 21) (#("trait $1 {
    $0
}" 0 19 (fontified nil)) . 6) (6 . 25) (#("tra" 0 3 (fontified nil)) . 6) (6 . 9) (#("trait" 0 5 (fontified nil)) . -6) (6 . 11) (#("tra" 0 3 (fontified t)) . -6) (undo-tree-id164 . -3) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) 9) nil (26016 1259 341224 0) 0 nil])
([nil nil ((12 . 13)) nil (26016 1259 341210 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -12) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 13) nil (26016 1259 341209 0) 0 nil])
([nil nil ((12 . 13)) nil (26016 1259 341203 0) 0 nil])
([nil nil ((13 . 16)) nil (26016 1259 341202 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-type-face fontified t)) . -15) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 16) nil (26016 1259 341201 0) 0 nil])
([nil nil ((15 . 22)) nil (26016 1259 341194 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-type-face fontified t)) . -19) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -20) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -21) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 22) nil (26016 1259 341191 0) 0 nil])
([nil nil ((19 . 29)) nil (26016 1259 341157 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6 38 #s(yas--snippet nil (#s(yas--field 1 12 29 nil nil nil t #s(yas--exit 36 nil))) #s(yas--exit 36 nil) 35 nil #s(yas--field 1 12 29 nil nil nil t #s(yas--exit 36 nil)) nil nil))) nil (26016 1259 341153 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-type-face fontified t)) . -16) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 17 (t 26016 1259 344801 198000)) nil (26016 1275 11824 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-type-face fontified t)) . -21) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 22) nil (26016 1275 11816 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-type-face fontified t)) . -55) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 56) nil (26016 1275 11809 0) 0 nil])
([nil nil ((34 . 37) (t 26016 1275 15363 6000)) nil (26016 1367 620777 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -34) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("u" 0 1 (fontified t)) . -35) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -36) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 37) nil (26016 1367 620773 0) 0 nil])
([nil nil ((34 . 43)) nil (26016 1367 620741 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -37) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -38) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -39) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -40) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -41) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -42) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) 43) nil (26016 1367 620734 0) 0 nil])
([nil nil ((37 . 43)) nil (26016 1367 620587 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -41) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -42) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) 43) nil (26016 1367 620586 0) 0 nil])
([nil nil ((41 . 44)) nil (26016 1367 620571 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -42) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -43) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 44) nil (26016 1367 620569 0) 0 nil])
([nil nil ((42 . 47)) nil (26016 1367 620553 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -44) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -45) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -46) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 47) nil (26016 1367 620552 0) 0 nil])
([nil nil ((44 . 47)) nil (26016 1367 620535 0) 0 nil])
([nil nil ((47 . 61)) nil (26016 1367 620534 0) 0 nil])
([nil nil ((60 . 64) (#("w" 0 1 (fontified nil)) . 60) (60 . 61) (#("wgpu" 0 4 (fontified nil)) . -60) (60 . 64) (#("w" 0 1 (fontified t)) . -60) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) 61) nil (26016 1367 620532 0) 0 nil])
([nil nil ((64 . 69)) nil (26016 1367 620525 0) 0 nil])
([nil nil ((66 . 81) (#("Bin" 0 3 (fontified nil)) . 66) (66 . 69) (#("BindGroupLayout" 0 15 (fontified nil)) . -66) (66 . 81) (#("Bin" 0 3 (face font-lock-type-face fontified t)) . -66) (undo-tree-id404 . -3) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) 69) nil (26016 1367 620523 0) 0 nil])
([nil nil ((81 . 84)) nil (26016 1367 620508 0) 0 nil])
([nil nil ((83 . 88)) nil (26016 1367 620507 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -83) (undo-tree-id357 . -1) (undo-tree-id358 . 1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#(" " 0 1 (fontified t)) . -87) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 88) nil (26016 1367 620504 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -82) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -83) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . 1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 84) nil (26016 1367 620443 0) 0 nil])
([nil nil ((82 . 85)) nil (26016 1367 620372 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -84) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) 85) nil (26016 1367 620371 0) 0 nil])
([nil nil ((84 . 85)) nil (26016 1367 620362 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -81) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -82) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -83) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 84) nil (26016 1367 620354 0) 0 nil])
([nil nil ((#("layout" 0 6 (face font-lock-function-name-face fontified t)) . -48) (undo-tree-id693 . -6) (undo-tree-id694 . -6) (undo-tree-id695 . -6) (undo-tree-id696 . -6) (undo-tree-id697 . -6) (undo-tree-id698 . -6) (undo-tree-id699 . -6) (undo-tree-id700 . -6) (undo-tree-id701 . -6) (undo-tree-id702 . -6) (undo-tree-id703 . -6) (undo-tree-id704 . -6) 54 (t 26016 1367 624949 703000)) nil (26016 1457 149953 0) 0 nil])
([nil nil ((#("group_" 0 6 (face font-lock-function-name-face fontified t)) . -42) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -6) (undo-tree-id680 . -6) (undo-tree-id681 . -6) (undo-tree-id682 . -6) (undo-tree-id683 . -6) (undo-tree-id684 . -6) (undo-tree-id685 . -6) (undo-tree-id686 . -6) (undo-tree-id687 . -6) (undo-tree-id688 . -6) (undo-tree-id689 . -6) (undo-tree-id690 . -6) (undo-tree-id691 . -6) (undo-tree-id692 . -6) 48) nil (26016 1457 149934 0) 0 nil])
([nil nil ((#("bind_" 0 5 (face font-lock-function-name-face fontified t)) . -37) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -5) (undo-tree-id642 . -5) (undo-tree-id643 . -5) (undo-tree-id644 . -5) (undo-tree-id645 . -5) (undo-tree-id646 . -5) (undo-tree-id647 . -5) (undo-tree-id648 . -5) (undo-tree-id649 . -5) (undo-tree-id650 . -5) (undo-tree-id651 . -5) (undo-tree-id652 . -5) (undo-tree-id653 . -5) (undo-tree-id654 . -5) (undo-tree-id655 . -5) (undo-tree-id656 . -5) (undo-tree-id657 . -5) (undo-tree-id658 . -5) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -5) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (undo-tree-id671 . -5) 42) nil (26016 1457 149911 0) 0 nil])
([nil nil ((37 . 41)) nil (26016 1457 149861 0) 0 nil])
([nil nil ((96 . 98) (t 26016 1457 154464 270000)) nil (26016 1465 440931 0) 0 nil])
([nil nil ((98 . 100)) nil (26016 1465 440929 0) 0 nil])
([nil nil ((98 . 113) (#("Bi" 0 2 (fontified nil)) . 98) (98 . 100) (#("BindGroupLayout" 0 15 (fontified nil)) . -98) (98 . 113) (#("Bi" 0 2 (face font-lock-type-face fontified t)) . -98) (undo-tree-id705 . -2) (undo-tree-id706 . -1) (undo-tree-id707 . -2) (undo-tree-id708 . -2) 100) nil (26016 1465 440925 0) 0 nil])
([nil nil ((42 . 51) (t 26016 1465 445615 881000)) nil (26016 1591 947313 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -50) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) 51) nil (26016 1591 947312 0) 0 nil])
([nil nil ((50 . 52)) nil (26016 1591 947308 0) 0 nil])
([nil nil ((51 . 55) (#("w" 0 1 (fontified nil)) . 51) (51 . 52) (#("wgpu" 0 4 (fontified nil)) . -51) (51 . 55) (#("w" 0 1 (fontified t)) . -51) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 52) nil (26016 1591 947306 0) 0 nil])
([nil nil ((55 . 61)) nil (26016 1591 947298 0) 0 nil])
([nil nil ((57 . 63) (#("Devi" 0 4 (fontified nil)) . 57) (57 . 61) (#("Device" 0 6 (fontified nil)) . -57) (57 . 63) (#("Devi" 0 4 (face font-lock-type-face fontified t)) . -57) (undo-tree-id709 . -4) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -4) (undo-tree-id717 . -4) 61) nil (26016 1591 947293 0) 0 nil])
([nil nil ((141 . 157) (t 26016 1591 951902 654000)) nil (26016 1646 233866 0) 0 nil])
([nil nil ((157 . 158)) nil (26016 1646 233864 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -157) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) 158) nil (26016 1646 233863 0) 0 nil])
([nil nil ((157 . 160)) nil (26016 1646 233859 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -158) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -159) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) 160) nil (26016 1646 233857 0) 0 nil])
([nil nil ((158 . 162)) nil (26016 1646 233846 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-function-name-face fontified t)) . -158) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -159) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -160) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -161) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) 162) nil (26016 1646 233842 0) 0 nil])
([nil nil ((158 . 166)) nil (26016 1646 233793 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -165) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) 166) nil (26016 1646 233792 0) 0 nil])
([nil nil ((165 . 167)) nil (26016 1646 233786 0) 0 nil])
([nil nil ((167 . 169)) nil (26016 1646 233785 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified t)) . -166) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -167) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -168) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) 169) nil (26016 1646 233783 0) 0 nil])
([nil nil ((166 . 174)) nil (26016 1646 233758 0) 0 nil])
([nil nil ((173 . 183)) nil (26016 1646 233757 0) 0 nil])
([nil nil ((183 . 190)) nil (26016 1646 233756 0) 0 nil])
([nil nil ((189 . 193) (#("w" 0 1 (fontified nil)) . 189) (189 . 190) (#("wgpu" 0 4 (fontified nil)) . -189) (189 . 193) (#("w" 0 1 (fontified t)) . -189) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) 190) nil (26016 1646 233754 0) 0 nil])
([nil nil ((193 . 197)) nil (26016 1646 233747 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -195) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#("e" 0 1 (fontified t)) . -196) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) 197) nil (26016 1646 233745 0) 0 nil])
([nil nil ((195 . 199)) nil (26016 1646 233724 0) 0 nil])
([nil nil ((195 . 201) (#("Devi" 0 4 (fontified nil)) . 195) (195 . 199) (#("Device" 0 6 (fontified nil)) . -195) (195 . 201) (#("Devi" 0 4 (face font-lock-type-face fontified t)) . -195) (undo-tree-id766 . -4) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -4) (undo-tree-id774 . -4) 199) nil (26016 1646 233722 0) 0 nil])
([nil nil ((202 . 208)) nil (26016 1646 233711 0) 0 nil])
([nil nil ((207 . 208)) nil (26016 1646 233710 0) 0 nil])
([nil nil ((207 . 211) (#("w" 0 1 (fontified nil)) . 207) (207 . 208) (#("wgpu" 0 4 (fontified nil)) . -207) (207 . 211) (#("w" 0 1 (fontified t)) . -207) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 208) nil (26016 1646 233709 0) 0 nil])
([nil nil ((211 . 216)) nil (26016 1646 233701 0) 0 nil])
([nil nil ((213 . 219) (#("Buf" 0 3 (fontified nil)) . 213) (213 . 216) (#("Buffer" 0 6 (fontified nil)) . -213) (213 . 219) (#("Buf" 0 3 (face font-lock-type-face fontified t)) . -213) (undo-tree-id750 . -3) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -3) (undo-tree-id760 . -3) 216) nil (26016 1646 233699 0) 0 nil])
([nil nil ((219 . 222)) nil (26016 1646 233686 0) 0 nil])
([nil nil ((221 . 225) (#("w" 0 1 (fontified nil)) . 221) (221 . 222) (#("wgpu" 0 4 (fontified nil)) . -221) (221 . 225) (#("w" 0 1 (fontified t)) . -221) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) 222) nil (26016 1646 233685 0) 0 nil])
([nil nil ((225 . 231)) nil (26016 1646 233677 0) 0 nil])
([nil nil ((227 . 236) (#("Bind" 0 4 (fontified nil)) . 227) (227 . 231) (#("BindGroup" 0 9 (fontified nil)) . -227) (227 . 236) (#("Bind" 0 4 (face font-lock-type-face fontified t)) . -227) (undo-tree-id735 . -4) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -4) (undo-tree-id744 . -4) 231) nil (26016 1646 233675 0) 0 nil])
([nil nil ((237 . 238)) nil (26016 1646 233662 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -237) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 238) nil (26016 1646 233660 0) 0 nil])
([nil nil ((237 . 238)) nil (26016 1646 233640 0) 0 nil])
([nil nil ((241 . 242) (t 26016 1646 238987 144000)) nil (26016 2001 818315 0) 0 nil])
([nil nil ((242 . 249)) nil (26016 2001 818314 0) 0 nil])
([nil nil ((247 . 260) (#("Un" 0 2 (fontified nil)) . 247) (247 . 249) (#("UniformBuffer" 0 13 (fontified nil)) . -247) (247 . 260) (#("Un" 0 2 (face font-lock-type-face fontified t)) . -247) (undo-tree-id910 . -2) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) 249) nil (26016 2001 818312 0) 0 nil])
([nil nil ((260 . 264)) nil (26016 2001 818304 0) 0 nil])
([nil nil ((264 . 266)) nil (26016 2001 818303 0) 0 nil])
([nil nil ((246 . 248)) nil (26016 2001 818302 0) 0 nil])
([nil nil ((247 . 248)) nil (26016 2001 818301 0) 0 nil])
([nil nil ((248 . 255)) nil (26016 2001 818300 0) 0 nil])
([nil nil ((255 . 257)) nil (26016 2001 818299 0) 0 nil])
([nil nil ((255 . 270) (#("Bi" 0 2 (fontified nil)) . 255) (255 . 257) (#("BindGroupLayout" 0 15 (fontified nil)) . -255) (255 . 270) (#("Bi" 0 2 (face font-lock-type-face fontified t)) . -255) (undo-tree-id898 . -2) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -2) (undo-tree-id906 . -2) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) 257) nil (26016 2001 818297 0) 0 nil])
([nil nil ((291 . 294)) nil (26016 2001 818283 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -292) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -293) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) 294) nil (26016 2001 818281 0) 0 nil])
([nil nil ((292 . 294)) nil (26016 2001 818260 0) 0 nil])
([nil nil ((294 . 295)) nil (26016 2001 818256 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 294) (294 . 298) (293 . 295) (t 26016 2001 824158 933000)) nil (26016 2005 178539 0) 0 nil])
([nil nil ((#("impl<T: impl BindGroupLayout> UniformBuffer for T {

}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t) 30 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 49 (face font-lock-type-face fontified t) 49 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 55 (fontified t)) . 242) (undo-tree-id945 . -55) (undo-tree-id946 . -49) (undo-tree-id947 . -52) (undo-tree-id948 . -52) (undo-tree-id949 . -52) (undo-tree-id950 . -52) (undo-tree-id951 . -52) (undo-tree-id952 . -52) (undo-tree-id953 . -52) (undo-tree-id954 . -52) (undo-tree-id955 . -52) (undo-tree-id956 . -52) (undo-tree-id957 . -52) (undo-tree-id958 . -26) (undo-tree-id959 . -26) (undo-tree-id960 . -26) (undo-tree-id961 . -26) (undo-tree-id962 . -26) (undo-tree-id963 . -26) (undo-tree-id964 . -26) (undo-tree-id965 . -26) (undo-tree-id966 . -26) (undo-tree-id967 . -26) (undo-tree-id968 . -26) (undo-tree-id969 . -26) (undo-tree-id970 . -26) (undo-tree-id971 . -26) (undo-tree-id972 . -26) (undo-tree-id973 . -26) (undo-tree-id974 . -26) (undo-tree-id975 . -26) (undo-tree-id976 . -26) (undo-tree-id977 . -55) (undo-tree-id978 . -55) (undo-tree-id979 . -55) (undo-tree-id980 . -54) (undo-tree-id981 . -52) (undo-tree-id982 . -55) (t 26016 2005 184086 73000)) nil (26016 2040 279687 0) 0 nil])
([nil nil ((242 . 244)) nil (26016 2040 279647 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -242) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("m" 0 1 (fontified t)) . -243) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) 244) nil (26016 2040 279646 0) 0 nil])
([nil nil ((242 . 247)) nil (26016 2040 279634 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -246) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) 247) nil (26016 2040 279633 0) 0 nil])
([nil nil ((246 . 248)) nil (26016 2040 279626 0) 0 nil])
([nil nil ((247 . 260) (#("U" 0 1 (fontified nil)) . 247) (247 . 248) (#("UniformBuffer" 0 13 (fontified nil)) . -247) (247 . 260) (#("U" 0 1 (face font-lock-type-face fontified t)) . -247) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) 248) nil (26016 2040 279624 0) 0 nil])
([nil nil ((260 . 261)) nil (26016 2040 279617 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -260) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) 261) nil (26016 2040 279615 0) 0 nil])
([nil nil ((260 . 263)) nil (26016 2040 279598 0) 0 nil])
([nil nil ((263 . 264) 262) nil (26016 2040 279593 0) 0 nil])
([nil nil ((#("impl UniformBuffer {}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 18 (face font-lock-type-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t)) . 242) (undo-tree-id984 . -18) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -5) (undo-tree-id991 . -5) (undo-tree-id992 . -5) (undo-tree-id993 . -5) (undo-tree-id994 . -18) (undo-tree-id995 . -18) (undo-tree-id996 . -18) (undo-tree-id997 . -18) (undo-tree-id998 . -18) (undo-tree-id999 . -18) (undo-tree-id1000 . -20) (undo-tree-id1001 . -20) (undo-tree-id1002 . -20) (undo-tree-id1003 . -20) (undo-tree-id1004 . -20) (undo-tree-id1005 . -20) (undo-tree-id1006 . -20) (undo-tree-id1007 . -20) (undo-tree-id1008 . -20) (undo-tree-id1009 . -20) (undo-tree-id1010 . -20) (undo-tree-id1011 . -20) (undo-tree-id1012 . -20) (undo-tree-id1013 . -20) (undo-tree-id1014 . -20) (undo-tree-id1015 . -20) (undo-tree-id1016 . -5) (undo-tree-id1017 . -5) (undo-tree-id1018 . -5) (undo-tree-id1019 . -18) (undo-tree-id1020 . -18) (undo-tree-id1021 . -18) (undo-tree-id1022 . -18) (undo-tree-id1023 . -18) (undo-tree-id1024 . -18) (undo-tree-id1025 . -18) (undo-tree-id1026 . -18) (undo-tree-id1027 . -18) (undo-tree-id1028 . -18) (undo-tree-id1029 . -18) (undo-tree-id1030 . -21) (t 26016 2040 285281 531000)) nil (26016 2050 678952 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 242) (undo-tree-id983 . -1)) nil (26016 2050 678899 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -237) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) 238 (t 26016 2050 684317 969000)) nil (26016 2592 269789 0) 0 nil])
([nil nil ((237 . 240)) nil (26016 2592 269779 0) 0 nil])
([nil nil ((241 . 245) (#("        " 0 8 (fontified nil)) . 240) (240 . 248) (#("    " 0 4 (fontified nil)) . 240) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (239 . 245)) nil (26016 2592 269777 0) 0 nil])
([nil nil ((173 . 182)) nil (26016 2592 269772 0) 0 nil])
([nil nil ((189 . 197) (#(" " 0 1 (fontified nil)) . 188) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (189 . 190)) nil (26016 2592 269770 0) 0 nil])
([nil nil ((218 . 223)) nil (26016 2592 269761 0) 0 nil])
([nil nil ((262 . 270)) nil (26016 2592 269760 0) 0 nil])
([nil nil ((270 . 271)) nil (26016 2592 269759 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -270) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) 271) nil (26016 2592 691399 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 284 . 285) (nil fontified nil 270 . 285) (270 . 285)) nil (26016 2644 185806 0) 0 nil] [nil nil ((#("BindGroupLayout" 0 15 (face font-lock-type-face fontified t)) . -119) (undo-tree-id1145 . -15) (undo-tree-id1146 . -15) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) (undo-tree-id1164 . -2) (undo-tree-id1165 . -2) (undo-tree-id1166 . -2) (undo-tree-id1167 . -2) (undo-tree-id1168 . -2) (undo-tree-id1169 . -2) (undo-tree-id1170 . -2) (undo-tree-id1171 . -2) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -15) (undo-tree-id1183 . -15) (undo-tree-id1184 . -15) (undo-tree-id1185 . -15) (undo-tree-id1186 . -15) (undo-tree-id1187 . -15) (undo-tree-id1188 . -15) (undo-tree-id1189 . -15) (undo-tree-id1190 . -15) (undo-tree-id1191 . -15) (undo-tree-id1192 . -15) (undo-tree-id1193 . -15) (undo-tree-id1194 . -15) (undo-tree-id1195 . -15) 134) ((119 . 134)) (26016 2592 270338 0) 0 nil])
([nil nil ((#("        BindGroupLayout" 0 8 (fontified t) 8 22 (face font-lock-type-face fontified t) 22 23 (face font-lock-type-face rear-nonsticky t fontified t)) . 262) (undo-tree-id1349 . -8) (undo-tree-id1350 . -8) (undo-tree-id1351 . -8) (undo-tree-id1352 . -8) (undo-tree-id1353 . -8) (undo-tree-id1354 . -8) (undo-tree-id1355 . -8) (undo-tree-id1356 . -8) (undo-tree-id1357 . -8) (undo-tree-id1358 . -8) (undo-tree-id1359 . -8) (undo-tree-id1360 . -8) (undo-tree-id1361 . -8) (undo-tree-id1362 . -23) (undo-tree-id1363 . -23) (undo-tree-id1364 . -23) (undo-tree-id1365 . -23) (undo-tree-id1366 . -23) (undo-tree-id1367 . -23)) nil (26016 2644 185804 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -117) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (#(" " 0 1 (fontified t)) . -118) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) 119) ((117 . 119)) (26016 2592 269694 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1483 . 1484) (nil fontified nil 1483 . 1484) (nil fontified nil 1482 . 1483) (nil fontified nil 1481 . 1482) (nil fontified nil 1475 . 1481) (nil fontified nil 1471 . 1475) (nil fontified nil 1469 . 1471) (nil fontified nil 1464 . 1469) (nil fontified nil 1454 . 1464) (nil fontified nil 1453 . 1454) (nil fontified nil 1452 . 1453) (nil fontified nil 1442 . 1452) (nil fontified nil 1441 . 1442) (nil fontified nil 1440 . 1441) (nil fontified nil 1408 . 1440) (nil fontified nil 1400 . 1408) (nil fontified nil 1383 . 1400) (nil fontified nil 1376 . 1383) (nil fontified nil 1363 . 1376) (nil fontified nil 1362 . 1363) (nil fontified nil 1361 . 1362) (nil fontified nil 1347 . 1361) (nil fontified nil 1345 . 1347) (nil fontified nil 1341 . 1345) (nil fontified nil 1340 . 1341) (nil fontified nil 1339 . 1340) (nil fontified nil 1337 . 1339) (nil fontified nil 1330 . 1337) (nil fontified nil 1297 . 1330) (nil fontified nil 1296 . 1297) (nil fontified nil 1294 . 1296) (nil fontified nil 1288 . 1294) (nil fontified nil 1279 . 1288) (nil fontified nil 1278 . 1279) (nil fontified nil 1277 . 1278) (nil fontified nil 1258 . 1277) (nil fontified nil 1256 . 1258) (nil fontified nil 1252 . 1256) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1223 . 1250) (nil fontified nil 1207 . 1223) (nil fontified nil 1206 . 1207) (nil fontified nil 1203 . 1206) (nil fontified nil 1192 . 1203) (nil fontified nil 1191 . 1192) (nil fontified nil 1190 . 1191) (nil fontified nil 1180 . 1190) (nil fontified nil 1176 . 1180) (nil fontified nil 1174 . 1176) (nil fontified nil 1169 . 1174) (nil fontified nil 1155 . 1169) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1139 . 1153) (nil fontified nil 1135 . 1139) (nil fontified nil 1133 . 1135) (nil fontified nil 1128 . 1133) (nil fontified nil 1110 . 1128) (nil fontified nil 1109 . 1110) (nil fontified nil 1091 . 1109) (nil fontified nil 1087 . 1091) (nil fontified nil 1085 . 1087) (nil fontified nil 1069 . 1085) (nil fontified nil 1047 . 1069) (nil fontified nil 1042 . 1047) (nil fontified nil 1040 . 1042) (nil fontified nil 1022 . 1040) (nil fontified nil 1000 . 1022) (nil fontified nil 993 . 1000) (nil fontified nil 991 . 993) (nil fontified nil 974 . 991) (nil fontified nil 972 . 974) (nil fontified nil 968 . 972) (nil fontified nil 966 . 968) (nil fontified nil 964 . 966) (nil fontified nil 943 . 964) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 935 . 941) (nil fontified nil 933 . 935) (nil fontified nil 922 . 933) (nil fontified nil 920 . 922) (nil fontified nil 916 . 920) (nil fontified nil 914 . 916) (nil fontified nil 912 . 914) (nil fontified nil 894 . 912) (nil fontified nil 886 . 894) (nil fontified nil 884 . 886) (nil fontified nil 872 . 884) (nil fontified nil 870 . 872) (nil fontified nil 866 . 870) (nil fontified nil 863 . 866) (nil fontified nil 857 . 863) (nil fontified nil 855 . 857) (nil fontified nil 843 . 855) (nil fontified nil 841 . 843) (nil fontified nil 837 . 841) (nil fontified nil 835 . 837) (nil fontified nil 825 . 835) (nil fontified nil 804 . 825) (nil fontified nil 797 . 804) (nil fontified nil 780 . 797) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 758 . 778) (nil fontified nil 756 . 758) (nil fontified nil 752 . 756) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 748 . 750) (nil fontified nil 741 . 748) (nil fontified nil 728 . 741) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 701 . 726) (nil fontified nil 699 . 701) (nil fontified nil 695 . 699) (nil fontified nil 694 . 695) (nil fontified nil 693 . 694) (nil fontified nil 651 . 693) (nil fontified nil 628 . 651) (nil fontified nil 627 . 628) (nil fontified nil 624 . 627) (nil fontified nil 617 . 624) (nil fontified nil 616 . 617) (nil fontified nil 611 . 616) (nil fontified nil 610 . 611) (nil fontified nil 600 . 610) (nil fontified nil 592 . 600) (nil fontified nil 590 . 592) (nil fontified nil 578 . 590) (nil fontified nil 576 . 578) (nil fontified nil 572 . 576) (nil fontified nil 569 . 572) (nil fontified nil 562 . 569) (nil fontified nil 560 . 562) (nil fontified nil 548 . 560) (nil fontified nil 546 . 548) (nil fontified nil 542 . 546) (nil fontified nil 540 . 542) (nil fontified nil 535 . 540) (nil fontified nil 521 . 535) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 505 . 519) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil fontified nil 502 . 503) (nil fontified nil 490 . 502) (nil fontified nil 482 . 490) (nil fontified nil 480 . 482) (nil fontified nil 472 . 480) (nil fontified nil 458 . 472) (nil fontified nil 457 . 458) (nil fontified nil 447 . 457) (nil fontified nil 446 . 447) (nil fontified nil 442 . 446) (nil fontified nil 440 . 442) (nil fontified nil 435 . 440) (nil fontified nil 422 . 435) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 400 . 420) (nil fontified nil 398 . 400) (nil fontified nil 394 . 398) (nil fontified nil 392 . 394) (nil fontified nil 388 . 392) (nil fontified nil 387 . 388) (nil fontified nil 378 . 387) (nil fontified nil 377 . 378) (nil fontified nil 349 . 377) (nil fontified nil 337 . 349) (nil fontified nil 336 . 337) (nil fontified nil 333 . 336) (nil fontified nil 329 . 333) (nil fontified nil 268 . 329) (nil fontified nil 265 . 268) (nil fontified nil 262 . 265) (262 . 1484)) nil (26016 2644 185776 0) 0 nil])
nil
([nil nil ((1598 . 1606) (#("    " 0 4 (fontified t)) . 1598) (1581 . 1585) (1565 . 1569) (1497 . 1513) (#("            " 0 12 (fontified t)) . 1497) (1469 . 1485) (#("            " 0 12 (fontified t)) . 1469) (1431 . 1435) (1385 . 1389) (1292 . 1300) (#("    " 0 4 (fontified t)) . 1292) (1283 . 1291) (#("    " 0 4 (fontified t)) . 1283) (1275 . 1279) (1238 . 1254) (#("            " 0 12 (fontified t)) . 1238) (1218 . 1234) (#("            " 0 12 (fontified t)) . 1218) (1201 . 1205) (1178 . 1182) (1114 . 1138) (#("                    " 0 20 (fontified t)) . 1114) (1063 . 1087) (#("                    " 0 20 (fontified t)) . 1063) (undo-tree-id1348 . -4) (1001 . 1025) (#("                    " 0 20 (fontified t)) . 1001) (965 . 969) (874 . 878) (842 . 846) (770 . 786) (#("            " 0 12 (fontified t)) . 770) (699 . 703) (653 . 661) (#("    " 0 4 (fontified t)) . 653) (641 . 649) (#("    " 0 4 (fontified t)) . 641) (635 . 639) (544 . 560) (#("            " 0 12 (fontified t)) . 544) (477 . 493) (#("            " 0 12 (fontified t)) . 477) (436 . 452) (#("            " 0 12 (fontified t)) . 436) (396 . 400) (334 . 342) (#("    " 0 4 (fontified t)) . 334) (262 . 270) (#("   " 0 3 (fontified t)) . 262) 93) nil (26016 2644 185718 0) 0 nil])
([nil nil ((#("    device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });" 0 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-3-face) fontified t) 36 37 (face rust-ampersand-face fontified t) 37 41 (face font-lock-constant-face fontified t) 41 43 (fontified t) 43 68 (face font-lock-type-face fontified t) 68 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-4-face) fontified t) 70 87 (fontified t) 87 94 (face font-lock-variable-name-face fontified t) 94 96 (fontified t) 96 97 (face rust-ampersand-face fontified t) 97 98 (face (rainbow-delimiters-depth-5-face) fontified t) 98 102 (face font-lock-constant-face fontified t) 102 104 (fontified t) 104 124 (face font-lock-type-face fontified t) 124 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-6-face) fontified t) 126 127 (fontified t) 127 147 (fontified t) 147 154 (face font-lock-variable-name-face fontified t) 154 159 (fontified t) 159 179 (fontified t) 179 189 (face font-lock-variable-name-face fontified t) 189 191 (fontified t) 191 195 (face font-lock-constant-face fontified t) 195 197 (fontified t) 197 209 (face font-lock-type-face fontified t) 209 211 (fontified t) 211 217 (face font-lock-type-face fontified t) 217 220 (fontified t) 220 224 (face font-lock-constant-face fontified t) 224 226 (fontified t) 226 238 (face font-lock-type-face fontified t) 238 240 (fontified t) 240 248 (face font-lock-type-face fontified t) 248 250 (fontified t) 250 270 (fontified t) 270 272 (face font-lock-variable-name-face fontified t) 272 274 (fontified t) 274 278 (face font-lock-constant-face fontified t) 278 280 (fontified t) 280 291 (face font-lock-type-face fontified t) 291 293 (fontified t) 293 299 (face font-lock-type-face fontified t) 299 300 (fontified t) 300 301 (face (rainbow-delimiters-depth-7-face) fontified t) 301 326 (fontified t) 326 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 353 (face font-lock-type-face fontified t) 353 355 (fontified t) 355 362 (face font-lock-type-face fontified t) 362 388 (fontified t) 388 406 (face font-lock-variable-name-face fontified t) 406 408 (fontified t) 408 413 (face font-lock-keyword-face fontified t) 413 439 (fontified t) 439 455 (face font-lock-variable-name-face fontified t) 455 457 (fontified t) 457 461 (face font-lock-type-face fontified t) 461 463 (fontified t) 463 483 (fontified t) 483 484 (face (rainbow-delimiters-depth-7-face) fontified t) 484 486 (fontified t) 486 506 (fontified t) 506 511 (face font-lock-variable-name-face fontified t) 511 513 (fontified t) 513 517 (face font-lock-type-face fontified t) 517 535 (fontified t) 535 536 (face (rainbow-delimiters-depth-6-face) fontified t) 536 537 (face (rainbow-delimiters-depth-5-face) fontified t) 537 555 (fontified t) 555 560 (face font-lock-variable-name-face fontified t) 560 562 (fontified t) 562 566 (face font-lock-type-face fontified t) 566 568 (fontified t) 568 580 (fontified t) 580 581 (face (rainbow-delimiters-depth-4-face) fontified t) 581 582 (face (rainbow-delimiters-depth-3-face) fontified t) 582 583 (fontified t)) . 699) (undo-tree-id1332 . -583) (undo-tree-id1333 . -364) (undo-tree-id1334 . -161) (undo-tree-id1335 . -583) (undo-tree-id1336 . -583) (undo-tree-id1337 . -583) (undo-tree-id1338 . -557) (undo-tree-id1339 . -502) (undo-tree-id1340 . -478) (undo-tree-id1341 . -429) (undo-tree-id1342 . -263) (undo-tree-id1343 . -139) (undo-tree-id1344 . -138) (undo-tree-id1345 . -81) (undo-tree-id1346 . -80) (undo-tree-id1347 . -583)) nil (26016 2644 185702 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -698) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 699) nil (26016 2644 185684 0) 0 nil])
([nil nil ((690 . 691)) nil (26016 2644 185660 0) 0 nil])
([nil nil ((#("uniform" 0 7 (fontified t)) . -533) (undo-tree-id1299 . -7) (undo-tree-id1300 . -7) (undo-tree-id1301 . -7) (undo-tree-id1302 . -7) (undo-tree-id1303 . -7) (undo-tree-id1304 . -7) (undo-tree-id1305 . -7) (undo-tree-id1306 . -7) (undo-tree-id1307 . -7) (undo-tree-id1308 . -7) 540) nil (26016 2644 185658 0) 0 nil])
([nil nil ((#("light_" 0 6 (fontified t)) . -527) (undo-tree-id1287 . -6) (undo-tree-id1288 . -6) (undo-tree-id1289 . -6) (undo-tree-id1290 . -6) (undo-tree-id1291 . -6) (undo-tree-id1292 . -6) (undo-tree-id1293 . -6) (undo-tree-id1294 . -6) (undo-tree-id1295 . -6) (undo-tree-id1296 . -6) (undo-tree-id1297 . -6) (undo-tree-id1298 . -6) 533) nil (26016 2644 185647 0) 0 nil])
([nil nil ((527 . 531)) nil (26016 2644 185634 0) 0 nil])
([nil nil ((527 . 531) (#("self" 0 4 (fontified nil)) . 527) (527 . 531) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -527) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -1) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -3) (undo-tree-id1282 . -3) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) 531) nil (26016 2644 185632 0) 0 nil])
([nil nil ((#("buffer" 0 6 (fontified t)) . -937) (undo-tree-id1258 . -6) (undo-tree-id1259 . -6) (undo-tree-id1260 . -6) (undo-tree-id1261 . -6) (undo-tree-id1262 . -6) (undo-tree-id1263 . -6) (undo-tree-id1264 . -6) (undo-tree-id1265 . -6) (undo-tree-id1266 . -6) (undo-tree-id1267 . -6) (undo-tree-id1268 . -6) (undo-tree-id1269 . -6) (undo-tree-id1270 . -6) (undo-tree-id1271 . -6) (undo-tree-id1272 . -6) (undo-tree-id1273 . -6) (undo-tree-id1274 . -6) (undo-tree-id1275 . -6) 943) nil (26016 2644 185618 0) 0 nil])
([nil nil ((#("light_" 0 6 (fontified t)) . -931) (undo-tree-id1238 . -6) (undo-tree-id1239 . -6) (undo-tree-id1240 . -6) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) (undo-tree-id1245 . -6) (undo-tree-id1246 . -6) (undo-tree-id1247 . -6) (undo-tree-id1248 . -6) (undo-tree-id1249 . -6) (undo-tree-id1250 . -6) (undo-tree-id1251 . -6) (undo-tree-id1252 . -6) (undo-tree-id1253 . -6) (undo-tree-id1254 . -6) (undo-tree-id1255 . -6) (undo-tree-id1256 . -6) (undo-tree-id1257 . -6) 937) nil (26016 2644 185594 0) 0 nil])
([nil nil ((931 . 935)) nil (26016 2644 185574 0) 0 nil])
([nil nil ((931 . 935) (#("self" 0 4 (fontified nil)) . 931) (931 . 935) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -931) (undo-tree-id1219 . -4) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) 935) nil (26016 2644 186025 0) 0 nil])
([nil nil ((931 . 932) (t 26016 2644 814491 413000)) nil (26016 2658 790221 0) 0 nil] [nil nil ((935 . 956)) ((#("
                    " 0 21 (fontified t)) . 935) (undo-tree-id1368 . -21) (undo-tree-id1369 . -21) (undo-tree-id1370 . -1)) (26016 2644 185540 0) 0 nil])
([nil nil ((261 . 270) (t 26016 2658 796702 485000)) nil (26016 2676 697554 0) 0 nil])
nil
([nil nil ((270 . 275)) nil (26016 2676 697552 0) 0 nil])
([nil nil ((274 . 278) (#("w" 0 1 (fontified nil)) . 274) (274 . 275) (#("wgpu" 0 4 (fontified nil)) . -274) (274 . 278) (#("w" 0 1 (face font-lock-constant-face fontified t)) . -274) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) 275) nil (26016 2676 697551 0) 0 nil])
([nil nil ((278 . 281)) nil (26016 2676 697543 0) 0 nil])
([nil nil ((280 . 284) (#("u" 0 1 (fontified nil)) . 280) (280 . 281) (#("util" 0 4 (fontified nil)) . -280) (280 . 284) (#("u" 0 1 (fontified t)) . -280) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) 281) nil (26016 2676 697541 0) 0 nil])
([nil nil ((284 . 286)) nil (26016 2676 697527 0) 0 nil])
([nil nil ((286 . 295) (#("DeviceExt" 0 9 (fontified nil)) . -286) (286 . 295)) nil (26016 2676 697525 0) 0 nil])
([nil nil ((295 . 296)) nil (26016 2676 697519 0) 0 nil])
([nil nil ((187 . 188) (t 26016 2676 704897 828000)) nil (26016 2705 905196 0) 0 nil])
([nil nil ((188 . 193)) nil (26016 2705 905195 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -192) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) 193) nil (26016 2705 905194 0) 0 nil])
([nil nil ((192 . 193)) nil (26016 2705 905186 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -192) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) 193) nil (26016 2705 905184 0) 0 nil])
([nil nil ((192 . 194)) nil (26016 2705 905177 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -192) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("l" 0 1 (fontified t)) . -193) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) 194) nil (26016 2705 905176 0) 0 nil])
([nil nil ((192 . 195)) nil (26016 2705 905160 0) 0 nil])
([nil nil ((194 . 202) (#("b" 0 1 (fontified nil)) . 194) (194 . 195) (#("bytemuck" 0 8 (fontified nil)) . -194) (194 . 202) (#("b" 0 1 (fontified t)) . -194) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) 195) nil (26016 2705 905158 0) 0 nil])
([nil nil ((202 . 205)) nil (26016 2705 905150 0) 0 nil])
([nil nil ((204 . 207) (#("P" 0 1 (fontified nil)) . 204) (204 . 205) (#("Pod" 0 3 (fontified nil)) . -204) (204 . 207) (#("P" 0 1 (face font-lock-type-face fontified t)) . -204) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) 205) nil (26016 2705 905148 0) 0 nil])
([nil nil ((207 . 220)) nil (26016 2705 905138 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -207) (undo-tree-id1382 . -1) (undo-tree-id1383 . 1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (#(" " 0 1 (fontified t)) . -208) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (#(" " 0 1 (fontified t)) . -209) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#(" " 0 1 (fontified t)) . -211) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#(" " 0 1 (fontified t)) . -212) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (#(" " 0 1 (fontified t)) . -213) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#(" " 0 1 (fontified t)) . -214) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (#(" " 0 1 (fontified t)) . -215) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (#(" " 0 1 (fontified t)) . -216) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (#(" " 0 1 (fontified t)) . -217) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (#(" " 0 1 (fontified t)) . -218) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (#(" " 0 1 (fontified t)) . -219) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) 220) nil (26016 2705 905123 0) 0 nil])
([nil nil ((737 . 749) (t 26016 2705 913686 5000)) nil (26016 2731 345542 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -739) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (#("f" 0 1 (fontified t)) . -740) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (#("." 0 1 (fontified t)) . -741) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) 742 (t 26016 2731 352768 179000)) nil (26016 2747 335784 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -737) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("e" 0 1 (fontified t)) . -738) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) 739) nil (26016 2747 335734 0) 0 nil])
([nil nil ((737 . 743)) nil (26016 2747 335681 0) 0 nil])
([nil nil ((743 . 747) (#("desc (as BindGroupLayout)" 0 25 (fontified nil)) . -743) (743 . 768)) nil (26016 2747 335680 0) 0 nil])
([nil nil ((#("desc" 0 4 (fontified t)) . 747) (undo-tree-id1682 . -4)) nil (26016 2747 336172 0) 0 nil])
([nil nil ((748 . 750) (t 26016 2748 66272 516000)) nil (26016 2759 675927 0) 0 nil] [nil nil ((#("();
       
        
        let" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (face (rainbow-delimiters-depth-3-face) fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 11 (fontified t) 11 12 (fontified t) 12 20 (fontified t) 20 29 (fontified t) 29 32 (face font-lock-keyword-face fontified t)) . 747) (undo-tree-id1657 . -11) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (undo-tree-id1667 . -3) (undo-tree-id1668 . -3) (undo-tree-id1669 . -3) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -3) (undo-tree-id1675 . -3) (undo-tree-id1676 . -3) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (undo-tree-id1679 . -3) (undo-tree-id1680 . -3) (undo-tree-id1681 . -32)) ((747 . 779)) (26016 2747 335673 0) 0 nil])
([nil nil ((748 . 754) (#("de" 0 2 (fontified nil)) . 748) (748 . 750) (#("device" 0 6 (fontified nil)) . -748) (748 . 754) (#("de" 0 2 (fontified t)) . -748) (undo-tree-id1781 . -2) (undo-tree-id1782 . -1) (undo-tree-id1783 . -2) (undo-tree-id1784 . -2) (undo-tree-id1785 . -2) (undo-tree-id1786 . -2) 750) nil (26016 2759 675923 0) 0 nil])
nil
([nil nil ((#("light_" 0 6 (face font-lock-variable-name-face fontified t)) . -711) (undo-tree-id1807 . -6) (undo-tree-id1808 . -6) (undo-tree-id1809 . -6) (undo-tree-id1810 . -6) (undo-tree-id1811 . -6) (undo-tree-id1812 . -6) (undo-tree-id1813 . -6) (undo-tree-id1814 . -6) (undo-tree-id1815 . -6) (undo-tree-id1816 . -6) (undo-tree-id1817 . -6) (undo-tree-id1818 . -6) (undo-tree-id1819 . -6) (undo-tree-id1820 . -6) 717 (t 26016 2759 684186 453000)) nil (26016 2773 515584 0) 0 nil])
([nil nil ((#("light_" 0 6 (face font-lock-variable-name-face fontified t)) . -780) (undo-tree-id1797 . -6) (undo-tree-id1798 . -6) (undo-tree-id1799 . -6) (undo-tree-id1800 . -6) (undo-tree-id1801 . -6) (undo-tree-id1802 . -6) (undo-tree-id1803 . -6) (undo-tree-id1804 . -6) (undo-tree-id1805 . -6) (undo-tree-id1806 . -6) 786) nil (26016 2773 515568 0) 0 nil])
([nil nil ((#("light_" 0 6 (fontified t)) . -868) (undo-tree-id1787 . -6) (undo-tree-id1788 . -6) (undo-tree-id1789 . -6) (undo-tree-id1790 . -6) (undo-tree-id1791 . -6) (undo-tree-id1792 . -6) (undo-tree-id1793 . -6) (undo-tree-id1794 . -6) (undo-tree-id1795 . -6) (undo-tree-id1796 . -6) 874) nil (26016 2773 515554 0) 0 nil])
([nil nil ((1 . 3) (t 26016 2773 523506 694000)) nil (26016 2799 537547 0) 0 nil])
([nil nil ((1 . 4)) nil (26016 2799 537546 0) 0 nil])
([nil nil ((4 . 5)) nil (26016 2799 537545 0) 0 nil])
([nil nil ((5 . 7)) nil (26016 2799 537544 0) 0 nil])
([nil nil ((5 . 13) (#("by" 0 2 (fontified nil)) . 5) (5 . 7) (#("bytemuck" 0 8 (fontified nil)) . -5) (5 . 13) (#("by" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id1861 . -2) (undo-tree-id1862 . -1) (undo-tree-id1863 . -2) (undo-tree-id1864 . -2) (undo-tree-id1865 . -2) (undo-tree-id1866 . -2) 7) nil (26016 2799 537542 0) 0 nil])
([nil nil ((13 . 16)) nil (26016 2799 537534 0) 0 nil])
([nil nil ((15 . 18) (#("P" 0 1 (fontified nil)) . 15) (15 . 16) (#("Pod" 0 3 (fontified nil)) . -15) (15 . 18) (#("P" 0 1 (face font-lock-type-face fontified t)) . -15) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) 16) nil (26016 2799 537533 0) 0 nil])
([nil nil ((15 . 16)) nil (26016 2799 537525 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -15) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) 16) nil (26016 2799 537523 0) 0 nil])
([nil nil ((15 . 16)) nil (26016 2799 537511 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -15) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 16) nil (26016 2799 537509 0) 0 nil])
([nil nil ((19 . 20) (15 . 15) (15 . 16)) nil (26016 2799 537500 0) 0 nil])
([nil nil ((19 . 22)) nil (26016 2799 537499 0) 0 nil])
([nil nil ((22 . 23)) nil (26016 2799 537498 0) 0 nil])
([nil nil ((21 . 29) (#("Ze" 0 2 (fontified nil)) . 21) (21 . 23) (#("Zeroable" 0 8 (fontified nil)) . -21) (21 . 29) (#("Ze" 0 2 (face font-lock-type-face fontified t)) . -21) (undo-tree-id1821 . -1) (undo-tree-id1822 . -2) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -2) (undo-tree-id1831 . -2) (undo-tree-id1832 . -2) (undo-tree-id1833 . -2) (undo-tree-id1834 . -2) 23) nil (26016 2799 537495 0) 0 nil])
([nil nil ((30 . 31)) nil (26016 2799 537469 0) 0 nil])
([nil nil ((#("bytemuck::" 0 8 (face font-lock-constant-face fontified t) 8 10 (fontified t)) . -226) (undo-tree-id1935 . -10) (undo-tree-id1936 . -10) (undo-tree-id1937 . -10) (undo-tree-id1938 . -10) (undo-tree-id1939 . -10) (undo-tree-id1940 . -10) (undo-tree-id1941 . -10) (undo-tree-id1942 . -10) (undo-tree-id1943 . -10) (undo-tree-id1944 . -10) (undo-tree-id1945 . -10) (undo-tree-id1946 . -10) (undo-tree-id1947 . -10) 236 (t 26016 2799 545976 536000)) nil (26016 2820 895724 0) 0 nil])
([nil nil ((#("impl " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -221) (undo-tree-id1905 . -5) (undo-tree-id1906 . -5) (undo-tree-id1907 . -5) (undo-tree-id1908 . -5) (undo-tree-id1909 . -5) (undo-tree-id1910 . -5) (undo-tree-id1911 . -5) (undo-tree-id1912 . -5) (undo-tree-id1913 . -5) (undo-tree-id1914 . -5) (undo-tree-id1915 . -5) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (undo-tree-id1919 . -5) (undo-tree-id1920 . -5) (undo-tree-id1921 . -5) (undo-tree-id1922 . -5) (undo-tree-id1923 . -5) (undo-tree-id1924 . -5) (undo-tree-id1925 . -5) (undo-tree-id1926 . -5) (undo-tree-id1927 . -5) (undo-tree-id1928 . -5) (undo-tree-id1929 . -5) (undo-tree-id1930 . -5) (undo-tree-id1931 . -5) (undo-tree-id1932 . -5) (undo-tree-id1933 . -5) (undo-tree-id1934 . -5) 226) nil (26016 2820 895709 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -221) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -222) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -223) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) 224) nil (26016 2820 895673 0) 0 nil])
([nil nil ((221 . 225)) nil (26016 2820 896709 0) 0 nil])
([nil nil ((225 . 227)) nil (26016 2827 914315 0) 0 nil] [nil nil ((1 . 38) (221 . 221) (221 . 229) (#("impl" 0 4 (fontified nil)) . 221) (221 . 225) (#("impl_mac (use std::os::unix::ucred::impl_mac)" 0 45 (fontified nil)) . -221) (221 . 266) (#("impl" 0 4 (face font-lock-keyword-face fontified t)) . -221) (undo-tree-id1867 . -4) (undo-tree-id1868 . -4) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -2) (undo-tree-id1872 . -2) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -4) (undo-tree-id1878 . -4) (undo-tree-id1879 . -4) (undo-tree-id1880 . -4) (undo-tree-id1881 . -4) 225) ((221 . 225) (#("impl_mac (use std::os::unix::ucred::impl_mac)" 0 45 (fontified nil)) . 221) (221 . 266) (#("impl" 0 4 (fontified nil)) . 221) (221 . 225) (#("impl_mac" 0 8 (fontified t)) . 221) (undo-tree-id1948 . -8) (undo-tree-id1949 . -8) (#("use std::os::unix::ucred::impl_mac;

" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 11 (face font-lock-constant-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-constant-face fontified t) 17 19 (fontified t) 19 24 (face font-lock-constant-face fontified t) 24 37 (fontified t)) . 1)) (26016 2820 895645 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -226) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) 227) nil (26016 2827 914313 0) 0 nil])
nil
([nil nil ((226 . 240)) nil (26016 2827 914299 0) 0 nil])
([nil nil ((166 . 170) (t 26016 2827 922145 609000)) nil (26016 2897 133931 0) 0 nil])
([nil nil ((169 . 172) (#("P" 0 1 (fontified nil)) . 169) (169 . 170) (#("Pod" 0 3 (fontified nil)) . -169) (169 . 172) (#("P" 0 1 (face font-lock-type-face fontified t)) . -169) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) 170) nil (26016 2897 133929 0) 0 nil])
([nil nil ((172 . 177)) nil (26016 2897 133922 0) 0 nil])
([nil nil ((175 . 183) (#("Ze" 0 2 (fontified nil)) . 175) (175 . 177) (#("Zeroable" 0 8 (fontified nil)) . -175) (175 . 183) (#("Ze" 0 2 (face font-lock-type-face fontified t)) . -175) (undo-tree-id1953 . -2) (undo-tree-id1954 . -1) (undo-tree-id1955 . -2) (undo-tree-id1956 . -2) 177) nil (26016 2897 133918 0) 0 nil])
([nil nil ((#("Zeroable" 0 8 (face font-lock-type-face fontified t)) . -249) (undo-tree-id2023 . -8) (undo-tree-id2024 . -8) (undo-tree-id2025 . -8) (undo-tree-id2026 . -8) (undo-tree-id2027 . -8) (undo-tree-id2028 . -8) (undo-tree-id2029 . -8) (undo-tree-id2030 . -8) (undo-tree-id2031 . -8) (undo-tree-id2032 . -8) 257 (t 26016 2897 143136 3000)) nil (26016 2900 583557 0) 0 nil])
([nil nil ((#("Pod + " 0 3 (face font-lock-type-face fontified t) 3 6 (fontified t)) . -243) (undo-tree-id2011 . -6) (undo-tree-id2012 . -6) (undo-tree-id2013 . -6) (undo-tree-id2014 . -6) (undo-tree-id2015 . -6) (undo-tree-id2016 . -6) (undo-tree-id2017 . -6) (undo-tree-id2018 . -6) (undo-tree-id2019 . -6) (undo-tree-id2020 . -6) (undo-tree-id2021 . -6) (undo-tree-id2022 . -6) 249) nil (26016 2900 583546 0) 0 nil])
([nil nil ((#("impl " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -238) (undo-tree-id1997 . -5) (undo-tree-id1998 . -5) (undo-tree-id1999 . -5) (undo-tree-id2000 . -5) (undo-tree-id2001 . -5) (undo-tree-id2002 . -5) (undo-tree-id2003 . -5) (undo-tree-id2004 . -5) (undo-tree-id2005 . -5) (undo-tree-id2006 . -5) (undo-tree-id2007 . -5) (undo-tree-id2008 . -5) (undo-tree-id2009 . -5) (undo-tree-id2010 . -5) 243) nil (26016 2900 583530 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -236) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (#(" " 0 1 (fontified t)) . -237) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) 238) nil (26016 2900 583510 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1016) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) 1017 (t 26016 2900 592134 217000)) nil (26016 2912 400771 0) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -1016) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) 1020 (t 26016 2912 408685 985000)) nil (26016 2941 185752 0) 0 nil])
([nil nil ((1016 . 1017)) nil (26016 2941 185737 0) 0 nil])
([nil nil ((1016 . 1020) (#("S" 0 1 (fontified nil)) . 1016) (1016 . 1017) (#("Self" 0 4 (fontified nil)) . -1016) (1016 . 1020) (#("S" 0 1 (face font-lock-type-face fontified t)) . -1016) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) 1017) nil (26016 2941 185735 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . -1019) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (#("." 0 1 (fontified t)) . -1020) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) 1021) nil (26016 2941 185727 0) 0 nil])
([nil nil ((1019 . 1023)) nil (26016 2941 185713 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1020) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (#(":" 0 1 (fontified t)) . -1021) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (#(":" 0 1 (fontified t)) . -1022) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) 1023) nil (26016 2941 185710 0) 0 nil])
([nil nil ((1020 . 1022)) nil (26016 2941 185682 0) 0 nil])
([nil nil ((#("binding()" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-7-face) fontified t) 8 9 (face (rainbow-delimiters-depth-7-face) fontified t)) . -1032) (undo-tree-id2819 . -9) (undo-tree-id2820 . -9) (undo-tree-id2821 . -7) (undo-tree-id2822 . -2) (undo-tree-id2823 . -2) (undo-tree-id2824 . -2) (undo-tree-id2825 . -2) (undo-tree-id2826 . -2) (undo-tree-id2827 . -2) (undo-tree-id2828 . -2) (undo-tree-id2829 . -9) (undo-tree-id2830 . -9) (undo-tree-id2831 . -9) (undo-tree-id2832 . -9) (undo-tree-id2833 . -9) (undo-tree-id2834 . -9) (undo-tree-id2835 . -9) (undo-tree-id2836 . -9) 1041) nil (26016 2941 185680 0) 0 nil])
([nil nil ((#("entire_" 0 7 (fontified t)) . -1025) (undo-tree-id2799 . -7) (undo-tree-id2800 . -7) (undo-tree-id2801 . -6) (undo-tree-id2802 . -7) (undo-tree-id2803 . -7) (undo-tree-id2804 . -7) (undo-tree-id2805 . -7) (undo-tree-id2806 . -7) (undo-tree-id2807 . -7) (undo-tree-id2808 . -7) (undo-tree-id2809 . -7) (undo-tree-id2810 . -7) (undo-tree-id2811 . -7) (undo-tree-id2812 . -7) (undo-tree-id2813 . -7) (undo-tree-id2814 . -7) (undo-tree-id2815 . -7) (undo-tree-id2816 . -7) (undo-tree-id2817 . -7) (undo-tree-id2818 . -7) 1032) nil (26016 2941 185661 0) 0 nil])
([nil nil ((#("as_" 0 3 (fontified t)) . -1022) (undo-tree-id2773 . -3) (undo-tree-id2774 . -3) (undo-tree-id2775 . -2) (undo-tree-id2776 . 1) (undo-tree-id2777 . -2) (undo-tree-id2778 . -2) (undo-tree-id2779 . -3) (undo-tree-id2780 . -3) (undo-tree-id2781 . -3) (undo-tree-id2782 . -3) (undo-tree-id2783 . -3) (undo-tree-id2784 . -3) (undo-tree-id2785 . -3) (undo-tree-id2786 . -3) (undo-tree-id2787 . -3) (undo-tree-id2788 . -3) (undo-tree-id2789 . -3) (undo-tree-id2790 . -3) (undo-tree-id2791 . -3) (undo-tree-id2792 . -3) (undo-tree-id2793 . -3) (undo-tree-id2794 . -3) (undo-tree-id2795 . -3) (undo-tree-id2796 . -3) (undo-tree-id2797 . -3) (undo-tree-id2798 . -3) 1025) nil (26016 2941 185640 0) 0 nil])
([nil nil ((1022 . 1024)) nil (26016 2941 185614 0) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -1016) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1017) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (#("l" 0 1 (face font-lock-type-face fontified t)) . -1018) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -1019) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (#(":" 0 1 (fontified t)) . -1020) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (#(":" 0 1 (fontified t)) . -1021) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (#("a" 0 1 (fontified t)) . -1022) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1023) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) 1024) nil (26016 2941 185593 0) 0 nil])
([nil nil ((1016 . 1018)) nil (26016 2941 185121 0) 0 nil])
([nil nil ((1016 . 1020) (#("se" 0 2 (fontified nil)) . 1016) (1016 . 1018) (#("self" 0 4 (fontified nil)) . -1016) (1016 . 1020) (#("se" 0 2 (fontified t)) . -1016) (undo-tree-id2305 . -2) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -2) (undo-tree-id2309 . -2) (undo-tree-id2310 . -2) (undo-tree-id2311 . -2) (undo-tree-id2312 . -2) (undo-tree-id2313 . -2) 1018) nil (26016 2941 185119 0) 0 nil])
([nil nil ((1020 . 1023)) nil (26016 2941 185106 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1021) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -1022) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) 1023) nil (26016 2941 185104 0) 0 nil])
([nil nil ((1021 . 1023)) nil (26016 2941 185074 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1016) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (#("e" 0 1 (fontified t)) . -1017) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("l" 0 1 (fontified t)) . -1018) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1019) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (#("." 0 1 (fontified t)) . -1020) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (#("i" 0 1 (fontified t)) . -1021) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1022) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) 1023) nil (26016 2941 185060 0) 0 nil])
([nil nil ((1016 . 1017) (t 26016 2941 195134 648000)) nil (26016 2994 734115 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1016) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) 1017) nil (26016 2994 734113 0) 0 nil])
([nil nil ((#("light_" 0 6 (face font-lock-variable-name-face fontified t)) . -430) (undo-tree-id2912 . -6) (undo-tree-id2913 . -6) (undo-tree-id2914 . -6) (undo-tree-id2915 . -6) (undo-tree-id2916 . -6) (undo-tree-id2917 . -6) (undo-tree-id2918 . -6) (undo-tree-id2919 . -6) (undo-tree-id2920 . -6) (undo-tree-id2921 . -6) 436) nil (26016 2994 734106 0) 0 nil])
([nil nil ((1010 . 1012)) nil (26016 2994 734092 0) 0 nil])
([nil nil ((1010 . 1016) (#("bu" 0 2 (fontified nil)) . 1010) (1010 . 1012) (#("buffer" 0 6 (fontified nil)) . -1010) (1010 . 1016) (#("bu" 0 2 (fontified t)) . -1010) (undo-tree-id2906 . -2) (undo-tree-id2907 . -1) (undo-tree-id2908 . -2) (undo-tree-id2909 . -2) (undo-tree-id2910 . -2) (undo-tree-id2911 . -2) 1012) nil (26016 2994 734090 0) 0 nil])
([nil nil ((1016 . 1019)) nil (26016 2994 734080 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1017 1036 #s(yas--snippet nil nil #s(yas--exit 1036 nil) 38 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1036 nil) 38 nil nil nil nil)) (1017 . 1036) (#("as_entire_binding()$0" 0 21 (fontified nil)) . 1017) (1017 . 1038) (#("as" 0 2 (fontified nil)) . 1017) (1017 . 1019) (#("as_entire_binding()" 0 19 (fontified nil)) . -1017) (1017 . 1036) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -1017) (undo-tree-id2897 . -2) (undo-tree-id2898 . -2) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -2) (undo-tree-id2903 . -2) (undo-tree-id2904 . -2) (undo-tree-id2905 . -2) 1019) nil (26016 2994 734075 0) 0 nil])
([nil nil ((59 . 68) (t 26016 2994 744112 57000)) nil (26016 3013 269065 0) 0 nil])
([nil nil ((67 . 75) (#("Z" 0 1 (fontified nil)) . 67) (67 . 68) (#("Zeroable" 0 8 (fontified nil)) . -67) (67 . 75) (#("Z" 0 1 (face font-lock-type-face fontified t)) . -67) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) 68) nil (26016 3013 269063 0) 0 nil])
([nil nil ((#("Zeroable" 0 8 (face font-lock-type-face fontified t)) . -191) (undo-tree-id3038 . -8) (undo-tree-id3039 . -8) (undo-tree-id3040 . -8) (undo-tree-id3041 . -8) (undo-tree-id3042 . -8) (undo-tree-id3043 . -8) (undo-tree-id3044 . -8) (undo-tree-id3045 . -8) (undo-tree-id3046 . -8) (undo-tree-id3047 . -8) (undo-tree-id3048 . -8) (undo-tree-id3049 . -8) (undo-tree-id3050 . -8) (undo-tree-id3051 . -8) (undo-tree-id3052 . -8) (undo-tree-id3053 . -8) (undo-tree-id3054 . -8) (undo-tree-id3055 . -8) (undo-tree-id3056 . -8) (undo-tree-id3057 . -8) (undo-tree-id3058 . -8) (undo-tree-id3059 . -8) 199) nil (26016 3013 269056 0) 0 nil])
([nil nil ((#("Pod + " 0 3 (face font-lock-type-face fontified t) 3 6 (fontified t)) . -185) (undo-tree-id3014 . -6) (undo-tree-id3015 . -6) (undo-tree-id3016 . -6) (undo-tree-id3017 . -6) (undo-tree-id3018 . -6) (undo-tree-id3019 . -6) (undo-tree-id3020 . -6) (undo-tree-id3021 . -6) (undo-tree-id3022 . -6) (undo-tree-id3023 . -6) (undo-tree-id3024 . -6) (undo-tree-id3025 . -6) (undo-tree-id3026 . -6) (undo-tree-id3027 . -6) (undo-tree-id3028 . -6) (undo-tree-id3029 . -6) (undo-tree-id3030 . -6) (undo-tree-id3031 . -6) (undo-tree-id3032 . -6) (undo-tree-id3033 . -6) (undo-tree-id3034 . -6) (undo-tree-id3035 . -6) (undo-tree-id3036 . -6) (undo-tree-id3037 . -6) 191) nil (26016 3013 269032 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -182) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (#("+" 0 1 (fontified t)) . -183) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (#(" " 0 1 (fontified t)) . -184) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) 185) nil (26016 3013 269000 0) 0 nil])
([nil nil ((1089 . 1098) (t 26016 3013 278820 188000)) nil (26016 3026 754123 0) 0 nil])
([nil nil ((1098 . 1100)) nil (26016 3026 754121 0) 0 nil])
([nil nil ((1099 . 1101)) nil (26016 3026 754120 0) 0 nil])
([nil nil ((1099 . 1105) (#("bu" 0 2 (fontified nil)) . 1099) (1099 . 1101) (#("buffer" 0 6 (fontified nil)) . -1099) (1099 . 1105) (#("bu" 0 2 (fontified t)) . -1099) (undo-tree-id3071 . -2) (undo-tree-id3072 . -1) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) 1101) nil (26016 3026 754119 0) 0 nil])
([nil nil ((1105 . 1108)) nil (26016 3026 754110 0) 0 nil])
([nil nil ((1107 . 1117) (#("b" 0 1 (fontified nil)) . 1107) (1107 . 1108) (#("bind_group" 0 10 (fontified nil)) . -1107) (1107 . 1117) (#("b" 0 1 (fontified t)) . -1107) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) 1108) nil (26016 3026 754106 0) 0 nil])
([nil nil ((#("Zeroable" 0 8 (face font-lock-type-face fontified t)) . -67) (undo-tree-id3121 . -8) (undo-tree-id3122 . -8) (undo-tree-id3123 . -8) (undo-tree-id3124 . -8) (undo-tree-id3125 . -8) (undo-tree-id3126 . -8) (undo-tree-id3127 . -8) (undo-tree-id3128 . -8) (undo-tree-id3129 . -8) (undo-tree-id3130 . -8) (undo-tree-id3131 . -8) (undo-tree-id3132 . -8) (undo-tree-id3133 . -8) (undo-tree-id3134 . -8) (undo-tree-id3135 . -8) (undo-tree-id3136 . -8) (undo-tree-id3137 . -8) (undo-tree-id3138 . -8) 75 (t 26016 3026 764465 815000)) nil (26016 3065 38166 0) 0 nil])
([nil nil ((#("Pod + " 0 3 (face font-lock-type-face fontified t) 3 6 (fontified t)) . -61) (undo-tree-id3101 . -6) (undo-tree-id3102 . -6) (undo-tree-id3103 . -6) (undo-tree-id3104 . -6) (undo-tree-id3105 . -6) (undo-tree-id3106 . -6) (undo-tree-id3107 . -6) (undo-tree-id3108 . -6) (undo-tree-id3109 . -6) (undo-tree-id3110 . -6) (undo-tree-id3111 . -6) (undo-tree-id3112 . -6) (undo-tree-id3113 . -6) (undo-tree-id3114 . -6) (undo-tree-id3115 . -6) (undo-tree-id3116 . -6) (undo-tree-id3117 . -6) (undo-tree-id3118 . -6) (undo-tree-id3119 . -6) (undo-tree-id3120 . -6) 67) nil (26016 3065 38448 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -59) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (#(" " 0 1 (fontified t)) . -60) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) 61) nil (26016 3072 60614 0) 0 nil] [nil nil ((#("BindGroupLayout: " 0 15 (face font-lock-variable-name-face fontified t) 15 17 (fontified t)) . -44) (undo-tree-id3077 . -4) (undo-tree-id3078 . -6) (undo-tree-id3079 . -17) (undo-tree-id3080 . -17) (undo-tree-id3081 . -17) (undo-tree-id3082 . -17) (undo-tree-id3083 . -17) (undo-tree-id3084 . -17) (undo-tree-id3085 . -17) (undo-tree-id3086 . -17) (undo-tree-id3087 . -17) (undo-tree-id3088 . -17) (undo-tree-id3089 . -17) (undo-tree-id3090 . -17) (undo-tree-id3091 . -17) (undo-tree-id3092 . -17) (undo-tree-id3093 . -17) (undo-tree-id3094 . -17) (undo-tree-id3095 . -17) (undo-tree-id3096 . -17) (undo-tree-id3097 . -17) (undo-tree-id3098 . -17) (undo-tree-id3099 . -17) (undo-tree-id3100 . -17) 61) ((44 . 61)) (26016 3065 38119 0) 0 nil])
([nil nil ((166 . 170)) nil (26016 3072 60554 0) 0 nil])
nil
([nil nil ((169 . 172) (#("P" 0 1 (fontified nil)) . 169) (169 . 170) (#("Pod" 0 3 (fontified nil)) . -169) (169 . 172) (#("P" 0 1 (face font-lock-type-face fontified t)) . -169) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) 170) nil (26016 3072 60552 0) 0 nil])
([nil nil ((172 . 176)) nil (26016 3072 60542 0) 0 nil])
([nil nil ((175 . 183) (#("Z" 0 1 (fontified nil)) . 175) (175 . 176) (#("Zeroable" 0 8 (fontified nil)) . -175) (175 . 183) (#("Z" 0 1 (face font-lock-type-face fontified t)) . -175) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) 176) nil (26016 3072 60538 0) 0 nil])
([nil nil ((#("VB\")" 0 3 (face font-lock-string-face fontified t) 3 4 (face (rainbow-delimiters-depth-5-face) fontified t)) . -549) (undo-tree-id3282 . -2) (undo-tree-id3283 . -2) (undo-tree-id3284 . -2) (undo-tree-id3285 . -2) (undo-tree-id3286 . -2) (undo-tree-id3287 . -2) (undo-tree-id3288 . -2) (undo-tree-id3289 . -2) (undo-tree-id3290 . -2) (undo-tree-id3291 . -2) (undo-tree-id3292 . -2) (undo-tree-id3293 . -4) (undo-tree-id3294 . -4) (undo-tree-id3295 . -3) (undo-tree-id3296 . -3) (undo-tree-id3297 . -3) (undo-tree-id3298 . -3) (undo-tree-id3299 . -3) (undo-tree-id3300 . -3) (undo-tree-id3301 . -3) (undo-tree-id3302 . -4) (undo-tree-id3303 . -4) (undo-tree-id3304 . -4) (undo-tree-id3305 . -4) (undo-tree-id3306 . -4) (undo-tree-id3307 . -4) (undo-tree-id3308 . -4) (undo-tree-id3309 . -4) (undo-tree-id3310 . -4) (undo-tree-id3311 . -4) 553 (t 26016 3072 70396 322000)) nil (26016 3097 233692 0) 0 nil])
([nil nil ((#("Light " 0 6 (face font-lock-string-face fontified t)) . -543) (undo-tree-id3250 . -6) (undo-tree-id3251 . -6) (undo-tree-id3252 . -6) (undo-tree-id3253 . -6) (undo-tree-id3254 . -6) (undo-tree-id3255 . -6) (undo-tree-id3256 . -6) (undo-tree-id3257 . -6) (undo-tree-id3258 . -6) (undo-tree-id3259 . -6) (undo-tree-id3260 . -6) (undo-tree-id3261 . -6) (undo-tree-id3262 . -6) (undo-tree-id3263 . -6) (undo-tree-id3264 . -6) (undo-tree-id3265 . -6) (undo-tree-id3266 . -6) (undo-tree-id3267 . -6) (undo-tree-id3268 . -6) (undo-tree-id3269 . -6) (undo-tree-id3270 . -6) (undo-tree-id3271 . -6) (undo-tree-id3272 . -6) (undo-tree-id3273 . -6) (undo-tree-id3274 . -6) (undo-tree-id3275 . -6) (undo-tree-id3276 . -6) (undo-tree-id3277 . -6) (undo-tree-id3278 . -6) (undo-tree-id3279 . -6) (undo-tree-id3280 . -6) (undo-tree-id3281 . -6) 549) nil (26016 3097 233659 0) 0 nil])
([nil nil ((#("Some(\"" 0 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-5-face) fontified t) 5 6 (face font-lock-string-face fontified t)) . -537) (undo-tree-id3216 . -6) (undo-tree-id3217 . -6) (undo-tree-id3218 . -6) (undo-tree-id3219 . -6) (undo-tree-id3220 . -6) (undo-tree-id3221 . -6) (undo-tree-id3222 . -6) (undo-tree-id3223 . -6) (undo-tree-id3224 . -6) (undo-tree-id3225 . -6) (undo-tree-id3226 . -6) (undo-tree-id3227 . -6) (undo-tree-id3228 . -6) (undo-tree-id3229 . -6) (undo-tree-id3230 . -6) (undo-tree-id3231 . -6) (undo-tree-id3232 . -6) (undo-tree-id3233 . -6) (undo-tree-id3234 . -6) (undo-tree-id3235 . -6) (undo-tree-id3236 . -6) (undo-tree-id3237 . -6) (undo-tree-id3238 . -6) (undo-tree-id3239 . -6) (undo-tree-id3240 . -6) (undo-tree-id3241 . -6) (undo-tree-id3242 . -6) (undo-tree-id3243 . -6) (undo-tree-id3244 . -6) (undo-tree-id3245 . -6) (undo-tree-id3246 . -6) (undo-tree-id3247 . -6) (undo-tree-id3248 . -6) (undo-tree-id3249 . -6) 543) nil (26016 3097 233627 0) 0 nil])
([nil nil ((537 . 538)) nil (26016 3097 233593 0) 0 nil])
([nil nil ((apply yas--snippet-revive 537 541 #s(yas--snippet nil nil #s(yas--exit 541 nil) 39 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 541 nil) 39 nil nil nil nil)) (537 . 541) (#("None$0" 0 6 (fontified nil)) . 537) (537 . 543) (#("N" 0 1 (fontified nil)) . 537) (537 . 538) (#("None" 0 4 (fontified nil)) . -537) (537 . 541) (#("N" 0 1 (face font-lock-type-face fontified t)) . -537) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) 538) nil (26016 3097 233588 0) 0 nil])
([nil nil ((267 . 268) (t 26016 3097 244633 960000)) nil (26016 3144 483016 0) 0 nil])
([nil nil ((268 . 277)) nil (26016 3144 483015 0) 0 nil])
([nil nil ((277 . 282)) nil (26016 3144 483014 0) 0 nil])
([nil nil ((31 . 48) (277 . 277) (277 . 282) (#("label" 0 5 (fontified nil)) . 277) (277 . 282) (#("Label (use wgpu::Label)" 0 23 (fontified nil)) . -277) (277 . 300) (#("label" 0 5 (fontified t)) . -277) (undo-tree-id3440 . -5) (undo-tree-id3441 . -1) (undo-tree-id3442 . -2) (undo-tree-id3443 . -2) (undo-tree-id3444 . -3) (undo-tree-id3445 . -3) (undo-tree-id3446 . -4) (undo-tree-id3447 . -4) (undo-tree-id3448 . -5) (undo-tree-id3449 . -5) (undo-tree-id3450 . -5) (undo-tree-id3451 . -5) (undo-tree-id3452 . -5) (undo-tree-id3453 . -5) 282) nil (26016 3144 483012 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-type-face fontified t)) . -294) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -295) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (#("b" 0 1 (face font-lock-type-face fontified t)) . -296) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -297) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (#("l" 0 1 (face font-lock-type-face fontified t)) . -298) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) 299) nil (26016 3144 482991 0) 0 nil])
([nil nil ((294 . 301)) nil (26016 3144 482915 0) 0 nil])
([nil nil ((301 . 302)) nil (26016 3144 482914 0) 0 nil])
([nil nil ((301 . 306) (#("L" 0 1 (fontified nil)) . 301) (301 . 302) (#("Label" 0 5 (fontified nil)) . -301) (301 . 306) (#("L" 0 1 (face font-lock-type-face fontified t)) . -301) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) 302) nil (26016 3144 482913 0) 0 nil])
([nil nil ((306 . 307)) nil (26016 3144 482905 0) 0 nil])
([nil nil ((#("None" 0 4 (face font-lock-type-face fontified t)) . -577) (undo-tree-id3316 . -4) (undo-tree-id3317 . -4) (undo-tree-id3318 . -4) (undo-tree-id3319 . -4) (undo-tree-id3320 . -4) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) (undo-tree-id3325 . -4) (undo-tree-id3326 . -4) (undo-tree-id3327 . -4) (undo-tree-id3328 . -4) (undo-tree-id3329 . -4) (undo-tree-id3330 . -4) (undo-tree-id3331 . -4) (undo-tree-id3332 . -4) (undo-tree-id3333 . -4) (undo-tree-id3334 . -4) (undo-tree-id3335 . -4) (undo-tree-id3336 . -4) (undo-tree-id3337 . -4) (undo-tree-id3338 . -4) (undo-tree-id3339 . -4) (undo-tree-id3340 . -4) (undo-tree-id3341 . -4) (undo-tree-id3342 . -4) (undo-tree-id3343 . -4) (undo-tree-id3344 . -4) (undo-tree-id3345 . -4) (undo-tree-id3346 . -4) (undo-tree-id3347 . -4) (undo-tree-id3348 . -4) (undo-tree-id3349 . -4) (undo-tree-id3350 . -4) (undo-tree-id3351 . -4) (undo-tree-id3352 . -4) (undo-tree-id3353 . -4) (undo-tree-id3354 . -4) (undo-tree-id3355 . -4) (undo-tree-id3356 . -4) (undo-tree-id3357 . -4) (undo-tree-id3358 . -4) (undo-tree-id3359 . -4) 581) nil (26016 3144 482902 0) 0 nil])
([nil nil ((577 . 578)) nil (26016 3144 482859 0) 0 nil])
([nil nil ((577 . 582) (#("l" 0 1 (fontified nil)) . 577) (577 . 578) (#("label" 0 5 (fontified nil)) . -577) (577 . 582) (#("l" 0 1 (fontified t)) . -577) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) 578) nil (26016 3144 482854 0) 0 nil])
([nil nil ((#("label" 0 5 (fontified t)) . -577) (undo-tree-id3614 . -5) (undo-tree-id3615 . -5) (undo-tree-id3616 . -2) (undo-tree-id3617 . -2) (undo-tree-id3618 . -2) (undo-tree-id3619 . -2) (undo-tree-id3620 . -2) (undo-tree-id3621 . -2) (undo-tree-id3622 . -2) (undo-tree-id3623 . -2) (undo-tree-id3624 . -2) (undo-tree-id3625 . -2) (undo-tree-id3626 . -2) (undo-tree-id3627 . -2) (undo-tree-id3628 . -2) (undo-tree-id3629 . -2) (undo-tree-id3630 . -2) (undo-tree-id3631 . -2) (undo-tree-id3632 . -2) (undo-tree-id3633 . -2) (undo-tree-id3634 . -2) (undo-tree-id3635 . -2) (undo-tree-id3636 . -2) (undo-tree-id3637 . -5) (undo-tree-id3638 . -5) (undo-tree-id3639 . -5) (undo-tree-id3640 . -5) (undo-tree-id3641 . -5) (undo-tree-id3642 . -5) (undo-tree-id3643 . -5) (undo-tree-id3644 . -5) (undo-tree-id3645 . -5) (undo-tree-id3646 . -5) 582 (t 26016 3144 493535 628000)) nil (26016 3152 713553 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -575) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (#(" " 0 1 (fontified t)) . -576) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) 577) nil (26016 3152 713510 0) 0 nil])
([nil nil ((307 . 316) (t 26016 3152 724554 543000)) nil (26016 3171 434550 0) 0 nil])
([nil nil ((316 . 321)) nil (26016 3171 434548 0) 0 nil])
([nil nil ((42 . 43) (47 . 62) (316 . 316) (316 . 328) (#("usage" 0 5 (fontified nil)) . 316) (316 . 321) (#("BufferUsages (use wgpu::BufferUsages)" 0 37 (fontified nil)) . -316) (316 . 353) (#("usage" 0 5 (fontified t)) . -316) (undo-tree-id3813 . -5) (undo-tree-id3814 . -1) (undo-tree-id3815 . -2) (undo-tree-id3816 . -2) (undo-tree-id3817 . -3) (undo-tree-id3818 . -3) (undo-tree-id3819 . -4) (undo-tree-id3820 . -4) (undo-tree-id3821 . -5) (undo-tree-id3822 . -5) (undo-tree-id3823 . -5) (undo-tree-id3824 . -5) 321) nil (26016 3171 434546 0) 0 nil])
([nil nil ((#("BufferUsages" 0 12 (face font-lock-type-face fontified t)) . -332) (undo-tree-id3805 . -12) (undo-tree-id3806 . -12) (undo-tree-id3807 . -12) (undo-tree-id3808 . -12) (undo-tree-id3809 . -12) (undo-tree-id3810 . -12) (undo-tree-id3811 . -12) (undo-tree-id3812 . -12) 344) nil (26016 3171 434531 0) 0 nil])
([nil nil ((332 . 343)) nil (26016 3171 434522 0) 0 nil])
([nil nil ((339 . 351) (#("Buff" 0 4 (fontified nil)) . 339) (339 . 343) (#("BufferUsages" 0 12 (fontified nil)) . -339) (339 . 351) (#("Buff" 0 4 (face font-lock-type-face fontified t)) . -339) (undo-tree-id3794 . -4) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -2) (undo-tree-id3800 . -2) (undo-tree-id3801 . -3) (undo-tree-id3802 . -3) (undo-tree-id3803 . -4) (undo-tree-id3804 . -4) 343) nil (26016 3171 434520 0) 0 nil])
([nil nil ((351 . 352)) nil (26016 3171 434507 0) 0 nil])
([nil nil ((#("DST" 0 3 (face font-lock-type-face fontified t)) . -758) (undo-tree-id3786 . -3) (undo-tree-id3787 . -3) (undo-tree-id3788 . -3) (undo-tree-id3789 . -3) (undo-tree-id3790 . -3) (undo-tree-id3791 . -3) (undo-tree-id3792 . -3) (undo-tree-id3793 . -3) 761) nil (26016 3171 434506 0) 0 nil])
([nil nil ((#("COPY_" 0 5 (face font-lock-type-face fontified t)) . -753) (undo-tree-id3776 . -5) (undo-tree-id3777 . -5) (undo-tree-id3778 . -5) (undo-tree-id3779 . -5) (undo-tree-id3780 . -5) (undo-tree-id3781 . -5) (undo-tree-id3782 . -5) (undo-tree-id3783 . -5) (undo-tree-id3784 . -5) (undo-tree-id3785 . -5) 758) nil (26016 3171 434496 0) 0 nil])
([nil nil ((#("BufferUsages::" 0 12 (face font-lock-type-face fontified t) 12 14 (fontified t)) . -739) (undo-tree-id3764 . -14) (undo-tree-id3765 . -14) (undo-tree-id3766 . -14) (undo-tree-id3767 . -14) (undo-tree-id3768 . -14) (undo-tree-id3769 . -14) (undo-tree-id3770 . -14) (undo-tree-id3771 . -14) (undo-tree-id3772 . -14) (undo-tree-id3773 . -14) (undo-tree-id3774 . -14) (undo-tree-id3775 . -14) 753) nil (26016 3171 434485 0) 0 nil])
([nil nil ((#("wgpu::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -733) (undo-tree-id3750 . -6) (undo-tree-id3751 . -6) (undo-tree-id3752 . -6) (undo-tree-id3753 . -6) (undo-tree-id3754 . -6) (undo-tree-id3755 . -6) (undo-tree-id3756 . -6) (undo-tree-id3757 . -6) (undo-tree-id3758 . -6) (undo-tree-id3759 . -6) (undo-tree-id3760 . -6) (undo-tree-id3761 . -6) (undo-tree-id3762 . -6) (undo-tree-id3763 . -6) 739) nil (26016 3171 434472 0) 0 nil])
([nil nil ((#("UNIFORM | " 0 7 (face font-lock-type-face fontified t) 7 10 (fontified t)) . -723) (undo-tree-id3734 . -10) (undo-tree-id3735 . -10) (undo-tree-id3736 . -10) (undo-tree-id3737 . -10) (undo-tree-id3738 . -10) (undo-tree-id3739 . -10) (undo-tree-id3740 . -10) (undo-tree-id3741 . -10) (undo-tree-id3742 . -10) (undo-tree-id3743 . -10) (undo-tree-id3744 . -10) (undo-tree-id3745 . -10) (undo-tree-id3746 . -10) (undo-tree-id3747 . -10) (undo-tree-id3748 . -10) (undo-tree-id3749 . -10) 733) nil (26016 3171 434457 0) 0 nil])
([nil nil ((#("BufferUsages::" 0 12 (face font-lock-type-face fontified t) 12 14 (fontified t)) . -709) (undo-tree-id3716 . -14) (undo-tree-id3717 . -14) (undo-tree-id3718 . -14) (undo-tree-id3719 . -14) (undo-tree-id3720 . -14) (undo-tree-id3721 . -14) (undo-tree-id3722 . -14) (undo-tree-id3723 . -14) (undo-tree-id3724 . -14) (undo-tree-id3725 . -14) (undo-tree-id3726 . -14) (undo-tree-id3727 . -14) (undo-tree-id3728 . -14) (undo-tree-id3729 . -14) (undo-tree-id3730 . -14) (undo-tree-id3731 . -14) (undo-tree-id3732 . -14) (undo-tree-id3733 . -14) 723) nil (26016 3171 434439 0) 0 nil])
([nil nil ((#("wgpu::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -703) (undo-tree-id3695 . -4) (undo-tree-id3696 . -6) (undo-tree-id3697 . -6) (undo-tree-id3698 . -6) (undo-tree-id3699 . -6) (undo-tree-id3700 . -6) (undo-tree-id3701 . -6) (undo-tree-id3702 . -6) (undo-tree-id3703 . -6) (undo-tree-id3704 . -6) (undo-tree-id3705 . -6) (undo-tree-id3706 . -6) (undo-tree-id3707 . -6) (undo-tree-id3708 . -6) (undo-tree-id3709 . -6) (undo-tree-id3710 . -6) (undo-tree-id3711 . -6) (undo-tree-id3712 . -6) (undo-tree-id3713 . -6) (undo-tree-id3714 . -6) (undo-tree-id3715 . -6) 709) nil (26016 3171 434420 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -701) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (#(" " 0 1 (fontified t)) . -702) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) 703) nil (26016 3171 434393 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -788) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (#(" " 0 1 (fontified t)) . -789) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (#(" " 0 1 (fontified t)) . -790) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (#(" " 0 1 (fontified t)) . -791) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (#(" " 0 1 (fontified t)) . -792) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (#(" " 0 1 (fontified t)) . -793) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (#(" " 0 1 (fontified t)) . -794) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (#(" " 0 1 (fontified t)) . -795) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (#(" " 0 1 (fontified t)) . -796) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) 797 (t 26016 3171 445833 395000)) nil (26016 3661 797202 0) 0 nil])
([nil current ((#("use bytemuck::{Pod, Zeroable};
use wgpu::{Label, BufferUsages};


pub trait BindGroupLayout {
    fn desc(device: &wgpu::Device) -> wgpu::BindGroupLayout;
}

pub trait UniformBuffer: BindGroupLayout + Pod + Zeroable {
    fn create_buffer_and_bind_group(
        &self,
        device: &wgpu::Device,
        label: Label,
        usage: BufferUsages,
    ) -> (wgpu::Buffer, wgpu::BindGroup) {
        use wgpu::util::DeviceExt;
        // We'll want to update our lights position, so we use COPY_DST
        let buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label,
                contents: bytemuck::cast_slice(&[*self]),
                usage,
            }
        );

        let bind_group_layout = Self::desc(device);
       
        let bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &bind_group_layout,
            entries: &[wgpu::BindGroupEntry {
                binding: 0,
                resource: buffer.as_entire_binding(),
            }],
            label: None,
        });
        (buffer, bind_group)
    }
}

" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 12 (face font-lock-constant-face fontified t) 12 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 18 (face font-lock-type-face fontified t) 18 20 (fontified t) 20 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 39 (face font-lock-constant-face fontified t) 39 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 47 (face font-lock-type-face fontified t) 47 49 (fontified t) 49 61 (face font-lock-type-face fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 69 (face font-lock-keyword-face fontified t) 69 70 (fontified t) 70 75 (face font-lock-keyword-face fontified t) 75 76 (fontified t) 76 91 (face font-lock-type-face fontified t) 91 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (fontified t) 94 98 (fontified t) 98 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 105 (face font-lock-function-name-face fontified t) 105 106 (face (rainbow-delimiters-depth-2-face) fontified t) 106 112 (face font-lock-variable-name-face fontified t) 112 114 (fontified t) 114 115 (face rust-ampersand-face fontified t) 115 119 (face font-lock-constant-face fontified t) 119 121 (fontified t) 121 127 (face font-lock-type-face fontified t) 127 128 (face (rainbow-delimiters-depth-2-face) fontified t) 128 130 (fontified t) 130 131 (fontified t syntax-table (1)) 131 132 (fontified t) 132 136 (face font-lock-constant-face fontified t) 136 138 (fontified t) 138 153 (face font-lock-type-face fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (face (rainbow-delimiters-depth-1-face) fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 161 (face font-lock-keyword-face fontified t) 161 162 (fontified t) 162 167 (face font-lock-keyword-face fontified t) 167 168 (fontified t) 168 181 (face font-lock-variable-name-face fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 198 (face font-lock-type-face fontified t) 198 201 (fontified t) 201 204 (face font-lock-type-face fontified t) 204 207 (fontified t) 207 215 (face font-lock-type-face fontified t) 215 216 (fontified t) 216 217 (face (rainbow-delimiters-depth-1-face) fontified t) 217 218 (fontified t) 218 222 (fontified t) 222 224 (face font-lock-keyword-face fontified t) 224 225 (fontified t) 225 253 (face font-lock-function-name-face fontified t) 253 254 (face (rainbow-delimiters-depth-2-face) fontified t) 254 255 (fontified t) 255 263 (fontified t) 263 264 (face rust-ampersand-face fontified t) 264 268 (face font-lock-keyword-face fontified t) 268 270 (fontified t) 270 278 (fontified t) 278 284 (face font-lock-variable-name-face fontified t) 284 286 (fontified t) 286 287 (face rust-ampersand-face fontified t) 287 291 (face font-lock-constant-face fontified t) 291 293 (fontified t) 293 299 (face font-lock-type-face fontified t) 299 301 (fontified t) 301 309 (fontified t) 309 314 (face font-lock-variable-name-face fontified t) 314 316 (fontified t) 316 321 (face font-lock-type-face fontified t) 321 323 (fontified t) 323 331 (fontified t) 331 336 (face font-lock-variable-name-face fontified t) 336 338 (fontified t) 338 350 (face font-lock-type-face fontified t) 350 351 (fontified t) 351 352 (fontified t) 352 356 (fontified t) 356 357 (face (rainbow-delimiters-depth-2-face) fontified t) 357 359 (fontified t) 359 360 (fontified t syntax-table (1)) 360 361 (fontified t) 361 362 (face (rainbow-delimiters-depth-2-face) fontified t) 362 366 (face font-lock-constant-face fontified t) 366 368 (fontified t) 368 374 (face font-lock-type-face fontified t) 374 376 (fontified t) 376 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 391 (face font-lock-type-face fontified t) 391 392 (face (rainbow-delimiters-depth-2-face) fontified t) 392 393 (fontified t) 393 394 (face (rainbow-delimiters-depth-2-face) fontified t) 394 395 (fontified t) 395 403 (fontified t) 403 406 (face font-lock-keyword-face fontified t) 406 407 (fontified t) 407 411 (face font-lock-constant-face fontified t) 411 413 (fontified t) 413 417 (face font-lock-constant-face fontified t) 417 419 (fontified t) 419 428 (face font-lock-type-face fontified t) 428 429 (fontified t) 429 430 (fontified t) 430 438 (fontified t) 438 441 (face font-lock-comment-delimiter-face fontified t) 441 502 (face font-lock-comment-face fontified t) 502 510 (fontified t) 510 513 (face font-lock-keyword-face fontified t) 513 514 (fontified t) 514 520 (face font-lock-variable-name-face fontified t) 520 548 (fontified t) 548 549 (face (rainbow-delimiters-depth-3-face) fontified t) 549 550 (fontified t) 550 562 (fontified t) 562 563 (face rust-ampersand-face fontified t) 563 567 (face font-lock-constant-face fontified t) 567 569 (fontified t) 569 573 (face font-lock-constant-face fontified t) 573 575 (fontified t) 575 595 (face font-lock-type-face fontified t) 595 596 (fontified t) 596 597 (face (rainbow-delimiters-depth-4-face) fontified t) 597 598 (fontified t) 598 614 (fontified t) 614 619 (fontified t) 619 621 (fontified t) 621 637 (fontified t) 637 645 (face font-lock-variable-name-face fontified t) 645 647 (fontified t) 647 655 (face font-lock-constant-face fontified t) 655 667 (fontified t) 667 668 (face (rainbow-delimiters-depth-5-face) fontified t) 668 669 (face rust-ampersand-face fontified t) 669 670 (face (rainbow-delimiters-depth-6-face) fontified t) 670 671 (fontified t) 671 675 (face font-lock-keyword-face fontified t) 675 676 (face (rainbow-delimiters-depth-6-face) fontified t) 676 677 (face (rainbow-delimiters-depth-5-face) fontified t) 677 679 (fontified t) 679 695 (fontified t) 695 700 (fontified t) 700 702 (fontified t) 702 714 (fontified t) 714 715 (face (rainbow-delimiters-depth-4-face) fontified t) 715 724 (fontified t) 724 725 (face (rainbow-delimiters-depth-3-face) fontified t) 725 727 (fontified t) 727 728 (fontified t) 728 736 (fontified t) 736 739 (face font-lock-keyword-face fontified t) 739 740 (fontified t) 740 757 (face font-lock-variable-name-face fontified t) 757 760 (fontified t) 760 764 (face font-lock-type-face fontified t) 764 766 (fontified t) 766 770 (fontified t) 770 771 (face (rainbow-delimiters-depth-3-face) fontified t) 771 777 (fontified t) 777 778 (face (rainbow-delimiters-depth-3-face) fontified t) 778 779 (fontified t) 779 780 (fontified t) 780 787 (fontified t) 787 788 (fontified t) 788 796 (fontified t) 796 799 (face font-lock-keyword-face fontified t) 799 800 (fontified t) 800 810 (face font-lock-variable-name-face fontified t) 810 837 (fontified t) 837 838 (face (rainbow-delimiters-depth-3-face) fontified t) 838 839 (face rust-ampersand-face fontified t) 839 843 (face font-lock-constant-face fontified t) 843 845 (fontified t) 845 864 (face font-lock-type-face fontified t) 864 865 (fontified t) 865 866 (face (rainbow-delimiters-depth-4-face) fontified t) 866 867 (fontified t) 867 879 (fontified t) 879 885 (face font-lock-variable-name-face fontified t) 885 887 (fontified t) 887 888 (face rust-ampersand-face fontified t) 888 907 (fontified t) 907 919 (fontified t) 919 926 (face font-lock-variable-name-face fontified t) 926 928 (fontified t) 928 929 (face rust-ampersand-face fontified t) 929 930 (face (rainbow-delimiters-depth-5-face) fontified t) 930 934 (face font-lock-constant-face fontified t) 934 936 (fontified t) 936 950 (face font-lock-type-face fontified t) 950 951 (fontified t) 951 952 (face (rainbow-delimiters-depth-6-face) fontified t) 952 969 (fontified t) 969 976 (face font-lock-variable-name-face fontified t) 976 981 (fontified t) 981 997 (fontified t) 997 1005 (face font-lock-variable-name-face fontified t) 1005 1007 (fontified t) 1007 1014 (fontified t) 1014 1031 (fontified t) 1031 1032 (face (rainbow-delimiters-depth-7-face) fontified t) 1032 1033 (face (rainbow-delimiters-depth-7-face) fontified t) 1033 1035 (fontified t) 1035 1047 (fontified t) 1047 1048 (face (rainbow-delimiters-depth-6-face) fontified t) 1048 1049 (face (rainbow-delimiters-depth-5-face) fontified t) 1049 1051 (fontified t) 1051 1063 (fontified t) 1063 1068 (face font-lock-variable-name-face fontified t) 1068 1070 (fontified t) 1070 1074 (face font-lock-type-face fontified t) 1074 1076 (fontified t) 1076 1084 (fontified t) 1084 1085 (face (rainbow-delimiters-depth-4-face) fontified t) 1085 1086 (face (rainbow-delimiters-depth-3-face) fontified t) 1086 1087 (fontified t rear-nonsticky t) 1087 1088 (fontified t) 1088 1096 (fontified t) 1096 1097 (face (rainbow-delimiters-depth-3-face) fontified t) 1097 1105 (fontified t) 1105 1115 (fontified t) 1115 1116 (face (rainbow-delimiters-depth-3-face) fontified t) 1116 1117 (fontified t) 1117 1121 (fontified t) 1121 1122 (face (rainbow-delimiters-depth-2-face) fontified t) 1122 1123 (fontified t) 1123 1124 (face (rainbow-delimiters-depth-1-face) fontified t) 1124 1125 (fontified t) 1125 1126 (fontified t)) . 1) (undo-tree-id3825 . -142) (undo-tree-id3826 . -1126) (undo-tree-id3827 . -222) (undo-tree-id3828 . -1124) (undo-tree-id3829 . -80) (undo-tree-id3830 . -156) (undo-tree-id3831 . -430) (undo-tree-id3832 . -1126) (undo-tree-id3833 . -787) (undo-tree-id3834 . -673) (undo-tree-id3835 . -727) (undo-tree-id3836 . -268) (undo-tree-id3837 . -700) (undo-tree-id3838 . -198) (undo-tree-id3839 . -619) (undo-tree-id3840 . -617) (undo-tree-id3841 . -616) (undo-tree-id3842 . -142) (undo-tree-id3843 . -142) (undo-tree-id3844 . -142) (undo-tree-id3845 . -142) (undo-tree-id3846 . -142) (undo-tree-id3847 . -142) (undo-tree-id3848 . -142) (undo-tree-id3849 . -1126) (undo-tree-id3850 . -1126) (undo-tree-id3851 . -1126) (undo-tree-id3852 . -1124) (undo-tree-id3853 . -1044) (undo-tree-id3854 . -796) (undo-tree-id3855 . -722) (undo-tree-id3856 . -555) (undo-tree-id3857 . -305) (undo-tree-id3858 . -157) (undo-tree-id3859 . -156) (undo-tree-id3860 . -97) (undo-tree-id3861 . -65) (undo-tree-id3862 . -34) (undo-tree-id3863 . -142) (undo-tree-id3864 . -1126) (undo-tree-id3865 . -1126) (undo-tree-id3866 . -1126) (undo-tree-id3867 . -1126) (undo-tree-id3868 . -1126) (undo-tree-id3869 . -1126) (undo-tree-id3870 . -1126) (undo-tree-id3871 . -1126) (undo-tree-id3872 . -1126) (undo-tree-id3873 . -1126) (undo-tree-id3874 . -1066) (undo-tree-id3875 . -965) (undo-tree-id3876 . -787) (undo-tree-id3877 . -736) (undo-tree-id3878 . -722) (undo-tree-id3879 . -509) (undo-tree-id3880 . -360) (undo-tree-id3881 . -310) (undo-tree-id3882 . -169) (undo-tree-id3883 . -65) (undo-tree-id3884 . -15) (undo-tree-id3885 . -1126) (undo-tree-id3886 . -1126) (undo-tree-id3887 . -1126) (undo-tree-id3888 . -571) (undo-tree-id3889 . -571) (undo-tree-id3890 . -571) (undo-tree-id3891 . -571) (undo-tree-id3892 . -571) (undo-tree-id3893 . -571) (undo-tree-id3894 . -571) (undo-tree-id3895 . -571) (undo-tree-id3896 . -571) (undo-tree-id3897 . -571) (undo-tree-id3898 . -571) (undo-tree-id3899 . -571) (undo-tree-id3900 . -571) (undo-tree-id3901 . -571) (undo-tree-id3902 . -571) (undo-tree-id3903 . -571) (undo-tree-id3904 . -571) (undo-tree-id3905 . -571) (undo-tree-id3906 . -571) (undo-tree-id3907 . -571) (undo-tree-id3908 . -571) (undo-tree-id3909 . -571) (undo-tree-id3910 . -571) (undo-tree-id3911 . -571) (undo-tree-id3912 . -571) (undo-tree-id3913 . -571) (undo-tree-id3914 . -571) (undo-tree-id3915 . -571) (undo-tree-id3916 . -571) (undo-tree-id3917 . -571) (undo-tree-id3918 . -571) (undo-tree-id3919 . -571) (undo-tree-id3920 . -571) (undo-tree-id3921 . -571) (undo-tree-id3922 . -571) (undo-tree-id3923 . -571) (undo-tree-id3924 . -571) (undo-tree-id3925 . -571) (undo-tree-id3926 . -571) (undo-tree-id3927 . -571) (undo-tree-id3928 . -571) (undo-tree-id3929 . -571) (undo-tree-id3930 . -571) (undo-tree-id3931 . -571) (undo-tree-id3932 . -571) (undo-tree-id3933 . -571) (undo-tree-id3934 . -571) (undo-tree-id3935 . -571) (undo-tree-id3936 . -571) (undo-tree-id3937 . -571) (undo-tree-id3938 . -571) (undo-tree-id3939 . -571) (undo-tree-id3940 . -571) (undo-tree-id3941 . -571) (undo-tree-id3942 . -571) (undo-tree-id3943 . -571) (undo-tree-id3944 . -571) (undo-tree-id3945 . -571) (undo-tree-id3946 . -571) (undo-tree-id3947 . -571) (undo-tree-id3948 . -571) (undo-tree-id3949 . -571) (undo-tree-id3950 . -571) (undo-tree-id3951 . -571) (undo-tree-id3952 . -571) (undo-tree-id3953 . -571) (undo-tree-id3954 . -571) (undo-tree-id3955 . -571) (undo-tree-id3956 . -571) (undo-tree-id3957 . -571) (undo-tree-id3958 . -571) (undo-tree-id3959 . -571) (undo-tree-id3960 . -571) (undo-tree-id3961 . -571) (undo-tree-id3962 . -571) (undo-tree-id3963 . -571) (undo-tree-id3964 . -571) (undo-tree-id3965 . -571) (undo-tree-id3966 . -571) (undo-tree-id3967 . -571) (undo-tree-id3968 . -571) (undo-tree-id3969 . -571) (undo-tree-id3970 . -571) (undo-tree-id3971 . -571) (undo-tree-id3972 . -571) (undo-tree-id3973 . -571) (undo-tree-id3974 . -571) (undo-tree-id3975 . -571) (undo-tree-id3976 . -571) (undo-tree-id3977 . -571) (undo-tree-id3978 . -571) (undo-tree-id3979 . -571) (undo-tree-id3980 . -571) (undo-tree-id3981 . -571) (undo-tree-id3982 . -1126) (undo-tree-id3983 . -147) (undo-tree-id3984 . -147) (undo-tree-id3985 . -147) (undo-tree-id3986 . -147) (undo-tree-id3987 . -147) (undo-tree-id3988 . -147) (undo-tree-id3989 . -147) (undo-tree-id3990 . -147) (undo-tree-id3991 . -147) (undo-tree-id3992 . -147) (undo-tree-id3993 . -147) (undo-tree-id3994 . -147) (undo-tree-id3995 . -147) (undo-tree-id3996 . -147) (undo-tree-id3997 . -147) (undo-tree-id3998 . -147) (undo-tree-id3999 . -147) (undo-tree-id4000 . -147) (undo-tree-id4001 . -147) (undo-tree-id4002 . -147) (undo-tree-id4003 . -147) (undo-tree-id4004 . -147) (undo-tree-id4005 . -147) (undo-tree-id4006 . -147) (undo-tree-id4007 . -147) (undo-tree-id4008 . -147) (undo-tree-id4009 . -147) (undo-tree-id4010 . -147) (undo-tree-id4011 . -147) (undo-tree-id4012 . -147) (undo-tree-id4013 . -147) (undo-tree-id4014 . -147) (undo-tree-id4015 . -147) (undo-tree-id4016 . -147) (undo-tree-id4017 . -147) (undo-tree-id4018 . -147) (undo-tree-id4019 . -147) (undo-tree-id4020 . -147) (undo-tree-id4021 . -147) (undo-tree-id4022 . -147) (undo-tree-id4023 . -142) (undo-tree-id4024 . -142) (undo-tree-id4025 . -142) (undo-tree-id4026 . -142) (undo-tree-id4027 . -142) (undo-tree-id4028 . -142) (undo-tree-id4029 . -142) (undo-tree-id4030 . -142) (undo-tree-id4031 . -142) (undo-tree-id4032 . -142) (undo-tree-id4033 . -142) (undo-tree-id4034 . -142) (undo-tree-id4035 . -142) (undo-tree-id4036 . -142) (undo-tree-id4037 . -142) (undo-tree-id4038 . -142) (undo-tree-id4039 . -142) (undo-tree-id4040 . -142) (undo-tree-id4041 . -142) (undo-tree-id4042 . -142) (undo-tree-id4043 . -142) (undo-tree-id4044 . -142) (undo-tree-id4045 . -142) (undo-tree-id4046 . -142) (undo-tree-id4047 . -142) (undo-tree-id4048 . -142) (undo-tree-id4049 . -142) (undo-tree-id4050 . -142) (undo-tree-id4051 . -142) (undo-tree-id4052 . -142) (undo-tree-id4053 . -142) (undo-tree-id4054 . -142) (undo-tree-id4055 . -142) (undo-tree-id4056 . -142) (undo-tree-id4057 . -142) (undo-tree-id4058 . -142) (undo-tree-id4059 . -142) (undo-tree-id4060 . -1126) (undo-tree-id4061 . -1126) (undo-tree-id4062 . -1126) (undo-tree-id4063 . -961) (undo-tree-id4064 . -142) (undo-tree-id4065 . -1126)) nil (26016 3661 797168 0) 0 nil])
nil
