(undo-tree-save-format-version . 1)
"766baac45ee25204d75f47a1b0d39bca40b1f878"
[nil nil nil nil (26011 38129 360846 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 2440 . 2441) (nil fontified nil 1 . 2441) (1 . 2441) (t 26011 37996 656086 640000)) nil (26011 38129 360841 0) 0 nil])
([nil nil ((2441 . 2442) (t 26011 38129 363452 745000)) nil (26011 51903 296605 0) 0 nil])
([nil nil ((2441 . 2445) (#("    " 0 4 (fontified nil)) . 2440) (undo-tree-id101 . -4) (2440 . 2445) (#("    " 0 4 (fontified nil)) . 2439) (undo-tree-id102 . -4) (2438 . 2444)) nil (26011 51903 296603 0) 0 nil])
([nil nil ((2445 . 2466)) nil (26011 51903 296599 0) 0 nil])
([nil nil ((2466 . 2468)) nil (26011 51903 296598 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -2466) (undo-tree-id99 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2467) (undo-tree-id100 . -1) 2468) nil (26011 51903 296597 0) 0 nil])
([nil nil ((2466 . 2471)) nil (26011 51903 296594 0) 0 nil])
([nil nil ((2470 . 2471)) nil (26011 51903 296593 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2470) (undo-tree-id98 . -1) 2471) nil (26011 51903 296591 0) 0 nil])
([nil nil ((2470 . 2475)) nil (26011 51903 296589 0) 0 nil])
([nil nil ((2476 . 2479)) nil (26011 51903 296588 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2477) (undo-tree-id96 . -1) (#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -2478) (undo-tree-id97 . -1) 2479) nil (26011 51903 296587 0) 0 nil])
([nil nil ((2477 . 2479)) nil (26011 51903 296579 0) 0 nil])
([nil nil ((2480 . 2484) (#("        " 0 8 (fontified nil)) . 2479) (2479 . 2487) (#("    " 0 4 (fontified nil)) . 2479) (undo-tree-id95 . -4) (2478 . 2484)) nil (26011 51903 296577 0) 0 nil])
([nil nil ((2477 . 2481)) nil (26011 51903 296574 0) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-type-face fontified t)) . -2480) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 2481) nil (26011 51903 296573 0) 0 nil])
([nil nil ((2480 . 2482)) nil (26011 51903 296570 0) 0 nil])
([nil nil ((2480 . 2484) (#("wg" 0 2 (fontified nil)) . 2480) (2480 . 2482) (#("wgpu" 0 4 (fontified nil)) . -2480) (2480 . 2484) (#("wg" 0 2 (fontified t)) . -2480) (undo-tree-id87 . -2) (undo-tree-id88 . -1) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) 2482) nil (26011 51903 296568 0) 0 nil])
([nil nil ((2484 . 2490)) nil (26011 51903 296560 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2486) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("i" 0 1 (fontified t)) . -2487) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("n" 0 1 (fontified t)) . -2488) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("d" 0 1 (fontified t)) . -2489) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 2490) nil (26011 51903 296557 0) 0 nil])
([nil nil ((2486 . 2490)) nil (26011 51903 296523 0) 0 nil])
([nil nil ((2486 . 2495) (#("Bind" 0 4 (fontified nil)) . 2486) (2486 . 2490) (#("BindGroup" 0 9 (fontified nil)) . -2486) (2486 . 2495) (#("Bind" 0 4 (face font-lock-type-face fontified t)) . -2486) (undo-tree-id51 . -4) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -2) (undo-tree-id55 . -2) 2490) nil (26011 51903 296521 0) 0 nil])
([nil nil ((2495 . 2496)) nil (26011 51903 296514 0) 0 nil])
([nil nil ((nil fontified nil 3184 . 3185) (nil fontified nil 3183 . 3184) (nil fontified nil 3182 . 3183) (nil fontified nil 3173 . 3182) (nil fontified nil 3172 . 3173) (nil fontified nil 3158 . 3172) (nil fontified nil 3157 . 3158) (nil fontified nil 3137 . 3157) (nil fontified nil 3136 . 3137) (nil fontified nil 3132 . 3136) (nil fontified nil 3130 . 3132) (nil fontified nil 3125 . 3130) (nil fontified nil 3107 . 3125) (nil fontified nil 3106 . 3107) (nil fontified nil 3089 . 3106) (nil fontified nil 3088 . 3089) (nil fontified nil 3068 . 3088) (nil fontified nil 3059 . 3068) (nil fontified nil 3056 . 3059) (nil fontified nil 3054 . 3056) (nil fontified nil 3053 . 3054) (nil fontified nil 3030 . 3053) (nil fontified nil 3029 . 3030) (nil fontified nil 3028 . 3029) (nil fontified nil 3021 . 3028) (nil fontified nil 3019 . 3021) (nil fontified nil 3004 . 3019) (nil fontified nil 3002 . 3004) (nil fontified nil 2998 . 3002) (nil fontified nil 2996 . 2998) (nil fontified nil 2988 . 2996) (nil fontified nil 2964 . 2988) (nil fontified nil 2959 . 2964) (nil fontified nil 2952 . 2959) (nil fontified nil 2932 . 2952) (nil fontified nil 2928 . 2932) (nil fontified nil 2927 . 2928) (nil fontified nil 2926 . 2927) (nil fontified nil 2925 . 2926) (nil fontified nil 2923 . 2925) (nil fontified nil 2922 . 2923) (nil fontified nil 2911 . 2922) (nil fontified nil 2909 . 2911) (nil fontified nil 2905 . 2909) (nil fontified nil 2883 . 2905) (nil fontified nil 2882 . 2883) (nil fontified nil 2862 . 2882) (nil fontified nil 2853 . 2862) (nil fontified nil 2850 . 2853) (nil fontified nil 2848 . 2850) (nil fontified nil 2847 . 2848) (nil fontified nil 2827 . 2847) (nil fontified nil 2826 . 2827) (nil fontified nil 2825 . 2826) (nil fontified nil 2814 . 2825) (nil fontified nil 2812 . 2814) (nil fontified nil 2804 . 2812) (nil fontified nil 2797 . 2804) (nil fontified nil 2795 . 2797) (nil fontified nil 2794 . 2795) (nil fontified nil 2791 . 2794) (nil fontified nil 2789 . 2791) (nil fontified nil 2781 . 2789) (nil fontified nil 2752 . 2781) (nil fontified nil 2745 . 2752) (nil fontified nil 2721 . 2745) (nil fontified nil 2720 . 2721) (nil fontified nil 2719 . 2720) (nil fontified nil 2718 . 2719) (nil fontified nil 2704 . 2718) (nil fontified nil 2702 . 2704) (nil fontified nil 2698 . 2702) (nil fontified nil 2686 . 2698) (nil fontified nil 2679 . 2686) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2673 . 2675) (nil fontified nil 2666 . 2673) (nil fontified nil 2650 . 2666) (nil fontified nil 2641 . 2650) (nil fontified nil 2629 . 2641) (nil fontified nil 2623 . 2629) (nil fontified nil 2622 . 2623) (nil fontified nil 2620 . 2622) (nil fontified nil 2614 . 2620) (nil fontified nil 2604 . 2614) (nil fontified nil 2598 . 2604) (nil fontified nil 2597 . 2598) (nil fontified nil 2596 . 2597) (nil fontified nil 2595 . 2596) (nil fontified nil 2585 . 2595) (nil fontified nil 2576 . 2585) (nil fontified nil 2574 . 2576) (nil fontified nil 2570 . 2574) (nil fontified nil 2569 . 2570) (nil fontified nil 2567 . 2569) (nil fontified nil 2557 . 2567) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2554 . 2555) (nil fontified nil 2528 . 2554) (nil fontified nil 2510 . 2528) (nil fontified nil 2509 . 2510) (nil fontified nil 2506 . 2509) (nil fontified nil 2498 . 2506) (2498 . 3185)) nil (26011 51903 296508 0) 0 nil])
([nil nil ((3185 . 3193)) nil (26011 51903 296479 0) 0 nil])
([nil nil ((#("texture" 0 7 (fontified t)) . -2835) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) 2842) nil (26011 51903 296478 0) 0 nil])
([nil nil ((#("diffuse_" 0 8 (fontified t)) . -2827) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) 2835) nil (26011 51903 296468 0) 0 nil])
([nil nil ((2827 . 2830)) nil (26011 51903 296459 0) 0 nil])
([nil nil ((2827 . 2831) (#("sel" 0 3 (fontified nil)) . 2827) (2827 . 2830) (#("self" 0 4 (fontified nil)) . -2827) (2827 . 2831) (#("sel" 0 3 (fontified t)) . -2827) (undo-tree-id24 . -3) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) 2830) nil (26011 51903 296457 0) 0 nil])
([nil nil ((#("texture" 0 7 (fontified t)) . -3027) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) 3034) nil (26011 51903 296444 0) 0 nil])
([nil nil ((#("diffuse_" 0 8 (fontified t)) . -3019) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) 3027) nil (26011 51903 296436 0) 0 nil])
([nil nil ((3019 . 3023)) nil (26011 51903 296426 0) 0 nil])
([nil nil ((3019 . 3023) (#("self" 0 4 (fontified nil)) . 3019) (3019 . 3023) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -3019) (undo-tree-id0 . -4) (undo-tree-id1 . -1) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -4) (undo-tree-id7 . -4) 3023) nil (26011 51903 296422 0) 0 nil])
([nil nil ((2475 . 2477) (t 26011 51903 300194 142000)) nil (26011 51922 847748 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2501 . 2502) (nil fontified nil 2495 . 2502) (nil fontified nil 2483 . 2495) (nil fontified nil 2477 . 2483) (2477 . 2502)) nil (26011 51922 847746 0) 0 nil])
([nil nil ((2502 . 2506)) nil (26011 51922 847744 0) 0 nil])
([nil nil ((2504 . 2525) (#("wg" 0 2 (fontified nil)) . 2504) (2504 . 2506) (#("wgpu::BindGroupLayout" 0 21 (fontified nil)) . -2504) (2504 . 2525) (#("wg" 0 2 (fontified t)) . -2504) (undo-tree-id111 . -2) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) 2506) nil (26011 51922 847742 0) 0 nil])
([nil nil ((2525 . 2526)) nil (26011 51922 847732 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2525) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 2526) nil (26011 51922 847728 0) 0 nil])
([nil nil ((2476 . 2482) (t 26011 51922 851490 730000)) nil (26011 51930 875639 0) 0 nil])
([nil nil ((2476 . 2498) (#("device" 0 6 (fontified nil)) . 2476) (2476 . 2482) (#("device: &wgpu::Device," 0 22 (fontified nil)) . -2476) (2476 . 2498) (#("device" 0 6 (fontified t)) . -2476) (undo-tree-id119 . -6) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) 2482) nil (26011 51930 875635 0) 0 nil])
([nil nil ((3243 . 3244) (t 26011 51930 878997 563000)) nil (26011 51939 154266 0) 0 nil])
([nil nil ((3243 . 3261) (#("d" 0 1 (fontified nil)) . 3243) (3243 . 3244) (#("diffuse_bind_group" 0 18 (fontified nil)) . -3243) (3243 . 3261) (#("d" 0 1 (fontified t)) . -3243) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 3244) nil (26011 51939 154262 0) 0 nil])
([nil nil ((2470 . 2479) (t 26011 51939 157994 50000)) nil (26011 51965 63175 0) 0 nil])
([nil nil ((2508 . 2516) (#(" " 0 1 (fontified nil)) . 2507) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (2508 . 2509)) nil (26011 51965 63173 0) 0 nil])
([nil nil ((2564 . 2569)) nil (26011 51965 63157 0) 0 nil])
([nil nil ((2485 . 2494)) nil (26011 51965 63153 0) 0 nil])
([nil nil ((2552 . 2553) (t 26011 51965 66529 268000)) nil (26011 52018 535469 0) 0 nil])
([nil nil ((183 . 187) (#("    " 0 4 (fontified nil)) . 182) (undo-tree-id192 . -4) (181 . 187) (t 26011 52018 538870 595000)) nil (26011 52176 655260 0) 0 nil])
([nil nil ((182 . 186)) nil (26011 52176 655258 0) 0 nil])
([nil nil ((186 . 202)) nil (26011 52176 655257 0) 0 nil])
([nil nil ((202 . 204)) nil (26011 52176 655256 0) 0 nil])
([nil nil ((204 . 206)) nil (26011 52176 655255 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -205) (undo-tree-id191 . -1) 206) nil (26011 52176 655254 0) 0 nil])
([nil nil ((205 . 206)) nil (26011 52176 655251 0) 0 nil])
([nil nil ((206 . 209)) nil (26011 52176 655250 0) 0 nil])
([nil nil ((apply yas--snippet-revive 208 216 #s(yas--snippet nil nil #s(yas--exit 215 nil) 33 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 215 nil) 33 nil nil nil nil)) (208 . 216) (#("Result<$0>" 0 10 (fontified nil)) . 208) (208 . 218) (#("R" 0 1 (fontified nil)) . 208) (208 . 209) (#("Result<…>" 0 9 (fontified nil)) . -208) (208 . 217) (#("R" 0 1 (face font-lock-type-face fontified t)) . -208) (undo-tree-id190 . -1) 209) nil (26011 52176 655249 0) 0 nil])
([nil nil ((215 . 217)) nil (26011 52176 655244 0) 0 nil])
([nil nil ((215 . 219) (#("Se" 0 2 (fontified nil)) . 215) (215 . 217) (#("Self" 0 4 (fontified nil)) . -215) (215 . 219) (#("Se" 0 2 (face font-lock-type-face fontified t)) . -215) (undo-tree-id188 . -2) (undo-tree-id189 . -2) 217) nil (26011 52176 655243 0) 0 nil])
([nil nil ((220 . 223)) nil (26011 52176 655238 0) 0 nil])
([nil nil ((224 . 228) (#("        " 0 8 (fontified nil)) . 223) (223 . 231) (#("    " 0 4 (fontified nil)) . 223) (undo-tree-id187 . -4) (222 . 228)) nil (26011 52176 655237 0) 0 nil])
([nil nil ((205 . 209) (#("        " 0 8 (fontified nil)) . 204) (204 . 212) (#("    " 0 4 (fontified nil)) . 204) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (203 . 209)) nil (26011 52176 655234 0) 0 nil])
([nil nil ((204 . 212)) nil (26011 52176 655230 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 270 . 271) (nil fontified nil 270 . 271) (nil fontified nil 265 . 270) (nil fontified nil 263 . 265) (nil fontified nil 259 . 263) (nil fontified nil 258 . 259) (nil fontified nil 256 . 258) (nil fontified nil 251 . 256) (nil fontified nil 241 . 251) (nil fontified nil 235 . 241) (nil fontified nil 233 . 235) (nil fontified nil 229 . 233) (nil fontified nil 228 . 229) (nil fontified nil 226 . 228) (nil fontified nil 220 . 226) (nil fontified nil 212 . 220) (212 . 271)) nil (26011 52176 655228 0) 0 nil])
([nil nil ((271 . 280)) nil (26011 52176 655223 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 306 . 307) (nil fontified nil 306 . 307) (nil fontified nil 303 . 306) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 295 . 301) (nil fontified nil 293 . 295) (nil fontified nil 288 . 293) (nil fontified nil 280 . 288) (280 . 307)) nil (26011 52176 655221 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -212) 233) nil (26011 52176 655218 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -272) 287) nil (26011 52176 655217 0) 0 nil])
([nil nil ((203 . 212)) nil (26011 52176 655215 0) 0 nil])
([nil nil ((212 . 213)) nil (26011 52176 655214 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -212) (undo-tree-id184 . -1) 213) nil (26011 52176 655213 0) 0 nil])
([nil nil ((212 . 218)) nil (26011 52176 655211 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -216) (undo-tree-id182 . -1) (#("a" 0 1 (fontified t)) . -217) (undo-tree-id183 . -1) 218) nil (26011 52176 655210 0) 0 nil])
([nil nil ((216 . 218)) nil (26011 52176 655206 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -212) (undo-tree-id176 . -1) (#("m" 0 1 (fontified t)) . -213) (undo-tree-id177 . -1) (#("g" 0 1 (fontified t)) . -214) (undo-tree-id178 . -1) (#("_" 0 1 (fontified t)) . -215) (undo-tree-id179 . -1) (#("p" 0 1 (fontified t)) . -216) (undo-tree-id180 . -1) (#("a" 0 1 (fontified t)) . -217) (undo-tree-id181 . -1) 218) nil (26011 52176 655204 0) 0 nil])
([nil nil ((212 . 219)) nil (26011 52176 655196 0) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -218) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 219) nil (26011 52176 655195 0) 0 nil])
([nil nil ((218 . 227)) nil (26011 52176 655189 0) 0 nil])
([nil nil ((223 . 227) (#("Path" 0 4 (fontified nil)) . 223) (223 . 227) (#("path" 0 4 (fontified nil)) . -223) (223 . 227) (#("Path" 0 4 (face font-lock-type-face fontified t)) . -223) (undo-tree-id150 . -4) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) 227) nil (26011 52176 655186 0) 0 nil])
([nil nil ((227 . 230)) nil (26011 52176 655163 0) 0 nil])
([nil nil ((229 . 233) (#("P" 0 1 (fontified nil)) . 229) (229 . 230) (#("Path" 0 4 (fontified nil)) . -229) (229 . 233) (#("P" 0 1 (face font-lock-type-face fontified t)) . -229) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 230) nil (26011 52176 655161 0) 0 nil])
([nil nil ((233 . 234)) nil (26011 52176 655147 0) 0 nil])
([nil nil ((347 . 355) (t 26011 52176 661430 784000)) nil (26011 52203 400938 0) 0 nil])
([nil nil ((nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 517 . 523) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 508 . 515) (nil fontified nil 505 . 508) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil fontified nil 490 . 503) (nil fontified nil 482 . 490) (nil fontified nil 462 . 482) (nil fontified nil 459 . 462) (nil fontified nil 451 . 459) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 448 . 449) (nil fontified nil 447 . 448) (nil fontified nil 446 . 447) (nil fontified nil 442 . 446) (nil fontified nil 439 . 442) (nil fontified nil 436 . 439) (nil fontified nil 430 . 436) (nil fontified nil 429 . 430) (nil fontified nil 426 . 429) (nil fontified nil 425 . 426) (nil fontified nil 422 . 425) (nil fontified nil 414 . 422) (nil fontified nil 412 . 414) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 404 . 410) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 387 . 400) (nil fontified nil 386 . 387) (nil fontified nil 385 . 386) (nil fontified nil 379 . 385) (nil fontified nil 375 . 379) (nil fontified nil 372 . 375) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 367 . 370) (nil fontified nil 366 . 367) (nil fontified nil 363 . 366) (nil fontified nil 355 . 363) (355 . 526)) nil (26011 52203 400935 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -355) 392) nil (26011 52203 400921 0) 0 nil])
([nil nil ((#("png\"" 0 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t rear-nonsticky t) 3 4 (face font-lock-string-face fontified t)) . -390) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) 394) nil (26011 52203 400919 0) 0 nil])
([nil nil ((#("tree." 0 5 (face font-lock-string-face fontified t)) . -385) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) 390) nil (26011 52203 400908 0) 0 nil])
([nil nil ((#("happy-" 0 6 (face font-lock-string-face fontified t)) . -379) (undo-tree-id216 . -6) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) 385) nil (26011 52203 401215 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -378) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 379) nil (26011 52206 405794 0) 0 nil] [nil nil ((#("open(\"" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 6 (face font-lock-string-face fontified t)) . -373) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) 379) ((373 . 379)) (26011 52203 400866 0) 0 nil])
([nil nil ((378 . 379)) nil (26011 52206 405751 0) 0 nil])
nil
([nil nil ((378 . 382) (#("p" 0 1 (fontified nil)) . 378) (378 . 379) (#("path" 0 4 (fontified nil)) . -378) (378 . 382) (#("p" 0 1 (fontified t)) . -378) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 379) nil (26011 52206 405747 0) 0 nil])
([nil nil ((367 . 376) (t 26011 52206 412481 344000)) nil (26011 52217 684548 0) 0 nil])
([nil nil ((#("fs::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -372) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) 376 (t 26011 52217 691155 543000)) nil (26011 52237 795952 0) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -367) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) 372) nil (26011 52237 795942 0) 0 nil])
([nil nil ((1 . 2)) nil (26011 52237 795925 0) 0 nil])
([nil nil ((1 . 2)) nil (26011 52237 795924 0) 0 nil])
([nil nil ((nil fontified nil 56 . 57) (nil fontified nil 52 . 56) (nil fontified nil 50 . 52) (nil fontified nil 48 . 50) (nil fontified nil 46 . 48) (nil fontified nil 43 . 46) (nil fontified nil 42 . 43) (nil fontified nil 39 . 42) (nil fontified nil 34 . 39) (nil fontified nil 27 . 34) (nil fontified nil 25 . 27) (nil fontified nil 23 . 25) (nil fontified nil 21 . 23) (nil fontified nil 18 . 21) (nil fontified nil 17 . 18) (nil fontified nil 14 . 17) (nil fontified nil 8 . 14) (nil fontified nil 5 . 8) (nil fontified nil 4 . 5) (nil fontified nil 1 . 4) (1 . 57)) nil (26011 52237 795919 0) 0 nil])
([nil nil ((564 . 573) (t 26011 52237 805816 726000)) nil (26011 52260 78404 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 681 . 682) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 675 . 680) (nil fontified nil 674 . 675) (nil fontified nil 670 . 674) (nil fontified nil 665 . 670) (nil fontified nil 664 . 665) (nil fontified nil 649 . 664) (nil fontified nil 648 . 649) (nil fontified nil 636 . 648) (nil fontified nil 632 . 636) (nil fontified nil 622 . 632) (nil fontified nil 621 . 622) (nil fontified nil 620 . 621) (nil fontified nil 615 . 620) (nil fontified nil 614 . 615) (nil fontified nil 596 . 614) (nil fontified nil 591 . 596) (nil fontified nil 588 . 591) (nil fontified nil 585 . 588) (nil fontified nil 584 . 585) (nil fontified nil 581 . 584) (nil fontified nil 573 . 581) (573 . 682)) nil (26011 52260 78402 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -573) 606) nil (26011 52260 78395 0) 0 nil])
([nil nil ((#("bytes" 0 5 (fontified t)) . -607) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) 612) nil (26011 52260 78393 0) 0 nil])
([nil nil ((607 . 608)) nil (26011 52260 78382 0) 0 nil])
([nil nil ((607 . 608) (607 . 613) (#("b" 0 1 (fontified nil)) . 607) (607 . 608) (#("&buffer" 0 7 (fontified nil)) . -607) (607 . 614) (#("b" 0 1 (fontified t)) . -607) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 608) nil (26011 52260 78378 0) 0 nil])
([nil nil ((#("Some(" 0 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) fontified t)) . -664) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) 669 (t 26011 52260 84963 624000)) nil (26011 52268 314383 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -669) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 670) nil (26011 52268 314368 0) 0 nil])
([nil nil ((276 . 277) (t 26011 52268 321549 122000)) nil (26011 52290 100680 0) 0 nil])
([nil nil ((950 . 954) (#("    " 0 4 (fontified nil)) . 949) (undo-tree-id399 . -4) (948 . 954) (t 26011 52290 107914 711000)) nil (26011 54896 531823 0) 0 nil])
([nil nil ((954 . 961)) nil (26011 54896 531820 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -960) (undo-tree-id398 . -1) 961) nil (26011 54896 531819 0) 0 nil])
([nil nil ((#("    pub fn" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t)) . 950)) nil (26011 54896 531816 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 950)) nil (26011 54896 531815 0) 0 nil])
([nil nil ((2942 . 2946) (#("    " 0 4 (fontified nil)) . 2941) (undo-tree-id397 . -4) (2940 . 2946)) nil (26011 54896 531814 0) 0 nil])
([nil nil ((2946 . 2953)) nil (26011 54896 531812 0) 0 nil])
([nil nil ((2953 . 2956)) nil (26011 54896 531811 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-function-name-face fontified t)) . -2955) (undo-tree-id396 . -1) 2956) nil (26011 54896 531810 0) 0 nil])
([nil nil ((2955 . 2961)) nil (26011 54896 531807 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -2960) (undo-tree-id395 . -1) 2961) nil (26011 54896 531806 0) 0 nil])
([nil nil ((2960 . 2967)) nil (26011 54896 531804 0) 0 nil])
([nil nil ((2967 . 2972)) nil (26011 54896 531803 0) 0 nil])
([nil nil ((2973 . 2977) (#("        " 0 8 (fontified nil)) . 2972) (2972 . 2980) (#("    " 0 4 (fontified nil)) . 2972) (undo-tree-id394 . -4) (2971 . 2977)) nil (26011 54896 531802 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3445 . 3446) (nil fontified nil 3445 . 3446) (nil fontified nil 3444 . 3445) (nil fontified nil 3416 . 3444) (nil fontified nil 3415 . 3416) (nil fontified nil 3401 . 3415) (nil fontified nil 3400 . 3401) (nil fontified nil 3388 . 3400) (nil fontified nil 3387 . 3388) (nil fontified nil 3383 . 3387) (nil fontified nil 3381 . 3383) (nil fontified nil 3367 . 3381) (nil fontified nil 3351 . 3367) (nil fontified nil 3349 . 3351) (nil fontified nil 3348 . 3349) (nil fontified nil 3332 . 3348) (nil fontified nil 3331 . 3332) (nil fontified nil 3327 . 3331) (nil fontified nil 3325 . 3327) (nil fontified nil 3316 . 3325) (nil fontified nil 3312 . 3316) (nil fontified nil 3300 . 3312) (nil fontified nil 3296 . 3300) (nil fontified nil 3291 . 3296) (nil fontified nil 3285 . 3291) (nil fontified nil 3271 . 3285) (nil fontified nil 3269 . 3271) (nil fontified nil 3268 . 3269) (nil fontified nil 3267 . 3268) (nil fontified nil 3266 . 3267) (nil fontified nil 3251 . 3266) (nil fontified nil 3249 . 3251) (nil fontified nil 3245 . 3249) (nil fontified nil 3243 . 3245) (nil fontified nil 3227 . 3243) (nil fontified nil 3226 . 3227) (nil fontified nil 3214 . 3226) (nil fontified nil 3212 . 3214) (nil fontified nil 3211 . 3212) (nil fontified nil 3199 . 3211) (nil fontified nil 3197 . 3199) (nil fontified nil 3193 . 3197) (nil fontified nil 3191 . 3193) (nil fontified nil 3183 . 3191) (nil fontified nil 3181 . 3183) (nil fontified nil 3177 . 3181) (nil fontified nil 3175 . 3177) (nil fontified nil 3169 . 3175) (nil fontified nil 3155 . 3169) (nil fontified nil 3148 . 3155) (nil fontified nil 3139 . 3148) (nil fontified nil 3114 . 3139) (nil fontified nil 3113 . 3114) (nil fontified nil 3111 . 3113) (nil fontified nil 3104 . 3111) (nil fontified nil 3086 . 3104) (nil fontified nil 3083 . 3086) (nil fontified nil 3081 . 3083) (nil fontified nil 3068 . 3081) (nil fontified nil 3066 . 3068) (nil fontified nil 3062 . 3066) (nil fontified nil 3060 . 3062) (nil fontified nil 3054 . 3060) (nil fontified nil 3037 . 3054) (nil fontified nil 3036 . 3037) (nil fontified nil 3035 . 3036) (nil fontified nil 3019 . 3035) (nil fontified nil 3017 . 3019) (nil fontified nil 3013 . 3017) (nil fontified nil 3000 . 3013) (nil fontified nil 2999 . 3000) (nil fontified nil 2972 . 2999) (2972 . 3446)) nil (26011 54896 531795 0) 0 nil])
([nil nil ((2968 . 2971)) nil (26011 54896 531776 0) 0 nil])
([nil nil ((2968 . 2987) (#("que" 0 3 (fontified nil)) . 2968) (2968 . 2971) (#("queue: &wgpu::Queue" 0 19 (fontified nil)) . -2968) (2968 . 2987) (#("que" 0 3 (fontified t)) . -2968) (undo-tree-id392 . -3) (undo-tree-id393 . -3) 2971) nil (26011 54896 531774 0) 0 nil])
([nil nil ((2968 . 2969)) nil (26011 54896 531770 0) 0 nil])
([nil nil ((2968 . 2969)) nil (26011 54896 531769 0) 0 nil])
([nil nil ((2968 . 2973) (#("s" 0 1 (fontified nil)) . 2968) (2968 . 2969) (#("self," 0 5 (fontified nil)) . -2968) (2968 . 2973) (#("s" 0 1 (fontified t)) . -2968) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 2969) nil (26011 54896 531767 0) 0 nil])
([nil nil ((2968 . 2969)) nil (26011 54896 531757 0) 0 nil])
([nil nil ((3140 . 3141)) nil (26011 54896 531756 0) 0 nil])
([nil nil ((3140 . 3141)) nil (26011 54897 777319 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -3139) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("s" 0 1 (fontified t)) . -3140) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#(" " 0 1 (fontified t)) . -3141) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 3142) nil (26011 54904 326624 0) 0 nil] [nil nil ((#("s" 0 1 (fontified t)) . -3140) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t)) . -3141) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . 1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 3142) ((3140 . 3142)) (26011 54897 441883 0) 0 nil])
([nil nil ((3139 . 3145)) nil (26011 54904 326545 0) 0 nil])
([nil nil ((3140 . 3142)) ((#("se" 0 2 (fontified t)) . 3140) (undo-tree-id442 . -2) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2)) (26011 54897 238761 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -3144) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) 3145) nil (26011 54904 326542 0) 0 nil])
([nil nil ((3140 . 3144) (#("setexture" 0 2 (fontified nil) 2 9 (fontified nil)) . 3140) (undo-tree-id361 . 7) (3140 . 3142) (#("self" 0 4 (fontified nil)) . -3140) (3140 . 3144) (#("se" 0 2 (fontified t)) . -3140) (undo-tree-id362 . -2) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) 3142) ((3140 . 3142) (#("self" 0 4 (fontified nil)) . 3140) (3140 . 3144) (#("se" 0 2 (fontified nil)) . 3140) (3140 . 3149) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . 3140) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4)) (26011 54897 31750 0) 0 nil])
([nil nil ((3144 . 3145)) nil (26011 54904 326526 0) 0 nil])
([nil nil ((3144 . 3145)) ((#("," 0 1 (fontified t)) . 3144) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1)) (26011 54896 783424 0) 0 nil])
([nil nil ((#("   pub fn write_to_queue(&self, queue: &wgpu::Queue) {
        queue.write_texture(
            wgpu::ImageCopyTexture {
                aspect: wgpu::TextureAspect::All,
                texture: &self.texture,
                mip_level: 0,
                origin: wgpu::Origin3d::ZERO,
            },
            &rgba,
            wgpu::ImageDataLayout {
                offset: 0,
                bytes_per_row: Some(4 * dimensions.0),
                rows_per_image: Some(dimensions.1),
            },
            size,
        );
    }" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 24 (face font-lock-function-name-face fontified t) 24 25 (face (rainbow-delimiters-depth-2-face) fontified t) 25 26 (face rust-ampersand-face fontified t) 26 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 37 (face font-lock-variable-name-face fontified t) 37 39 (fontified t) 39 40 (face rust-ampersand-face fontified t) 40 44 (face font-lock-constant-face fontified t) 44 46 (fontified t) 46 51 (face font-lock-type-face fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (fontified t) 55 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) fontified t) 83 96 (fontified t) 96 100 (face font-lock-constant-face fontified t) 100 102 (fontified t) 102 118 (face font-lock-type-face fontified t) 118 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-4-face) fontified t) 120 137 (fontified t) 137 143 (face font-lock-variable-name-face fontified t) 143 145 (fontified t) 145 149 (face font-lock-constant-face fontified t) 149 151 (fontified t) 151 164 (face font-lock-type-face fontified t) 164 166 (fontified t) 166 169 (face font-lock-type-face fontified t) 169 171 (fontified t) 171 187 (fontified t) 187 194 (face font-lock-variable-name-face fontified t) 194 196 (fontified t) 196 197 (face rust-ampersand-face fontified t) 197 201 (face font-lock-keyword-face fontified t) 201 202 (fontified t) 202 209 (fontified t) 209 211 (fontified t) 211 227 (fontified t) 227 236 (face font-lock-variable-name-face fontified t) 236 243 (fontified t) 243 257 (fontified t) 257 263 (face font-lock-variable-name-face fontified t) 263 265 (fontified t) 265 269 (face font-lock-constant-face fontified t) 269 271 (fontified t) 271 279 (face font-lock-type-face fontified t) 279 281 (fontified t) 281 285 (face font-lock-type-face fontified t) 285 287 (fontified t) 287 299 (fontified t) 299 300 (face (rainbow-delimiters-depth-4-face) fontified t) 300 302 (fontified t) 302 314 (fontified t) 314 315 (face rust-ampersand-face fontified t) 315 331 (fontified t) 331 333 (fontified t) 333 337 (face font-lock-constant-face fontified t) 337 339 (fontified t) 339 354 (face font-lock-type-face fontified t) 354 355 (fontified t) 355 356 (face (rainbow-delimiters-depth-4-face) fontified t) 356 357 (fontified t) 357 359 (fontified t) 359 373 (fontified t) 373 379 (face font-lock-variable-name-face fontified t) 379 384 (fontified t) 384 388 (fontified t) 388 400 (fontified t) 400 404 (face font-lock-variable-name-face fontified t) 404 413 (face font-lock-variable-name-face fontified t) 413 415 (fontified t) 415 419 (face font-lock-type-face fontified t) 419 420 (face (rainbow-delimiters-depth-5-face) fontified t) 420 436 (fontified t) 436 437 (face (rainbow-delimiters-depth-5-face) fontified t) 437 439 (fontified t) 439 455 (fontified t) 455 469 (face font-lock-variable-name-face fontified t) 469 471 (fontified t) 471 475 (face font-lock-type-face fontified t) 475 476 (face (rainbow-delimiters-depth-5-face) fontified t) 476 488 (fontified t) 488 489 (face (rainbow-delimiters-depth-5-face) fontified t) 489 503 (fontified t) 503 504 (face (rainbow-delimiters-depth-4-face) fontified t) 504 532 (fontified t) 532 533 (face (rainbow-delimiters-depth-3-face) fontified t) 533 534 (fontified t rear-nonsticky t) 534 535 (fontified t) 535 539 (fontified t) 539 540 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2943) (undo-tree-id888 . -540) (undo-tree-id889 . -196) (undo-tree-id890 . -196) (undo-tree-id891 . -196) (undo-tree-id892 . -196) (undo-tree-id893 . -196) (undo-tree-id894 . -196) (undo-tree-id895 . -196) (undo-tree-id896 . -196) (undo-tree-id897 . -196) (undo-tree-id898 . -196) (undo-tree-id899 . -196) (undo-tree-id900 . -196) (undo-tree-id901 . -196) (undo-tree-id902 . -196) (undo-tree-id903 . -196) (undo-tree-id904 . -196) (undo-tree-id905 . -196) (undo-tree-id906 . -196) (undo-tree-id907 . -196) (undo-tree-id908 . -196) (undo-tree-id909 . -196) (undo-tree-id910 . -196) (undo-tree-id911 . -196) (undo-tree-id912 . -196) (undo-tree-id913 . -196) (undo-tree-id914 . -196) (undo-tree-id915 . -196) (undo-tree-id916 . -196) (undo-tree-id917 . -196) (undo-tree-id918 . -196) (undo-tree-id919 . -196) (undo-tree-id920 . -196) (undo-tree-id921 . -196) (undo-tree-id922 . -196) (undo-tree-id923 . -196) (undo-tree-id924 . -196) (undo-tree-id925 . -196) (undo-tree-id926 . -196) (undo-tree-id927 . -196) (undo-tree-id928 . -196) (undo-tree-id929 . -196) (undo-tree-id930 . -196) (undo-tree-id931 . -201) (undo-tree-id932 . -201) (undo-tree-id933 . -201) (undo-tree-id934 . -201) (undo-tree-id935 . -201) (undo-tree-id936 . -201) (undo-tree-id937 . 338) (undo-tree-id938 . -206) (undo-tree-id939 . -206) (undo-tree-id940 . -206) (undo-tree-id941 . -206) (undo-tree-id942 . -206) (undo-tree-id943 . -206) (undo-tree-id944 . -206) (undo-tree-id945 . -206) (undo-tree-id946 . -206) (undo-tree-id947 . -206) (undo-tree-id948 . -206) (undo-tree-id949 . -206) (undo-tree-id950 . -206) (undo-tree-id951 . -206) (undo-tree-id952 . -206) (undo-tree-id953 . -206) (undo-tree-id954 . -206) (undo-tree-id955 . -206) (undo-tree-id956 . -206) (undo-tree-id957 . -206) (undo-tree-id958 . -206) (undo-tree-id959 . -206) (undo-tree-id960 . -206) (undo-tree-id961 . -206) (undo-tree-id962 . -206) (undo-tree-id963 . -206) (undo-tree-id964 . -206) (undo-tree-id965 . -206) (undo-tree-id966 . -206) (undo-tree-id967 . -206) (undo-tree-id968 . -206) (undo-tree-id969 . -206) (undo-tree-id970 . -206) (undo-tree-id971 . -206) (undo-tree-id972 . -206) (undo-tree-id973 . -206) (undo-tree-id974 . -206) (undo-tree-id975 . -206) (undo-tree-id976 . -206) (undo-tree-id977 . -206) (undo-tree-id978 . -206) (undo-tree-id979 . -206) (undo-tree-id980 . -206) (undo-tree-id981 . -121) (undo-tree-id982 . -84) (undo-tree-id983 . -55) (undo-tree-id984 . -55) (undo-tree-id985 . -540) (undo-tree-id986 . -514) (undo-tree-id987 . -390) (undo-tree-id988 . -325) (undo-tree-id989 . -304) (undo-tree-id990 . -288) (undo-tree-id991 . -211) (undo-tree-id992 . -55) (undo-tree-id993 . -55) (undo-tree-id994 . -55) (undo-tree-id995 . -55) (undo-tree-id996 . -55) (undo-tree-id997 . -55) (undo-tree-id998 . -55) (undo-tree-id999 . -55) (undo-tree-id1000 . -533) (undo-tree-id1001 . -533) (undo-tree-id1002 . -533) (undo-tree-id1003 . -533) (undo-tree-id1004 . -533) (undo-tree-id1005 . -533) (undo-tree-id1006 . -533) (undo-tree-id1007 . -533) (undo-tree-id1008 . -533) (undo-tree-id1009 . -540) (undo-tree-id1010 . -540) (undo-tree-id1011 . -540) (undo-tree-id1012 . -532) (undo-tree-id1013 . -513) (undo-tree-id1014 . -497) (undo-tree-id1015 . -496) (undo-tree-id1016 . -388) (undo-tree-id1017 . -324) (undo-tree-id1018 . -173) (undo-tree-id1019 . -56) (undo-tree-id1020 . -55) (undo-tree-id1021 . -55) (undo-tree-id1022 . -55) (undo-tree-id1023 . -540) (t 26011 54904 334592 682000)) nil (26011 55041 946435 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3144) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 3145) ((3144 . 3145)) (26011 54896 547854 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2942) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("
" 0 1 (fontified t)) . -2943) (undo-tree-id875 . -1) (undo-tree-id876 . 1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (#("
" 0 1 (fontified t)) . -2944) (undo-tree-id886 . -1) (undo-tree-id887 . -1) 2945) nil (26011 55041 947097 0) 0 nil])
([nil nil ((3144 . 3146)) ((#(".t" 0 1 (fontified t) 1 2 (fontified t)) . 3144) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -1) (undo-tree-id406 . -2)) (26011 54896 532629 0) 0 nil])
([nil nil ((1821 . 1829) (#("        " 0 8 (fontified nil)) . 1820) (undo-tree-id1033 . -8) (undo-tree-id1034 . -8) (undo-tree-id1035 . -8) (1820 . 1829) (#("        " 0 8 (fontified nil)) . 1819) (1819 . 1827) (1819 . 1820) (t 26011 55042 478300 888000)) nil (26011 55229 1699 0) 0 nil] [nil nil ((#("Ok(Self { texture, view, sampler })
    }

" 0 2 (face font-lock-type-face fontified t) 2 3 (face (rainbow-delimiters-depth-3-face) fontified t) 3 7 (face font-lock-type-face fontified t) 7 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-4-face) fontified t) 9 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-4-face) fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 36 (fontified t) 36 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 42 (fontified t) 42 43 (fontified t)) . -2899) (undo-tree-id526 . -43) (undo-tree-id527 . -43) (undo-tree-id528 . -43) (undo-tree-id529 . -43) (undo-tree-id530 . -43) (undo-tree-id531 . -43) (undo-tree-id532 . -43) (undo-tree-id533 . -43) (undo-tree-id534 . -43) (undo-tree-id535 . -43) (undo-tree-id536 . -43) (undo-tree-id537 . -43) (undo-tree-id538 . -43) (undo-tree-id539 . -43) (undo-tree-id540 . -43) (undo-tree-id541 . -43) (undo-tree-id542 . -43) (undo-tree-id543 . -43) (undo-tree-id544 . -43) (undo-tree-id545 . -43) (undo-tree-id546 . -43) (undo-tree-id547 . -43) (undo-tree-id548 . -43) (undo-tree-id549 . -43) (undo-tree-id550 . -43) (undo-tree-id551 . -43) (undo-tree-id552 . -43) (undo-tree-id553 . -43) (undo-tree-id554 . -43) (undo-tree-id555 . -43) (undo-tree-id556 . -43) (undo-tree-id557 . -43) (undo-tree-id558 . -43) (undo-tree-id559 . -43) (undo-tree-id560 . -43) (undo-tree-id561 . -43) (undo-tree-id562 . -43) (undo-tree-id563 . -43) (undo-tree-id564 . -43) (undo-tree-id565 . -43) (undo-tree-id566 . -43) (undo-tree-id567 . -43) (undo-tree-id568 . -43) (undo-tree-id569 . -43) (undo-tree-id570 . -43) (undo-tree-id571 . -43) (undo-tree-id572 . -43) (undo-tree-id573 . -43) (undo-tree-id574 . -43) (undo-tree-id575 . -43) (undo-tree-id576 . -43) (undo-tree-id577 . -43) (undo-tree-id578 . -43) (undo-tree-id579 . -43) (undo-tree-id580 . -43) (undo-tree-id581 . -43) (undo-tree-id582 . -43) (undo-tree-id583 . -43) (undo-tree-id584 . -43) (undo-tree-id585 . -43) (undo-tree-id586 . -43) (undo-tree-id587 . -43) (undo-tree-id588 . -43) (undo-tree-id589 . -43) (undo-tree-id590 . -43) (undo-tree-id591 . -43) (undo-tree-id592 . -43) (undo-tree-id593 . -43) (undo-tree-id594 . -43) (undo-tree-id595 . -43) (undo-tree-id596 . -43) (undo-tree-id597 . -43) (undo-tree-id598 . -43) (undo-tree-id599 . -43) (undo-tree-id600 . -43) (undo-tree-id601 . -43) (undo-tree-id602 . -43) (undo-tree-id603 . -43) (undo-tree-id604 . -43) (undo-tree-id605 . -43) (undo-tree-id606 . -43) (undo-tree-id607 . -43) (undo-tree-id608 . -43) (undo-tree-id609 . -43) (undo-tree-id610 . -43) (undo-tree-id611 . -43) (undo-tree-id612 . -43) (undo-tree-id613 . -43) (undo-tree-id614 . -43) (undo-tree-id615 . -43) (undo-tree-id616 . -43) (undo-tree-id617 . -43) (undo-tree-id618 . -43) (undo-tree-id619 . -43) (undo-tree-id620 . -43) (undo-tree-id621 . -43) (undo-tree-id622 . -42) (undo-tree-id623 . -36) (undo-tree-id624 . -43) (undo-tree-id625 . -36) (undo-tree-id626 . -42) (undo-tree-id627 . -42) (undo-tree-id628 . -42) (undo-tree-id629 . -42) (undo-tree-id630 . -42) (undo-tree-id631 . -42) (undo-tree-id632 . -42) (undo-tree-id633 . -42) (undo-tree-id634 . -42) (undo-tree-id635 . -42) (undo-tree-id636 . -42) (undo-tree-id637 . -42) (undo-tree-id638 . -42) (undo-tree-id639 . -42) (undo-tree-id640 . -42) (undo-tree-id641 . -42) (undo-tree-id642 . -42) (undo-tree-id643 . -42) (undo-tree-id644 . -42) (undo-tree-id645 . -42) (undo-tree-id646 . -42) (undo-tree-id647 . -42) (undo-tree-id648 . -42) (undo-tree-id649 . -42) (undo-tree-id650 . -42) (undo-tree-id651 . -42) (undo-tree-id652 . -42) (undo-tree-id653 . -42) (undo-tree-id654 . -42) (undo-tree-id655 . -42) (undo-tree-id656 . -43) (undo-tree-id657 . -43) (undo-tree-id658 . -43) (undo-tree-id659 . -43) (undo-tree-id660 . -43) (undo-tree-id661 . -43) (undo-tree-id662 . -43) (undo-tree-id663 . -43) (undo-tree-id664 . -43) (undo-tree-id665 . -43) (undo-tree-id666 . -43) (undo-tree-id667 . -43) (undo-tree-id668 . -43) (undo-tree-id669 . -43) (undo-tree-id670 . -43) (undo-tree-id671 . -43) (undo-tree-id672 . -43) (undo-tree-id673 . -43) (undo-tree-id674 . -43) (undo-tree-id675 . -43) (undo-tree-id676 . -43) (undo-tree-id677 . -43) (undo-tree-id678 . -43) (undo-tree-id679 . -43) (undo-tree-id680 . -43) (undo-tree-id681 . -43) (undo-tree-id682 . -43) (undo-tree-id683 . -43) (undo-tree-id684 . -43) (undo-tree-id685 . -43) (undo-tree-id686 . -43) (undo-tree-id687 . -43) (undo-tree-id688 . -43) (undo-tree-id689 . -43) (undo-tree-id690 . -43) (undo-tree-id691 . -43) (undo-tree-id692 . -43) (undo-tree-id693 . -43) (undo-tree-id694 . -43) (undo-tree-id695 . -43) (undo-tree-id696 . -43) (undo-tree-id697 . -43) (undo-tree-id698 . -43) (undo-tree-id699 . -43) (undo-tree-id700 . -43) (undo-tree-id701 . -43) (undo-tree-id702 . -43) (undo-tree-id703 . -43) (undo-tree-id704 . -43) (undo-tree-id705 . -43) (undo-tree-id706 . -43) (undo-tree-id707 . -43) (undo-tree-id708 . -43) (undo-tree-id709 . -43) (undo-tree-id710 . -43) (undo-tree-id711 . -43) (undo-tree-id712 . -43) (undo-tree-id713 . -43) (undo-tree-id714 . -43) (undo-tree-id715 . -43) (undo-tree-id716 . -43) (undo-tree-id717 . -43) (undo-tree-id718 . -43) (undo-tree-id719 . -43) 2942) ((2899 . 2942)) (26011 55041 946083 0) 0 nil])
([nil nil ((3145 . 3152) (#("t" 0 1 (fontified nil)) . 3145) (3145 . 3146) (#("texture" 0 7 (fontified nil)) . -3145) (3145 . 3152) (#("t" 0 1 (fontified t)) . -3145) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) 3146) ((3145 . 3146) (#("texture" 0 7 (fontified nil)) . 3145) (3145 . 3152) (#("t" 0 1 (fontified nil)) . 3145) (3145 . 3146) (#("texture" 0 7 (fontified t)) . 3145) (undo-tree-id400 . -7) (undo-tree-id401 . -7)) (26011 54896 531703 0) 0 nil])
([nil nil ((1829 . 1833)) nil (26011 55229 1694 0) 0 nil])
nil
nil
([nil nil ((#("s" 0 1 (face font-lock-doc-face fontified t)) . -1832) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 1833) nil (26011 55229 1692 0) 0 nil])
([nil nil ((1832 . 1836)) nil (26011 55229 1689 0) 0 nil])
([nil nil ((1836 . 1857)) nil (26011 55229 1688 0) 0 nil])
([nil nil ((1857 . 1858)) nil (26011 55229 1687 0) 0 nil])
([nil nil ((1858 . 1879)) nil (26011 55229 1686 0) 0 nil])
([nil nil ((1879 . 1883)) nil (26011 55229 1685 0) 0 nil])
([nil nil ((1883 . 1890)) nil (26011 55229 1684 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -1889) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) 1890) nil (26011 55229 1683 0) 0 nil])
([nil nil ((1889 . 1895)) nil (26011 55229 1679 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-doc-face fontified t)) . -1894) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) 1895) nil (26011 55229 1677 0) 0 nil])
([nil nil ((1894 . 1898)) nil (26011 55229 1660 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-doc-face fontified t)) . -1831) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) 1832 (t 26011 55229 10104 49000)) nil (26011 55234 91800 0) 0 nil])
([nil nil ((1897 . 1898) (t 26011 55234 100616 771000)) nil (26011 55244 56101 0) 0 nil])
([nil nil ((1886 . 1887) (t 26011 55244 64921 41000)) nil (26011 55254 167859 0) 0 nil])
([nil nil ((1882 . 1885)) nil (26011 55254 167858 0) 0 nil])
([nil nil ((1885 . 1886)) nil (26011 55254 167857 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1891) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 1892) nil (26011 55254 167853 0) 0 nil])
([nil nil ((3887 . 3891) (#("    " 0 4 (fontified nil)) . 3886) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (3886 . 3891) (#("    " 0 4 (fontified nil)) . 3885) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (3884 . 3890) (t 26011 55254 176632 744000)) nil (26014 16183 347496 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5504 . 5505) (nil fontified nil 3891 . 5505) (3891 . 5505)) nil (26014 16183 347473 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3891) 3900 (t 26014 16183 356796 135000)) nil (26014 16186 619776 0) 0 nil])
([nil nil ((5503 . 5507) (#("    " 0 4 (fontified nil)) . 5502) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (5501 . 5507) (t 26014 16186 628708 39000)) nil (26014 19205 420251 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7023 . 7024) (nil fontified nil 5507 . 7024) (5507 . 7024)) nil (26014 19205 420232 0) 0 nil])
([nil current ((#("    " 0 4 (fontified t)) . -5507) 5519 (t 26014 19205 429452 368000)) nil (26014 19208 936679 0) 0 nil])
nil
