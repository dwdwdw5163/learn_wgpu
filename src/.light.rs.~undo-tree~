(undo-tree-save-format-version . 1)
"dce16b352930093caa97464616e30e1e9c2db890"
[nil nil nil nil (26014 43188 243869 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 386 . 387) (nil fontified nil 1 . 387) (1 . 387) (t 26014 43159 422615 226000)) nil (26014 43188 243868 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -129) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 130) nil (26014 43188 243865 0) 0 nil])
([nil nil ((129 . 130)) nil (26014 43188 243854 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -129) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 130) nil (26014 43188 243853 0) 0 nil])
([nil nil ((129 . 130)) nil (26014 43188 243849 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -129) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 130) nil (26014 43188 243847 0) 0 nil])
([nil nil ((129 . 130)) nil (26014 43188 243843 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -265) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 266) nil (26014 43188 243842 0) 0 nil])
([nil nil ((265 . 266)) nil (26014 43188 243833 0) 0 nil])
([nil nil ((#("    _padding: u32," 0 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 14 (fontified t) 14 17 (face font-lock-type-face fontified t) 17 18 (fontified t)) . 229) (undo-tree-id29 . -18) (undo-tree-id30 . -18) (undo-tree-id31 . -18) (undo-tree-id32 . -18) (undo-tree-id33 . -18) (undo-tree-id34 . -18) (undo-tree-id35 . -18) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . -18) (undo-tree-id40 . -18) (undo-tree-id41 . -18) (undo-tree-id42 . -18) (undo-tree-id43 . -18) (undo-tree-id44 . -18)) nil (26014 43188 243831 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 229) (undo-tree-id28 . -1)) nil (26014 43188 243812 0) 0 nil])
([nil nil ((#("    // Due to uniforms requiring 16 byte (4 float) spacing, we need to use a padding field here" 0 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 95 (face font-lock-comment-face fontified t)) . 133) (undo-tree-id27 . -95)) nil (26014 43188 243809 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 133) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (26014 43188 243806 0) 0 nil])
([nil nil ((#("    _padding2: u32," 0 4 (fontified t) 4 13 (face font-lock-variable-name-face fontified t) 13 15 (fontified t) 15 18 (face font-lock-type-face fontified t) 18 19 (fontified t)) . 250) (undo-tree-id4 . -19)) nil (26014 43188 243783 0) 0 nil])
([nil nil ((#("    // Due to uniforms requiring 16 byte (4 float) spacing, we need to use a padding field here" 0 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 95 (face font-lock-comment-face fontified t)) . 154) (undo-tree-id3 . -95)) nil (26014 43188 243781 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 154) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (26014 43188 243778 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 154) (undo-tree-id0 . -1)) nil (26014 43188 243773 0) 0 nil])
([nil nil ((156 . 158) (t 26014 43188 248439 837000)) nil (26014 43243 493620 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -157) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 158) nil (26014 43243 493618 0) 0 nil])
([nil nil ((157 . 161)) nil (26014 43243 493610 0) 0 nil])
([nil nil ((161 . 163)) nil (26014 43243 493609 0) 0 nil])
([nil nil ((162 . 174) (#("L" 0 1 (fontified nil)) . 162) (162 . 163) (#("LightUniform" 0 12 (fontified nil)) . -162) (162 . 174) (#("L" 0 1 (face font-lock-type-face fontified t)) . -162) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 163) nil (26014 43243 493607 0) 0 nil])
([nil nil ((87 . 89)) nil (26014 43243 493591 0) 0 nil])
([nil nil ((89 . 90)) nil (26014 43243 493590 0) 0 nil])
([nil nil ((90 . 91)) nil (26014 43243 493588 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 82) (120 . 121) (apply deactivate-cursor-after-undo 82) (147 . 148) (apply activate-cursor-for-undo 82) (119 . 120) (apply deactivate-cursor-after-undo 82) (145 . 146) (apply activate-cursor-for-undo 82) (118 . 119) (apply deactivate-cursor-after-undo 82) (143 . 144) (apply activate-cursor-for-undo 82) (117 . 118) (apply deactivate-cursor-after-undo 82) (141 . 142)) nil (26014 43243 493587 0) 0 nil])
([nil nil ((186 . 187) 149) nil (26014 43243 493579 0) 0 nil])
([nil nil ((186 . 189) (t 26014 43243 496997 293000)) nil (26014 43316 87703 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 190) (190 . 194) (190 . 191) (#("    " 0 4 (fontified nil)) . 189) (189 . 193) (188 . 190)) nil (26014 43316 87701 0) 0 nil])
([nil nil ((189 . 193)) nil (26014 43316 87699 0) 0 nil])
([nil nil ((193 . 194)) nil (26014 43316 87698 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -193) (undo-tree-id118 . -1) 194) nil (26014 43316 87697 0) 0 nil])
([nil nil ((193 . 194)) nil (26014 43316 87695 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -193) (undo-tree-id117 . -1) 194) nil (26014 43316 87694 0) 0 nil])
([nil nil ((193 . 194)) nil (26014 43316 87691 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -193) (undo-tree-id116 . -1) 194) nil (26014 43316 87690 0) 0 nil])
([nil nil ((193 . 194)) nil (26014 43316 87688 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -193) (undo-tree-id115 . -1) 194) nil (26014 43316 87687 0) 0 nil])
([nil nil ((193 . 207)) nil (26014 43316 87685 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -206) (undo-tree-id114 . -1) 207) nil (26014 43316 87683 0) 0 nil])
([nil nil ((206 . 213)) nil (26014 43316 87681 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -212) (undo-tree-id113 . -1) 213) nil (26014 43316 87680 0) 0 nil])
([nil nil ((212 . 217)) nil (26014 43316 87678 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -215) (undo-tree-id111 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -216) (undo-tree-id112 . -1) 217) nil (26014 43316 87676 0) 0 nil])
([nil nil ((215 . 220)) nil (26014 43316 87673 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -219) (undo-tree-id110 . -1) 220) nil (26014 43316 87672 0) 0 nil])
([nil nil ((219 . 227)) nil (26014 43316 87670 0) 0 nil])
([nil nil ((225 . 229) (#("wp" 0 2 (fontified nil)) . 225) (225 . 227) (#("wgpu" 0 4 (fontified nil)) . -225) (225 . 229) (#("wp" 0 2 (fontified t)) . -225) (undo-tree-id109 . -2) 227) nil (26014 43316 87668 0) 0 nil])
([nil nil ((229 . 234)) nil (26014 43316 87664 0) 0 nil])
([nil nil ((231 . 237) (#("Buf" 0 3 (fontified nil)) . 231) (231 . 234) (#("Buffer" 0 6 (fontified nil)) . -231) (231 . 237) (#("Buf" 0 3 (face font-lock-type-face fontified t)) . -231) (undo-tree-id108 . -3) 234) nil (26014 43316 87663 0) 0 nil])
([nil nil ((237 . 240)) nil (26014 43316 87659 0) 0 nil])
([nil nil ((241 . 245) (#("        " 0 8 (fontified nil)) . 240) (240 . 248) (#("    " 0 4 (fontified nil)) . 240) (undo-tree-id107 . -4) (239 . 245)) nil (26014 43316 87657 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 564 . 565) (nil fontified nil 240 . 565) (240 . 565)) nil (26014 43316 87654 0) 0 nil])
([nil nil ((565 . 574)) nil (26014 43316 87653 0) 0 nil])
([nil nil ((574 . 575)) nil (26014 43316 87652 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -574) (undo-tree-id106 . -1) 575) nil (26014 43316 87651 0) 0 nil])
([nil nil ((574 . 575)) nil (26014 43316 87648 0) 0 nil])
([nil nil ((574 . 586) (#("l" 0 1 (fontified nil)) . 574) (574 . 575) (#("light_buffer" 0 12 (fontified nil)) . -574) (574 . 586) (#("l" 0 1 (fontified t)) . -574) (undo-tree-id105 . -1) 575) nil (26014 43316 87647 0) 0 nil])
([nil nil ((618 . 626) (604 . 616) (#("    " 0 4 (fontified t)) . 604) (521 . 537) (#("        " 0 8 (fontified t)) . 521) (455 . 471) (#("        " 0 8 (fontified t)) . 455) (414 . 430) (#("        " 0 8 (fontified t)) . 414) (366 . 378) (#("    " 0 4 (fontified t)) . 366) (312 . 320) (240 . 248) (#(" " 0 1 (fontified t)) . 240) 168) nil (26014 43316 87642 0) 0 nil])
([nil nil ((222 . 226) (#("        " 0 8 (fontified nil)) . 221) (221 . 229) (#("    " 0 4 (fontified nil)) . 221) (undo-tree-id104 . -4) (220 . 226)) nil (26014 43316 87637 0) 0 nil])
([nil nil ((221 . 229)) nil (26014 43316 87634 0) 0 nil])
([nil nil ((229 . 230)) nil (26014 43316 87633 0) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -229) (undo-tree-id103 . -1) 230) nil (26014 43316 87631 0) 0 nil])
([nil nil ((229 . 235)) nil (26014 43316 87629 0) 0 nil])
([nil nil ((235 . 244)) nil (26014 43316 87628 0) 0 nil])
([nil nil ((244 . 250)) nil (26014 43316 87627 0) 0 nil])
([nil nil ((1 . 20) (244 . 244) (244 . 250) (#("device" 0 6 (fontified nil)) . 244) (244 . 250) (#("Device (use wgpu::Device)" 0 25 (fontified nil)) . -244) (244 . 269) (#("device" 0 6 (fontified t)) . -244) (undo-tree-id102 . -6) 250) nil (26014 43316 87626 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -268) (undo-tree-id101 . -1) 269) nil (26014 43316 87621 0) 0 nil])
([nil nil ((#("Devic" 0 5 (face font-lock-type-face fontified t)) . -263) (undo-tree-id100 . -5) 268) nil (26014 43316 87619 0) 0 nil])
([nil nil ((263 . 272)) nil (26014 43316 87617 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -271) (undo-tree-id99 . -1) 272) nil (26014 43316 87615 0) 0 nil])
([nil nil ((271 . 272)) nil (26014 43316 87613 0) 0 nil])
([nil nil ((271 . 275) (#("w" 0 1 (fontified nil)) . 271) (271 . 272) (#("wgpu" 0 4 (fontified nil)) . -271) (271 . 275) (#("w" 0 1 (fontified t)) . -271) (undo-tree-id98 . -1) 272) nil (26014 43316 87612 0) 0 nil])
([nil nil ((275 . 283)) nil (26014 43316 87608 0) 0 nil])
([nil nil ((277 . 283) (#("Device" 0 6 (fontified nil)) . 277) (277 . 283) (#("Device" 0 6 (face font-lock-type-face fontified t)) . -277) (undo-tree-id96 . -6) (undo-tree-id97 . -5) 283) nil (26014 43316 87607 0) 0 nil])
([nil nil ((283 . 284)) nil (26014 43316 87603 0) 0 nil])
([nil nil ((271 . 272)) nil (26014 43316 87602 0) 0 nil])
([nil nil ((#("Device;" 0 6 (face font-lock-type-face fontified t) 6 7 (fontified t)) . -11) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7) (undo-tree-id93 . -7) (undo-tree-id94 . -7) (undo-tree-id95 . -7) 18) nil (26014 43316 87600 0) 0 nil])
([nil nil ((11 . 12)) nil (26014 43316 87591 0) 0 nil])
([nil nil ((11 . 15) (#("u" 0 1 (fontified nil)) . 11) (11 . 12) (#("util" 0 4 (fontified nil)) . -11) (11 . 15) (#("u" 0 1 (fontified t)) . -11) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 12) nil (26014 43316 87589 0) 0 nil])
([nil nil ((15 . 18)) nil (26014 43316 87581 0) 0 nil])
([nil nil ((17 . 26) (#("D" 0 1 (fontified nil)) . 17) (17 . 18) (#("DeviceExt" 0 9 (fontified nil)) . -17) (17 . 26) (#("D" 0 1 (face font-lock-type-face fontified t)) . -17) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 18) nil (26014 43316 87579 0) 0 nil])
([nil nil ((26 . 27)) nil (26014 43316 87558 0) 0 nil])
([nil nil ((#("uniform" 0 7 (fontified t)) . -589) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -3) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) 596 (t 26014 43316 93190 196000)) nil (26014 43322 474156 0) 0 nil])
([nil nil ((#("light_" 0 6 (fontified t)) . -583) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) 589) nil (26014 43322 474139 0) 0 nil])
([nil nil ((583 . 587)) nil (26014 43322 474126 0) 0 nil])
([nil nil ((583 . 587) (#("self" 0 4 (fontified nil)) . 583) (583 . 587) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -583) (undo-tree-id119 . -4) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) 587) nil (26014 43322 474121 0) 0 nil])
([nil nil ((583 . 584) (t 26014 43322 478105 396000)) nil (26014 43330 921075 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -583) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 584 (t 26014 43330 925180 34000)) nil (26014 43333 966003 0) 0 nil])
([nil nil ((583 . 584) (t 26014 43333 970130 827000)) nil (26014 43335 921986 0) 0 nil])
([nil nil ((728 . 732) (#("    " 0 4 (fontified nil)) . 727) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (726 . 732) (t 26014 43335 926359 400000)) nil (26014 43430 860461 0) 0 nil])
([nil nil ((732 . 745)) nil (26014 43430 860455 0) 0 nil])
([nil nil ((#("    pub fn create" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 17 (face font-lock-function-name-face fontified t)) . 728) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -9) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (undo-tree-id284 . -10) (undo-tree-id285 . -10) (undo-tree-id286 . -11) (undo-tree-id287 . -11) (undo-tree-id288 . -11) (undo-tree-id289 . -12) (undo-tree-id290 . -12) (undo-tree-id291 . -13) (undo-tree-id292 . -13) (undo-tree-id293 . -14) (undo-tree-id294 . -14) (undo-tree-id295 . -15) (undo-tree-id296 . -15) (undo-tree-id297 . -16) (undo-tree-id298 . -16) (undo-tree-id299 . -17) (undo-tree-id300 . -17) (undo-tree-id301 . -17) (undo-tree-id302 . -17) (undo-tree-id303 . -17) (undo-tree-id304 . -17) (undo-tree-id305 . -17) (undo-tree-id306 . -17) (undo-tree-id307 . -17) (undo-tree-id308 . -17)) nil (26014 43430 860452 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 728) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . 1) (undo-tree-id267 . -1)) nil (26014 43430 860393 0) 0 nil])
([nil nil ((247 . 249)) nil (26014 43430 860382 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -247) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t)) . -248) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 249) nil (26014 43430 860380 0) 0 nil])
([nil nil ((247 . 252)) nil (26014 43430 860356 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -251) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 252) nil (26014 43430 860346 0) 0 nil])
([nil nil ((251 . 258)) nil (26014 43430 860340 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -255) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -256) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -257) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 258) nil (26014 43430 860338 0) 0 nil])
([nil nil ((255 . 256)) nil (26014 43430 860305 0) 0 nil])
([nil nil ((256 . 262)) nil (26014 43430 860304 0) 0 nil])
([nil nil ((319 . 320)) nil (26014 43430 860303 0) 0 nil])
([nil nil ((332 . 333)) nil (26014 43430 860302 0) 0 nil])
([nil nil ((332 . 334)) nil (26014 43430 860301 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -332) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#(" " 0 1 (fontified t)) . -333) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 334) nil (26014 43430 860299 0) 0 nil])
([nil nil ((332 . 334)) nil (26014 43430 860286 0) 0 nil])
([nil nil ((334 . 335)) nil (26014 43430 860285 0) 0 nil])
([nil nil ((334 . 338) (#("w" 0 1 (fontified nil)) . 334) (334 . 335) (#("wgpu" 0 4 (fontified nil)) . -334) (334 . 338) (#("w" 0 1 (fontified t)) . -334) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 335) nil (26014 43430 860283 0) 0 nil])
([nil nil ((338 . 344)) nil (26014 43430 860273 0) 0 nil])
([nil nil ((340 . 349) (#("Bind" 0 4 (fontified nil)) . 340) (340 . 344) (#("BindGroup" 0 9 (fontified nil)) . -340) (340 . 349) (#("Bind" 0 4 (face font-lock-type-face fontified t)) . -340) (undo-tree-id186 . -4) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -4) (undo-tree-id194 . -4) 344) nil (26014 43430 860271 0) 0 nil])
([nil nil ((#("        light_buffer" 0 8 (fontified t) 8 20 (fontified t)) . 734) (undo-tree-id179 . -20) (undo-tree-id180 . -20) (undo-tree-id181 . -20) (undo-tree-id182 . -20) (undo-tree-id183 . -20) (undo-tree-id184 . -20) (undo-tree-id185 . -20)) nil (26014 43430 860259 0) 0 nil])
([nil nil ((734 . 742)) nil (26014 43430 860249 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 994 . 995) (nil fontified nil 742 . 995) (742 . 995)) nil (26014 43430 860248 0) 0 nil])
([nil nil ((1040 . 1048) (1015 . 1027) (#("    " 0 4 (fontified t)) . 1015) (999 . 1011) (#("    " 0 4 (fontified t)) . 999) (939 . 955) (#("        " 0 8 (fontified t)) . 939) (911 . 927) (#("        " 0 8 (fontified t)) . 911) (865 . 877) (#("    " 0 4 (fontified t)) . 865) (819 . 831) (#("    " 0 4 (fontified t)) . 819) 733) nil (26014 43430 860245 0) 0 nil])
([nil nil ((735 . 743) (#("        " 0 8 (fontified nil)) . 734) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (733 . 743)) nil (26014 43430 860240 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1259 . 1260) (nil fontified nil 743 . 1260) (743 . 1260)) nil (26014 43430 860235 0) 0 nil])
([nil nil ((1260 . 1269)) nil (26014 43430 860233 0) 0 nil])
([nil nil ((1349 . 1361) (#("    " 0 4 (fontified t)) . 1349) (1320 . 1336) (#("        " 0 8 (fontified t)) . 1320) (1300 . 1316) (#("        " 0 8 (fontified t)) . 1300) (1267 . 1287) (#("            " 0 12 (fontified t)) . 1267) (1244 . 1264) (#("            " 0 12 (fontified t)) . 1244) (1196 . 1220) (#("                " 0 16 (fontified t)) . 1196) (1145 . 1169) (#("                " 0 16 (fontified t)) . 1145) (undo-tree-id174 . -16) (1083 . 1107) (#("                " 0 16 (fontified t)) . 1083) (1031 . 1051) (#("            " 0 12 (fontified t)) . 1031) (940 . 960) (#("            " 0 12 (fontified t)) . 940) (908 . 928) (#("            " 0 12 (fontified t)) . 908) (852 . 868) (#("        " 0 8 (fontified t)) . 852) (773 . 785) (#("    " 0 4 (fontified t)) . 773) 195) nil (26014 43430 860225 0) 0 nil])
([nil nil ((1698 . 1702) (t 26014 43430 865341 155000)) nil (26014 43451 624252 0) 0 nil])
([nil nil ((1702 . 1704)) nil (26014 43451 624250 0) 0 nil])
([nil nil ((1703 . 1704)) nil (26014 43451 624249 0) 0 nil])
([nil nil ((1704 . 1709)) nil (26014 43451 624248 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1704) (undo-tree-id457 . -1) (undo-tree-id458 . 1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -1705) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#(" " 0 1 (fontified t)) . -1706) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#(" " 0 1 (fontified t)) . -1707) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#(" " 0 1 (fontified t)) . -1708) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) 1709) nil (26014 43451 624245 0) 0 nil])
([nil nil ((1704 . 1705)) nil (26014 43451 624197 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1704) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) 1705) nil (26014 43451 624196 0) 0 nil])
([nil nil ((1704 . 1707)) nil (26014 43451 624191 0) 0 nil])
([nil nil ((#("    (ligh)" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t) 5 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1698) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -10) (undo-tree-id406 . -10) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) (undo-tree-id424 . 1) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -7) (undo-tree-id447 . -8) (undo-tree-id448 . -9) (undo-tree-id449 . 1) (undo-tree-id450 . -9) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -10)) nil (26014 43451 624188 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1698) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . -1)) nil (26014 43451 624122 0) 0 nil])
([nil nil ((1693 . 1701) (#("        " 0 8 (fontified nil)) . 1692) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (1691 . 1701)) nil (26014 43451 624056 0) 0 nil])
([nil nil ((1701 . 1703)) nil (26014 43451 624051 0) 0 nil])
([nil nil ((1702 . 1705)) nil (26014 43451 624050 0) 0 nil])
([nil nil ((1702 . 1714) (#("lig" 0 3 (fontified nil)) . 1702) (1702 . 1705) (#("light_buffer" 0 12 (fontified nil)) . -1702) (1702 . 1714) (#("lig" 0 3 (fontified t)) . -1702) (undo-tree-id323 . -3) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) 1705) nil (26014 43451 624047 0) 0 nil])
([nil nil ((1714 . 1718)) nil (26014 43451 624035 0) 0 nil])
([nil nil ((1716 . 1732) (#("li" 0 2 (fontified nil)) . 1716) (1716 . 1718) (#("light_bind_group" 0 16 (fontified nil)) . -1716) (1716 . 1732) (#("li" 0 2 (fontified t)) . -1716) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) 1718) nil (26014 43451 624033 0) 0 nil])
([nil nil ((1733 . 1734)) nil (26014 43451 624023 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1733) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 1734) nil (26014 43558 19425 0) 0 nil])
([nil nil ((196 . 198) (t 26014 43559 507777 624000)) nil (26014 43687 30037 0) 0 nil] [nil nil ((196 . 198) (t 26014 43451 629212 165000)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 196) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . 1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1)) (26014 43557 679032 0) 0 nil])
([nil nil ((197 . 198)) nil (26014 43687 30036 0) 0 nil])
([nil nil ((197 . 207)) ((#("pub const " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t)) . 197) (undo-tree-id1194 . -10) (undo-tree-id1195 . -10) (undo-tree-id1196 . -10) (undo-tree-id1197 . -10) (undo-tree-id1198 . -10) (undo-tree-id1199 . -10) (undo-tree-id1200 . -10) (undo-tree-id1201 . -10) (undo-tree-id1202 . -10) (undo-tree-id1203 . -10) (undo-tree-id1204 . -10) (undo-tree-id1205 . -10) (undo-tree-id1206 . -10) (undo-tree-id1207 . -10) (undo-tree-id1208 . -10) (undo-tree-id1209 . -10) (undo-tree-id1210 . -10) (undo-tree-id1211 . -10) (undo-tree-id1212 . -10) (undo-tree-id1213 . -10) (undo-tree-id1214 . -10) (undo-tree-id1215 . -10) (undo-tree-id1216 . -10) (undo-tree-id1217 . -10) (undo-tree-id1218 . -10) (undo-tree-id1219 . -10) (undo-tree-id1220 . -10) (undo-tree-id1221 . -10) (undo-tree-id1222 . -10) (undo-tree-id1223 . -10) (undo-tree-id1224 . -10) (undo-tree-id1225 . -10) (undo-tree-id1226 . -10) (undo-tree-id1227 . -10) (undo-tree-id1228 . -10) (undo-tree-id1229 . -10) (undo-tree-id1230 . -10) (undo-tree-id1231 . -10) (undo-tree-id1232 . -10) (undo-tree-id1233 . -10) (undo-tree-id1234 . -10) (undo-tree-id1235 . -10) (undo-tree-id1236 . -10) (undo-tree-id1237 . -10) (undo-tree-id1238 . -10) (undo-tree-id1239 . -10) (undo-tree-id1240 . -10) (undo-tree-id1241 . -10) (undo-tree-id1242 . -10) (undo-tree-id1243 . -10) (undo-tree-id1244 . -10) (undo-tree-id1245 . -10) (undo-tree-id1246 . -10) (undo-tree-id1247 . -10) (undo-tree-id1248 . -10) (undo-tree-id1249 . -10) (undo-tree-id1250 . -10) (undo-tree-id1251 . -10) (undo-tree-id1252 . -10) (undo-tree-id1253 . -10) (undo-tree-id1254 . -10) (undo-tree-id1255 . -10) (undo-tree-id1256 . -10) (undo-tree-id1257 . -10) (undo-tree-id1258 . -10) (undo-tree-id1259 . -10) (undo-tree-id1260 . -10) (undo-tree-id1261 . -10) (undo-tree-id1262 . -10) (undo-tree-id1263 . -10) (undo-tree-id1264 . -10) (undo-tree-id1265 . -10) (undo-tree-id1266 . -10) (undo-tree-id1267 . -10) (undo-tree-id1268 . -10) (undo-tree-id1269 . -10) (undo-tree-id1270 . -10) (undo-tree-id1271 . -10) (undo-tree-id1272 . -10) (undo-tree-id1273 . -10) (undo-tree-id1274 . -10) (undo-tree-id1275 . -10) (undo-tree-id1276 . -10) (undo-tree-id1277 . -10) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) (undo-tree-id1280 . -10) (undo-tree-id1281 . -10) (undo-tree-id1282 . -10) (undo-tree-id1283 . -10) (undo-tree-id1284 . -10) (undo-tree-id1285 . -10) (undo-tree-id1286 . -10) (undo-tree-id1287 . -10) (undo-tree-id1288 . -10) (undo-tree-id1289 . -10) (undo-tree-id1290 . -10) (undo-tree-id1291 . -10) (undo-tree-id1292 . -10) (undo-tree-id1293 . -10) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) (undo-tree-id1296 . -10) (undo-tree-id1297 . -10) (undo-tree-id1298 . -10) (undo-tree-id1299 . -10) (undo-tree-id1300 . -10) (undo-tree-id1301 . -10) (undo-tree-id1302 . -10) (undo-tree-id1303 . -10) (undo-tree-id1304 . -10) (undo-tree-id1305 . -10)) (26014 43556 735340 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -197) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) 198) nil (26014 43687 30034 0) 0 nil])
([nil nil ((#("        let light_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 35 (face font-lock-variable-name-face fontified t) 35 38 (fontified t) 38 50 (fontified t) 50 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-3-face) fontified t) 82 83 (face rust-ampersand-face fontified t) 83 87 (face font-lock-constant-face fontified t) 87 89 (fontified t) 89 114 (face font-lock-type-face fontified t) 114 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-4-face) fontified t) 116 133 (fontified t) 133 140 (face font-lock-variable-name-face fontified t) 140 142 (fontified t) 142 143 (face rust-ampersand-face fontified t) 143 144 (face (rainbow-delimiters-depth-5-face) fontified t) 144 148 (face font-lock-constant-face fontified t) 148 150 (fontified t) 150 170 (face font-lock-type-face fontified t) 170 171 (fontified t) 171 172 (face (rainbow-delimiters-depth-6-face) fontified t) 172 193 (fontified t) 193 200 (face font-lock-variable-name-face fontified t) 200 225 (fontified t) 225 235 (face font-lock-variable-name-face fontified t) 235 237 (fontified t) 237 241 (face font-lock-constant-face fontified t) 241 243 (fontified t) 243 255 (face font-lock-type-face fontified t) 255 257 (fontified t) 257 263 (face font-lock-type-face fontified t) 263 266 (fontified t) 266 270 (face font-lock-constant-face fontified t) 270 272 (fontified t) 272 284 (face font-lock-type-face fontified t) 284 286 (fontified t) 286 294 (face font-lock-type-face fontified t) 294 316 (fontified t) 316 318 (face font-lock-variable-name-face fontified t) 318 320 (fontified t) 320 324 (face font-lock-constant-face fontified t) 324 326 (fontified t) 326 337 (face font-lock-type-face fontified t) 337 339 (fontified t) 339 345 (face font-lock-type-face fontified t) 345 346 (fontified t) 346 347 (face (rainbow-delimiters-depth-7-face) fontified t) 347 372 (fontified t) 372 374 (face font-lock-variable-name-face fontified t) 374 376 (fontified t) 376 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 399 (face font-lock-type-face fontified t) 399 401 (fontified t) 401 408 (face font-lock-type-face fontified t) 408 434 (fontified t) 434 452 (face font-lock-variable-name-face fontified t) 452 454 (fontified t) 454 459 (face font-lock-keyword-face fontified t) 459 485 (fontified t) 485 501 (face font-lock-variable-name-face fontified t) 501 503 (fontified t) 503 507 (face font-lock-type-face fontified t) 507 529 (fontified t) 529 530 (face (rainbow-delimiters-depth-7-face) fontified t) 530 552 (fontified t) 552 557 (face font-lock-variable-name-face fontified t) 557 559 (fontified t) 559 563 (face font-lock-type-face fontified t) 563 581 (fontified t) 581 582 (face (rainbow-delimiters-depth-6-face) fontified t) 582 583 (face (rainbow-delimiters-depth-5-face) fontified t) 583 601 (fontified t) 601 606 (face font-lock-variable-name-face fontified t) 606 608 (fontified t) 608 612 (face font-lock-type-face fontified t) 612 626 (fontified t) 626 627 (face (rainbow-delimiters-depth-4-face) fontified t) 627 628 (face (rainbow-delimiters-depth-3-face) fontified t) 628 629 (fontified t rear-nonsticky t)) . 747) (undo-tree-id794 . -629) (undo-tree-id795 . -629) (undo-tree-id797 . -14) (undo-tree-id799 . -14) (undo-tree-id801 . -14) (undo-tree-id803 . -14) (undo-tree-id805 . -14) (undo-tree-id807 . -14) (undo-tree-id809 . -14) (undo-tree-id811 . -14) (undo-tree-id813 . -629) (undo-tree-id815 . -629) (undo-tree-id817 . -629) (undo-tree-id819 . -629) (undo-tree-id821 . -629) (undo-tree-id823 . -629) (undo-tree-id825 . -629) (undo-tree-id827 . -629) (undo-tree-id829 . -629) (undo-tree-id831 . -629) (undo-tree-id833 . -629) (undo-tree-id835 . -629) (undo-tree-id837 . -629) (undo-tree-id839 . -629) (undo-tree-id841 . -629) (undo-tree-id843 . -629) (undo-tree-id845 . -629) (undo-tree-id847 . -629) (undo-tree-id849 . -629) (undo-tree-id851 . -519) (undo-tree-id853 . -355) (undo-tree-id855 . -210) (undo-tree-id857 . -629)) ((747 . 1376)) (26014 43556 498644 0) 0 nil])
([nil nil ((197 . 198)) nil (26014 43687 30030 0) 0 nil])
([nil nil ((nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 833 . 834) (nil fontified nil 819 . 833) (nil fontified nil 815 . 819) (nil fontified nil 813 . 815) (nil fontified nil 808 . 813) (nil fontified nil 790 . 808) (nil fontified nil 789 . 790) (nil fontified nil 788 . 789) (nil fontified nil 770 . 788) (nil fontified nil 766 . 770) (nil fontified nil 764 . 766) (nil fontified nil 759 . 764) (nil fontified nil 737 . 759) (nil fontified nil 736 . 737) (nil fontified nil 714 . 736) (nil fontified nil 710 . 714) (nil fontified nil 708 . 710) (nil fontified nil 692 . 708) (nil fontified nil 666 . 692) (nil fontified nil 661 . 666) (nil fontified nil 659 . 661) (nil fontified nil 641 . 659) (nil fontified nil 615 . 641) (nil fontified nil 608 . 615) (nil fontified nil 606 . 608) (nil fontified nil 589 . 606) (nil fontified nil 587 . 589) (nil fontified nil 583 . 587) (nil fontified nil 581 . 583) (nil fontified nil 579 . 581) (nil fontified nil 554 . 579) (nil fontified nil 553 . 554) (nil fontified nil 552 . 553) (nil fontified nil 546 . 552) (nil fontified nil 544 . 546) (nil fontified nil 533 . 544) (nil fontified nil 531 . 533) (nil fontified nil 527 . 531) (nil fontified nil 525 . 527) (nil fontified nil 523 . 525) (nil fontified nil 501 . 523) (nil fontified nil 493 . 501) (nil fontified nil 491 . 493) (nil fontified nil 479 . 491) (nil fontified nil 477 . 479) (nil fontified nil 473 . 477) (nil fontified nil 470 . 473) (nil fontified nil 464 . 470) (nil fontified nil 462 . 464) (nil fontified nil 450 . 462) (nil fontified nil 448 . 450) (nil fontified nil 444 . 448) (nil fontified nil 442 . 444) (nil fontified nil 432 . 442) (nil fontified nil 407 . 432) (nil fontified nil 400 . 407) (nil fontified nil 379 . 400) (nil fontified nil 378 . 379) (nil fontified nil 377 . 378) (nil fontified nil 357 . 377) (nil fontified nil 355 . 357) (nil fontified nil 351 . 355) (nil fontified nil 350 . 351) (nil fontified nil 349 . 350) (nil fontified nil 347 . 349) (nil fontified nil 340 . 347) (nil fontified nil 323 . 340) (nil fontified nil 322 . 323) (nil fontified nil 321 . 322) (nil fontified nil 296 . 321) (nil fontified nil 294 . 296) (nil fontified nil 290 . 294) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 257 . 288) (nil fontified nil 245 . 257) (nil fontified nil 242 . 245) (nil fontified nil 219 . 242) (nil fontified nil 218 . 219) (nil fontified nil 215 . 218) (nil fontified nil 207 . 215) (207 . 836)) ((#("        let light_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 35 (face font-lock-variable-name-face fontified nil) 35 38 (fontified nil) 38 42 (fontified nil) 42 50 (fontified nil) 50 81 (fontified nil) 81 82 (face (rainbow-delimiters-depth-1-face) fontified nil) 82 83 (face rust-ampersand-face fontified nil) 83 87 (face font-lock-constant-face fontified nil) 87 89 (fontified nil) 89 114 (face font-lock-type-face fontified nil) 114 115 (fontified nil) 115 116 (face (rainbow-delimiters-depth-2-face) fontified nil) 116 117 (fontified nil) 117 125 (fontified nil) 125 133 (fontified nil) 133 140 (face font-lock-variable-name-face fontified nil) 140 142 (fontified nil) 142 143 (face rust-ampersand-face fontified nil) 143 144 (face (rainbow-delimiters-depth-3-face) fontified nil) 144 148 (face font-lock-constant-face fontified nil) 148 150 (fontified nil) 150 170 (face font-lock-type-face fontified nil) 170 171 (fontified nil) 171 172 (face (rainbow-delimiters-depth-4-face) fontified nil) 172 173 (fontified nil) 173 185 (fontified nil) 185 193 (fontified nil) 193 200 (face font-lock-variable-name-face fontified nil) 200 205 (fontified nil) 205 217 (fontified nil) 217 225 (fontified nil) 225 235 (face font-lock-variable-name-face fontified nil) 235 237 (fontified nil) 237 241 (face font-lock-constant-face fontified nil) 241 243 (fontified nil) 243 255 (face font-lock-type-face fontified nil) 255 257 (fontified nil) 257 263 (face font-lock-type-face fontified nil) 263 266 (fontified nil) 266 270 (face font-lock-constant-face fontified nil) 270 272 (fontified nil) 272 284 (face font-lock-type-face fontified nil) 284 286 (fontified nil) 286 294 (face font-lock-type-face fontified nil) 294 296 (fontified nil) 296 308 (fontified nil) 308 316 (fontified nil) 316 318 (face font-lock-variable-name-face fontified nil) 318 320 (fontified nil) 320 324 (face font-lock-constant-face fontified nil) 324 326 (fontified nil) 326 337 (face font-lock-type-face fontified nil) 337 339 (fontified nil) 339 345 (face font-lock-type-face fontified nil) 345 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-5-face) fontified nil) 347 348 (fontified nil) 348 364 (fontified nil) 364 372 (fontified nil) 372 374 (face font-lock-variable-name-face fontified nil) 374 376 (fontified nil) 376 380 (face font-lock-constant-face fontified nil) 380 382 (fontified nil) 382 399 (face font-lock-type-face fontified nil) 399 401 (fontified nil) 401 408 (face font-lock-type-face fontified nil) 408 410 (fontified nil) 410 426 (fontified nil) 426 434 (fontified nil) 434 452 (face font-lock-variable-name-face fontified nil) 452 454 (fontified nil) 454 459 (face font-lock-keyword-face fontified nil) 459 461 (fontified nil) 461 477 (fontified nil) 477 485 (fontified nil) 485 501 (face font-lock-variable-name-face fontified nil) 501 503 (fontified nil) 503 507 (face font-lock-type-face fontified nil) 507 509 (fontified nil) 509 521 (fontified nil) 521 529 (fontified nil) 529 530 (face (rainbow-delimiters-depth-5-face) fontified nil) 530 532 (fontified nil) 532 544 (fontified nil) 544 552 (fontified nil) 552 557 (face font-lock-variable-name-face fontified nil) 557 559 (fontified nil) 559 563 (face font-lock-type-face fontified nil) 563 565 (fontified nil) 565 573 (fontified nil) 573 581 (fontified nil) 581 582 (face (rainbow-delimiters-depth-4-face) fontified nil) 582 583 (face (rainbow-delimiters-depth-3-face) fontified nil) 583 585 (fontified nil) 585 593 (fontified nil) 593 601 (fontified nil) 601 606 (face font-lock-variable-name-face fontified nil) 606 608 (fontified nil) 608 612 (face font-lock-type-face fontified nil) 612 614 (fontified nil) 614 618 (fontified nil) 618 626 (fontified nil) 626 627 (face (rainbow-delimiters-depth-2-face) fontified nil) 627 628 (face (rainbow-delimiters-depth-1-face) fontified nil) 628 629 (fontified nil rear-nonsticky t)) . 207) (undo-tree-id1085 . -629) (undo-tree-id1086 . -12) (undo-tree-id1087 . -12) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -11) (undo-tree-id1094 . -11) (undo-tree-id1095 . -12) (undo-tree-id1096 . -12) (undo-tree-id1097 . -12) (undo-tree-id1098 . -12) (undo-tree-id1099 . -12) (undo-tree-id1100 . -12) (undo-tree-id1101 . -12) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -12) (undo-tree-id1106 . -12) (undo-tree-id1107 . -12) (undo-tree-id1108 . -12) (undo-tree-id1109 . -12) (undo-tree-id1110 . -8) (undo-tree-id1111 . -8) (undo-tree-id1112 . -7) (undo-tree-id1113 . -7) (undo-tree-id1114 . -6) (undo-tree-id1115 . -6) (undo-tree-id1116 . -5) (undo-tree-id1117 . -5) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -479) (undo-tree-id1127 . -313) (undo-tree-id1128 . -629) (undo-tree-id1129 . -54) (undo-tree-id1130 . -54) (undo-tree-id1131 . -54) (undo-tree-id1132 . -54) (undo-tree-id1133 . -54) (undo-tree-id1134 . -54) (undo-tree-id1135 . -54) (undo-tree-id1136 . -54) (undo-tree-id1137 . -54) (undo-tree-id1138 . -54) (undo-tree-id1139 . -54) (undo-tree-id1140 . -54) (undo-tree-id1141 . -54) (undo-tree-id1142 . -54) (undo-tree-id1143 . -54) (undo-tree-id1144 . -54) (undo-tree-id1145 . -54) (undo-tree-id1146 . -54) (undo-tree-id1147 . -54) (undo-tree-id1148 . -54) (undo-tree-id1149 . -54) (undo-tree-id1150 . -54) (undo-tree-id1151 . -54) (undo-tree-id1152 . -54) (undo-tree-id1153 . -54) (undo-tree-id1154 . -54) (undo-tree-id1155 . -54) (undo-tree-id1156 . -54) (undo-tree-id1157 . -54) (undo-tree-id1158 . -54) (undo-tree-id1159 . -54) (undo-tree-id1160 . -54) (undo-tree-id1161 . -54) (undo-tree-id1162 . -54) (undo-tree-id1163 . -54) (undo-tree-id1164 . -54) (undo-tree-id1165 . -54) (undo-tree-id1166 . -54) (undo-tree-id1167 . -54) (undo-tree-id1168 . -54) (undo-tree-id1169 . -54) (undo-tree-id1170 . -629) (undo-tree-id1171 . -629) (undo-tree-id1172 . -629) (undo-tree-id1173 . -608) (undo-tree-id1174 . -584) (undo-tree-id1175 . -544) (undo-tree-id1176 . -471) (undo-tree-id1177 . -470) (undo-tree-id1178 . -356) (undo-tree-id1179 . -355) (undo-tree-id1180 . -302) (undo-tree-id1181 . -122) (undo-tree-id1182 . -629) (undo-tree-id1183 . -629) (undo-tree-id1184 . -629) (undo-tree-id1185 . -8) (undo-tree-id1186 . -8) (undo-tree-id1187 . -8) (undo-tree-id1188 . -8) (undo-tree-id1189 . -8) (undo-tree-id1190 . -8) (undo-tree-id1191 . -8) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) (nil fontified t 242 . 245) (nil fontified t 323 . 324) (nil fontified t 379 . 380) (nil fontified t 407 . 412) (nil fontified t 501 . 503) (nil fontified t 554 . 555) (nil fontified t 615 . 617) (nil fontified t 666 . 668) (nil fontified t 714 . 716) (nil fontified t 737 . 739) (nil fontified t 770 . 772) (nil fontified t 790 . 792) (nil fontified t 819 . 821) (nil fontified t 835 . 836)) (26014 43556 220066 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -197) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) 198) nil (26014 43687 30029 0) 0 nil])
([nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -215) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) 219) ((215 . 219)) (26014 43555 556029 0) 0 nil])
([nil nil ((197 . 198)) nil (26014 43687 30025 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -207) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#(" " 0 1 (fontified t)) . -208) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#(" " 0 1 (fontified t)) . -209) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (#(" " 0 1 (fontified t)) . -211) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#(" " 0 1 (fontified t)) . -212) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#(" " 0 1 (fontified t)) . -213) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#(" " 0 1 (fontified t)) . -214) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) 215) ((207 . 215)) (26014 43554 765512 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -197) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 198) nil (26014 43687 30024 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -717) (#("        " 0 8 (fontified t)) . -700) (#("        " 0 8 (fontified t)) . -688) (#("        " 0 8 (fontified t)) . -667) (#("        " 0 8 (fontified t)) . -652) (#("        " 0 8 (fontified t)) . -616) (undo-tree-id504 . -2) (#("        " 0 8 (fontified t)) . -573) (#("        " 0 8 (fontified t)) . -519) (#("        " 0 8 (fontified t)) . -471) (undo-tree-id505 . -5) (#("        " 0 8 (fontified t)) . -388) (#("        " 0 8 (fontified t)) . -364) (#("        " 0 8 (fontified t)) . -312) (#("        " 0 8 (fontified t)) . -237) 195) ((237 . 245) (312 . 320) (364 . 372) (388 . 396) (471 . 479) (519 . 527) (573 . 581) (616 . 624) (652 . 660) (667 . 675) (688 . 696) (700 . 708) (717 . 725) (t 26014 43537 754461 29000)) (26014 43553 753065 0) 0 nil])
([nil nil ((197 . 202)) nil (26014 43687 30018 0) 0 nil])
([nil nil ((#("pub const light_bind_group_layout =
    device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
        entries: &[wgpu::BindGroupLayoutEntry {
            binding: 0,
            visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
            ty: wgpu::BindingType::Buffer {
                ty: wgpu::BufferBindingType::Uniform,
                has_dynamic_offset: false,
                min_binding_size: None,
            },
            count: None,
        }],
        label: None,
    });" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 33 (fontified t) 33 36 (fontified t) 36 40 (fontified t) 40 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 73 (face rust-ampersand-face fontified t) 73 77 (face font-lock-constant-face fontified t) 77 79 (fontified t) 79 104 (face font-lock-type-face fontified t) 104 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-2-face) fontified t) 106 107 (fontified t) 107 115 (fontified t) 115 122 (face font-lock-variable-name-face fontified t) 122 124 (fontified t) 124 125 (face rust-ampersand-face fontified t) 125 126 (face (rainbow-delimiters-depth-3-face) fontified t) 126 130 (face font-lock-constant-face fontified t) 130 132 (fontified t) 132 152 (face font-lock-type-face fontified t) 152 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-4-face) fontified t) 154 155 (fontified t) 155 167 (fontified t) 167 174 (face font-lock-variable-name-face fontified t) 174 179 (fontified t) 179 191 (fontified t) 191 201 (face font-lock-variable-name-face fontified t) 201 203 (fontified t) 203 207 (face font-lock-constant-face fontified t) 207 209 (fontified t) 209 221 (face font-lock-type-face fontified t) 221 223 (fontified t) 223 229 (face font-lock-type-face fontified t) 229 232 (fontified t) 232 236 (face font-lock-constant-face fontified t) 236 238 (fontified t) 238 250 (face font-lock-type-face fontified t) 250 252 (fontified t) 252 260 (face font-lock-type-face fontified t) 260 262 (fontified t) 262 274 (fontified t) 274 276 (face font-lock-variable-name-face fontified t) 276 278 (fontified t) 278 282 (face font-lock-constant-face fontified t) 282 284 (fontified t) 284 295 (face font-lock-type-face fontified t) 295 297 (fontified t) 297 303 (face font-lock-type-face fontified t) 303 304 (fontified t) 304 305 (face (rainbow-delimiters-depth-5-face) fontified t) 305 306 (fontified t) 306 322 (fontified t) 322 324 (face font-lock-variable-name-face fontified t) 324 326 (fontified t) 326 330 (face font-lock-constant-face fontified t) 330 332 (fontified t) 332 349 (face font-lock-type-face fontified t) 349 351 (fontified t) 351 358 (face font-lock-type-face fontified t) 358 360 (fontified t) 360 376 (fontified t) 376 394 (face font-lock-variable-name-face fontified t) 394 396 (fontified t) 396 401 (face font-lock-keyword-face fontified t) 401 403 (fontified t) 403 419 (fontified t) 419 435 (face font-lock-variable-name-face fontified t) 435 437 (fontified t) 437 441 (face font-lock-type-face fontified t) 441 443 (fontified t) 443 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-5-face) fontified t) 456 458 (fontified t) 458 470 (fontified t) 470 475 (face font-lock-variable-name-face fontified t) 475 477 (fontified t) 477 481 (face font-lock-type-face fontified t) 481 483 (fontified t) 483 491 (fontified t) 491 492 (face (rainbow-delimiters-depth-4-face) fontified t) 492 493 (face (rainbow-delimiters-depth-3-face) fontified t) 493 495 (fontified t) 495 503 (fontified t) 503 508 (face font-lock-variable-name-face fontified t) 508 510 (fontified t) 510 514 (face font-lock-type-face fontified t) 514 516 (fontified t) 516 520 (fontified t) 520 521 (face (rainbow-delimiters-depth-2-face) fontified t) 521 522 (face (rainbow-delimiters-depth-1-face) fontified t) 522 523 (fontified t rear-nonsticky t)) . 197) (undo-tree-id975 . -523) (undo-tree-id976 . -10) (undo-tree-id977 . -10) (undo-tree-id978 . -10) (undo-tree-id979 . -10) (undo-tree-id980 . -10) (undo-tree-id981 . -10) (undo-tree-id982 . -10) (undo-tree-id983 . -10) (undo-tree-id984 . -10) (undo-tree-id985 . -10) (undo-tree-id986 . -10) (undo-tree-id987 . -10) (undo-tree-id988 . -10) (undo-tree-id989 . -10) (undo-tree-id990 . -10) (undo-tree-id991 . -10) (undo-tree-id992 . -10) (undo-tree-id993 . -10) (undo-tree-id994 . -10) (undo-tree-id995 . -10) (undo-tree-id996 . -10) (undo-tree-id997 . -10) (undo-tree-id998 . -10) (undo-tree-id999 . -10) (undo-tree-id1000 . -10) (undo-tree-id1001 . -10) (undo-tree-id1002 . -10) (undo-tree-id1003 . -10) (undo-tree-id1004 . -10) (undo-tree-id1005 . -10) (undo-tree-id1006 . -10) (undo-tree-id1007 . -10) (undo-tree-id1008 . -10) (undo-tree-id1009 . -10) (undo-tree-id1010 . -10) (undo-tree-id1011 . -10) (undo-tree-id1012 . -10) (undo-tree-id1013 . -10) (undo-tree-id1014 . -419) (undo-tree-id1015 . -274) (undo-tree-id1016 . -10) (undo-tree-id1017 . -523) (undo-tree-id1018 . -44) (undo-tree-id1019 . -44) (undo-tree-id1020 . -44) (undo-tree-id1021 . -44) (undo-tree-id1022 . -44) (undo-tree-id1023 . -44) (undo-tree-id1024 . -44) (undo-tree-id1025 . -44) (undo-tree-id1026 . -44) (undo-tree-id1027 . -44) (undo-tree-id1028 . -44) (undo-tree-id1029 . -44) (undo-tree-id1030 . -44) (undo-tree-id1031 . -44) (undo-tree-id1032 . -44) (undo-tree-id1033 . -44) (undo-tree-id1034 . -44) (undo-tree-id1035 . -44) (undo-tree-id1036 . -44) (undo-tree-id1037 . -44) (undo-tree-id1038 . -44) (undo-tree-id1039 . -44) (undo-tree-id1040 . -44) (undo-tree-id1041 . -44) (undo-tree-id1042 . -44) (undo-tree-id1043 . -44) (undo-tree-id1044 . -44) (undo-tree-id1045 . -44) (undo-tree-id1046 . -44) (undo-tree-id1047 . -44) (undo-tree-id1048 . -44) (undo-tree-id1049 . -44) (undo-tree-id1050 . -44) (undo-tree-id1051 . -44) (undo-tree-id1052 . -44) (undo-tree-id1053 . -44) (undo-tree-id1054 . -44) (undo-tree-id1055 . -44) (undo-tree-id1056 . -44) (undo-tree-id1057 . -44) (undo-tree-id1058 . -44) (undo-tree-id1059 . -523) (undo-tree-id1060 . -523) (undo-tree-id1061 . -523) (undo-tree-id1062 . -510) (undo-tree-id1063 . -494) (undo-tree-id1064 . -470) (undo-tree-id1065 . -413) (undo-tree-id1066 . -412) (undo-tree-id1067 . -314) (undo-tree-id1068 . -313) (undo-tree-id1069 . -268) (undo-tree-id1070 . -112) (undo-tree-id1071 . -523) (undo-tree-id1072 . -523) (undo-tree-id1073 . -523) (t 26014 43537 754461 29000)) ((197 . 720)) (26014 43553 608826 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -201) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) 202) nil (26014 43687 30016 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -196) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) 197) ((196 . 197)) (26014 43553 603351 0) 0 nil])
([nil nil ((201 . 207)) nil (26014 43687 30012 0) 0 nil])
([nil nil ((737 . 745) (#("        " 0 8 (fontified nil)) . 736) (undo-tree-id858 . -8) (undo-tree-id859 . -8) (undo-tree-id860 . -8) (undo-tree-id861 . -8) (736 . 745) (#("        " 0 8 (fontified nil)) . 735) (735 . 743) (735 . 736)) ((#("
" 0 1 (fontified nil)) . 735) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("        " 0 8 (fontified nil)) . 735) (735 . 743) (#("        
" 0 8 (fontified nil) 8 9 (fontified nil)) . 736) (undo-tree-id1079 . -9) (undo-tree-id1080 . -8) (undo-tree-id1081 . -8) (undo-tree-id1082 . -8) (undo-tree-id1083 . -9) (736 . 744) (#("        " 0 8 (fontified t)) . 737) (undo-tree-id1084 . -8)) (26014 43553 602371 0) 0 nil])
([nil nil ((207 . 220)) nil (26014 43687 30011 0) 0 nil])
nil
([nil nil ((#("g" 0 1 (fontified t)) . -218) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("r" 0 1 (fontified t)) . -219) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) 220) nil (26014 43687 30009 0) 0 nil])
([nil nil ((218 . 238)) nil (26014 43687 30000 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 782 . 783) (nil fontified nil 782 . 783) (nil fontified nil 768 . 782) (nil fontified nil 764 . 768) (nil fontified nil 762 . 764) (nil fontified nil 757 . 762) (nil fontified nil 739 . 757) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 719 . 737) (nil fontified nil 715 . 719) (nil fontified nil 713 . 715) (nil fontified nil 708 . 713) (nil fontified nil 686 . 708) (nil fontified nil 685 . 686) (nil fontified nil 663 . 685) (nil fontified nil 659 . 663) (nil fontified nil 657 . 659) (nil fontified nil 641 . 657) (nil fontified nil 615 . 641) (nil fontified nil 610 . 615) (nil fontified nil 608 . 610) (nil fontified nil 590 . 608) (nil fontified nil 564 . 590) (nil fontified nil 557 . 564) (nil fontified nil 555 . 557) (nil fontified nil 538 . 555) (nil fontified nil 536 . 538) (nil fontified nil 532 . 536) (nil fontified nil 530 . 532) (nil fontified nil 528 . 530) (nil fontified nil 503 . 528) (nil fontified nil 502 . 503) (nil fontified nil 501 . 502) (nil fontified nil 495 . 501) (nil fontified nil 493 . 495) (nil fontified nil 482 . 493) (nil fontified nil 480 . 482) (nil fontified nil 476 . 480) (nil fontified nil 474 . 476) (nil fontified nil 472 . 474) (nil fontified nil 450 . 472) (nil fontified nil 442 . 450) (nil fontified nil 440 . 442) (nil fontified nil 428 . 440) (nil fontified nil 426 . 428) (nil fontified nil 422 . 426) (nil fontified nil 419 . 422) (nil fontified nil 413 . 419) (nil fontified nil 411 . 413) (nil fontified nil 399 . 411) (nil fontified nil 397 . 399) (nil fontified nil 393 . 397) (nil fontified nil 391 . 393) (nil fontified nil 381 . 391) (nil fontified nil 356 . 381) (nil fontified nil 349 . 356) (nil fontified nil 328 . 349) (nil fontified nil 327 . 328) (nil fontified nil 326 . 327) (nil fontified nil 306 . 326) (nil fontified nil 304 . 306) (nil fontified nil 300 . 304) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 296 . 298) (nil fontified nil 289 . 296) (nil fontified nil 272 . 289) (nil fontified nil 271 . 272) (nil fontified nil 270 . 271) (nil fontified nil 245 . 270) (nil fontified nil 243 . 245) (nil fontified nil 239 . 243) (nil fontified nil 238 . 239) (238 . 783)) nil (26014 43687 29995 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -238) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 239) nil (26014 43687 29964 0) 0 nil])
([nil nil ((782 . 783)) nil (26014 43687 29937 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -637) (#("            " 0 12 (fontified t)) . -624) (#("            " 0 12 (fontified t)) . -616) (#("            " 0 12 (fontified t)) . -599) (#("            " 0 12 (fontified t)) . -588) (#("            " 0 12 (fontified t)) . -556) (undo-tree-id1486 . -6) (undo-tree-id1487 . -6) (#("            " 0 12 (fontified t)) . -517) (undo-tree-id1488 . -4) (#("            " 0 12 (fontified t)) . -467) (#("            " 0 12 (fontified t)) . -423) (undo-tree-id1489 . -7) (#("            " 0 12 (fontified t)) . -344) (undo-tree-id1490 . -6) (#("            " 0 12 (fontified t)) . -324) (undo-tree-id1491 . -5) (#("            " 0 12 (fontified t)) . -276) (undo-tree-id1492 . -8) 208 (t 26014 43687 37442 277000)) nil (26014 43695 319022 0) 0 nil])
([nil nil ((238 . 242) (#(" " 0 1 (fontified nil)) . 237) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (238 . 239)) nil (26014 43695 319009 0) 0 nil])
([nil nil ((685 . 689) (664 . 672) (#("    " 0 4 (fontified t)) . 664) (652 . 660) (#("    " 0 4 (fontified t)) . 652) (635 . 639) (620 . 624) (572 . 588) (#("            " 0 12 (fontified t)) . 572) (undo-tree-id1470 . -12) (undo-tree-id1471 . -12) (529 . 545) (#("            " 0 12 (fontified t)) . 529) (undo-tree-id1472 . -12) (475 . 491) (#("            " 0 12 (fontified t)) . 475) (439 . 443) (356 . 360) (332 . 336) (276 . 284) (#("    " 0 4 (fontified t)) . 276) (undo-tree-id1473 . -4) 196) nil (26014 43695 318991 0) 0 nil])
([nil nil ((235 . 236) (t 26014 43695 326595 710000)) nil (26014 43737 83545 0) 0 nil])
([nil nil ((236 . 238)) nil (26014 43737 83544 0) 0 nil])
([nil nil ((237 . 272) (#("w" 0 1 (fontified nil)) . 237) (237 . 238) (#("wgpu::BindGroupLayoutDescriptor<'_>" 0 35 (fontified nil)) . -237) (237 . 272) (#("w" 0 1 (fontified t)) . -237) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 238) nil (26014 43737 83542 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -270) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) 271) nil (26014 43737 83533 0) 0 nil])
([nil nil ((270 . 272)) nil (26014 43737 83528 0) 0 nil])
([nil nil ((269 . 276) (#("'st" 0 1 (fontified nil) 1 3 (fontified nil)) . 269) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (270 . 272) (#("'static" 0 7 (fontified nil)) . -270) (270 . 277) (#("st" 0 2 (face font-lock-variable-name-face fontified t)) . -270) (undo-tree-id1504 . -2) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) 272) nil (26014 43763 333560 0) 0 nil])
([nil nil ((207 . 235) (#("light_bing_group_layout_desc" 0 28 (face font-lock-variable-name-face fontified t)) . -207) (t 26014 43737 90810 443000)) nil (26014 43780 351807 0) 0 nil] [nil nil ((207 . 235) (#("light_bing_group_layout_desc" 0 28 (face font-lock-variable-name-face fontified t)) . -207) (t 26014 43737 90810 443000)) ((207 . 235) (#("Light_Bing_Group_Layout_Desc" 0 28 (face font-lock-variable-name-face fontified t)) . 207) (undo-tree-id1520 . -28) (undo-tree-id1521 . -28) (undo-tree-id1522 . -28) (undo-tree-id1523 . -28)) (26014 43763 332939 0) 0 nil])
([nil nil ((#("Desc" 0 4 (face font-lock-variable-name-face fontified t)) . -231) (undo-tree-id2080 . -4) (undo-tree-id2081 . -4) (undo-tree-id2082 . -4) (undo-tree-id2083 . -4) (undo-tree-id2084 . -4) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -2) (undo-tree-id2090 . -3) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -4) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -3) (undo-tree-id2137 . -4) (undo-tree-id2138 . -4) (undo-tree-id2139 . -4) (undo-tree-id2140 . -4) (undo-tree-id2141 . -4) (undo-tree-id2142 . -4) (undo-tree-id2143 . -4) (undo-tree-id2144 . -4) (undo-tree-id2145 . -4) (undo-tree-id2146 . -4) (undo-tree-id2147 . -4) (undo-tree-id2148 . -4) (undo-tree-id2149 . -4) (undo-tree-id2150 . -4) (undo-tree-id2151 . -4) (undo-tree-id2152 . -4) (undo-tree-id2153 . -4) (undo-tree-id2154 . -4) (undo-tree-id2155 . -4) (undo-tree-id2156 . -4) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) (undo-tree-id2159 . -4) (undo-tree-id2160 . -4) (undo-tree-id2161 . -4) (undo-tree-id2162 . -4) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -3) (undo-tree-id2170 . -3) (undo-tree-id2171 . -2) (undo-tree-id2172 . -1) (undo-tree-id2173 . -4) 235 (t 26014 43780 359163 826000)) nil (26014 43839 544605 0) 0 nil])
nil
([nil nil ((#("Layout_" 0 7 (face font-lock-variable-name-face fontified t)) . -224) (undo-tree-id1956 . -7) (undo-tree-id1957 . -7) (undo-tree-id1958 . -7) (undo-tree-id1959 . -7) (undo-tree-id1960 . -7) (undo-tree-id1961 . -7) (undo-tree-id1962 . -7) (undo-tree-id1963 . -7) (undo-tree-id1964 . -7) (undo-tree-id1965 . -7) (undo-tree-id1966 . -7) (undo-tree-id1967 . -7) (undo-tree-id1968 . -7) (undo-tree-id1969 . -7) (undo-tree-id1970 . -7) (undo-tree-id1971 . -7) (undo-tree-id1972 . -7) (undo-tree-id1973 . -7) (undo-tree-id1974 . -7) (undo-tree-id1975 . -7) (undo-tree-id1976 . -7) (undo-tree-id1977 . -7) (undo-tree-id1978 . -7) (undo-tree-id1979 . -7) (undo-tree-id1980 . -7) (undo-tree-id1981 . -7) (undo-tree-id1982 . -7) (undo-tree-id1983 . -7) (undo-tree-id1984 . -7) (undo-tree-id1985 . -7) (undo-tree-id1986 . -7) (undo-tree-id1987 . -7) (undo-tree-id1988 . -7) (undo-tree-id1989 . -7) (undo-tree-id1990 . -7) (undo-tree-id1991 . -7) (undo-tree-id1992 . -7) (undo-tree-id1993 . -7) (undo-tree-id1994 . -7) (undo-tree-id1995 . -7) (undo-tree-id1996 . -7) (undo-tree-id1997 . -7) (undo-tree-id1998 . -7) (undo-tree-id1999 . -7) (undo-tree-id2000 . -7) (undo-tree-id2001 . -7) (undo-tree-id2002 . -7) (undo-tree-id2003 . -7) (undo-tree-id2004 . -7) (undo-tree-id2005 . -7) (undo-tree-id2006 . -7) (undo-tree-id2007 . -7) (undo-tree-id2008 . -7) (undo-tree-id2009 . -7) (undo-tree-id2010 . -7) (undo-tree-id2011 . -7) (undo-tree-id2012 . -7) (undo-tree-id2013 . -7) (undo-tree-id2014 . -7) (undo-tree-id2015 . -7) (undo-tree-id2016 . -7) (undo-tree-id2017 . -7) (undo-tree-id2018 . -7) (undo-tree-id2019 . -7) (undo-tree-id2020 . -7) (undo-tree-id2021 . -7) (undo-tree-id2022 . -7) (undo-tree-id2023 . -7) (undo-tree-id2024 . -7) (undo-tree-id2025 . -7) (undo-tree-id2026 . -7) (undo-tree-id2027 . -7) (undo-tree-id2028 . -7) (undo-tree-id2029 . -7) (undo-tree-id2030 . -7) (undo-tree-id2031 . -7) (undo-tree-id2032 . -7) (undo-tree-id2033 . -7) (undo-tree-id2034 . -7) (undo-tree-id2035 . -7) (undo-tree-id2036 . -7) (undo-tree-id2037 . -7) (undo-tree-id2038 . -7) (undo-tree-id2039 . -7) (undo-tree-id2040 . -7) (undo-tree-id2041 . -7) (undo-tree-id2042 . -7) (undo-tree-id2043 . -7) (undo-tree-id2044 . -7) (undo-tree-id2045 . -7) (undo-tree-id2046 . -7) (undo-tree-id2047 . -7) (undo-tree-id2048 . -7) (undo-tree-id2049 . -7) (undo-tree-id2050 . -7) (undo-tree-id2051 . -7) (undo-tree-id2052 . -7) (undo-tree-id2053 . -7) (undo-tree-id2054 . -7) (undo-tree-id2055 . -7) (undo-tree-id2056 . -7) (undo-tree-id2057 . -7) (undo-tree-id2058 . -7) (undo-tree-id2059 . -7) (undo-tree-id2060 . -7) (undo-tree-id2061 . -7) (undo-tree-id2062 . -7) (undo-tree-id2063 . -7) (undo-tree-id2064 . -7) (undo-tree-id2065 . -7) (undo-tree-id2066 . -7) (undo-tree-id2067 . -7) (undo-tree-id2068 . -7) (undo-tree-id2069 . -7) (undo-tree-id2070 . -7) (undo-tree-id2071 . -6) (undo-tree-id2072 . -5) (undo-tree-id2073 . -4) (undo-tree-id2074 . -3) (undo-tree-id2075 . -2) (undo-tree-id2076 . -1) (undo-tree-id2077 . -7) (undo-tree-id2078 . -7) (undo-tree-id2079 . -7) 231) nil (26014 43839 544510 0) 0 nil])
([nil nil ((#("Group_" 0 6 (face font-lock-variable-name-face fontified t)) . -218) (undo-tree-id1824 . -6) (undo-tree-id1825 . -6) (undo-tree-id1826 . -6) (undo-tree-id1827 . -6) (undo-tree-id1828 . -6) (undo-tree-id1829 . -6) (undo-tree-id1830 . -6) (undo-tree-id1831 . -6) (undo-tree-id1832 . -6) (undo-tree-id1833 . -6) (undo-tree-id1834 . -6) (undo-tree-id1835 . -6) (undo-tree-id1836 . -6) (undo-tree-id1837 . -6) (undo-tree-id1838 . -6) (undo-tree-id1839 . -6) (undo-tree-id1840 . -6) (undo-tree-id1841 . -6) (undo-tree-id1842 . -6) (undo-tree-id1843 . -6) (undo-tree-id1844 . -6) (undo-tree-id1845 . -6) (undo-tree-id1846 . -6) (undo-tree-id1847 . -6) (undo-tree-id1848 . -6) (undo-tree-id1849 . -6) (undo-tree-id1850 . -6) (undo-tree-id1851 . -6) (undo-tree-id1852 . -6) (undo-tree-id1853 . -6) (undo-tree-id1854 . -6) (undo-tree-id1855 . -6) (undo-tree-id1856 . -6) (undo-tree-id1857 . -6) (undo-tree-id1858 . -6) (undo-tree-id1859 . -6) (undo-tree-id1860 . -6) (undo-tree-id1861 . -6) (undo-tree-id1862 . -6) (undo-tree-id1863 . -6) (undo-tree-id1864 . -6) (undo-tree-id1865 . -6) (undo-tree-id1866 . -6) (undo-tree-id1867 . -6) (undo-tree-id1868 . -6) (undo-tree-id1869 . -6) (undo-tree-id1870 . -6) (undo-tree-id1871 . -6) (undo-tree-id1872 . -6) (undo-tree-id1873 . -6) (undo-tree-id1874 . -6) (undo-tree-id1875 . -6) (undo-tree-id1876 . -6) (undo-tree-id1877 . -6) (undo-tree-id1878 . -6) (undo-tree-id1879 . -6) (undo-tree-id1880 . -6) (undo-tree-id1881 . -6) (undo-tree-id1882 . -6) (undo-tree-id1883 . -6) (undo-tree-id1884 . -6) (undo-tree-id1885 . -6) (undo-tree-id1886 . -6) (undo-tree-id1887 . -6) (undo-tree-id1888 . -6) (undo-tree-id1889 . -6) (undo-tree-id1890 . -6) (undo-tree-id1891 . -6) (undo-tree-id1892 . -6) (undo-tree-id1893 . -6) (undo-tree-id1894 . -6) (undo-tree-id1895 . -6) (undo-tree-id1896 . -6) (undo-tree-id1897 . -6) (undo-tree-id1898 . -6) (undo-tree-id1899 . -6) (undo-tree-id1900 . -6) (undo-tree-id1901 . -6) (undo-tree-id1902 . -6) (undo-tree-id1903 . -6) (undo-tree-id1904 . -6) (undo-tree-id1905 . -6) (undo-tree-id1906 . -6) (undo-tree-id1907 . -6) (undo-tree-id1908 . -6) (undo-tree-id1909 . -6) (undo-tree-id1910 . -6) (undo-tree-id1911 . -6) (undo-tree-id1912 . -6) (undo-tree-id1913 . -6) (undo-tree-id1914 . -6) (undo-tree-id1915 . -6) (undo-tree-id1916 . -6) (undo-tree-id1917 . -6) (undo-tree-id1918 . -6) (undo-tree-id1919 . -6) (undo-tree-id1920 . -6) (undo-tree-id1921 . -6) (undo-tree-id1922 . -6) (undo-tree-id1923 . -6) (undo-tree-id1924 . -6) (undo-tree-id1925 . -6) (undo-tree-id1926 . -6) (undo-tree-id1927 . -6) (undo-tree-id1928 . -6) (undo-tree-id1929 . -6) (undo-tree-id1930 . -6) (undo-tree-id1931 . -6) (undo-tree-id1932 . -6) (undo-tree-id1933 . -6) (undo-tree-id1934 . -6) (undo-tree-id1935 . -6) (undo-tree-id1936 . -6) (undo-tree-id1937 . -6) (undo-tree-id1938 . -6) (undo-tree-id1939 . -6) (undo-tree-id1940 . -6) (undo-tree-id1941 . -6) (undo-tree-id1942 . -6) (undo-tree-id1943 . -6) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -5) (undo-tree-id1947 . -4) (undo-tree-id1948 . -3) (undo-tree-id1949 . -2) (undo-tree-id1950 . -1) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) 224) nil (26014 43839 544385 0) 0 nil])
([nil nil ((#("Bing_" 0 5 (face font-lock-variable-name-face fontified t)) . -213) (undo-tree-id1679 . -5) (undo-tree-id1680 . -5) (undo-tree-id1681 . -5) (undo-tree-id1682 . -5) (undo-tree-id1683 . -5) (undo-tree-id1684 . -5) (undo-tree-id1685 . -5) (undo-tree-id1686 . -5) (undo-tree-id1687 . -5) (undo-tree-id1688 . -5) (undo-tree-id1689 . -5) (undo-tree-id1690 . -5) (undo-tree-id1691 . -5) (undo-tree-id1692 . -5) (undo-tree-id1693 . -5) (undo-tree-id1694 . -5) (undo-tree-id1695 . -5) (undo-tree-id1696 . -5) (undo-tree-id1697 . -5) (undo-tree-id1698 . -5) (undo-tree-id1699 . -5) (undo-tree-id1700 . -5) (undo-tree-id1701 . -5) (undo-tree-id1702 . -5) (undo-tree-id1703 . -5) (undo-tree-id1704 . -5) (undo-tree-id1705 . -5) (undo-tree-id1706 . -5) (undo-tree-id1707 . -5) (undo-tree-id1708 . -5) (undo-tree-id1709 . -1) (undo-tree-id1710 . -3) (undo-tree-id1711 . -5) (undo-tree-id1712 . -5) (undo-tree-id1713 . -5) (undo-tree-id1714 . -5) (undo-tree-id1715 . -5) (undo-tree-id1716 . -5) (undo-tree-id1717 . -5) (undo-tree-id1718 . -5) (undo-tree-id1719 . -5) (undo-tree-id1720 . -5) (undo-tree-id1721 . -5) (undo-tree-id1722 . -5) (undo-tree-id1723 . -5) (undo-tree-id1724 . -5) (undo-tree-id1725 . -5) (undo-tree-id1726 . -5) (undo-tree-id1727 . -5) (undo-tree-id1728 . -5) (undo-tree-id1729 . -5) (undo-tree-id1730 . -5) (undo-tree-id1731 . -5) (undo-tree-id1732 . -5) (undo-tree-id1733 . -5) (undo-tree-id1734 . -5) (undo-tree-id1735 . -5) (undo-tree-id1736 . -5) (undo-tree-id1737 . -5) (undo-tree-id1738 . -5) (undo-tree-id1739 . -5) (undo-tree-id1740 . -5) (undo-tree-id1741 . -5) (undo-tree-id1742 . -5) (undo-tree-id1743 . -5) (undo-tree-id1744 . -5) (undo-tree-id1745 . -5) (undo-tree-id1746 . -5) (undo-tree-id1747 . -5) (undo-tree-id1748 . -5) (undo-tree-id1749 . -5) (undo-tree-id1750 . -5) (undo-tree-id1751 . -5) (undo-tree-id1752 . -5) (undo-tree-id1753 . -5) (undo-tree-id1754 . -5) (undo-tree-id1755 . -5) (undo-tree-id1756 . -5) (undo-tree-id1757 . -5) (undo-tree-id1758 . -5) (undo-tree-id1759 . -5) (undo-tree-id1760 . -5) (undo-tree-id1761 . -5) (undo-tree-id1762 . -5) (undo-tree-id1763 . -5) (undo-tree-id1764 . -5) (undo-tree-id1765 . -5) (undo-tree-id1766 . -5) (undo-tree-id1767 . -5) (undo-tree-id1768 . -5) (undo-tree-id1769 . -5) (undo-tree-id1770 . -5) (undo-tree-id1771 . -5) (undo-tree-id1772 . -5) (undo-tree-id1773 . -5) (undo-tree-id1774 . -5) (undo-tree-id1775 . -5) (undo-tree-id1776 . -5) (undo-tree-id1777 . -5) (undo-tree-id1778 . -5) (undo-tree-id1779 . -5) (undo-tree-id1780 . -5) (undo-tree-id1781 . -5) (undo-tree-id1782 . -5) (undo-tree-id1783 . -5) (undo-tree-id1784 . -5) (undo-tree-id1785 . -5) (undo-tree-id1786 . -5) (undo-tree-id1787 . -5) (undo-tree-id1788 . -5) (undo-tree-id1789 . -5) (undo-tree-id1790 . -5) (undo-tree-id1791 . -5) (undo-tree-id1792 . -5) (undo-tree-id1793 . -5) (undo-tree-id1794 . -5) (undo-tree-id1795 . -5) (undo-tree-id1796 . -5) (undo-tree-id1797 . -5) (undo-tree-id1798 . -5) (undo-tree-id1799 . -5) (undo-tree-id1800 . -5) (undo-tree-id1801 . -5) (undo-tree-id1802 . -5) (undo-tree-id1803 . -5) (undo-tree-id1804 . -5) (undo-tree-id1805 . -5) (undo-tree-id1806 . -5) (undo-tree-id1807 . -5) (undo-tree-id1808 . -5) (undo-tree-id1809 . -4) (undo-tree-id1810 . -3) (undo-tree-id1811 . -2) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -5) (undo-tree-id1818 . -5) (undo-tree-id1819 . -5) (undo-tree-id1820 . -5) (undo-tree-id1821 . -5) (undo-tree-id1822 . -5) (undo-tree-id1823 . -5) 218) nil (26014 43839 544252 0) 0 nil])
([nil nil ((#("Light_" 0 6 (face font-lock-variable-name-face fontified t)) . -207) (undo-tree-id1524 . -6) (undo-tree-id1525 . -6) (undo-tree-id1526 . -6) (undo-tree-id1527 . -6) (undo-tree-id1528 . -6) (undo-tree-id1529 . -6) (undo-tree-id1530 . -6) (undo-tree-id1531 . -6) (undo-tree-id1532 . -6) (undo-tree-id1533 . -6) (undo-tree-id1534 . -6) (undo-tree-id1535 . -6) (undo-tree-id1536 . -6) (undo-tree-id1537 . -6) (undo-tree-id1538 . -6) (undo-tree-id1539 . -6) (undo-tree-id1540 . -6) (undo-tree-id1541 . -6) (undo-tree-id1542 . -6) (undo-tree-id1543 . -6) (undo-tree-id1544 . -6) (undo-tree-id1545 . -6) (undo-tree-id1546 . -6) (undo-tree-id1547 . -6) (undo-tree-id1548 . -6) (undo-tree-id1549 . -6) (undo-tree-id1550 . -6) (undo-tree-id1551 . -6) (undo-tree-id1552 . -6) (undo-tree-id1553 . -6) (undo-tree-id1554 . -1) (undo-tree-id1555 . -3) (undo-tree-id1556 . -4) (undo-tree-id1557 . -6) (undo-tree-id1558 . -6) (undo-tree-id1559 . -6) (undo-tree-id1560 . -6) (undo-tree-id1561 . -6) (undo-tree-id1562 . -6) (undo-tree-id1563 . -6) (undo-tree-id1564 . -6) (undo-tree-id1565 . -6) (undo-tree-id1566 . -6) (undo-tree-id1567 . -6) (undo-tree-id1568 . -6) (undo-tree-id1569 . -6) (undo-tree-id1570 . -6) (undo-tree-id1571 . -6) (undo-tree-id1572 . -6) (undo-tree-id1573 . -6) (undo-tree-id1574 . -6) (undo-tree-id1575 . -6) (undo-tree-id1576 . -6) (undo-tree-id1577 . -6) (undo-tree-id1578 . -6) (undo-tree-id1579 . -6) (undo-tree-id1580 . -6) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (undo-tree-id1583 . -6) (undo-tree-id1584 . -6) (undo-tree-id1585 . -6) (undo-tree-id1586 . -6) (undo-tree-id1587 . -6) (undo-tree-id1588 . -6) (undo-tree-id1589 . -6) (undo-tree-id1590 . -6) (undo-tree-id1591 . -6) (undo-tree-id1592 . -6) (undo-tree-id1593 . -6) (undo-tree-id1594 . -6) (undo-tree-id1595 . -6) (undo-tree-id1596 . -6) (undo-tree-id1597 . -6) (undo-tree-id1598 . -6) (undo-tree-id1599 . -6) (undo-tree-id1600 . -6) (undo-tree-id1601 . -6) (undo-tree-id1602 . -6) (undo-tree-id1603 . -6) (undo-tree-id1604 . -6) (undo-tree-id1605 . -6) (undo-tree-id1606 . -6) (undo-tree-id1607 . -1) (undo-tree-id1608 . -3) (undo-tree-id1609 . -4) (undo-tree-id1610 . -6) (undo-tree-id1611 . -6) (undo-tree-id1612 . -6) (undo-tree-id1613 . -6) (undo-tree-id1614 . -6) (undo-tree-id1615 . -6) (undo-tree-id1616 . -6) (undo-tree-id1617 . -6) (undo-tree-id1618 . -6) (undo-tree-id1619 . -6) (undo-tree-id1620 . -6) (undo-tree-id1621 . -6) (undo-tree-id1622 . -6) (undo-tree-id1623 . -6) (undo-tree-id1624 . -6) (undo-tree-id1625 . -6) (undo-tree-id1626 . -6) (undo-tree-id1627 . -6) (undo-tree-id1628 . -6) (undo-tree-id1629 . -6) (undo-tree-id1630 . -6) (undo-tree-id1631 . -6) (undo-tree-id1632 . -6) (undo-tree-id1633 . -6) (undo-tree-id1634 . -6) (undo-tree-id1635 . -6) (undo-tree-id1636 . -6) (undo-tree-id1637 . -6) (undo-tree-id1638 . -6) (undo-tree-id1639 . -6) (undo-tree-id1640 . -6) (undo-tree-id1641 . -6) (undo-tree-id1642 . -6) (undo-tree-id1643 . -6) (undo-tree-id1644 . -6) (undo-tree-id1645 . -6) (undo-tree-id1646 . -6) (undo-tree-id1647 . -6) (undo-tree-id1648 . -6) (undo-tree-id1649 . -6) (undo-tree-id1650 . -6) (undo-tree-id1651 . -6) (undo-tree-id1652 . -6) (undo-tree-id1653 . -6) (undo-tree-id1654 . -6) (undo-tree-id1655 . -6) (undo-tree-id1656 . -6) (undo-tree-id1657 . -6) (undo-tree-id1658 . -6) (undo-tree-id1659 . -6) (undo-tree-id1660 . -6) (undo-tree-id1661 . -6) (undo-tree-id1662 . -6) (undo-tree-id1663 . -6) (undo-tree-id1664 . -6) (undo-tree-id1665 . -6) (undo-tree-id1666 . -6) (undo-tree-id1667 . -6) (undo-tree-id1668 . -6) (undo-tree-id1669 . -6) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) (undo-tree-id1672 . -6) (undo-tree-id1673 . -6) (undo-tree-id1674 . -6) (undo-tree-id1675 . -6) (undo-tree-id1676 . -6) (undo-tree-id1677 . -6) (undo-tree-id1678 . -6) 213) nil (26014 43839 544105 0) 0 nil])
([nil nil ((207 . 212)) nil (26014 43839 543940 0) 0 nil])
([nil nil ((212 . 233)) nil (26014 43839 543939 0) 0 nil])
([nil nil ((233 . 235)) nil (26014 43839 543935 0) 0 nil])
([nil nil ((#("const" 0 5 (face font-lock-keyword-face fontified t)) . -201) (undo-tree-id2182 . -5) (undo-tree-id2183 . -5) (undo-tree-id2184 . -5) (undo-tree-id2185 . -5) (undo-tree-id2186 . -5) (undo-tree-id2187 . -5) (undo-tree-id2188 . -5) (undo-tree-id2189 . -5) 206 (t 26014 43839 552985 987000)) nil (26014 44020 502424 0) 0 nil])
([nil nil ((201 . 203)) nil (26014 44020 502414 0) 0 nil])
([nil nil ((apply yas--snippet-revive 201 208 #s(yas--snippet nil nil #s(yas--exit 208 nil) 152 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 208 nil) 152 nil nil nil nil)) (201 . 208) (#("static $0" 0 9 (fontified nil)) . 201) (201 . 210) (#("st" 0 2 (fontified nil)) . 201) (201 . 203) (#("static" 0 6 (fontified nil)) . -201) (201 . 207) (#("st" 0 2 (fontified t)) . -201) (undo-tree-id2174 . -1) (undo-tree-id2175 . -2) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) 203) nil (26014 44020 502409 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -207) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) 208 (t 26014 44020 511073 720000)) nil (26014 44022 233394 0) 0 nil])
([nil nil ((196 . 198) (t 26014 44022 241849 576000)) nil (26014 44099 693571 0) 0 nil])
([nil nil ((197 . 200)) nil (26014 44099 693570 0) 0 nil])
([nil nil ((1 . 31) (apply yas--snippet-revive 197 211 #s(yas--snippet nil nil #s(yas--exit 210 nil) 153 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 210 nil) 153 nil nil nil nil)) (197 . 211) (#("lazy_static!($0)" 0 16 (fontified nil)) . 197) (197 . 213) (#("laz" 0 3 (fontified nil)) . 197) (197 . 200) (#("lazy_static!(…) (use lazy_static::lazy_static)" 0 46 (fontified nil)) . -197) (197 . 243) (#("laz" 0 3 (fontified t)) . -197) (undo-tree-id2369 . -3) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) (undo-tree-id2375 . -3) (undo-tree-id2376 . -3) (undo-tree-id2377 . -3) (undo-tree-id2378 . -3) (undo-tree-id2379 . -3) 200) nil (26014 44099 693567 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 241) (241 . 245) (240 . 242)) nil (26014 44099 693552 0) 0 nil])
([nil nil ((241 . 247)) nil (26014 44099 693551 0) 0 nil])
([nil nil ((241 . 245) 247) nil (26014 44099 693550 0) 0 nil])
([nil nil ((251 . 256)) nil (26014 44099 693548 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -254) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (#("f" 0 1 (fontified t)) . -255) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) 256) nil (26014 44099 693546 0) 0 nil])
([nil nil ((254 . 256)) nil (26014 44099 693531 0) 0 nil])
([nil nil ((245 . 247)) nil (26014 44099 693530 0) 0 nil])
([nil nil ((246 . 250)) nil (26014 44099 693529 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -249) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) 250) nil (26014 44099 693527 0) 0 nil])
([nil nil ((250 . 251)) nil (26014 44099 693523 0) 0 nil])
([nil nil ((#("LIGHT_BIND_GROUP_LAYOUT_DESC: wgpu::BindGroupLayoutDescriptor<'static> =
    wgpu::BindGroupLayoutDescriptor {
        entries: &[wgpu::BindGroupLayoutEntry {
            binding: 0,
            visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
            ty: wgpu::BindingType::Buffer {
                ty: wgpu::BufferBindingType::Uniform,
                has_dynamic_offset: false,
                min_binding_size: None,
            },
            count: None,
        }],
        label: None,
    };" 0 28 (face font-lock-variable-name-face fontified t) 28 30 (fontified t) 30 34 (face font-lock-constant-face fontified t) 34 36 (fontified t) 36 61 (face font-lock-type-face fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 63 (fontified t) 63 69 (face font-lock-keyword-face fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 73 (fontified t) 73 77 (fontified t) 77 81 (face font-lock-constant-face fontified t) 81 83 (fontified t) 83 108 (face font-lock-type-face fontified t) 108 109 (fontified t) 109 110 (face (rainbow-delimiters-depth-1-face) fontified t) 110 111 (fontified t) 111 119 (fontified t) 119 126 (face font-lock-variable-name-face fontified t) 126 128 (fontified t) 128 129 (face rust-ampersand-face fontified t) 129 130 (face (rainbow-delimiters-depth-2-face) fontified t) 130 134 (face font-lock-constant-face fontified t) 134 136 (fontified t) 136 156 (face font-lock-type-face fontified t) 156 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) fontified t) 158 159 (fontified t) 159 171 (fontified t) 171 178 (face font-lock-variable-name-face fontified t) 178 183 (fontified t) 183 195 (fontified t) 195 205 (face font-lock-variable-name-face fontified t) 205 207 (fontified t) 207 211 (face font-lock-constant-face fontified t) 211 213 (fontified t) 213 225 (face font-lock-type-face fontified t) 225 227 (fontified t) 227 233 (face font-lock-type-face fontified t) 233 236 (fontified t) 236 240 (face font-lock-constant-face fontified t) 240 242 (fontified t) 242 254 (face font-lock-type-face fontified t) 254 256 (fontified t) 256 264 (face font-lock-type-face fontified t) 264 266 (fontified t) 266 278 (fontified t) 278 280 (face font-lock-variable-name-face fontified t) 280 282 (fontified t) 282 286 (face font-lock-constant-face fontified t) 286 288 (fontified t) 288 299 (face font-lock-type-face fontified t) 299 301 (fontified t) 301 307 (face font-lock-type-face fontified t) 307 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-4-face) fontified t) 309 326 (fontified t) 326 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 353 (face font-lock-type-face fontified t) 353 355 (fontified t) 355 362 (face font-lock-type-face fontified t) 362 380 (fontified t) 380 398 (face font-lock-variable-name-face fontified t) 398 400 (fontified t) 400 405 (face font-lock-keyword-face fontified t) 405 423 (fontified t) 423 439 (face font-lock-variable-name-face fontified t) 439 441 (fontified t) 441 445 (face font-lock-type-face fontified t) 445 447 (fontified t) 447 459 (fontified t) 459 460 (face (rainbow-delimiters-depth-4-face) fontified t) 460 462 (fontified t) 462 474 (fontified t) 474 479 (face font-lock-variable-name-face fontified t) 479 481 (fontified t) 481 485 (face font-lock-type-face fontified t) 485 495 (fontified t) 495 496 (face (rainbow-delimiters-depth-3-face) fontified t) 496 497 (face (rainbow-delimiters-depth-2-face) fontified t) 497 507 (fontified t) 507 512 (face font-lock-variable-name-face fontified t) 512 514 (fontified t) 514 518 (face font-lock-type-face fontified t) 518 524 (fontified t) 524 525 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 525 526 (fontified t)) . 277) (undo-tree-id2220 . -72) (undo-tree-id2221 . -526) (undo-tree-id2222 . -526) (undo-tree-id2223 . -526) (undo-tree-id2224 . -226) (undo-tree-id2225 . -226) (undo-tree-id2226 . -226) (undo-tree-id2227 . -226) (undo-tree-id2228 . -226) (undo-tree-id2229 . -226) (undo-tree-id2230 . -226) (undo-tree-id2231 . -226) (undo-tree-id2232 . -226) (undo-tree-id2233 . -226) (undo-tree-id2234 . -226) (undo-tree-id2235 . -226) (undo-tree-id2236 . -226) (undo-tree-id2237 . -226) (undo-tree-id2238 . -226) (undo-tree-id2239 . -226) (undo-tree-id2240 . -226) (undo-tree-id2241 . -226) (undo-tree-id2242 . -226) (undo-tree-id2243 . -226) (undo-tree-id2244 . -226) (undo-tree-id2245 . -226) (undo-tree-id2246 . -226) (undo-tree-id2247 . -226) (undo-tree-id2248 . -226) (undo-tree-id2249 . -226) (undo-tree-id2250 . -226) (undo-tree-id2251 . -226) (undo-tree-id2252 . -226) (undo-tree-id2253 . -226) (undo-tree-id2254 . -226) (undo-tree-id2255 . -226) (undo-tree-id2256 . -226) (undo-tree-id2257 . -226) (undo-tree-id2258 . -226) (undo-tree-id2259 . -226) (undo-tree-id2260 . -226) (undo-tree-id2261 . -226) (undo-tree-id2262 . -226) (undo-tree-id2263 . -226) (undo-tree-id2264 . -226) (undo-tree-id2265 . -226) (undo-tree-id2266 . -226) (undo-tree-id2267 . -226) (undo-tree-id2268 . -226) (undo-tree-id2269 . -226) (undo-tree-id2270 . -226) (undo-tree-id2271 . -226) (undo-tree-id2272 . -226) (undo-tree-id2273 . -226) (undo-tree-id2274 . -226) (undo-tree-id2275 . -226) (undo-tree-id2276 . -226) (undo-tree-id2277 . -226) (undo-tree-id2278 . -226) (undo-tree-id2279 . -226) (undo-tree-id2280 . -226) (undo-tree-id2281 . -226) (undo-tree-id2282 . -226) (undo-tree-id2283 . -226) (undo-tree-id2284 . -226) (undo-tree-id2285 . -226) (undo-tree-id2286 . -226) (undo-tree-id2287 . -226) (undo-tree-id2288 . -226) (undo-tree-id2289 . -226) (undo-tree-id2290 . -226) (undo-tree-id2291 . -226) (undo-tree-id2292 . -226) (undo-tree-id2293 . -226) (undo-tree-id2294 . -226) (undo-tree-id2295 . -226) (undo-tree-id2296 . -226) (undo-tree-id2297 . -226) (undo-tree-id2298 . -226) (undo-tree-id2299 . -226) (undo-tree-id2300 . -226) (undo-tree-id2301 . -226) (undo-tree-id2302 . -226) (undo-tree-id2303 . -226) (undo-tree-id2304 . -226) (undo-tree-id2305 . -226) (undo-tree-id2306 . -226) (undo-tree-id2307 . -226) (undo-tree-id2308 . -226) (undo-tree-id2309 . -226) (undo-tree-id2310 . -226) (undo-tree-id2311 . -226) (undo-tree-id2312 . -226) (undo-tree-id2313 . -226) (undo-tree-id2314 . -226) (undo-tree-id2315 . -226) (undo-tree-id2316 . -226) (undo-tree-id2317 . -226) (undo-tree-id2318 . -226) (undo-tree-id2319 . -226) (undo-tree-id2320 . -226) (undo-tree-id2321 . -226) (undo-tree-id2322 . -226) (undo-tree-id2323 . -226) (undo-tree-id2324 . -226) (undo-tree-id2325 . -226) (undo-tree-id2326 . -226) (undo-tree-id2327 . -226) (undo-tree-id2328 . -226) (undo-tree-id2329 . -226) (undo-tree-id2330 . -226) (undo-tree-id2331 . -226) (undo-tree-id2332 . -226) (undo-tree-id2333 . -226) (undo-tree-id2334 . -226) (undo-tree-id2335 . -278) (undo-tree-id2336 . -420) (undo-tree-id2337 . -498) (undo-tree-id2338 . -512) (undo-tree-id2339 . -526) (undo-tree-id2340 . -229) (undo-tree-id2341 . -526) (undo-tree-id2342 . -526) (undo-tree-id2343 . -526) (undo-tree-id2344 . -526) (undo-tree-id2345 . -526) (undo-tree-id2346 . -526) (undo-tree-id2347 . -520) (undo-tree-id2348 . -526) (undo-tree-id2349 . -526) (undo-tree-id2350 . -526) 803) nil (26014 44099 693517 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 787 . 788) (nil fontified nil 787 . 788) (nil fontified nil 786 . 787) (nil fontified nil 780 . 786) (nil fontified nil 776 . 780) (nil fontified nil 774 . 776) (nil fontified nil 769 . 774) (nil fontified nil 759 . 769) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (nil fontified nil 747 . 757) (nil fontified nil 743 . 747) (nil fontified nil 741 . 743) (nil fontified nil 736 . 741) (nil fontified nil 724 . 736) (nil fontified nil 722 . 724) (nil fontified nil 721 . 722) (nil fontified nil 709 . 721) (nil fontified nil 707 . 709) (nil fontified nil 703 . 707) (nil fontified nil 701 . 703) (nil fontified nil 685 . 701) (nil fontified nil 667 . 685) (nil fontified nil 662 . 667) (nil fontified nil 660 . 662) (nil fontified nil 642 . 660) (nil fontified nil 624 . 642) (nil fontified nil 617 . 624) (nil fontified nil 615 . 617) (nil fontified nil 598 . 615) (nil fontified nil 596 . 598) (nil fontified nil 592 . 596) (nil fontified nil 590 . 592) (nil fontified nil 588 . 590) (nil fontified nil 571 . 588) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 563 . 569) (nil fontified nil 561 . 563) (nil fontified nil 550 . 561) (nil fontified nil 548 . 550) (nil fontified nil 544 . 548) (nil fontified nil 542 . 544) (nil fontified nil 540 . 542) (nil fontified nil 528 . 540) (nil fontified nil 526 . 528) (nil fontified nil 518 . 526) (nil fontified nil 516 . 518) (nil fontified nil 504 . 516) (nil fontified nil 502 . 504) (nil fontified nil 498 . 502) (nil fontified nil 495 . 498) (nil fontified nil 489 . 495) (nil fontified nil 487 . 489) (nil fontified nil 475 . 487) (nil fontified nil 473 . 475) (nil fontified nil 469 . 473) (nil fontified nil 467 . 469) (nil fontified nil 457 . 467) (nil fontified nil 445 . 457) (nil fontified nil 440 . 445) (nil fontified nil 433 . 440) (nil fontified nil 421 . 433) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 398 . 418) (nil fontified nil 396 . 398) (nil fontified nil 392 . 396) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 388 . 390) (nil fontified nil 381 . 388) (nil fontified nil 373 . 381) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 345 . 370) (nil fontified nil 343 . 345) (nil fontified nil 339 . 343) (nil fontified nil 335 . 339) (nil fontified nil 332 . 335) (nil fontified nil 331 . 332) (nil fontified nil 325 . 331) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 298 . 323) (nil fontified nil 296 . 298) (nil fontified nil 292 . 296) (nil fontified nil 290 . 292) (nil fontified nil 262 . 290) (262 . 788)) nil (26014 44099 693379 0) 0 nil])
([nil nil ((830 . 838) (#("    " 0 4 (fontified t)) . 830) (813 . 817) (797 . 801) (760 . 776) (#("            " 0 12 (fontified t)) . 760) (undo-tree-id2219 . -8) (741 . 757) (#("            " 0 12 (fontified t)) . 741) (713 . 717) (666 . 670) (608 . 612) (544 . 560) (#("            " 0 12 (fontified t)) . 544) (457 . 473) (#("            " 0 12 (fontified t)) . 457) (429 . 445) (#("            " 0 12 (fontified t)) . 429) (385 . 389) (335 . 343) (#("    " 0 4 (fontified t)) . 335) 226) nil (26014 44099 693350 0) 0 nil])
([nil nil ((#("pub static " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t)) . 844) (undo-tree-id2387 . -11) (undo-tree-id2388 . -11) (undo-tree-id2389 . -11) (undo-tree-id2390 . -11) (undo-tree-id2391 . -11) (undo-tree-id2392 . -11) (undo-tree-id2393 . -11) (undo-tree-id2394 . -11) (undo-tree-id2395 . -11) (undo-tree-id2396 . -11) (undo-tree-id2397 . -11) (undo-tree-id2398 . -11) (undo-tree-id2399 . -11) (undo-tree-id2400 . -11) (undo-tree-id2401 . -11) (undo-tree-id2402 . -11) (undo-tree-id2403 . -11) (undo-tree-id2404 . -11) (undo-tree-id2405 . -11) (undo-tree-id2406 . -11) (undo-tree-id2407 . -11) (undo-tree-id2408 . -11) (undo-tree-id2409 . -11) (undo-tree-id2410 . -11) (undo-tree-id2411 . -11) (undo-tree-id2412 . -11) (undo-tree-id2413 . -11) (undo-tree-id2414 . -11) (undo-tree-id2415 . -11) (undo-tree-id2416 . -11) (undo-tree-id2417 . -11) (undo-tree-id2418 . -11) (undo-tree-id2419 . -11) (undo-tree-id2420 . -11) (undo-tree-id2421 . -11) (undo-tree-id2422 . -11) (undo-tree-id2423 . -11) (undo-tree-id2424 . -11) (undo-tree-id2425 . -11) (undo-tree-id2426 . -11) (undo-tree-id2427 . -11) (undo-tree-id2428 . -11) (undo-tree-id2429 . -11) (undo-tree-id2430 . -11) (undo-tree-id2431 . -11) (undo-tree-id2432 . -11) (undo-tree-id2433 . -11) (undo-tree-id2434 . -11) (undo-tree-id2435 . -11) (undo-tree-id2436 . -11) (undo-tree-id2437 . -11) (undo-tree-id2438 . -11) (undo-tree-id2439 . -11) (undo-tree-id2440 . -11) (undo-tree-id2441 . -11) (undo-tree-id2442 . -11) (undo-tree-id2443 . -11) (undo-tree-id2444 . -11) (undo-tree-id2445 . -11) (undo-tree-id2446 . -11) (undo-tree-id2447 . -11) (undo-tree-id2448 . -11) (undo-tree-id2449 . -11) (undo-tree-id2450 . -11) (undo-tree-id2451 . -11) (undo-tree-id2452 . -11) (undo-tree-id2453 . -11) (undo-tree-id2454 . -11) (undo-tree-id2455 . -11) (undo-tree-id2456 . -11) (undo-tree-id2457 . -11) (undo-tree-id2458 . -11) (undo-tree-id2459 . -11) (undo-tree-id2460 . -11) (undo-tree-id2461 . -11) (undo-tree-id2462 . -11) (undo-tree-id2463 . -11) (undo-tree-id2464 . -11) (undo-tree-id2465 . -11) (undo-tree-id2466 . -11) (undo-tree-id2467 . -11) (undo-tree-id2468 . -11) (undo-tree-id2469 . -11) (undo-tree-id2470 . -11) (undo-tree-id2471 . -11) (undo-tree-id2472 . -11) (undo-tree-id2473 . -11) (undo-tree-id2474 . -11) (undo-tree-id2475 . -11) (undo-tree-id2476 . -11) (undo-tree-id2477 . -11) (undo-tree-id2478 . -11) (undo-tree-id2479 . -11) (undo-tree-id2480 . -11) (undo-tree-id2481 . -11) (undo-tree-id2482 . -11) (undo-tree-id2483 . -11) (undo-tree-id2484 . -11) (undo-tree-id2485 . -11) (undo-tree-id2486 . -11) (undo-tree-id2487 . -11) (undo-tree-id2488 . -11) (undo-tree-id2489 . -11) (undo-tree-id2490 . -11) (undo-tree-id2491 . -11) (undo-tree-id2492 . -11) (undo-tree-id2493 . -11) (undo-tree-id2494 . -11) (undo-tree-id2495 . -11) (undo-tree-id2496 . -11) (undo-tree-id2497 . -11) (undo-tree-id2498 . -11) (undo-tree-id2499 . -11) (undo-tree-id2500 . -11) (undo-tree-id2501 . -11) (undo-tree-id2502 . -11) (undo-tree-id2503 . -11) (undo-tree-id2504 . -11) (undo-tree-id2505 . -11) (undo-tree-id2506 . -11) (undo-tree-id2507 . -11) (undo-tree-id2508 . -11) (undo-tree-id2509 . -11) (undo-tree-id2510 . -11) (undo-tree-id2511 . -11) (undo-tree-id2512 . -11) (undo-tree-id2513 . -11) (undo-tree-id2514 . -11) (undo-tree-id2515 . -11) (undo-tree-id2516 . -11) (undo-tree-id2517 . -11) (undo-tree-id2518 . -11) (undo-tree-id2519 . -11) (undo-tree-id2520 . -11) (undo-tree-id2521 . -11) (t 26014 44099 704822 529000)) nil (26014 44104 183691 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 844) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1)) nil (26014 44104 183550 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -239) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) 240 (t 26014 44104 195210 548000)) nil (26014 44112 81509 0) 0 nil])
([nil nil ((239 . 241)) nil (26014 44112 81498 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -240) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) 241) nil (26014 44112 81496 0) 0 nil])
([nil nil ((240 . 241)) nil (26014 44112 81489 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -842) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) 843) nil (26014 44112 81486 0) 0 nil])
([nil nil ((842 . 843)) nil (26014 44112 81467 0) 0 nil])
([nil nil ((#("pub]" 0 3 (face font-lock-keyword-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t)) . -247) (undo-tree-id2564 . -4) (undo-tree-id2565 . -4) (undo-tree-id2566 . 1) (undo-tree-id2567 . -4) (undo-tree-id2568 . -4) (undo-tree-id2569 . -4) (undo-tree-id2570 . -4) (undo-tree-id2571 . -4) (undo-tree-id2572 . -4) (undo-tree-id2573 . -4) (undo-tree-id2574 . -4) 251 (t 26014 44112 93144 292000)) nil (26014 44134 180395 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -246) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) 247) nil (26014 44134 180383 0) 0 nil])
([nil nil ((246 . 250)) nil (26014 44134 180365 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -249) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) 250) nil (26014 44134 180361 0) 0 nil])
([nil nil ((#("static>" 0 6 (face font-lock-keyword-face fontified t) 6 7 (syntax-table (1) fontified t)) . -324) (undo-tree-id2597 . -7) (undo-tree-id2598 . -7) (undo-tree-id2599 . -7) (undo-tree-id2600 . -7) (undo-tree-id2601 . -7) (undo-tree-id2602 . -7) (undo-tree-id2603 . -7) (undo-tree-id2604 . -7) 331 (t 26014 44134 192810 892000)) nil (26014 44151 873567 0) 0 nil])
([nil nil ((#("<" 0 1 (syntax-table (1) fontified t)) . -322) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (#("'" 0 1 (fontified t)) . -323) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) 324) nil (26014 44151 873554 0) 0 nil])
([nil nil ((322 . 324) (t 26014 44151 885037 417000)) nil (26014 44157 869662 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -322) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (#("." 0 1 (fontified t)) . -323) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) 324) nil (26014 44157 869659 0) 0 nil])
([nil nil ((322 . 324)) nil (26014 44157 869636 0) 0 nil])
([nil nil ((323 . 325)) nil (26014 44157 869631 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -324) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) 325 (t 26014 44157 881678 985000)) nil (26014 44198 35052 0) 0 nil])
([nil nil ((#("lazy_static! {
    pub static ref LIGHT_BIND_GROUP_LAYOUT_DESC: wgpu::BindGroupLayoutDescriptor<'> =
        wgpu::BindGroupLayoutDescriptor {
            entries: &[wgpu::BindGroupLayoutEntry {
                binding: 0,
                visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                ty: wgpu::BindingType::Buffer {
                    ty: wgpu::BufferBindingType::Uniform,
                    has_dynamic_offset: false,
                    min_binding_size: None,
                },
                count: None,
            }],
            label: None,
        };
}
" 0 12 (face font-lock-preprocessor-face fontified t) 12 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 33 (face font-lock-keyword-face fontified t) 33 34 (fontified t) 34 62 (face font-lock-variable-name-face fontified t) 62 64 (fontified t) 64 68 (face font-lock-constant-face fontified t) 68 70 (fontified t) 70 95 (face font-lock-type-face fontified t) 95 96 (syntax-table (1) fontified t) 96 97 (fontified t) 97 98 (syntax-table (1) fontified t) 98 101 (fontified t) 101 109 (fontified t) 109 113 (face font-lock-constant-face fontified t) 113 115 (fontified t) 115 140 (face font-lock-type-face fontified t) 140 141 (fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 143 (fontified t) 143 155 (fontified t) 155 162 (face font-lock-variable-name-face fontified t) 162 164 (fontified t) 164 165 (face rust-ampersand-face fontified t) 165 166 (face (rainbow-delimiters-depth-3-face) fontified t) 166 170 (face font-lock-constant-face fontified t) 170 172 (fontified t) 172 192 (face font-lock-type-face fontified t) 192 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-4-face) fontified t) 194 195 (fontified t) 195 211 (fontified t) 211 218 (face font-lock-variable-name-face fontified t) 218 239 (fontified t) 239 249 (face font-lock-variable-name-face fontified t) 249 251 (fontified t) 251 255 (face font-lock-constant-face fontified t) 255 257 (fontified t) 257 269 (face font-lock-type-face fontified t) 269 271 (fontified t) 271 277 (face font-lock-type-face fontified t) 277 280 (fontified t) 280 284 (face font-lock-constant-face fontified t) 284 286 (fontified t) 286 298 (face font-lock-type-face fontified t) 298 300 (fontified t) 300 308 (face font-lock-type-face fontified t) 308 326 (fontified t) 326 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 347 (face font-lock-type-face fontified t) 347 349 (fontified t) 349 355 (face font-lock-type-face fontified t) 355 356 (fontified t) 356 357 (face (rainbow-delimiters-depth-5-face) fontified t) 357 358 (fontified t) 358 378 (fontified t) 378 380 (face font-lock-variable-name-face fontified t) 380 382 (fontified t) 382 386 (face font-lock-constant-face fontified t) 386 388 (fontified t) 388 405 (face font-lock-type-face fontified t) 405 407 (fontified t) 407 414 (face font-lock-type-face fontified t) 414 416 (fontified t) 416 436 (fontified t) 436 454 (face font-lock-variable-name-face fontified t) 454 456 (fontified t) 456 461 (face font-lock-keyword-face fontified t) 461 463 (fontified t) 463 483 (fontified t) 483 499 (face font-lock-variable-name-face fontified t) 499 501 (fontified t) 501 505 (face font-lock-type-face fontified t) 505 523 (fontified t) 523 524 (face (rainbow-delimiters-depth-5-face) fontified t) 524 542 (fontified t) 542 547 (face font-lock-variable-name-face fontified t) 547 549 (fontified t) 549 553 (face font-lock-type-face fontified t) 553 555 (fontified t) 555 567 (fontified t) 567 568 (face (rainbow-delimiters-depth-4-face) fontified t) 568 569 (face (rainbow-delimiters-depth-3-face) fontified t) 569 571 (fontified t) 571 583 (fontified t) 583 588 (face font-lock-variable-name-face fontified t) 588 590 (fontified t) 590 594 (face font-lock-type-face fontified t) 594 604 (fontified t) 604 605 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 605 606 (fontified t rear-nonsticky t) 606 607 (fontified t) 607 608 (face (rainbow-delimiters-depth-1-face) fontified t) 608 609 (fontified t)) . 227) (undo-tree-id2793 . -609) (undo-tree-id2794 . -34) (undo-tree-id2795 . -609) (undo-tree-id2796 . -192) (undo-tree-id2797 . -583) (undo-tree-id2798 . -192) (undo-tree-id2799 . -192) (undo-tree-id2800 . -192) (undo-tree-id2801 . -192) (undo-tree-id2802 . -192) (undo-tree-id2803 . -192) (undo-tree-id2804 . -192) (undo-tree-id2805 . -192) (undo-tree-id2806 . -192) (undo-tree-id2807 . -192) (undo-tree-id2808 . -192) (undo-tree-id2809 . -192) (undo-tree-id2810 . 417) (undo-tree-id2811 . -192) (undo-tree-id2812 . -192) (undo-tree-id2813 . -192) (undo-tree-id2814 . -192) (undo-tree-id2815 . -192) (undo-tree-id2816 . -192) (undo-tree-id2817 . -192) (undo-tree-id2818 . -192) (undo-tree-id2819 . -192) (undo-tree-id2820 . -192) (undo-tree-id2821 . -192) (undo-tree-id2822 . -192) (undo-tree-id2823 . -192) (undo-tree-id2824 . -192) (undo-tree-id2825 . -192) (undo-tree-id2826 . -192) (undo-tree-id2827 . -192) (undo-tree-id2828 . -192) (undo-tree-id2829 . -192) (undo-tree-id2830 . -192) (undo-tree-id2831 . -192) (undo-tree-id2832 . -192) (undo-tree-id2833 . -192) (undo-tree-id2834 . -192) (undo-tree-id2835 . -97) (undo-tree-id2836 . -97) (undo-tree-id2837 . -97) (undo-tree-id2838 . -97) (undo-tree-id2839 . -97) (undo-tree-id2840 . -97) (undo-tree-id2841 . -97) (undo-tree-id2842 . -97) (undo-tree-id2843 . -97) (undo-tree-id2844 . -609) (undo-tree-id2845 . -609) (undo-tree-id2846 . -609) (undo-tree-id2847 . -608) (undo-tree-id2848 . -581) (undo-tree-id2849 . -534) (undo-tree-id2850 . -469) (undo-tree-id2851 . -421) (undo-tree-id2852 . -362) (undo-tree-id2853 . -3) (undo-tree-id2854 . -2) (undo-tree-id2855 . -1) (undo-tree-id2856 . -607) (undo-tree-id2857 . -609)) nil (26014 44203 723747 0) 0 nil] [nil nil ((324 . 330)) ((#("static" 0 6 (face font-lock-keyword-face fontified t)) . 324)) (26014 44197 717648 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -226) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) 227) nil (26014 44203 723677 0) 0 nil])
([nil nil ((425 . 427) (t 26014 44164 21071 241000)) ((#("<>" 0 1 (syntax-table (1) fontified t) 1 2 (syntax-table (1) fontified t)) . 425) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . 1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1)) (26014 44197 297170 0) 0 nil])
([nil nil ((#("        (light_buffer, light_bind_group)" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 23 (fontified t) 23 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-3-face))) . 1724) (undo-tree-id2918 . -5) (undo-tree-id2919 . -40) (undo-tree-id2920 . -5) (undo-tree-id2921 . -5) (undo-tree-id2922 . -5) (undo-tree-id2923 . -6) (undo-tree-id2924 . -9) (undo-tree-id2925 . -14) (undo-tree-id2926 . -21) (undo-tree-id2927 . -25) (undo-tree-id2928 . -29) (undo-tree-id2929 . -31) (undo-tree-id2930 . -33) (undo-tree-id2931 . -35) (undo-tree-id2932 . -37) (undo-tree-id2933 . -39) (undo-tree-id2934 . -40) (undo-tree-id2935 . -5) (undo-tree-id2936 . -5) (undo-tree-id2937 . -40) (undo-tree-id2938 . -40) (undo-tree-id2939 . -40) (undo-tree-id2940 . -40) (undo-tree-id2941 . -40) (undo-tree-id2942 . -40) (undo-tree-id2943 . -40) (undo-tree-id2944 . -40) (undo-tree-id2945 . -40) (undo-tree-id2946 . -40) (undo-tree-id2947 . -40) (t 26014 44203 736214 95000)) nil (26014 44326 933282 0) 0 nil])
([nil nil ((426 . 428)) ((#(";s" 0 1 (fontified t) 1 2 (fontified t)) . 426) (undo-tree-id2669 . -2) (undo-tree-id2670 . -2) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -2) (undo-tree-id2674 . -2) (undo-tree-id2675 . -2) (undo-tree-id2676 . -2) (undo-tree-id2677 . -2) (undo-tree-id2678 . -2) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -2) (undo-tree-id2683 . -2)) (26014 44197 96035 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1724) (undo-tree-id2917 . -1)) nil (26014 44326 933252 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -426) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (#("s" 0 1 (fontified t)) . -427) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) 428) ((426 . 428)) (26014 44196 545662 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -763) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) 764) nil (26014 44326 933249 0) 0 nil])
([nil nil ((426 . 433)) ((#("'static" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t)) . 426) (undo-tree-id2655 . -1) (undo-tree-id2656 . -7) (undo-tree-id2657 . -7) (undo-tree-id2658 . -7) (undo-tree-id2659 . -7) (undo-tree-id2660 . -7) (undo-tree-id2661 . -7) (undo-tree-id2662 . -7) (undo-tree-id2663 . -7) (undo-tree-id2664 . -7) (undo-tree-id2665 . -7) (undo-tree-id2666 . -7) (undo-tree-id2667 . -7) (undo-tree-id2668 . -7) (t 26014 44194 980771 483000)) (26014 44194 968719 0) 0 nil])
([nil nil ((763 . 764)) nil (26014 44326 933223 0) 0 nil])
nil
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -1394) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) 1395) nil (26014 44326 933221 0) 0 nil])
([nil nil ((1394 . 1395)) nil (26014 44326 933212 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -1721) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) 1722) nil (26014 44326 933210 0) 0 nil])
([nil nil ((1721 . 1722)) nil (26014 44326 933202 0) 0 nil])
([nil nil ((364 . 365)) nil (26014 44326 933201 0) 0 nil])
([nil nil ((365 . 366)) nil (26014 44326 933200 0) 0 nil])
([nil nil ((365 . 369) (#("w" 0 1 (fontified nil)) . 365) (365 . 366) (#("wgpu" 0 4 (fontified nil)) . -365) (365 . 369) (#("w" 0 1 (fontified t)) . -365) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) 366) nil (26014 44326 933198 0) 0 nil])
([nil nil ((369 . 371)) nil (26014 44326 933188 0) 0 nil])
([nil nil ((371 . 375)) nil (26014 44326 933187 0) 0 nil])
([nil nil ((371 . 390) (#("Bind" 0 4 (fontified nil)) . 371) (371 . 375) (#("BindGroupDescriptor" 0 19 (fontified nil)) . -371) (371 . 390) (#("Bind" 0 4 (face font-lock-type-face fontified t)) . -371) (undo-tree-id2858 . -4) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -2) (undo-tree-id2865 . -2) (undo-tree-id2866 . -3) (undo-tree-id2867 . -3) (undo-tree-id2868 . -3) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) 375) nil (26014 44334 156682 0) 0 nil])
([nil nil ((390 . 391)) nil (26014 44336 73930 0) 0 nil] [nil nil ((390 . 391)) ((#("," 0 1 (fontified t)) . 390) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (t 26014 44326 946796 389000)) (26014 44326 933155 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -790) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) 791 (t 26014 44336 86979 686000)) nil (26014 44342 18765 0) 0 nil])
nil
([nil nil ((790 . 791)) nil (26014 44342 18753 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1421) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) 1422) nil (26014 44342 18752 0) 0 nil])
([nil nil ((1421 . 1422)) nil (26014 44342 18743 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1748) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) 1749) nil (26014 44342 18741 0) 0 nil])
([nil nil ((1748 . 1749)) nil (26014 44342 18721 0) 0 nil])
([nil nil ((1750 . 1758) (t 26014 44342 31688 133000)) nil (26014 44361 340475 0) 0 nil])
([nil nil ((1758 . 1760)) nil (26014 44536 710939 0) 0 nil])
([nil nil ((1759 . 1760)) ((#("l" 0 1 (fontified t)) . 1759) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1)) (26014 44537 12115 0) 0 nil])
([nil nil ((1759 . 1771) (#("l" 0 1 (fontified nil)) . 1759) (1759 . 1760) (#("light_buffer" 0 12 (fontified nil)) . 1759) (1759 . 1771) (#("l" 0 1 (fontified t)) . 1759)) ((1759 . 1760) (#("light_buffer" 0 12 (fontified nil)) . 1759) (1759 . 1771) (#("l" 0 1 (fontified nil)) . 1759) (1759 . 1760) (#("light_buffer" 0 12 (fontified t)) . 1759) (undo-tree-id3195 . -12) (undo-tree-id3196 . -12) (undo-tree-id3197 . -12)) (26014 44546 471691 0) 0 nil])
([nil nil ((1771 . 1774)) ((#(", l" 0 2 (fontified t) 2 3 (fontified t)) . 1771) (undo-tree-id3312 . -1) (undo-tree-id3313 . -2) (undo-tree-id3314 . -2)) (26014 44546 789085 0) 0 nil])
([nil nil ((1773 . 1796) (#("l" 0 1 (fontified nil)) . 1773) (1773 . 1774) (#("light_bind_group_layout" 0 23 (fontified nil)) . 1773) (1773 . 1796) (#("l" 0 1 (fontified t)) . 1773)) ((1773 . 1774) (#("light_bind_group_layout" 0 23 (fontified nil)) . 1773) (1773 . 1796) (#("l" 0 1 (fontified nil)) . 1773) (1773 . 1774) (#("light_bind_group_layout" 0 23 (fontified t)) . 1773) (undo-tree-id3310 . -23) (undo-tree-id3311 . -23)) (26014 44547 357 0) 0 nil])
([nil nil ((1796 . 1799)) ((#(", l" 0 2 (fontified t) 2 3 (fontified t)) . 1796) (undo-tree-id3308 . -2) (undo-tree-id3309 . -2)) (26014 44547 178979 0) 0 nil])
([nil nil ((1798 . 1814) (#("l" 0 1 (fontified nil)) . 1798) (1798 . 1799) (#("light_bind_group" 0 16 (fontified nil)) . 1798) (1798 . 1814) (#("l" 0 1 (fontified t)) . 1798)) ((1798 . 1799) (#("light_bind_group" 0 16 (fontified nil)) . 1798) (1798 . 1814) (#("l" 0 1 (fontified nil)) . 1798) (1798 . 1799) (#("light_bind_group" 0 16 (fontified t)) . 1798)) (26014 44547 358358 0) 0 nil])
([nil nil ((#("BindGroupDescriptor" 0 19 (face font-lock-type-face fontified t)) . 371)) ((371 . 390)) (26014 44547 529200 0) 0 nil])
([nil nil ((371 . 374)) ((#("Bin" 0 3 (face font-lock-type-face fontified t)) . 371)) (26014 44547 715769 0) 0 nil])
([nil nil ((371 . 386) (#("Bin" 0 3 (fontified nil)) . 371) (371 . 374) (#("BindGroupLayout" 0 15 (fontified nil)) . 371) (371 . 386) (#("Bin" 0 3 (face font-lock-type-face fontified t)) . 371)) ((371 . 374) (#("BindGroupLayout" 0 15 (fontified nil)) . 371) (371 . 386) (#("Bin" 0 3 (fontified nil)) . 371) (371 . 374) (#("BindGroupLayout" 0 15 (face font-lock-type-face fontified t)) . 371) (t 26014 44489 33561 269000)) (26014 44547 901036 0) 0 nil])
([nil nil ((#("    pub fn create_light_buffer_and_bind_group(
        &self,
        device: &wgpu::Device,
    ) -> (wgpu::Buffer, wgpu::BindGroupLayout, wgpu::BindGroup) {
        // We'll want to update our lights position, so we use COPY_DST
        let light_buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label: Some(\"Light VB\"),
                contents: bytemuck::cast_slice(&[*self]),
                usage: wgpu::BufferUsages::UNIFORM | wgpu::BufferUsages::COPY_DST,
            }
        );

        let light_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });
        
        let light_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &light_bind_group_layout,
            entries: &[wgpu::BindGroupEntry {
                binding: 0,
                resource: light_buffer.as_entire_binding(),
            }],
            label: None,
        });
        (light_buffer, light_bind_group_layout, light_bind_group)
    }" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 45 (face font-lock-function-name-face fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 47 (fontified t) 47 55 (fontified t) 55 56 (face rust-ampersand-face fontified t) 56 60 (face font-lock-keyword-face fontified t) 60 62 (fontified t) 62 70 (fontified t) 70 76 (face font-lock-variable-name-face fontified t) 76 78 (fontified t) 78 79 (face rust-ampersand-face fontified t) 79 83 (face font-lock-constant-face fontified t) 83 85 (fontified t) 85 91 (face font-lock-type-face fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-2-face) fontified t) 98 100 (fontified t) 100 101 (syntax-table (1) fontified t) 101 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-2-face) fontified t) 103 107 (face font-lock-constant-face fontified t) 107 109 (fontified t) 109 115 (face font-lock-type-face fontified t) 115 117 (fontified t) 117 121 (face font-lock-constant-face fontified t) 121 123 (fontified t) 123 138 (face font-lock-type-face fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 144 (face font-lock-constant-face fontified t) 144 146 (fontified t) 146 155 (face font-lock-type-face fontified t) 155 156 (face (rainbow-delimiters-depth-2-face) fontified t) 156 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-2-face) fontified t) 158 159 (fontified t) 159 167 (fontified t) 167 170 (face font-lock-comment-delimiter-face fontified t) 170 231 (face font-lock-comment-face fontified t) 231 239 (fontified t) 239 242 (face font-lock-keyword-face fontified t) 242 243 (fontified t) 243 255 (face font-lock-variable-name-face fontified t) 255 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-3-face) fontified t) 284 297 (fontified t) 297 298 (face rust-ampersand-face fontified t) 298 302 (face font-lock-constant-face fontified t) 302 304 (fontified t) 304 308 (face font-lock-constant-face fontified t) 308 310 (fontified t) 310 330 (face font-lock-type-face fontified t) 330 331 (fontified t) 331 332 (face (rainbow-delimiters-depth-4-face) fontified t) 332 349 (fontified t) 349 354 (face font-lock-variable-name-face fontified t) 354 356 (fontified t) 356 360 (face font-lock-type-face fontified t) 360 361 (face (rainbow-delimiters-depth-5-face) fontified t) 361 371 (face font-lock-string-face fontified t) 371 372 (face (rainbow-delimiters-depth-5-face) fontified t) 372 374 (fontified t) 374 390 (fontified t) 390 398 (face font-lock-variable-name-face fontified t) 398 400 (fontified t) 400 408 (face font-lock-constant-face fontified t) 408 420 (fontified t) 420 421 (face (rainbow-delimiters-depth-5-face) fontified t) 421 422 (face rust-ampersand-face fontified t) 422 423 (face (rainbow-delimiters-depth-6-face) fontified t) 423 424 (fontified t) 424 428 (face font-lock-keyword-face fontified t) 428 429 (face (rainbow-delimiters-depth-6-face) fontified t) 429 430 (face (rainbow-delimiters-depth-5-face) fontified t) 430 432 (fontified t) 432 448 (fontified t) 448 453 (face font-lock-variable-name-face fontified t) 453 455 (fontified t) 455 459 (face font-lock-constant-face fontified t) 459 461 (fontified t) 461 473 (face font-lock-type-face fontified t) 473 475 (fontified t) 475 482 (face font-lock-type-face fontified t) 482 485 (fontified t) 485 489 (face font-lock-constant-face fontified t) 489 491 (fontified t) 491 503 (face font-lock-type-face fontified t) 503 505 (fontified t) 505 513 (face font-lock-type-face fontified t) 513 527 (fontified t) 527 528 (face (rainbow-delimiters-depth-4-face) fontified t) 528 529 (fontified t) 529 537 (fontified t) 537 538 (face (rainbow-delimiters-depth-3-face) fontified t) 538 539 (fontified t) 539 540 (fontified t) 540 541 (fontified t) 541 549 (fontified t) 549 552 (face font-lock-keyword-face fontified t) 552 553 (fontified t) 553 576 (face font-lock-variable-name-face fontified t) 576 579 (fontified t) 579 591 (fontified t) 591 622 (fontified t) 622 623 (face (rainbow-delimiters-depth-3-face) fontified t) 623 624 (face rust-ampersand-face fontified t) 624 628 (face font-lock-constant-face fontified t) 628 630 (fontified t) 630 655 (face font-lock-type-face fontified t) 655 656 (fontified t) 656 657 (face (rainbow-delimiters-depth-4-face) fontified t) 657 674 (fontified t) 674 681 (face font-lock-variable-name-face fontified t) 681 683 (fontified t) 683 684 (face rust-ampersand-face fontified t) 684 685 (face (rainbow-delimiters-depth-5-face) fontified t) 685 689 (face font-lock-constant-face fontified t) 689 691 (fontified t) 691 711 (face font-lock-type-face fontified t) 711 712 (fontified t) 712 713 (face (rainbow-delimiters-depth-6-face) fontified t) 713 734 (fontified t) 734 741 (face font-lock-variable-name-face fontified t) 741 752 (fontified t) 752 766 (fontified t) 766 776 (face font-lock-variable-name-face fontified t) 776 778 (fontified t) 778 782 (face font-lock-constant-face fontified t) 782 784 (fontified t) 784 796 (face font-lock-type-face fontified t) 796 798 (fontified t) 798 804 (face font-lock-type-face fontified t) 804 807 (fontified t) 807 811 (face font-lock-constant-face fontified t) 811 813 (fontified t) 813 825 (face font-lock-type-face fontified t) 825 827 (fontified t) 827 835 (face font-lock-type-face fontified t) 835 837 (fontified t) 837 857 (fontified t) 857 859 (face font-lock-variable-name-face fontified t) 859 861 (fontified t) 861 865 (face font-lock-constant-face fontified t) 865 867 (fontified t) 867 878 (face font-lock-type-face fontified t) 878 880 (fontified t) 880 886 (face font-lock-type-face fontified t) 886 887 (fontified t) 887 888 (face (rainbow-delimiters-depth-7-face) fontified t) 888 899 (fontified t) 899 913 (fontified t) 913 915 (face font-lock-variable-name-face fontified t) 915 917 (fontified t) 917 921 (face font-lock-constant-face fontified t) 921 923 (fontified t) 923 940 (face font-lock-type-face fontified t) 940 942 (fontified t) 942 949 (face font-lock-type-face fontified t) 949 951 (fontified t) 951 961 (fontified t) 961 963 (fontified t) 963 975 (fontified t) 975 990 (face font-lock-variable-name-face fontified t) 990 993 (face font-lock-variable-name-face fontified t) 993 995 (fontified t) 995 1000 (face font-lock-keyword-face fontified t) 1000 1002 (fontified t) 1002 1026 (fontified t) 1026 1042 (face font-lock-variable-name-face fontified t) 1042 1044 (fontified t) 1044 1048 (face font-lock-type-face fontified t) 1048 1050 (fontified t) 1050 1070 (fontified t) 1070 1071 (face (rainbow-delimiters-depth-7-face) fontified t) 1071 1087 (fontified t) 1087 1093 (fontified t) 1093 1098 (face font-lock-variable-name-face fontified t) 1098 1100 (fontified t) 1100 1104 (face font-lock-type-face fontified t) 1104 1106 (fontified t) 1106 1122 (fontified t) 1122 1123 (face (rainbow-delimiters-depth-6-face) fontified t) 1123 1124 (face (rainbow-delimiters-depth-5-face) fontified t) 1124 1142 (fontified t) 1142 1147 (face font-lock-variable-name-face fontified t) 1147 1149 (fontified t) 1149 1153 (face font-lock-type-face fontified t) 1153 1155 (fontified t) 1155 1167 (fontified t) 1167 1168 (face (rainbow-delimiters-depth-4-face) fontified t) 1168 1169 (face (rainbow-delimiters-depth-3-face) fontified t) 1169 1170 (fontified t) 1170 1171 (fontified t) 1171 1179 (fontified t) 1179 1180 (fontified t) 1180 1188 (fontified t) 1188 1191 (face font-lock-keyword-face fontified t) 1191 1192 (fontified t) 1192 1208 (face font-lock-variable-name-face fontified t) 1208 1235 (fontified t) 1235 1236 (face (rainbow-delimiters-depth-3-face) fontified t) 1236 1237 (face rust-ampersand-face fontified t) 1237 1241 (face font-lock-constant-face fontified t) 1241 1243 (fontified t) 1243 1262 (face font-lock-type-face fontified t) 1262 1263 (fontified t) 1263 1264 (face (rainbow-delimiters-depth-4-face) fontified t) 1264 1265 (fontified t) 1265 1277 (fontified t) 1277 1283 (face font-lock-variable-name-face fontified t) 1283 1285 (fontified t) 1285 1286 (face rust-ampersand-face fontified t) 1286 1311 (fontified t) 1311 1323 (fontified t) 1323 1330 (face font-lock-variable-name-face fontified t) 1330 1332 (fontified t) 1332 1333 (face rust-ampersand-face fontified t) 1333 1334 (face (rainbow-delimiters-depth-5-face) fontified t) 1334 1338 (face font-lock-constant-face fontified t) 1338 1340 (fontified t) 1340 1354 (face font-lock-type-face fontified t) 1354 1355 (fontified t) 1355 1356 (face (rainbow-delimiters-depth-6-face) fontified t) 1356 1373 (fontified t) 1373 1380 (face font-lock-variable-name-face fontified t) 1380 1401 (fontified t) 1401 1409 (face font-lock-variable-name-face fontified t) 1409 1441 (fontified t) 1441 1442 (face (rainbow-delimiters-depth-7-face) fontified t) 1442 1443 (face (rainbow-delimiters-depth-7-face) fontified t) 1443 1457 (fontified t) 1457 1458 (face (rainbow-delimiters-depth-6-face) fontified t) 1458 1459 (face (rainbow-delimiters-depth-5-face) fontified t) 1459 1473 (fontified t) 1473 1478 (face font-lock-variable-name-face fontified t) 1478 1480 (fontified t) 1480 1484 (face font-lock-type-face fontified t) 1484 1486 (fontified t) 1486 1487 (fontified t) 1487 1494 (fontified t) 1494 1495 (face (rainbow-delimiters-depth-4-face) fontified t) 1495 1496 (face (rainbow-delimiters-depth-3-face) fontified t) 1496 1497 (fontified t) 1497 1498 (fontified t) 1498 1500 (fontified t) 1500 1506 (fontified t) 1506 1507 (face (rainbow-delimiters-depth-3-face) fontified t) 1507 1519 (fontified t) 1519 1521 (fontified t) 1521 1544 (fontified t) 1544 1546 (fontified t) 1546 1562 (fontified t) 1562 1563 (face (rainbow-delimiters-depth-3-face) fontified t) 1563 1564 (fontified t) 1564 1568 (fontified t) 1568 1569 (face (rainbow-delimiters-depth-2-face) fontified t)) . 248) (undo-tree-id3315 . -62) (undo-tree-id3316 . -62) (undo-tree-id3317 . -62) (undo-tree-id3318 . -539) (undo-tree-id3319 . -1520) (undo-tree-id3320 . -108) (undo-tree-id3321 . -108) (undo-tree-id3322 . -108) (undo-tree-id3323 . -108) (undo-tree-id3324 . -108) (undo-tree-id3325 . -108) (undo-tree-id3326 . -108) (undo-tree-id3327 . -108) (undo-tree-id3328 . -108) (undo-tree-id3329 . -108) (undo-tree-id3330 . -108) (undo-tree-id3331 . -108) (undo-tree-id3332 . -108) (undo-tree-id3333 . -108) (undo-tree-id3334 . -108) (undo-tree-id3335 . -108) (undo-tree-id3336 . -108) (undo-tree-id3337 . -108) (undo-tree-id3338 . -108) (undo-tree-id3339 . -108) (undo-tree-id3340 . -108) (undo-tree-id3341 . -108) (undo-tree-id3342 . -108) (undo-tree-id3343 . -108) (undo-tree-id3344 . -108) (undo-tree-id3345 . -108) (undo-tree-id3346 . -108) (undo-tree-id3347 . -539) (undo-tree-id3348 . -539) (undo-tree-id3349 . -539) (undo-tree-id3350 . -539) (undo-tree-id3351 . -539) (undo-tree-id3352 . -539) (undo-tree-id3353 . -539) (undo-tree-id3354 . -539) (undo-tree-id3355 . -539) (undo-tree-id3356 . -539) (undo-tree-id3357 . -539) (undo-tree-id3358 . -539) (undo-tree-id3359 . -539) (undo-tree-id3360 . -539) (undo-tree-id3361 . -539) (undo-tree-id3362 . -539) (undo-tree-id3363 . -539) (undo-tree-id3364 . -539) (undo-tree-id3365 . -539) (undo-tree-id3366 . -539) (undo-tree-id3367 . -539) (undo-tree-id3368 . -539) (undo-tree-id3369 . -539) (undo-tree-id3370 . -539) (undo-tree-id3371 . -539) (undo-tree-id3372 . -539) (undo-tree-id3373 . -539) (undo-tree-id3374 . -539) (undo-tree-id3375 . -539) (undo-tree-id3376 . -539) (undo-tree-id3377 . -539) (undo-tree-id3378 . -123) (undo-tree-id3379 . -123) (undo-tree-id3380 . -539) (undo-tree-id3381 . -539) (undo-tree-id3382 . -539) (undo-tree-id3383 . -539) (undo-tree-id3384 . -539) (undo-tree-id3385 . -539) (undo-tree-id3386 . -539) (undo-tree-id3387 . -539) (undo-tree-id3388 . -539) (undo-tree-id3389 . -539) (undo-tree-id3390 . -539) (undo-tree-id3391 . -539) (undo-tree-id3392 . -539) (undo-tree-id3393 . -539) (undo-tree-id3394 . -539) (undo-tree-id3395 . -539) (undo-tree-id3396 . -539) (undo-tree-id3397 . -539) (undo-tree-id3398 . -539) (undo-tree-id3399 . -539) (undo-tree-id3400 . -539) (undo-tree-id3401 . -539) (undo-tree-id3402 . -539) (undo-tree-id3403 . -539) (undo-tree-id3404 . -539) (undo-tree-id3405 . -529) (undo-tree-id3406 . -539) (undo-tree-id3407 . -539) (undo-tree-id3408 . -539) (undo-tree-id3409 . -539) (undo-tree-id3410 . -539) (t 26014 44489 33561 269000)) ((248 . 1817)) (26014 44548 90134 0) 0 nil])
([nil nil ((58 . 61)) ((#("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 58) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1)) (26014 44548 288411 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1627 . 1628) (nil fontified nil 1622 . 1623) (nil fontified nil 1556 . 1557) (nil fontified nil 1543 . 1545) (nil fontified nil 1518 . 1520) (nil fontified nil 1502 . 1504) (nil fontified nil 1439 . 1444) (nil fontified nil 1415 . 1416) (nil fontified nil 1345 . 1370) (nil fontified nil 1323 . 1324) (nil fontified nil 1238 . 1239) (nil fontified nil 1229 . 1230) (nil fontified nil 1212 . 1214) (nil fontified nil 1183 . 1185) (nil fontified nil 1163 . 1165) (nil fontified nil 1130 . 1132) (nil fontified nil 1107 . 1109) (nil fontified nil 1059 . 1061) (nil fontified nil 1008 . 1010) (nil fontified nil 947 . 948) (nil fontified nil 894 . 896) (nil fontified nil 800 . 805) (nil fontified nil 772 . 773) (nil fontified nil 716 . 717) (nil fontified nil 635 . 638) (nil fontified nil 599 . 600) (nil fontified nil 598 . 599) (nil fontified nil 587 . 588) (nil fontified nil 572 . 574) (nil fontified nil 489 . 491) (nil fontified nil 431 . 433) (nil fontified nil 391 . 392) (nil fontified nil 343 . 344) (nil fontified nil 229 . 290) (nil fontified nil 217 . 218) (nil fontified nil 151 . 152) (nil fontified nil 119 . 121) (nil fontified nil 105 . 106) (59 . 1628)) ((#("    pub fn create_light_buffer_and_bind_group(
        &self,
        device: &wgpu::Device,
    ) -> (wgpu::Buffer, wgpu::BindGroupLayout, wgpu::BindGroup) {
        // We'll want to update our lights position, so we use COPY_DST
        let light_buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label: Some(\"Light VB\"),
                contents: bytemuck::cast_slice(&[*self]),
                usage: wgpu::BufferUsages::UNIFORM | wgpu::BufferUsages::COPY_DST,
            }
        );

        let light_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });
        
        let light_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &light_bind_group_layout,
            entries: &[wgpu::BindGroupEntry {
                binding: 0,
                resource: light_buffer.as_entire_binding(),
            }],
            label: None,
        });
        (light_buffer, light_bind_group_layout, light_bind_group)
    }" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 45 (face font-lock-function-name-face fontified nil) 45 46 (face (rainbow-delimiters-depth-1-face) fontified nil) 46 47 (fontified nil) 47 51 (fontified nil) 51 55 (fontified nil) 55 56 (face rust-ampersand-face fontified nil) 56 60 (face font-lock-keyword-face fontified nil) 60 62 (fontified nil) 62 66 (fontified nil) 66 70 (fontified nil) 70 76 (face font-lock-variable-name-face fontified nil) 76 78 (fontified nil) 78 79 (face rust-ampersand-face fontified nil) 79 83 (face font-lock-constant-face fontified nil) 83 85 (fontified nil) 85 91 (face font-lock-type-face fontified nil) 91 92 (fontified nil) 92 93 (fontified nil) 93 97 (fontified nil) 97 98 (face (rainbow-delimiters-depth-1-face) fontified nil) 98 100 (fontified nil) 100 101 (syntax-table (1) fontified nil) 101 102 (fontified nil) 102 103 (face (rainbow-delimiters-depth-1-face) fontified nil) 103 107 (face font-lock-constant-face fontified nil) 107 109 (fontified nil) 109 115 (face font-lock-type-face fontified nil) 115 117 (fontified nil) 117 121 (face font-lock-constant-face fontified nil) 121 123 (fontified nil) 123 138 (face font-lock-type-face fontified nil) 138 139 (fontified nil) 139 140 (fontified nil) 140 144 (face font-lock-constant-face fontified nil) 144 146 (fontified nil) 146 155 (face font-lock-type-face fontified nil) 155 156 (face (rainbow-delimiters-depth-1-face) fontified nil) 156 157 (fontified nil) 157 158 (face (rainbow-delimiters-depth-1-face) fontified nil) 158 159 (fontified nil) 159 163 (fontified nil) 163 167 (fontified nil) 167 170 (face font-lock-comment-delimiter-face fontified nil) 170 231 (face font-lock-comment-face fontified nil) 231 235 (fontified nil) 235 239 (fontified nil) 239 242 (face font-lock-keyword-face fontified nil) 242 243 (fontified nil) 243 255 (face font-lock-variable-name-face fontified nil) 255 283 (fontified nil) 283 284 (face (rainbow-delimiters-depth-2-face) fontified nil) 284 285 (fontified nil) 285 293 (fontified nil) 293 297 (fontified nil) 297 298 (face rust-ampersand-face fontified nil) 298 302 (face font-lock-constant-face fontified nil) 302 304 (fontified nil) 304 308 (face font-lock-constant-face fontified nil) 308 310 (fontified nil) 310 330 (face font-lock-type-face fontified nil) 330 331 (fontified nil) 331 332 (face (rainbow-delimiters-depth-3-face) fontified nil) 332 333 (fontified nil) 333 345 (fontified nil) 345 349 (fontified nil) 349 354 (face font-lock-variable-name-face fontified nil) 354 356 (fontified nil) 356 360 (face font-lock-type-face fontified nil) 360 361 (face (rainbow-delimiters-depth-4-face) fontified nil) 361 371 (face font-lock-string-face fontified nil) 371 372 (face (rainbow-delimiters-depth-4-face) fontified nil) 372 374 (fontified nil) 374 386 (fontified nil) 386 390 (fontified nil) 390 398 (face font-lock-variable-name-face fontified nil) 398 400 (fontified nil) 400 408 (face font-lock-constant-face fontified nil) 408 420 (fontified nil) 420 421 (face (rainbow-delimiters-depth-4-face) fontified nil) 421 422 (face rust-ampersand-face fontified nil) 422 423 (face (rainbow-delimiters-depth-5-face) fontified nil) 423 424 (fontified nil) 424 428 (face font-lock-keyword-face fontified nil) 428 429 (face (rainbow-delimiters-depth-5-face) fontified nil) 429 430 (face (rainbow-delimiters-depth-4-face) fontified nil) 430 432 (fontified nil) 432 444 (fontified nil) 444 448 (fontified nil) 448 453 (face font-lock-variable-name-face fontified nil) 453 455 (fontified nil) 455 459 (face font-lock-constant-face fontified nil) 459 461 (fontified nil) 461 473 (face font-lock-type-face fontified nil) 473 475 (fontified nil) 475 482 (face font-lock-type-face fontified nil) 482 485 (fontified nil) 485 489 (face font-lock-constant-face fontified nil) 489 491 (fontified nil) 491 503 (face font-lock-type-face fontified nil) 503 505 (fontified nil) 505 513 (face font-lock-type-face fontified nil) 513 515 (fontified nil) 515 523 (fontified nil) 523 527 (fontified nil) 527 528 (face (rainbow-delimiters-depth-3-face) fontified nil) 528 529 (fontified nil) 529 533 (fontified nil) 533 537 (fontified nil) 537 538 (face (rainbow-delimiters-depth-2-face) fontified nil) 538 539 (fontified nil) 539 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil) 545 549 (fontified nil) 549 552 (face font-lock-keyword-face fontified nil) 552 553 (fontified nil) 553 576 (face font-lock-variable-name-face fontified nil) 576 579 (fontified nil) 579 587 (fontified nil) 587 591 (fontified nil) 591 622 (fontified nil) 622 623 (face (rainbow-delimiters-depth-2-face) fontified nil) 623 624 (face rust-ampersand-face fontified nil) 624 628 (face font-lock-constant-face fontified nil) 628 630 (fontified nil) 630 655 (face font-lock-type-face fontified nil) 655 656 (fontified nil) 656 657 (face (rainbow-delimiters-depth-3-face) fontified nil) 657 658 (fontified nil) 658 670 (fontified nil) 670 674 (fontified nil) 674 681 (face font-lock-variable-name-face fontified nil) 681 683 (fontified nil) 683 684 (face rust-ampersand-face fontified nil) 684 685 (face (rainbow-delimiters-depth-4-face) fontified nil) 685 689 (face font-lock-constant-face fontified nil) 689 691 (fontified nil) 691 711 (face font-lock-type-face fontified nil) 711 712 (fontified nil) 712 713 (face (rainbow-delimiters-depth-5-face) fontified nil) 713 714 (fontified nil) 714 730 (fontified nil) 730 734 (fontified nil) 734 741 (face font-lock-variable-name-face fontified nil) 741 746 (fontified nil) 746 752 (fontified nil) 752 762 (fontified nil) 762 766 (fontified nil) 766 776 (face font-lock-variable-name-face fontified nil) 776 778 (fontified nil) 778 782 (face font-lock-constant-face fontified nil) 782 784 (fontified nil) 784 796 (face font-lock-type-face fontified nil) 796 798 (fontified nil) 798 804 (face font-lock-type-face fontified nil) 804 807 (fontified nil) 807 811 (face font-lock-constant-face fontified nil) 811 813 (fontified nil) 813 825 (face font-lock-type-face fontified nil) 825 827 (fontified nil) 827 835 (face font-lock-type-face fontified nil) 835 837 (fontified nil) 837 853 (fontified nil) 853 857 (fontified nil) 857 859 (face font-lock-variable-name-face fontified nil) 859 861 (fontified nil) 861 865 (face font-lock-constant-face fontified nil) 865 867 (fontified nil) 867 878 (face font-lock-type-face fontified nil) 878 880 (fontified nil) 880 886 (face font-lock-type-face fontified nil) 886 887 (fontified nil) 887 888 (face (rainbow-delimiters-depth-6-face) fontified nil) 888 889 (fontified nil) 889 899 (fontified nil) 899 909 (fontified nil) 909 913 (fontified nil) 913 915 (face font-lock-variable-name-face fontified nil) 915 917 (fontified nil) 917 921 (face font-lock-constant-face fontified nil) 921 923 (fontified nil) 923 940 (face font-lock-type-face fontified nil) 940 942 (fontified nil) 942 949 (face font-lock-type-face fontified nil) 949 951 (fontified nil) 951 961 (fontified nil) 961 963 (fontified nil) 963 971 (fontified nil) 971 975 (fontified nil) 975 990 (face font-lock-variable-name-face fontified nil) 990 993 (face font-lock-variable-name-face fontified nil) 993 995 (fontified nil) 995 1000 (face font-lock-keyword-face fontified nil) 1000 1002 (fontified nil) 1002 1022 (fontified nil) 1022 1026 (fontified nil) 1026 1042 (face font-lock-variable-name-face fontified nil) 1042 1044 (fontified nil) 1044 1048 (face font-lock-type-face fontified nil) 1048 1050 (fontified nil) 1050 1066 (fontified nil) 1066 1070 (fontified nil) 1070 1071 (face (rainbow-delimiters-depth-6-face) fontified nil) 1071 1073 (fontified nil) 1073 1087 (fontified nil) 1087 1089 (fontified nil) 1089 1093 (fontified nil) 1093 1098 (face font-lock-variable-name-face fontified nil) 1098 1100 (fontified nil) 1100 1104 (face font-lock-type-face fontified nil) 1104 1106 (fontified nil) 1106 1118 (fontified nil) 1118 1122 (fontified nil) 1122 1123 (face (rainbow-delimiters-depth-5-face) fontified nil) 1123 1124 (face (rainbow-delimiters-depth-4-face) fontified nil) 1124 1126 (fontified nil) 1126 1138 (fontified nil) 1138 1142 (fontified nil) 1142 1147 (face font-lock-variable-name-face fontified nil) 1147 1149 (fontified nil) 1149 1153 (face font-lock-type-face fontified nil) 1153 1155 (fontified nil) 1155 1163 (fontified nil) 1163 1167 (fontified nil) 1167 1168 (face (rainbow-delimiters-depth-3-face) fontified nil) 1168 1169 (face (rainbow-delimiters-depth-2-face) fontified nil) 1169 1170 (fontified nil) 1170 1171 (fontified nil) 1171 1175 (fontified nil) 1175 1179 (fontified nil) 1179 1180 (fontified nil) 1180 1184 (fontified nil) 1184 1188 (fontified nil) 1188 1191 (face font-lock-keyword-face fontified nil) 1191 1192 (fontified nil) 1192 1208 (face font-lock-variable-name-face fontified nil) 1208 1235 (fontified nil) 1235 1236 (face (rainbow-delimiters-depth-2-face) fontified nil) 1236 1237 (face rust-ampersand-face fontified nil) 1237 1241 (face font-lock-constant-face fontified nil) 1241 1243 (fontified nil) 1243 1262 (face font-lock-type-face fontified nil) 1262 1263 (fontified nil) 1263 1264 (face (rainbow-delimiters-depth-3-face) fontified nil) 1264 1265 (fontified nil) 1265 1273 (fontified nil) 1273 1277 (fontified nil) 1277 1283 (face font-lock-variable-name-face fontified nil) 1283 1285 (fontified nil) 1285 1286 (face rust-ampersand-face fontified nil) 1286 1311 (fontified nil) 1311 1319 (fontified nil) 1319 1323 (fontified nil) 1323 1330 (face font-lock-variable-name-face fontified nil) 1330 1332 (fontified nil) 1332 1333 (face rust-ampersand-face fontified nil) 1333 1334 (face (rainbow-delimiters-depth-4-face) fontified nil) 1334 1338 (face font-lock-constant-face fontified nil) 1338 1340 (fontified nil) 1340 1354 (face font-lock-type-face fontified nil) 1354 1355 (fontified nil) 1355 1356 (face (rainbow-delimiters-depth-5-face) fontified nil) 1356 1357 (fontified nil) 1357 1369 (fontified nil) 1369 1373 (fontified nil) 1373 1380 (face font-lock-variable-name-face fontified nil) 1380 1385 (fontified nil) 1385 1397 (fontified nil) 1397 1401 (fontified nil) 1401 1409 (face font-lock-variable-name-face fontified nil) 1409 1441 (fontified nil) 1441 1442 (face (rainbow-delimiters-depth-6-face) fontified nil) 1442 1443 (face (rainbow-delimiters-depth-6-face) fontified nil) 1443 1445 (fontified nil) 1445 1453 (fontified nil) 1453 1457 (fontified nil) 1457 1458 (face (rainbow-delimiters-depth-5-face) fontified nil) 1458 1459 (face (rainbow-delimiters-depth-4-face) fontified nil) 1459 1461 (fontified nil) 1461 1469 (fontified nil) 1469 1473 (fontified nil) 1473 1478 (face font-lock-variable-name-face fontified nil) 1478 1480 (fontified nil) 1480 1484 (face font-lock-type-face fontified nil) 1484 1486 (fontified nil) 1486 1487 (fontified nil) 1487 1490 (fontified nil) 1490 1494 (fontified nil) 1494 1495 (face (rainbow-delimiters-depth-3-face) fontified nil) 1495 1496 (face (rainbow-delimiters-depth-2-face) fontified nil) 1496 1497 (fontified nil) 1497 1498 (fontified nil) 1498 1500 (fontified nil) 1500 1502 (fontified nil) 1502 1506 (fontified nil) 1506 1507 (face (rainbow-delimiters-depth-2-face) fontified nil) 1507 1521 (fontified nil) 1521 1546 (fontified nil) 1546 1562 (fontified nil) 1562 1563 (face (rainbow-delimiters-depth-2-face) fontified nil) 1563 1564 (fontified nil) 1564 1568 (fontified nil) 1568 1569 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 59) (undo-tree-id3297 . -83) (undo-tree-id3298 . -83) (nil fontified t 105 . 106) (nil fontified t 119 . 121) (nil fontified t 151 . 152) (nil fontified t 217 . 218) (nil fontified t 229 . 290) (nil fontified t 343 . 344) (nil fontified t 391 . 392) (nil fontified t 431 . 433) (nil fontified t 489 . 491) (nil fontified t 572 . 574) (nil fontified t 587 . 588) (nil fontified t 598 . 599) (nil fontified t 599 . 600) (nil fontified t 635 . 638) (nil fontified t 716 . 717) (nil fontified t 772 . 773) (nil fontified t 800 . 805) (nil fontified t 894 . 896) (nil fontified t 947 . 948) (nil fontified t 1008 . 1010) (nil fontified t 1059 . 1061) (nil fontified t 1107 . 1109) (nil fontified t 1130 . 1132) (nil fontified t 1163 . 1165) (nil fontified t 1183 . 1185) (nil fontified t 1212 . 1214) (nil fontified t 1229 . 1230) (nil fontified t 1238 . 1239) (nil fontified t 1323 . 1324) (nil fontified t 1345 . 1370) (nil fontified t 1415 . 1416) (nil fontified t 1439 . 1444) (nil fontified t 1502 . 1504) (nil fontified t 1518 . 1520) (nil fontified t 1543 . 1545) (nil fontified t 1556 . 1557) (nil fontified t 1622 . 1623) (nil rear-nonsticky t 1627 . 1628)) (26014 44548 764118 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1479) (#("    " 0 4 (fontified t)) . 1421) (#("    " 0 4 (fontified t)) . 1413) (#("    " 0 4 (fontified t)) . 1396) (#("    " 0 4 (fontified t)) . 1384) (#("    " 0 4 (fontified t)) . 1332) (#("    " 0 4 (fontified t)) . 1308) (#("    " 0 4 (fontified t)) . 1262) (#("    " 0 4 (fontified t)) . 1220) (#("    " 0 4 (fontified t)) . 1135) (#("    " 0 4 (fontified t)) . 1130) (#("    " 0 4 (fontified t)) . 1122) (#("    " 0 4 (fontified t)) . 1101) (#("    " 0 4 (fontified t)) . 1085) (#("    " 0 4 (fontified t)) . 1060) (#("    " 0 4 (fontified t)) . 1041) (#("    " 0 4 (fontified t)) . 1001) (#("    " 0 4 (fontified t)) . 954) (#("    " 0 4 (fontified t)) . 896) (#("    " 0 4 (fontified t)) . 844) (#("    " 0 4 (fontified t)) . 757) (#("    " 0 4 (fontified t)) . 729) (#("    " 0 4 (fontified t)) . 673) (#("    " 0 4 (fontified t)) . 594) (#("    " 0 4 (fontified t)) . 556) (#("    " 0 4 (fontified t)) . 548) (#("    " 0 4 (fontified t)) . 542) (#("    " 0 4 (fontified t)) . 467) (#("    " 0 4 (fontified t)) . 413) (#("    " 0 4 (fontified t)) . 376) (#("    " 0 4 (fontified t)) . 328) (#("    " 0 4 (fontified t)) . 274) (#("    " 0 4 (fontified t)) . 206) (#("    " 0 4 (fontified t)) . 140) (#("    " 0 4 (fontified t)) . 117) (#("    " 0 4 (fontified t)) . 106) (#("    " 0 4 (fontified t)) . 59)) ((59 . 63) (106 . 110) (117 . 121) (140 . 144) (206 . 210) (274 . 278) (328 . 332) (376 . 380) (413 . 417) (467 . 471) (542 . 546) (548 . 552) (556 . 560) (594 . 598) (673 . 677) (729 . 733) (757 . 761) (844 . 848) (896 . 900) (954 . 958) (1001 . 1005) (1041 . 1045) (1060 . 1064) (1085 . 1089) (1101 . 1105) (1122 . 1126) (1130 . 1134) (1135 . 1139) (1220 . 1224) (1262 . 1266) (1308 . 1312) (1332 . 1336) (1384 . 1388) (1396 . 1400) (1413 . 1417) (1421 . 1425) (1479 . 1483)) (26014 44552 458663 0) 0 nil])
([nil nil ((#("use lazy_static::lazy_static;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 15 (face font-lock-constant-face fontified t) 15 29 (fontified t)) . 1) (undo-tree-id3412 . -29)) ((1 . 30)) (26014 44553 264067 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) ((1 . 2)) (26014 44555 400326 0) 0 nil])
([nil nil ((#("    &self," 0 4 (fontified t) 4 5 (face rust-ampersand-face fontified t) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t)) . 72) (undo-tree-id3465 . -10) (undo-tree-id3466 . -10) (undo-tree-id3467 . -10) (undo-tree-id3468 . -10) (undo-tree-id3469 . -10) (undo-tree-id3470 . -10) (undo-tree-id3471 . -10) (undo-tree-id3472 . -10) (undo-tree-id3473 . -10) (undo-tree-id3474 . -10) (undo-tree-id3475 . -10) (undo-tree-id3476 . -10) (t 26014 44574 888533 316000)) nil (26014 44608 237428 0) 0 nil] [nil nil ((28 . 30)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 28)) (26014 44554 959376 0) 0 nil])
([nil nil ((72 . 76)) nil (26014 44608 237415 0) 0 nil])
nil
([nil nil ((76 . 78)) nil (26014 44608 237414 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -76) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (#("e" 0 1 (fontified t)) . -77) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) 78) nil (26014 44608 237412 0) 0 nil])
([nil nil ((76 . 81)) nil (26014 44608 237390 0) 0 nil])
([nil nil ((81 . 89)) nil (26014 44608 237389 0) 0 nil])
([nil nil ((84 . 96) (#("light" 0 5 (fontified nil)) . 84) (84 . 89) (#("LightUniform" 0 12 (fontified nil)) . -84) (84 . 96) (#("light" 0 5 (fontified t)) . -84) (undo-tree-id3425 . -5) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -2) (undo-tree-id3429 . -2) (undo-tree-id3430 . -2) (undo-tree-id3431 . -3) (undo-tree-id3432 . -3) (undo-tree-id3433 . -3) (undo-tree-id3434 . -4) (undo-tree-id3435 . -4) (undo-tree-id3436 . -4) (undo-tree-id3437 . -4) (undo-tree-id3438 . -5) (undo-tree-id3439 . -5) (undo-tree-id3440 . -5) (undo-tree-id3441 . -5) (undo-tree-id3442 . -5) (undo-tree-id3443 . -5) 89) nil (26014 44608 237386 0) 0 nil])
([nil nil ((96 . 97)) nil (26014 44608 237363 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -96) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) 97) nil (26014 44608 237362 0) 0 nil])
([nil nil ((96 . 97)) nil (26014 44608 237354 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face fontified t)) . -96) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) 97) nil (26014 44608 237351 0) 0 nil])
([nil nil ((96 . 97)) nil (26014 44608 237334 0) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -432) (undo-tree-id3483 . -4) (undo-tree-id3484 . -4) (undo-tree-id3485 . -4) (undo-tree-id3486 . -4) (undo-tree-id3487 . -4) (undo-tree-id3488 . -4) (undo-tree-id3489 . -4) (undo-tree-id3490 . -4) (undo-tree-id3491 . -4) (undo-tree-id3492 . -4) 436 (t 26014 44608 252664 869000)) nil (26014 44613 626152 0) 0 nil])
([nil nil ((432 . 433)) nil (26014 44613 626140 0) 0 nil])
([nil nil ((432 . 437) (#("l" 0 1 (fontified nil)) . 432) (432 . 433) (#("light" 0 5 (fontified nil)) . -432) (432 . 437) (#("l" 0 1 (fontified t)) . -432) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) 433) nil (26014 44613 626136 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -429) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -430) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (#("*" 0 1 (fontified t)) . -431) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) 432 (t 26014 44613 641300 732000)) nil (26014 44631 468246 0) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -434) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) 435) nil (26014 44631 468103 0) 0 nil])
([nil nil ((429 . 430) (t 26014 44631 483359 696000)) nil (26014 44638 563576 0) 0 nil])
([nil nil ((430 . 431)) nil (26014 44638 563575 0) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -430) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) 431) nil (26014 44638 563573 0) 0 nil])
([nil nil ((435 . 436)) nil (26014 44638 563554 0) 0 nil])
([nil nil ((429 . 430) (t 26014 44638 579169 965000)) nil (26014 44642 423996 0) 0 nil])
([nil nil ((431 . 432) (t 26014 44642 438587 326000)) nil (26014 44651 334708 0) 0 nil])
([nil nil ((#("    light: &LightUniform," 0 4 (fontified t) 4 9 (face font-lock-variable-name-face fontified t) 9 11 (fontified t) 11 12 (face rust-ampersand-face fontified t) 12 24 (face font-lock-type-face fontified t) 24 25 (fontified t)) . 72) (undo-tree-id3650 . -25) (undo-tree-id3651 . -25) (undo-tree-id3652 . -25) (undo-tree-id3653 . -25) (undo-tree-id3654 . -25) (undo-tree-id3655 . -25) (undo-tree-id3656 . -25) (t 26014 44651 349983 175000)) nil (26014 44715 856319 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 72) (undo-tree-id3649 . -1)) nil (26014 44715 856310 0) 0 nil])
([nil nil ((98 . 103)) nil (26014 44715 856307 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 128 . 129) (nil fontified nil 128 . 129) (nil fontified nil 127 . 128) (nil fontified nil 115 . 127) (nil fontified nil 114 . 115) (nil fontified nil 112 . 114) (nil fontified nil 107 . 112) (nil fontified nil 103 . 107) (103 . 129)) nil (26014 44715 856306 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 129) (undo-tree-id3648 . -1)) nil (26014 44715 856303 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -103) 99) nil (26014 44715 856289 0) 0 nil])
([nil nil ((108 . 109) (t 26014 44715 871917 8000)) nil (26014 44863 105609 0) 0 nil])
([nil nil ((109 . 116)) nil (26014 44863 105607 0) 0 nil])
([nil nil ((445 . 446)) nil (26014 44863 105606 0) 0 nil])
([nil nil ((440 . 453) (#("light_" 0 6 (fontified nil)) . 440) (440 . 446) (#("light_uniform" 0 13 (fontified nil)) . -440) (440 . 453) (#("light_" 0 6 (fontified t)) . -440) (undo-tree-id3657 . -6) (undo-tree-id3658 . -5) (undo-tree-id3659 . -5) (undo-tree-id3660 . -5) (undo-tree-id3661 . -5) (undo-tree-id3662 . -5) (undo-tree-id3663 . -5) (undo-tree-id3664 . -6) (undo-tree-id3665 . -5) (undo-tree-id3666 . -6) (undo-tree-id3667 . -6) (undo-tree-id3668 . -6) 446) nil (26014 44863 105601 0) 0 nil])
([nil nil ((27 . 28) (t 26014 44863 121204 569000)) nil (26016 1703 163693 0) 0 nil])
([nil nil ((28 . 35)) nil (26016 1703 163691 0) 0 nil])
([nil nil ((#("use gpu" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t)) . 28) (undo-tree-id17 . -1) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7)) nil (26016 1703 163690 0) 0 nil])
([nil nil ((28 . 29)) nil (26016 1703 163671 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -28) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 29) nil (26016 1703 163670 0) 0 nil])
([nil nil ((28 . 34)) nil (26016 1703 163665 0) 0 nil])
([nil nil ((32 . 39) (#("cr" 0 2 (fontified nil)) . 32) (32 . 34) (#("crate::" 0 7 (fontified nil)) . -32) (32 . 39) (#("cr" 0 2 (face font-lock-constant-face fontified t)) . -32) (undo-tree-id6 . -2) (undo-tree-id7 . -1) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) 34) nil (26016 1703 163663 0) 0 nil])
([nil nil ((39 . 40)) nil (26016 1703 163654 0) 0 nil])
([nil nil ((39 . 49) (#("g" 0 1 (fontified nil)) . 39) (39 . 40) (#("gpu_buffer" 0 10 (fontified nil)) . -39) (39 . 49) (#("g" 0 1 (fontified t)) . -39) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 40) nil (26016 1703 163652 0) 0 nil])
([nil nil ((49 . 53)) nil (26016 1703 163617 0) 0 nil])
([nil nil ((#("LightUniform" 0 12 (face font-lock-type-face fontified t)) . -1685) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -12) (undo-tree-id109 . -12) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) 1697 (t 26016 1703 182107 284000)) nil (26016 1760 520472 0) 0 nil])
([nil nil ((1685 . 1686)) nil (26016 1760 520449 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1685) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 1686) nil (26016 1760 520447 0) 0 nil])
([nil nil ((1685 . 1687)) nil (26016 1760 520441 0) 0 nil])
([nil nil ((1685 . 1700) (#("Bi" 0 2 (fontified nil)) . 1685) (1685 . 1687) (#("BindGroupLayout" 0 15 (fontified nil)) . -1685) (1685 . 1700) (#("Bi" 0 2 (face font-lock-type-face fontified t)) . -1685) (undo-tree-id94 . -2) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) 1687) nil (26016 1760 520439 0) 0 nil])
([nil nil ((1700 . 1706)) nil (26016 1760 520427 0) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -1705) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 1706) nil (26016 1760 520425 0) 0 nil])
([nil nil ((1705 . 1706)) nil (26016 1760 520421 0) 0 nil])
([nil nil ((1705 . 1717) (#("L" 0 1 (fontified nil)) . 1705) (1705 . 1706) (#("LightUniform" 0 12 (fontified nil)) . -1705) (1705 . 1717) (#("L" 0 1 (face font-lock-type-face fontified t)) . -1705) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 1706) nil (26016 1760 520420 0) 0 nil])
([nil nil ((1720 . 1724)) nil (26016 1760 520413 0) 0 nil])
([nil nil ((1724 . 1726)) nil (26016 1760 520412 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1724) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1725) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 1726) nil (26016 1760 520410 0) 0 nil])
([nil nil ((1724 . 1729)) nil (26016 1760 520397 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1724 1796 #s(yas--snippet nil nil #s(yas--exit 1790 nil) 36 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 1790 nil) 36 nil nil nil nil)) (1724 . 1796) (#("fn desc(device: &wgpu::Device) -> wgpu::BindGroupLayout {
        $0
    }" 0 32 (fontified nil) 32 33 (syntax-table (1) fontified nil) 33 74 (fontified nil)) . 1724) (1793 . 1797) (1782 . 1790) (#("    " 0 4 (fontified nil)) . 1782) (1724 . 1790) (#("fn de" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil) 3 5 (fontified nil)) . 1724) (undo-tree-id52 . -3) (undo-tree-id53 . -1) (undo-tree-id54 . -2) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (1727 . 1729) (#("fn desc(..)" 0 11 (fontified nil)) . -1727) (1727 . 1738) (#("de" 0 2 (face font-lock-function-name-face fontified t)) . -1727) (undo-tree-id67 . -2) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) 1729) nil (26016 1760 520395 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2366 . 2367) (nil fontified nil 2361 . 2367) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2349 . 2359) (nil fontified nil 2345 . 2349) (nil fontified nil 2343 . 2345) (nil fontified nil 2338 . 2343) (nil fontified nil 2324 . 2338) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (nil fontified nil 2308 . 2322) (nil fontified nil 2304 . 2308) (nil fontified nil 2302 . 2304) (nil fontified nil 2297 . 2302) (nil fontified nil 2279 . 2297) (nil fontified nil 2278 . 2279) (nil fontified nil 2260 . 2278) (nil fontified nil 2256 . 2260) (nil fontified nil 2254 . 2256) (nil fontified nil 2238 . 2254) (nil fontified nil 2216 . 2238) (nil fontified nil 2211 . 2216) (nil fontified nil 2209 . 2211) (nil fontified nil 2191 . 2209) (nil fontified nil 2169 . 2191) (nil fontified nil 2162 . 2169) (nil fontified nil 2160 . 2162) (nil fontified nil 2143 . 2160) (nil fontified nil 2141 . 2143) (nil fontified nil 2137 . 2141) (nil fontified nil 2135 . 2137) (nil fontified nil 2133 . 2135) (nil fontified nil 2112 . 2133) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2104 . 2110) (nil fontified nil 2102 . 2104) (nil fontified nil 2091 . 2102) (nil fontified nil 2089 . 2091) (nil fontified nil 2085 . 2089) (nil fontified nil 2083 . 2085) (nil fontified nil 2081 . 2083) (nil fontified nil 2063 . 2081) (nil fontified nil 2055 . 2063) (nil fontified nil 2053 . 2055) (nil fontified nil 2041 . 2053) (nil fontified nil 2039 . 2041) (nil fontified nil 2035 . 2039) (nil fontified nil 2032 . 2035) (nil fontified nil 2026 . 2032) (nil fontified nil 2024 . 2026) (nil fontified nil 2012 . 2024) (nil fontified nil 2010 . 2012) (nil fontified nil 2006 . 2010) (nil fontified nil 2004 . 2006) (nil fontified nil 1994 . 2004) (nil fontified nil 1973 . 1994) (nil fontified nil 1966 . 1973) (nil fontified nil 1949 . 1966) (nil fontified nil 1948 . 1949) (nil fontified nil 1947 . 1948) (nil fontified nil 1927 . 1947) (nil fontified nil 1925 . 1927) (nil fontified nil 1921 . 1925) (nil fontified nil 1920 . 1921) (nil fontified nil 1919 . 1920) (nil fontified nil 1917 . 1919) (nil fontified nil 1910 . 1917) (nil fontified nil 1897 . 1910) (nil fontified nil 1896 . 1897) (nil fontified nil 1895 . 1896) (nil fontified nil 1870 . 1895) (nil fontified nil 1868 . 1870) (nil fontified nil 1864 . 1868) (nil fontified nil 1863 . 1864) (nil fontified nil 1862 . 1863) (nil fontified nil 1820 . 1862) (nil fontified nil 1797 . 1820) (nil fontified nil 1796 . 1797) (nil fontified nil 1793 . 1796) (nil fontified nil 1790 . 1793) (1790 . 2367)) nil (26016 1760 520366 0) 0 nil])
([nil nil ((2367 . 2368)) nil (26016 1760 520344 0) 0 nil])
([nil nil ((2367 . 2390) (#("l" 0 1 (fontified nil)) . 2367) (2367 . 2368) (#("light_bind_group_layout" 0 23 (fontified nil)) . -2367) (2367 . 2390) (#("l" 0 1 (fontified t)) . -2367) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 2368) nil (26016 1760 520343 0) 0 nil])
([nil nil ((2412 . 2420) (#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . 2412) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (2404 . 2408) (2367 . 2383) (#("            " 0 12 (fontified t)) . 2367) (2347 . 2363) (#("            " 0 12 (fontified t)) . 2347) (undo-tree-id47 . -6) (2330 . 2334) (2307 . 2311) (2243 . 2267) (#("                    " 0 20 (fontified t)) . 2243) (2192 . 2216) (#("                    " 0 20 (fontified t)) . 2192) (2130 . 2154) (#("                    " 0 20 (fontified t)) . 2130) (2094 . 2098) (2003 . 2007) (1971 . 1975) (1899 . 1915) (#("            " 0 12 (fontified t)) . 1899) (1828 . 1832) (#("   " 0 3 (fontified t)) . -1790) 1678) nil (26016 1760 520332 0) 0 nil])
([nil nil ((2453 . 2459) (t 26016 1760 537225 869000)) nil (26016 1897 34274 0) 0 nil])
([nil nil ((2459 . 2460)) nil (26016 1897 34273 0) 0 nil])
([nil nil ((2459 . 2472) (#("U" 0 1 (fontified nil)) . 2459) (2459 . 2460) (#("UniformBuffer" 0 13 (fontified nil)) . -2459) (2459 . 2472) (#("U" 0 1 (face font-lock-type-face fontified t)) . -2459) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) 2460) nil (26016 1897 34271 0) 0 nil])
([nil nil ((2472 . 2478)) nil (26016 1897 34264 0) 0 nil])
([nil nil ((2477 . 2489) (#("L" 0 1 (fontified nil)) . 2477) (2477 . 2478) (#("LightUniform" 0 12 (fontified nil)) . -2477) (2477 . 2489) (#("L" 0 1 (face font-lock-type-face fontified t)) . -2477) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 2478) nil (26016 1897 34262 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -2453) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (2489 . 2492)) nil (26016 1897 34254 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 2491) (2491 . 2495) (2490 . 2492)) nil (26016 1897 34251 0) 0 nil])
([nil nil ((2491 . 2495)) nil (26016 1897 34250 0) 0 nil])
([nil nil ((2495 . 2496)) nil (26016 1897 34249 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2495) (undo-tree-id828 . -1) (undo-tree-id829 . -1) 2496) nil (26016 1897 34247 0) 0 nil])
([nil nil ((2495 . 2497)) nil (26016 1897 34244 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2495 2608 #s(yas--snippet nil nil #s(yas--exit 2602 nil) 37 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2602 nil) 37 nil nil nil nil)) (2495 . 2608) (#("fn create_buffer_and_bind_group(&self, device: &wgpu::Device) -> (wgpu::Buffer, wgpu::BindGroup) {
        $0
    }" 0 63 (fontified nil) 63 64 (syntax-table (1) fontified nil) 64 115 (fontified nil)) . 2495) (2605 . 2609) (2594 . 2602) (#("    " 0 4 (fontified nil)) . 2594) (2495 . 2602) (#("fn" 0 2 (fontified nil)) . 2495) (2495 . 2497) (#("fn create_buffer_and_bind_group(..)" 0 35 (fontified nil)) . -2495) (2495 . 2530) (#("fn" 0 2 (face font-lock-keyword-face fontified t)) . -2495) (undo-tree-id822 . -2) (undo-tree-id823 . -1) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) 2497) nil (26016 1897 34242 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3824 . 3825) (nil fontified nil 3824 . 3825) (nil fontified nil 3823 . 3824) (nil fontified nil 3822 . 3823) (nil fontified nil 3816 . 3822) (nil fontified nil 3812 . 3816) (nil fontified nil 3810 . 3812) (nil fontified nil 3805 . 3810) (nil fontified nil 3795 . 3805) (nil fontified nil 3794 . 3795) (nil fontified nil 3793 . 3794) (nil fontified nil 3783 . 3793) (nil fontified nil 3782 . 3783) (nil fontified nil 3781 . 3782) (nil fontified nil 3749 . 3781) (nil fontified nil 3741 . 3749) (nil fontified nil 3724 . 3741) (nil fontified nil 3717 . 3724) (nil fontified nil 3704 . 3717) (nil fontified nil 3703 . 3704) (nil fontified nil 3702 . 3703) (nil fontified nil 3688 . 3702) (nil fontified nil 3686 . 3688) (nil fontified nil 3682 . 3686) (nil fontified nil 3681 . 3682) (nil fontified nil 3680 . 3681) (nil fontified nil 3678 . 3680) (nil fontified nil 3671 . 3678) (nil fontified nil 3638 . 3671) (nil fontified nil 3637 . 3638) (nil fontified nil 3635 . 3637) (nil fontified nil 3629 . 3635) (nil fontified nil 3620 . 3629) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3599 . 3618) (nil fontified nil 3597 . 3599) (nil fontified nil 3593 . 3597) (nil fontified nil 3592 . 3593) (nil fontified nil 3591 . 3592) (nil fontified nil 3564 . 3591) (nil fontified nil 3548 . 3564) (nil fontified nil 3547 . 3548) (nil fontified nil 3544 . 3547) (nil fontified nil 3533 . 3544) (nil fontified nil 3532 . 3533) (nil fontified nil 3531 . 3532) (nil fontified nil 3521 . 3531) (nil fontified nil 3517 . 3521) (nil fontified nil 3515 . 3517) (nil fontified nil 3510 . 3515) (nil fontified nil 3496 . 3510) (nil fontified nil 3495 . 3496) (nil fontified nil 3494 . 3495) (nil fontified nil 3480 . 3494) (nil fontified nil 3476 . 3480) (nil fontified nil 3474 . 3476) (nil fontified nil 3469 . 3474) (nil fontified nil 3451 . 3469) (nil fontified nil 3450 . 3451) (nil fontified nil 3432 . 3450) (nil fontified nil 3428 . 3432) (nil fontified nil 3426 . 3428) (nil fontified nil 3410 . 3426) (nil fontified nil 3388 . 3410) (nil fontified nil 3383 . 3388) (nil fontified nil 3381 . 3383) (nil fontified nil 3363 . 3381) (nil fontified nil 3341 . 3363) (nil fontified nil 3334 . 3341) (nil fontified nil 3332 . 3334) (nil fontified nil 3315 . 3332) (nil fontified nil 3313 . 3315) (nil fontified nil 3309 . 3313) (nil fontified nil 3307 . 3309) (nil fontified nil 3305 . 3307) (nil fontified nil 3284 . 3305) (nil fontified nil 3283 . 3284) (nil fontified nil 3282 . 3283) (nil fontified nil 3276 . 3282) (nil fontified nil 3274 . 3276) (nil fontified nil 3263 . 3274) (nil fontified nil 3261 . 3263) (nil fontified nil 3257 . 3261) (nil fontified nil 3255 . 3257) (nil fontified nil 3253 . 3255) (nil fontified nil 3235 . 3253) (nil fontified nil 3227 . 3235) (nil fontified nil 3225 . 3227) (nil fontified nil 3213 . 3225) (nil fontified nil 3211 . 3213) (nil fontified nil 3207 . 3211) (nil fontified nil 3204 . 3207) (nil fontified nil 3198 . 3204) (nil fontified nil 3196 . 3198) (nil fontified nil 3184 . 3196) (nil fontified nil 3182 . 3184) (nil fontified nil 3178 . 3182) (nil fontified nil 3176 . 3178) (nil fontified nil 3166 . 3176) (nil fontified nil 3145 . 3166) (nil fontified nil 3138 . 3145) (nil fontified nil 3121 . 3138) (nil fontified nil 3120 . 3121) (nil fontified nil 3119 . 3120) (nil fontified nil 3099 . 3119) (nil fontified nil 3097 . 3099) (nil fontified nil 3093 . 3097) (nil fontified nil 3092 . 3093) (nil fontified nil 3091 . 3092) (nil fontified nil 3089 . 3091) (nil fontified nil 3082 . 3089) (nil fontified nil 3069 . 3082) (nil fontified nil 3068 . 3069) (nil fontified nil 3067 . 3068) (nil fontified nil 3042 . 3067) (nil fontified nil 3040 . 3042) (nil fontified nil 3036 . 3040) (nil fontified nil 3035 . 3036) (nil fontified nil 3034 . 3035) (nil fontified nil 2992 . 3034) (nil fontified nil 2969 . 2992) (nil fontified nil 2968 . 2969) (nil fontified nil 2965 . 2968) (nil fontified nil 2958 . 2965) (nil fontified nil 2957 . 2958) (nil fontified nil 2952 . 2957) (nil fontified nil 2951 . 2952) (nil fontified nil 2941 . 2951) (nil fontified nil 2933 . 2941) (nil fontified nil 2931 . 2933) (nil fontified nil 2919 . 2931) (nil fontified nil 2917 . 2919) (nil fontified nil 2913 . 2917) (nil fontified nil 2910 . 2913) (nil fontified nil 2903 . 2910) (nil fontified nil 2901 . 2903) (nil fontified nil 2889 . 2901) (nil fontified nil 2887 . 2889) (nil fontified nil 2883 . 2887) (nil fontified nil 2881 . 2883) (nil fontified nil 2876 . 2881) (nil fontified nil 2862 . 2876) (nil fontified nil 2861 . 2862) (nil fontified nil 2860 . 2861) (nil fontified nil 2846 . 2860) (nil fontified nil 2845 . 2846) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2831 . 2843) (nil fontified nil 2823 . 2831) (nil fontified nil 2821 . 2823) (nil fontified nil 2813 . 2821) (nil fontified nil 2799 . 2813) (nil fontified nil 2798 . 2799) (nil fontified nil 2788 . 2798) (nil fontified nil 2787 . 2788) (nil fontified nil 2783 . 2787) (nil fontified nil 2781 . 2783) (nil fontified nil 2776 . 2781) (nil fontified nil 2763 . 2776) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2741 . 2761) (nil fontified nil 2739 . 2741) (nil fontified nil 2735 . 2739) (nil fontified nil 2733 . 2735) (nil fontified nil 2729 . 2733) (nil fontified nil 2728 . 2729) (nil fontified nil 2719 . 2728) (nil fontified nil 2718 . 2719) (nil fontified nil 2690 . 2718) (nil fontified nil 2678 . 2690) (nil fontified nil 2677 . 2678) (nil fontified nil 2674 . 2677) (nil fontified nil 2670 . 2674) (nil fontified nil 2609 . 2670) (nil fontified nil 2606 . 2609) (nil fontified nil 2602 . 2606) (2602 . 3825)) nil (26016 1897 34224 0) 0 nil])
([nil nil ((#("     device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[wgpu::BindGroupLayoutEntry {
                binding: 0,
                visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                ty: wgpu::BindingType::Buffer {
                    ty: wgpu::BufferBindingType::Uniform,
                    has_dynamic_offset: false,
                    min_binding_size: None,
                },
                count: None,
            }],
            label: None,
        });
    " 0 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-3-face) fontified t) 37 38 (face rust-ampersand-face fontified t) 38 42 (face font-lock-constant-face fontified t) 42 44 (fontified t) 44 69 (face font-lock-type-face fontified t) 69 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-4-face) fontified t) 71 84 (fontified t) 84 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face rust-ampersand-face fontified t) 94 95 (face (rainbow-delimiters-depth-5-face) fontified t) 95 99 (face font-lock-constant-face fontified t) 99 101 (fontified t) 101 121 (face font-lock-type-face fontified t) 121 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-6-face) fontified t) 123 140 (fontified t) 140 147 (face font-lock-variable-name-face fontified t) 147 168 (fontified t) 168 178 (face font-lock-variable-name-face fontified t) 178 180 (fontified t) 180 184 (face font-lock-constant-face fontified t) 184 186 (fontified t) 186 198 (face font-lock-type-face fontified t) 198 200 (fontified t) 200 206 (face font-lock-type-face fontified t) 206 209 (fontified t) 209 213 (face font-lock-constant-face fontified t) 213 215 (fontified t) 215 227 (face font-lock-type-face fontified t) 227 229 (fontified t) 229 237 (face font-lock-type-face fontified t) 237 255 (fontified t) 255 257 (face font-lock-variable-name-face fontified t) 257 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 265 (fontified t) 265 276 (face font-lock-type-face fontified t) 276 278 (fontified t) 278 284 (face font-lock-type-face fontified t) 284 285 (fontified t) 285 286 (face (rainbow-delimiters-depth-7-face) fontified t) 286 307 (fontified t) 307 309 (face font-lock-variable-name-face fontified t) 309 311 (fontified t) 311 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 334 (face font-lock-type-face fontified t) 334 336 (fontified t) 336 343 (face font-lock-type-face fontified t) 343 365 (fontified t) 365 383 (face font-lock-variable-name-face fontified t) 383 385 (fontified t) 385 390 (face font-lock-keyword-face fontified t) 390 412 (fontified t) 412 428 (face font-lock-variable-name-face fontified t) 428 430 (fontified t) 430 434 (face font-lock-type-face fontified t) 434 452 (fontified t) 452 453 (face (rainbow-delimiters-depth-7-face) fontified t) 453 471 (fontified t) 471 476 (face font-lock-variable-name-face fontified t) 476 478 (fontified t) 478 482 (face font-lock-type-face fontified t) 482 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-6-face) fontified t) 497 498 (face (rainbow-delimiters-depth-5-face) fontified t) 498 512 (fontified t) 512 517 (face font-lock-variable-name-face fontified t) 517 519 (fontified t) 519 523 (face font-lock-type-face fontified t) 523 533 (fontified t) 533 534 (face (rainbow-delimiters-depth-4-face) fontified t) 534 535 (face (rainbow-delimiters-depth-3-face) fontified t) 535 541 (fontified t)) . 2998) (undo-tree-id793 . -541) (undo-tree-id794 . -541) (undo-tree-id795 . -541) (undo-tree-id796 . -541) (undo-tree-id797 . -536) (undo-tree-id798 . -492) (undo-tree-id799 . -461) (undo-tree-id800 . -396) (undo-tree-id801 . -395) (undo-tree-id802 . -347) (undo-tree-id803 . -290) (undo-tree-id804 . -243) (undo-tree-id805 . -157) (undo-tree-id806 . -131) (undo-tree-id807 . -80) (undo-tree-id808 . -7) (undo-tree-id809 . -8) (undo-tree-id810 . -12) (undo-tree-id811 . -11) (undo-tree-id812 . -10) (undo-tree-id813 . -9) (undo-tree-id814 . -8) (undo-tree-id815 . -7) (undo-tree-id816 . -6) (undo-tree-id817 . -5) (undo-tree-id818 . -3) (undo-tree-id819 . -1) (undo-tree-id820 . -541) (undo-tree-id821 . -541)) nil (26016 1897 34176 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2994) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#(" " 0 1 (fontified t)) . -2995) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#(" " 0 1 (fontified t)) . -2996) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#(" " 0 1 (fontified t)) . -2997) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) 2998) nil (26016 1897 34141 0) 0 nil])
([nil nil ((2994 . 3001)) nil (26016 1897 34001 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2999) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (#("b" 0 1 (fontified t)) . -3000) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 3001) nil (26016 1897 33999 0) 0 nil])
([nil nil ((2999 . 3001)) nil (26016 1897 33978 0) 0 nil])
([nil nil ((#("self::" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . -2995) (undo-tree-id591 . -6) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -5) (undo-tree-id621 . -6) (undo-tree-id622 . -6) (undo-tree-id623 . -6) (undo-tree-id624 . -6) 3001) nil (26016 1897 33975 0) 0 nil])
([nil nil ((2995 . 2998)) nil (26016 1897 33927 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2997) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 2998) nil (26016 1897 33926 0) 0 nil])
([nil nil ((2997 . 3004)) nil (26016 1897 33920 0) 0 nil])
([nil nil ((#("desc" 0 4 (fontified t)) . -3000) (undo-tree-id572 . -4) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -3) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) 3004) nil (26016 1897 33918 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -2995) (undo-tree-id543 . -5) (undo-tree-id544 . -1) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -3) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) 3000) nil (26016 1897 33903 0) 0 nil])
([nil nil ((2995 . 2999)) nil (26016 1897 33873 0) 0 nil])
([nil nil ((2995 . 3001) (#("self" 0 4 (fontified nil)) . 2995) (2995 . 2999) (#("self::" 0 6 (fontified nil)) . -2995) (2995 . 3001) (#("self" 0 4 (face font-lock-keyword-face fontified t)) . -2995) (undo-tree-id532 . -4) (undo-tree-id533 . -1) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) 2999) nil (26016 1897 33871 0) 0 nil])
([nil nil ((3001 . 3005)) nil (26016 1897 33858 0) 0 nil])
([nil nil ((#("impl UniformBuffer for LightUniform {
    fn create_buffer_and_bind_group(&self, device: &wgpu::Device) -> (wgpu::Buffer, wgpu::BindGroup) {
            // We'll want to update our lights position, so we use COPY_DST
    let light_buffer = device.create_buffer_init(
        &wgpu::util::BufferInitDescriptor {
            label: Some(\"Light VB\"),
            contents: bytemuck::cast_slice(&[*light_uniform]),
            usage: wgpu::BufferUsages::UNIFORM | wgpu::BufferUsages::COPY_DST,
        }
    );

    let light_bind_group_layout = self::desc
    let light_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
        layout: &light_bind_group_layout,
        entries: &[wgpu::BindGroupEntry {
            binding: 0,
            resource: light_buffer.as_entire_binding(),
        }],
        label: None,
    });
    }
}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 18 (face font-lock-type-face fontified t) 18 19 (fontified t) 19 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 35 (face font-lock-type-face fontified t) 35 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 38 (fontified t) 38 42 (fontified t) 42 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 73 (face font-lock-function-name-face fontified t) 73 74 (face (rainbow-delimiters-depth-2-face) fontified t) 74 75 (face rust-ampersand-face fontified t) 75 79 (face font-lock-keyword-face fontified t) 79 81 (fontified t) 81 87 (face font-lock-variable-name-face fontified t) 87 89 (fontified t) 89 90 (face rust-ampersand-face fontified t) 90 94 (face font-lock-constant-face fontified t) 94 96 (fontified t) 96 102 (face font-lock-type-face fontified t) 102 103 (face (rainbow-delimiters-depth-2-face) fontified t) 103 105 (fontified t) 105 106 (syntax-table (1) fontified t) 106 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-2-face) fontified t) 108 112 (face font-lock-constant-face fontified t) 112 114 (fontified t) 114 120 (face font-lock-type-face fontified t) 120 122 (fontified t) 122 126 (face font-lock-constant-face fontified t) 126 128 (fontified t) 128 137 (face font-lock-type-face fontified t) 137 138 (face (rainbow-delimiters-depth-2-face) fontified t) 138 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-2-face) fontified t) 140 141 (fontified t) 141 149 (fontified t) 149 153 (fontified t) 153 156 (face font-lock-comment-delimiter-face fontified t) 156 217 (face font-lock-comment-face fontified t) 217 221 (fontified t) 221 224 (face font-lock-keyword-face fontified t) 224 225 (fontified t) 225 237 (face font-lock-variable-name-face fontified t) 237 265 (fontified t) 265 266 (face (rainbow-delimiters-depth-3-face) fontified t) 266 275 (fontified t) 275 276 (face rust-ampersand-face fontified t) 276 280 (face font-lock-constant-face fontified t) 280 282 (fontified t) 282 286 (face font-lock-constant-face fontified t) 286 288 (fontified t) 288 308 (face font-lock-type-face fontified t) 308 309 (fontified t) 309 310 (face (rainbow-delimiters-depth-4-face) fontified t) 310 323 (fontified t) 323 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 334 (face font-lock-type-face fontified t) 334 335 (face (rainbow-delimiters-depth-5-face) fontified t) 335 345 (face font-lock-string-face fontified t) 345 346 (face (rainbow-delimiters-depth-5-face) fontified t) 346 360 (fontified t) 360 368 (face font-lock-variable-name-face fontified t) 368 370 (fontified t) 370 378 (face font-lock-constant-face fontified t) 378 390 (fontified t) 390 391 (face (rainbow-delimiters-depth-5-face) fontified t) 391 392 (face rust-ampersand-face fontified t) 392 393 (face (rainbow-delimiters-depth-6-face) fontified t) 393 407 (fontified t) 407 408 (face (rainbow-delimiters-depth-6-face) fontified t) 408 409 (face (rainbow-delimiters-depth-5-face) fontified t) 409 423 (fontified t) 423 428 (face font-lock-variable-name-face fontified t) 428 430 (fontified t) 430 434 (face font-lock-constant-face fontified t) 434 436 (fontified t) 436 448 (face font-lock-type-face fontified t) 448 450 (fontified t) 450 457 (face font-lock-type-face fontified t) 457 460 (fontified t) 460 464 (face font-lock-constant-face fontified t) 464 466 (fontified t) 466 478 (face font-lock-type-face fontified t) 478 480 (fontified t) 480 488 (face font-lock-type-face fontified t) 488 498 (fontified t) 498 499 (face (rainbow-delimiters-depth-4-face) fontified t) 499 504 (fontified t) 504 505 (face (rainbow-delimiters-depth-3-face) fontified t) 505 508 (fontified t) 508 512 (fontified t) 512 515 (face font-lock-keyword-face fontified t) 515 516 (fontified t) 516 539 (face font-lock-variable-name-face fontified t) 539 542 (fontified t) 542 546 (face font-lock-keyword-face fontified t) 546 552 (fontified t) 552 553 (fontified t) 553 557 (fontified t) 557 560 (face font-lock-keyword-face fontified t) 560 561 (fontified t) 561 577 (face font-lock-variable-name-face fontified t) 577 604 (fontified t) 604 605 (face (rainbow-delimiters-depth-3-face) fontified t) 605 606 (face rust-ampersand-face fontified t) 606 610 (face font-lock-constant-face fontified t) 610 612 (fontified t) 612 631 (face font-lock-type-face fontified t) 631 632 (fontified t) 632 633 (face (rainbow-delimiters-depth-4-face) fontified t) 633 642 (fontified t) 642 648 (face font-lock-variable-name-face fontified t) 648 650 (fontified t) 650 651 (face rust-ampersand-face fontified t) 651 684 (fontified t) 684 691 (face font-lock-variable-name-face fontified t) 691 693 (fontified t) 693 694 (face rust-ampersand-face fontified t) 694 695 (face (rainbow-delimiters-depth-5-face) fontified t) 695 699 (face font-lock-constant-face fontified t) 699 701 (fontified t) 701 715 (face font-lock-type-face fontified t) 715 716 (fontified t) 716 717 (face (rainbow-delimiters-depth-6-face) fontified t) 717 730 (fontified t) 730 737 (face font-lock-variable-name-face fontified t) 737 754 (fontified t) 754 762 (face font-lock-variable-name-face fontified t) 762 794 (fontified t) 794 795 (face (rainbow-delimiters-depth-7-face) fontified t) 795 796 (face (rainbow-delimiters-depth-7-face) fontified t) 796 806 (fontified t) 806 807 (face (rainbow-delimiters-depth-6-face) fontified t) 807 808 (face (rainbow-delimiters-depth-5-face) fontified t) 808 818 (fontified t) 818 823 (face font-lock-variable-name-face fontified t) 823 825 (fontified t) 825 829 (face font-lock-type-face fontified t) 829 835 (fontified t) 835 836 (face (rainbow-delimiters-depth-4-face) fontified t) 836 837 (face (rainbow-delimiters-depth-3-face) fontified t) 837 838 (fontified t rear-nonsticky t) 838 839 (fontified t) 839 843 (fontified t) 843 844 (face (rainbow-delimiters-depth-2-face) fontified t) 844 845 (fontified t) 845 846 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2453) (undo-tree-id127 . -846) (undo-tree-id128 . -1) (undo-tree-id129 . -2) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -18) (undo-tree-id150 . -18) (undo-tree-id151 . -18) (undo-tree-id152 . -18) (undo-tree-id153 . -18) (undo-tree-id154 . -18) (undo-tree-id155 . -18) (undo-tree-id156 . -18) (undo-tree-id157 . -18) (undo-tree-id158 . -18) (undo-tree-id159 . -19) (undo-tree-id160 . -19) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . -21) (undo-tree-id164 . -22) (undo-tree-id165 . -22) (undo-tree-id166 . -23) (undo-tree-id167 . -23) (undo-tree-id168 . -23) (undo-tree-id169 . -23) (undo-tree-id170 . -23) (undo-tree-id171 . -23) (undo-tree-id172 . -23) (undo-tree-id173 . -35) (undo-tree-id174 . -35) (undo-tree-id175 . -35) (undo-tree-id176 . -35) (undo-tree-id177 . -35) (undo-tree-id178 . -35) (undo-tree-id179 . -35) (undo-tree-id180 . -35) (undo-tree-id181 . -35) (undo-tree-id182 . -35) (undo-tree-id183 . -35) (undo-tree-id184 . -35) (undo-tree-id185 . -36) (undo-tree-id186 . -36) (undo-tree-id187 . -37) (undo-tree-id188 . -846) (undo-tree-id189 . -37) (undo-tree-id190 . -37) (undo-tree-id191 . -37) (undo-tree-id192 . 809) (undo-tree-id193 . -38) (undo-tree-id194 . -38) (undo-tree-id195 . -38) (undo-tree-id196 . 2) (undo-tree-id197 . -845) (undo-tree-id198 . -845) (undo-tree-id199 . -845) (undo-tree-id200 . -42) (undo-tree-id201 . -42) (undo-tree-id202 . -42) (undo-tree-id203 . -42) (undo-tree-id204 . -42) (undo-tree-id205 . -42) (undo-tree-id206 . -42) (undo-tree-id207 . -42) (undo-tree-id208 . -42) (undo-tree-id209 . -42) (undo-tree-id210 . -38) (undo-tree-id211 . -42) (undo-tree-id212 . -42) (undo-tree-id213 . -42) (undo-tree-id214 . -42) (undo-tree-id215 . -149) (undo-tree-id216 . -149) (undo-tree-id217 . -149) (undo-tree-id218 . -149) (undo-tree-id219 . -149) (undo-tree-id220 . -149) (undo-tree-id221 . -149) (undo-tree-id222 . -149) (undo-tree-id223 . -149) (undo-tree-id224 . -149) (undo-tree-id225 . -149) (undo-tree-id226 . -149) (undo-tree-id227 . -149) (undo-tree-id228 . -149) (undo-tree-id229 . -149) (undo-tree-id230 . -149) (undo-tree-id231 . -149) (undo-tree-id232 . -149) (undo-tree-id233 . -149) (undo-tree-id234 . -149) (undo-tree-id235 . -149) (undo-tree-id236 . -149) (undo-tree-id237 . -38) (undo-tree-id238 . -149) (undo-tree-id239 . -149) (undo-tree-id240 . -149) (undo-tree-id241 . -149) (undo-tree-id242 . -149) (undo-tree-id243 . -149) (undo-tree-id244 . -149) (undo-tree-id245 . -838) (undo-tree-id246 . -838) (undo-tree-id247 . -838) (undo-tree-id248 . -838) (undo-tree-id249 . -838) (undo-tree-id250 . -838) (undo-tree-id251 . -838) (undo-tree-id252 . -838) (undo-tree-id253 . -838) (undo-tree-id254 . -838) (undo-tree-id255 . -838) (undo-tree-id256 . -838) (undo-tree-id257 . -838) (undo-tree-id258 . -838) (undo-tree-id259 . -838) (undo-tree-id260 . -838) (undo-tree-id261 . -838) (undo-tree-id262 . -838) (undo-tree-id263 . -838) (undo-tree-id264 . -838) (undo-tree-id265 . -838) (undo-tree-id266 . -838) (undo-tree-id267 . -838) (undo-tree-id268 . -838) (undo-tree-id269 . -838) (undo-tree-id270 . -838) (undo-tree-id271 . -838) (undo-tree-id272 . -838) (undo-tree-id273 . -838) (undo-tree-id274 . -838) (undo-tree-id275 . -838) (undo-tree-id276 . -838) (undo-tree-id277 . -838) (undo-tree-id278 . -838) (undo-tree-id279 . -838) (undo-tree-id280 . -77) (undo-tree-id281 . -77) (undo-tree-id282 . -77) (undo-tree-id283 . -77) (undo-tree-id284 . -77) (undo-tree-id285 . -77) (undo-tree-id286 . -77) (undo-tree-id287 . -77) (undo-tree-id288 . -77) (undo-tree-id289 . -77) (undo-tree-id290 . -77) (undo-tree-id291 . -77) (undo-tree-id292 . -77) (undo-tree-id293 . -77) (undo-tree-id294 . -77) (undo-tree-id295 . -77) (undo-tree-id296 . -77) (undo-tree-id297 . -77) (undo-tree-id298 . -77) (undo-tree-id299 . -77) (undo-tree-id300 . -77) (undo-tree-id301 . -77) (undo-tree-id302 . -541) (undo-tree-id303 . -541) (undo-tree-id304 . -541) (undo-tree-id305 . -541) (undo-tree-id306 . -541) (undo-tree-id307 . -541) (undo-tree-id308 . -541) (undo-tree-id309 . -541) (undo-tree-id310 . -541) (undo-tree-id311 . -541) (undo-tree-id312 . -541) (undo-tree-id313 . -541) (undo-tree-id314 . -541) (undo-tree-id315 . -541) (undo-tree-id316 . -541) (undo-tree-id317 . -541) (undo-tree-id318 . -520) (undo-tree-id319 . -521) (undo-tree-id320 . -522) (undo-tree-id321 . -523) (undo-tree-id322 . -524) (undo-tree-id323 . -541) (undo-tree-id324 . -541) (undo-tree-id325 . -541) (undo-tree-id326 . -541) (undo-tree-id327 . -541) (undo-tree-id328 . -541) (undo-tree-id329 . -541) (undo-tree-id330 . -541) (undo-tree-id331 . -541) (undo-tree-id332 . -541) (undo-tree-id333 . -541) (undo-tree-id334 . -149) (undo-tree-id335 . -541) (undo-tree-id336 . -541) (undo-tree-id337 . -541) (undo-tree-id338 . -541) (undo-tree-id339 . -541) (undo-tree-id340 . -541) (undo-tree-id341 . -541) (undo-tree-id342 . -541) (undo-tree-id343 . -541) (undo-tree-id344 . -541) (undo-tree-id345 . -541) (undo-tree-id346 . -542) (undo-tree-id347 . -542) (undo-tree-id348 . -542) (undo-tree-id349 . -542) (undo-tree-id350 . -542) (undo-tree-id351 . -542) (undo-tree-id352 . -508) (undo-tree-id353 . -542) (undo-tree-id354 . -542) (undo-tree-id355 . -542) (undo-tree-id356 . -508) (undo-tree-id357 . -542) (undo-tree-id358 . -542) (undo-tree-id359 . -508) (undo-tree-id360 . -542) (undo-tree-id361 . -542) (undo-tree-id362 . -542) (undo-tree-id363 . -542) (undo-tree-id364 . -542) (undo-tree-id365 . -542) (undo-tree-id366 . -542) (undo-tree-id367 . -542) (undo-tree-id368 . -508) (undo-tree-id369 . -542) (undo-tree-id370 . -542) (undo-tree-id371 . -542) (undo-tree-id372 . -542) (undo-tree-id373 . -542) (undo-tree-id374 . -508) (undo-tree-id375 . -542) (undo-tree-id376 . -542) (undo-tree-id377 . -542) (undo-tree-id378 . -542) (undo-tree-id379 . -542) (undo-tree-id380 . -542) (undo-tree-id381 . -542) (undo-tree-id382 . -542) (undo-tree-id383 . -542) (undo-tree-id384 . -542) (undo-tree-id385 . -542) (undo-tree-id386 . -542) (undo-tree-id387 . -542) (undo-tree-id388 . -542) (undo-tree-id389 . -542) (undo-tree-id390 . -542) (undo-tree-id391 . -542) (undo-tree-id392 . -542) (undo-tree-id393 . -542) (undo-tree-id394 . -542) (undo-tree-id395 . -542) (undo-tree-id396 . -542) (undo-tree-id397 . -542) (undo-tree-id398 . -542) (undo-tree-id399 . -542) (undo-tree-id400 . -542) (undo-tree-id401 . -542) (undo-tree-id402 . -542) (undo-tree-id403 . -542) (undo-tree-id404 . -542) (undo-tree-id405 . -542) (undo-tree-id406 . -542) (undo-tree-id407 . -542) (undo-tree-id408 . -542) (undo-tree-id409 . -542) (undo-tree-id410 . -542) (undo-tree-id411 . -542) (undo-tree-id412 . -542) (undo-tree-id413 . -542) (undo-tree-id414 . -542) (undo-tree-id415 . -542) (undo-tree-id416 . -542) (undo-tree-id417 . -542) (undo-tree-id418 . -542) (undo-tree-id419 . -542) (undo-tree-id420 . -542) (undo-tree-id421 . -542) (undo-tree-id422 . -542) (undo-tree-id423 . -542) (undo-tree-id424 . -542) (undo-tree-id425 . -542) (undo-tree-id426 . -542) (undo-tree-id427 . -542) (undo-tree-id428 . -542) (undo-tree-id429 . -542) (undo-tree-id430 . -542) (undo-tree-id431 . -542) (undo-tree-id432 . -542) (undo-tree-id433 . -542) (undo-tree-id434 . -542) (undo-tree-id435 . -542) (undo-tree-id436 . -542) (undo-tree-id437 . -542) (undo-tree-id438 . -542) (undo-tree-id439 . -542) (undo-tree-id440 . -542) (undo-tree-id441 . -542) (undo-tree-id442 . -542) (undo-tree-id443 . -508) (undo-tree-id444 . -542) (undo-tree-id445 . -542) (undo-tree-id446 . -542) (undo-tree-id447 . -542) (undo-tree-id448 . -542) (undo-tree-id449 . -542) (undo-tree-id450 . -542) (undo-tree-id451 . -542) (undo-tree-id452 . -542) (undo-tree-id453 . -508) (undo-tree-id454 . -542) (undo-tree-id455 . -542) (undo-tree-id456 . -542) (undo-tree-id457 . -542) (undo-tree-id458 . -508) (undo-tree-id459 . -542) (undo-tree-id460 . -542) (undo-tree-id461 . -542) (undo-tree-id462 . -508) (undo-tree-id463 . -542) (undo-tree-id464 . -542) (undo-tree-id465 . -542) (undo-tree-id466 . -542) (undo-tree-id467 . -542) (undo-tree-id468 . -542) (undo-tree-id469 . -542) (undo-tree-id470 . -542) (undo-tree-id471 . -542) (undo-tree-id472 . -542) (undo-tree-id473 . -542) (undo-tree-id474 . -542) (undo-tree-id475 . -542) (undo-tree-id476 . -542) (undo-tree-id477 . -542) (undo-tree-id478 . -508) (undo-tree-id479 . -542) (undo-tree-id480 . -542) (undo-tree-id481 . -508) (undo-tree-id482 . -542) (undo-tree-id483 . -542) (undo-tree-id484 . -508) (undo-tree-id485 . -542) (undo-tree-id486 . -542) (undo-tree-id487 . -542) (undo-tree-id488 . -542) (undo-tree-id489 . -542) (undo-tree-id490 . -548) (undo-tree-id491 . -548) (undo-tree-id492 . -549) (undo-tree-id493 . -549) (undo-tree-id494 . -549) (undo-tree-id495 . -508) (undo-tree-id496 . -550) (undo-tree-id497 . -550) (undo-tree-id498 . -550) (undo-tree-id499 . -550) (undo-tree-id500 . -550) (undo-tree-id501 . -550) (undo-tree-id502 . -550) (undo-tree-id503 . -508) (undo-tree-id504 . -551) (undo-tree-id505 . -551) (undo-tree-id506 . -551) (undo-tree-id507 . -551) (undo-tree-id508 . -552) (undo-tree-id509 . 294) (undo-tree-id510 . -552) (undo-tree-id511 . -552) (undo-tree-id512 . -508) (undo-tree-id513 . -508) (undo-tree-id514 . -508) (undo-tree-id515 . -508) (undo-tree-id516 . -508) (undo-tree-id517 . -508) (undo-tree-id518 . -508) (undo-tree-id519 . -508) (undo-tree-id520 . -508) (undo-tree-id521 . -846) (undo-tree-id522 . -846) (undo-tree-id523 . -846) (undo-tree-id524 . -844) (undo-tree-id525 . -686) (undo-tree-id526 . -498) (undo-tree-id527 . -224) (undo-tree-id528 . -6) (undo-tree-id529 . -846) (undo-tree-id530 . -541) (undo-tree-id531 . -846)) nil (26016 1897 33838 0) 0 nil])
([nil nil ((#("use crate::gpu_buffer::*;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 11 (fontified t) 11 21 (face font-lock-constant-face fontified t) 21 25 (fontified t) 25 26 (fontified t)) . -28) (undo-tree-id842 . -26) (undo-tree-id843 . -26) (undo-tree-id844 . -11) (undo-tree-id845 . -11) (undo-tree-id846 . -11) (undo-tree-id847 . -11) (undo-tree-id848 . -11) (undo-tree-id849 . -11) (undo-tree-id850 . -11) (undo-tree-id851 . -11) (undo-tree-id852 . -11) (undo-tree-id853 . -11) (undo-tree-id854 . -11) (undo-tree-id855 . -11) (undo-tree-id856 . -11) (undo-tree-id857 . -11) (undo-tree-id858 . -11) (undo-tree-id859 . -11) (undo-tree-id860 . -11) (undo-tree-id861 . -11) (undo-tree-id862 . -11) (undo-tree-id863 . -11) (undo-tree-id864 . -11) (undo-tree-id865 . -11) (undo-tree-id866 . -11) (undo-tree-id867 . -11) (undo-tree-id868 . -11) (undo-tree-id869 . -11) (undo-tree-id870 . -24) (undo-tree-id871 . -24) (undo-tree-id872 . -24) (undo-tree-id873 . -24) (undo-tree-id874 . -24) (undo-tree-id875 . -24) (undo-tree-id876 . -24) (undo-tree-id877 . -25) (undo-tree-id878 . -25) (undo-tree-id879 . -24) (undo-tree-id880 . -24) (undo-tree-id881 . -25) (undo-tree-id882 . -25) (undo-tree-id883 . -26) (undo-tree-id884 . -26) (undo-tree-id885 . -24) (undo-tree-id886 . -26) (undo-tree-id887 . -26) (undo-tree-id888 . -26) 54 (t 26016 1897 53716 825000)) nil (26016 6894 797683 0) 0 nil])
([nil nil ((#("
impl BindGroupLayout for LightUniform {
    fn desc(device: &wgpu::Device) -> wgpu::BindGroupLayout {
        let light_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }],
                label: None,
            });
        light_bind_group_layout
    }

}
" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 21 (face font-lock-type-face fontified t) 21 22 (fontified t) 22 25 (face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 38 (face font-lock-type-face fontified t) 38 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (fontified t) 41 45 (fontified t) 45 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 52 (face font-lock-function-name-face fontified t) 52 53 (face (rainbow-delimiters-depth-2-face) fontified t) 53 59 (face font-lock-variable-name-face fontified t) 59 61 (fontified t) 61 62 (face rust-ampersand-face fontified t) 62 66 (face font-lock-constant-face fontified t) 66 68 (fontified t) 68 74 (face font-lock-type-face fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 77 (fontified t) 77 78 (fontified t syntax-table (1)) 78 79 (fontified t) 79 83 (face font-lock-constant-face fontified t) 83 85 (fontified t) 85 100 (face font-lock-type-face fontified t) 100 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-2-face) fontified t) 102 103 (fontified t) 103 111 (fontified t) 111 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 138 (face font-lock-variable-name-face fontified t) 138 141 (fontified t) 141 184 (fontified t) 184 185 (face (rainbow-delimiters-depth-3-face) fontified t) 185 186 (face rust-ampersand-face fontified t) 186 190 (face font-lock-constant-face fontified t) 190 192 (fontified t) 192 217 (face font-lock-type-face fontified t) 217 218 (fontified t) 218 219 (face (rainbow-delimiters-depth-4-face) fontified t) 219 236 (fontified t) 236 243 (face font-lock-variable-name-face fontified t) 243 245 (fontified t) 245 246 (face rust-ampersand-face fontified t) 246 247 (face (rainbow-delimiters-depth-5-face) fontified t) 247 251 (face font-lock-constant-face fontified t) 251 253 (fontified t) 253 273 (face font-lock-type-face fontified t) 273 274 (fontified t) 274 275 (face (rainbow-delimiters-depth-6-face) fontified t) 275 276 (fontified t) 276 296 (fontified t) 296 303 (face font-lock-variable-name-face fontified t) 303 308 (fontified t) 308 328 (fontified t) 328 338 (face font-lock-variable-name-face fontified t) 338 340 (fontified t) 340 344 (face font-lock-constant-face fontified t) 344 346 (fontified t) 346 358 (face font-lock-type-face fontified t) 358 360 (fontified t) 360 366 (face font-lock-type-face fontified t) 366 369 (fontified t) 369 373 (face font-lock-constant-face fontified t) 373 375 (fontified t) 375 387 (face font-lock-type-face fontified t) 387 389 (fontified t) 389 397 (face font-lock-type-face fontified t) 397 399 (fontified t) 399 419 (fontified t) 419 421 (face font-lock-variable-name-face fontified t) 421 423 (fontified t) 423 427 (face font-lock-constant-face fontified t) 427 429 (fontified t) 429 440 (face font-lock-type-face fontified t) 440 442 (fontified t) 442 448 (face font-lock-type-face fontified t) 448 449 (fontified t) 449 450 (face (rainbow-delimiters-depth-7-face) fontified t) 450 475 (fontified t) 475 477 (face font-lock-variable-name-face fontified t) 477 479 (fontified t) 479 483 (face font-lock-constant-face fontified t) 483 485 (fontified t) 485 502 (face font-lock-type-face fontified t) 502 504 (fontified t) 504 511 (face font-lock-type-face fontified t) 511 537 (fontified t) 537 555 (face font-lock-variable-name-face fontified t) 555 557 (fontified t) 557 562 (face font-lock-keyword-face fontified t) 562 588 (fontified t) 588 604 (face font-lock-variable-name-face fontified t) 604 606 (fontified t) 606 610 (face font-lock-type-face fontified t) 610 612 (fontified t) 612 632 (fontified t) 632 633 (face (rainbow-delimiters-depth-7-face) fontified t) 633 635 (fontified t) 635 655 (fontified t) 655 660 (face font-lock-variable-name-face fontified t) 660 662 (fontified t) 662 666 (face font-lock-type-face fontified t) 666 684 (fontified t) 684 685 (face (rainbow-delimiters-depth-6-face) fontified t) 685 686 (face (rainbow-delimiters-depth-5-face) fontified t) 686 704 (fontified t) 704 709 (face font-lock-variable-name-face fontified t) 709 711 (fontified t) 711 715 (face font-lock-type-face fontified t) 715 717 (fontified t) 717 729 (fontified t) 729 730 (face (rainbow-delimiters-depth-4-face) fontified t) 730 731 (face (rainbow-delimiters-depth-3-face) fontified t) 731 741 (fontified t) 741 764 (fontified t) 764 765 (fontified t) 765 769 (fontified t) 769 770 (face (rainbow-delimiters-depth-2-face) fontified t) 770 771 (fontified t) 771 772 (fontified t) 772 773 (face (rainbow-delimiters-depth-1-face) fontified t) 773 774 (fontified t)) . 1653) (undo-tree-id889 . -774) (undo-tree-id890 . -6) (undo-tree-id891 . -111) (undo-tree-id892 . -774) (undo-tree-id893 . -1) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -6) (undo-tree-id898 . -6) (undo-tree-id899 . -6) (undo-tree-id900 . -6) (undo-tree-id901 . -6) (undo-tree-id902 . -6) (undo-tree-id903 . -6) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -774) (undo-tree-id935 . -774) (undo-tree-id936 . -774) (undo-tree-id937 . -773) (undo-tree-id938 . -745) (undo-tree-id939 . -646) (undo-tree-id940 . -461) (undo-tree-id941 . -285) (undo-tree-id942 . -228) (undo-tree-id943 . -148) (undo-tree-id944 . -109) (undo-tree-id945 . -46) (undo-tree-id946 . -45) (undo-tree-id947 . -4) (undo-tree-id948 . -774) (undo-tree-id949 . -774) (t 26016 6894 816018 343000)) nil (26016 6904 572359 0) 0 nil])
([nil nil ((1230 . 1231) (t 26016 6904 590801 993000)) nil (26017 25277 317599 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1230) (undo-tree-id14 . -1) (undo-tree-id15 . 1) (undo-tree-id16 . -1) 1231) nil (26017 25279 142558 0) 0 nil] [nil nil ((1230 . 1234)) ((#("pipl" 0 3 (fontified t) 3 4 (fontified t)) . 1230) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4)) (26017 25276 945255 0) 0 nil])
([nil nil ((554 . 558) (#("    " 0 4 (fontified nil)) . 553) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (552 . 558) (t 26017 25279 190701 567000)) nil (26017 25421 584304 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1233) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1234) ((1233 . 1234)) (26017 25276 512708 0) 0 nil])
([nil nil ((558 . 560)) nil (26017 25421 584299 0) 0 nil])
([nil nil ((1233 . 1234)) ((#("e" 0 1 (fontified t)) . 1233) (undo-tree-id4 . -1)) (26017 25276 512468 0) 0 nil])
([nil nil ((558 . 564) (#("de" 0 2 (fontified nil)) . 558) (558 . 560) (#("device" 0 6 (fontified nil)) . -558) (558 . 564) (#("de" 0 2 (fontified t)) . -558) (undo-tree-id167 . -2) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -2) (undo-tree-id171 . -2) 560) nil (26017 25421 584297 0) 0 nil])
nil
([nil nil ((564 . 571)) nil (26017 25421 584290 0) 0 nil])
([nil nil ((571 . 573)) nil (26017 25421 584289 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -572) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 573) nil (26017 25421 584288 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 579 583 nil nil nil nil #s(yas--exit 584 nil))) #s(yas--exit 584 nil) 1 nil #s(yas--field 1 579 583 nil nil nil nil #s(yas--exit 584 nil)) nil nil)) (565 . 584) (#("create_buffer(${1:desc})$0" 0 26 (fontified nil)) . 565) (565 . 591) (#("create_" 0 7 (fontified nil)) . 565) (565 . 572) (#("create_buffer(…)" 0 16 (fontified nil)) . -565) (565 . 581) (#("create_" 0 7 (fontified t)) . -565) (undo-tree-id131 . -7) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) 572) nil (26017 25421 584281 0) 0 nil])
([nil nil ((apply yas--snippet-revive 565 584 #s(yas--snippet nil (#s(yas--field 1 579 583 nil nil nil nil #s(yas--exit 584 nil))) #s(yas--exit 584 nil) 1 nil #s(yas--field 1 579 583 nil nil nil nil #s(yas--exit 584 nil)) nil nil))) nil (26017 25421 584242 0) 0 nil])
([nil nil ((#("    device.create_buffer(desc)
" 0 4 (fontified t) 4 11 (fontified t) 11 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-2-face) fontified t) 25 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (fontified t)) . -554) (undo-tree-id19 . -20) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -11) (undo-tree-id32 . -11) (undo-tree-id33 . -11) (undo-tree-id34 . -11) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -11) (undo-tree-id41 . -11) (undo-tree-id42 . -11) (undo-tree-id43 . -11) (undo-tree-id44 . -11) (undo-tree-id45 . -11) (undo-tree-id46 . -11) (undo-tree-id47 . -11) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (undo-tree-id56 . -11) (undo-tree-id57 . -11) (undo-tree-id58 . -11) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -11) (undo-tree-id63 . -11) (undo-tree-id64 . -30) (undo-tree-id65 . -30) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -25) (undo-tree-id69 . -25) (undo-tree-id70 . -25) (undo-tree-id71 . -25) (undo-tree-id72 . -25) (undo-tree-id73 . -25) (undo-tree-id74 . -25) (undo-tree-id75 . -25) (undo-tree-id76 . -25) (undo-tree-id77 . -25) (undo-tree-id78 . -20) (undo-tree-id79 . -31) (undo-tree-id80 . -31) (undo-tree-id81 . -20) (undo-tree-id82 . -20) (undo-tree-id83 . -20) (undo-tree-id84 . -20) (undo-tree-id85 . -20) (undo-tree-id86 . -20) (undo-tree-id87 . -20) (undo-tree-id88 . -20) (undo-tree-id89 . -20) (undo-tree-id90 . -20) (undo-tree-id91 . -20) (undo-tree-id92 . -20) (undo-tree-id93 . -20) (undo-tree-id94 . -20) (undo-tree-id95 . -20) (undo-tree-id96 . -20) (undo-tree-id97 . -20) (undo-tree-id98 . -20) (undo-tree-id99 . -20) (undo-tree-id100 . -20) (undo-tree-id101 . -20) (undo-tree-id102 . -20) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -20) (undo-tree-id108 . -20) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -25) (undo-tree-id112 . -25) (undo-tree-id113 . -25) (undo-tree-id114 . -25) (undo-tree-id115 . -25) (undo-tree-id116 . -25) (undo-tree-id117 . -25) (undo-tree-id118 . -29) (undo-tree-id119 . -29) (undo-tree-id120 . -25) (undo-tree-id121 . -20) (undo-tree-id122 . -25) (undo-tree-id123 . -29) (undo-tree-id124 . -29) (undo-tree-id125 . -31) (undo-tree-id126 . -31) (undo-tree-id127 . -25) (undo-tree-id128 . -31) (undo-tree-id129 . -31) (undo-tree-id130 . -31) 585) nil (26017 25421 584236 0) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -554) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 555) nil (26017 25421 584118 0) 0 nil])
nil
