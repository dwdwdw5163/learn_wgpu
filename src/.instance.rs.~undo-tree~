(undo-tree-save-format-version . 1)
"d338473d174f3c5c36596e8a17b2bb44bb0d666a"
[nil nil nil nil (26014 12485 288743 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 121 . 122) (nil fontified nil 1 . 122) (1 . 122) (t 26014 12449 653935 227000)) nil (26014 12485 288742 0) 0 nil])
([nil nil ((#("// lib.rs" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t)) . 1) (undo-tree-id12 . -9)) nil (26014 12485 288740 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id11 . -1)) nil (26014 12485 288738 0) 0 nil])
([nil nil ((#("// ..." 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t)) . 1) (undo-tree-id10 . -6)) nil (26014 12485 288736 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id9 . -1)) nil (26014 12485 288733 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id8 . -1)) nil (26014 12485 288731 0) 0 nil])
([nil nil ((#("// NEW!" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t)) . 1) (undo-tree-id7 . -7)) nil (26014 12485 288729 0) 0 nil])
([nil nil ((1 . 2)) nil (26014 12485 368223 0) 0 nil])
([nil nil ((3 . 6)) nil (26014 12511 29342 0) 0 nil] [nil nil ((3 . 7)) ((#("pub " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . 3) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4)) (26014 12485 289359 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -5) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 6) nil (26014 12511 29341 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 7) (7 . 11) (7 . 8) (#(" " 0 1 (fontified nil)) . 6) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (7 . 8)) ((#("
" 0 1 (fontified nil)) . 7) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (6 . 7) (#("
" 0 1 (fontified nil)) . 7) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("    " 0 4 (fontified nil)) . 7) (7 . 11)) (26014 12485 288722 0) 0 nil])
([nil nil ((5 . 7)) nil (26014 12511 29333 0) 0 nil])
nil
([nil nil ((102 . 104)) nil (26014 12511 29332 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 229 . 230) (nil fontified nil 104 . 230) (104 . 230)) nil (26014 12511 29331 0) 0 nil])
([nil nil ((#("// NEW!" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t)) . 104) (undo-tree-id36 . -7)) nil (26014 12511 29329 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 104) (undo-tree-id35 . -1)) nil (26014 12511 29327 0) 0 nil])
([nil nil ((102 . 103)) nil (26014 12511 29325 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 321 . 322) (nil fontified nil 103 . 322) (103 . 322)) nil (26014 12511 29324 0) 0 nil])
([nil nil ((#("// NEW!" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t)) . 103) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7)) nil (26014 12511 29322 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 103) (undo-tree-id26 . -1)) nil (26014 12511 29312 0) 0 nil])
([nil nil ((103 . 104)) nil (26014 12511 29301 0) 0 nil])
([nil nil ((99 . 104) (t 26014 12511 33640 783000)) nil (26014 12526 767831 0) 0 nil])
([nil nil ((104 . 116)) nil (26014 12526 767830 0) 0 nil])
([nil nil ((113 . 119) (#("cgm" 0 3 (fontified nil)) . 113) (113 . 116) (#("cgmath" 0 6 (fontified nil)) . -113) (113 . 119) (#("cgm" 0 3 (fontified t)) . -113) (undo-tree-id52 . -3) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -3) (undo-tree-id59 . -3) 116) nil (26014 12526 767828 0) 0 nil])
([nil nil ((119 . 122)) nil (26014 12526 767818 0) 0 nil])
([nil nil ((apply yas--snippet-revive 121 130 #s(yas--snippet nil nil #s(yas--exit 129 nil) 85 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 129 nil) 85 nil nil nil nil)) (121 . 130) (#("Vector3<$0>" 0 11 (fontified nil)) . 121) (121 . 132) (#("V" 0 1 (fontified nil)) . 121) (121 . 122) (#("Vector3<…>" 0 10 (fontified nil)) . -121) (121 . 131) (#("V" 0 1 (face font-lock-type-face fontified t)) . -121) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 122) nil (26014 12526 767815 0) 0 nil])
([nil nil ((129 . 132)) nil (26014 12526 767798 0) 0 nil])
([nil nil ((133 . 134)) nil (26014 12552 487203 0) 0 nil])
([nil nil ((284 . 304) (#(" " 0 1 (fontified nil)) . 283) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (284 . 285) (t 26014 12526 773799 744000)) nil (26014 12607 861346 0) 0 nil] [nil nil ((234 . 235) (t 26014 12526 773799 744000)) ((#(" " 0 1 (fontified t)) . 234) (undo-tree-id60 . -1)) (26014 12552 486738 0) 0 nil])
([nil nil ((342 . 355)) nil (26014 12607 861341 0) 0 nil])
nil
([nil nil ((344 . 356) (#("                    " 0 20 (fontified nil)) . 343) (343 . 363) (#("            " 0 12 (fontified nil)) . 343) (undo-tree-id142 . -12) (355 . 356)) nil (26014 12607 861339 0) 0 nil])
([nil nil ((343 . 363)) nil (26014 12607 861336 0) 0 nil])
([nil nil ((363 . 367)) nil (26014 12607 861335 0) 0 nil])
([nil nil ((365 . 371) (#("cg" 0 2 (fontified nil)) . 365) (365 . 367) (#("cgmath" 0 6 (fontified nil)) . -365) (365 . 371) (#("cg" 0 2 (fontified t)) . -365) (undo-tree-id141 . -2) 367) nil (26014 12607 861334 0) 0 nil])
([nil nil ((371 . 374)) nil (26014 12607 861330 0) 0 nil])
([nil nil ((373 . 380) (#("M" 0 1 (fontified nil)) . 373) (373 . 374) (#("Matrix4" 0 7 (fontified nil)) . -373) (373 . 380) (#("M" 0 1 (face font-lock-type-face fontified t)) . -373) (undo-tree-id140 . -1) 374) nil (26014 12607 861329 0) 0 nil])
([nil nil ((380 . 386)) nil (26014 12607 861325 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 404 405 nil nil nil nil #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil)))) #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil))) #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil))) #s(yas--exit 412 nil) 86 nil #s(yas--field 1 404 405 nil nil nil nil #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil)))) nil nil)) (382 . 412) (#("from_nonuniform_scale(${1:x}, ${2:y}, ${3:z})$0" 0 47 (fontified nil)) . 382) (382 . 429) (#("from" 0 4 (fontified nil)) . 382) (382 . 386) (#("from_nonuniform_scale(…)" 0 24 (fontified nil)) . -382) (382 . 406) (#("from" 0 4 (fontified t)) . -382) (undo-tree-id139 . -4) 386) nil (26014 12607 861323 0) 0 nil])
([nil nil ((apply yas--snippet-revive 382 412 #s(yas--snippet nil (#s(yas--field 1 404 405 nil nil nil nil #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil)))) #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil))) #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil))) #s(yas--exit 412 nil) 86 nil #s(yas--field 1 404 405 nil nil nil nil #s(yas--field 2 407 408 nil nil nil nil #s(yas--field 3 410 411 nil nil nil nil #s(yas--exit 412 nil)))) nil nil))) nil (26014 12607 861319 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -404) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("," 0 1 (fontified t)) . -405) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#(" " 0 1 (fontified t)) . -406) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("y" 0 1 (fontified t)) . -407) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("," 0 1 (fontified t)) . -408) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -409) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("z" 0 1 (fontified t)) . -410) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 411) nil (26014 12607 861316 0) 0 nil])
([nil nil ((404 . 407)) nil (26014 12607 861301 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -406) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 407) nil (26014 12607 861299 0) 0 nil])
([nil nil ((406 . 409)) nil (26014 12607 861296 0) 0 nil])
([nil nil ((409 . 411)) nil (26014 12607 861295 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -409) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("o" 0 1 (fontified t)) . -410) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 411) nil (26014 12607 861293 0) 0 nil])
([nil nil ((409 . 410)) nil (26014 12607 861288 0) 0 nil])
([nil nil ((409 . 416) (#("s" 0 1 (fontified nil)) . 409) (409 . 410) (#("scaling" 0 7 (fontified nil)) . -409) (409 . 416) (#("s" 0 1 (fontified t)) . -409) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 410) nil (26014 12607 861286 0) 0 nil])
([nil nil ((416 . 417)) nil (26014 12607 861281 0) 0 nil])
([nil nil ((417 . 418) (#("x" 0 1 (fontified nil)) . -417) (417 . 418)) nil (26014 12607 861280 0) 0 nil])
([nil nil ((418 . 419)) nil (26014 12607 861279 0) 0 nil])
([nil nil ((404 . 429)) nil (26014 12607 861278 0) 0 nil])
([nil nil ((446 . 466) (#("                        " 0 24 (fontified nil)) . 445) (445 . 469) (#("                    " 0 20 (fontified nil)) . 445) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (444 . 466)) nil (26014 12607 861276 0) 0 nil])
([nil nil ((445 . 469)) nil (26014 12607 861270 0) 0 nil])
([nil nil ((469 . 472)) nil (26014 12607 861269 0) 0 nil])
([nil nil ((469 . 473) (#("sel" 0 3 (fontified nil)) . 469) (469 . 472) (#("self" 0 4 (fontified nil)) . -469) (469 . 473) (#("sel" 0 3 (fontified t)) . -469) (undo-tree-id113 . -3) (undo-tree-id114 . -3) 472) nil (26014 12607 861267 0) 0 nil])
([nil nil ((473 . 475)) nil (26014 12607 861262 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -474) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 475) nil (26014 12607 861261 0) 0 nil])
([nil nil ((474 . 476)) nil (26014 12607 861258 0) 0 nil])
([nil nil ((474 . 481) (#("sc" 0 2 (fontified nil)) . 474) (474 . 476) (#("scaling" 0 7 (fontified nil)) . -474) (474 . 481) (#("sc" 0 2 (fontified t)) . -474) (undo-tree-id109 . -2) (undo-tree-id110 . -2) 476) nil (26014 12607 861256 0) 0 nil])
([nil nil ((481 . 483)) nil (26014 12607 861252 0) 0 nil])
([nil nil ((482 . 483) (#("y" 0 1 (fontified nil)) . 482) (482 . 483) (#("y" 0 1 (fontified t)) . -482) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 483) nil (26014 12607 861250 0) 0 nil])
([nil nil ((483 . 484)) nil (26014 12607 861244 0) 0 nil])
([nil nil ((484 . 509)) nil (26014 12607 861243 0) 0 nil])
([nil nil ((509 . 512)) nil (26014 12607 861242 0) 0 nil])
([nil nil ((509 . 513) (#("sel" 0 3 (fontified nil)) . 509) (509 . 512) (#("self" 0 4 (fontified nil)) . -509) (509 . 513) (#("sel" 0 3 (fontified t)) . -509) (undo-tree-id88 . -3) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) 512) nil (26014 12607 861240 0) 0 nil])
([nil nil ((513 . 514)) nil (26014 12607 861217 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -513) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 514) nil (26014 12607 861216 0) 0 nil])
([nil nil ((513 . 515)) nil (26014 12607 861210 0) 0 nil])
([nil nil ((514 . 521) (#("s" 0 1 (fontified nil)) . 514) (514 . 515) (#("scaling" 0 7 (fontified nil)) . -514) (514 . 521) (#("s" 0 1 (fontified t)) . -514) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 515) nil (26014 12607 861208 0) 0 nil])
([nil nil ((521 . 523)) nil (26014 12607 861198 0) 0 nil])
([nil nil ((522 . 523) (#("z" 0 1 (fontified nil)) . 522) (522 . 523) (#("z" 0 1 (fontified t)) . -522) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 523) nil (26014 12607 861197 0) 0 nil])
([nil nil ((523 . 524)) nil (26014 12607 861188 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -523) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 524) nil (26014 12607 861180 0) 0 nil])
([nil nil ((235 . 252) (t 26014 12607 867680 195000)) nil (26014 12651 699488 0) 0 nil])
([nil nil ((300 . 303)) nil (26014 12651 699486 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -301) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("u" 0 1 (fontified t)) . -302) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) 303) nil (26014 12651 699484 0) 0 nil])
([nil nil ((301 . 304)) nil (26014 12651 699457 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -300) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("m" 0 1 (fontified t)) . -301) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("u" 0 1 (fontified t)) . -302) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("l" 0 1 (fontified t)) . -303) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 304) nil (26014 12651 699450 0) 0 nil])
([nil nil ((159 . 163) (t 26014 12651 705883 517000)) nil (26014 12693 786912 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 69) (72 . 73) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (32 . 33) (apply deactivate-cursor-after-undo 68) (113 . 114) (apply activate-cursor-for-undo 69) (70 . 71) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (31 . 32) (apply deactivate-cursor-after-undo 68) (110 . 111) (apply activate-cursor-for-undo 69) (68 . 69) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (30 . 31) (apply deactivate-cursor-after-undo 68) (107 . 108) (apply activate-cursor-for-undo 69) (66 . 67) (apply deactivate-cursor-after-undo 69) (apply activate-cursor-for-undo 68) (29 . 30) (apply deactivate-cursor-after-undo 68) (104 . 105)) nil (26014 12693 786907 0) 0 nil])
([nil nil ((618 . 622) (#("    " 0 4 (fontified nil)) . 617) (undo-tree-id289 . -4) (616 . 622) (t 26014 12693 793663 997000)) nil (26014 12771 136738 0) 0 nil])
([nil nil ((622 . 643)) nil (26014 12771 136735 0) 0 nil])
([nil nil ((643 . 653)) nil (26014 12771 136734 0) 0 nil])
([nil nil ((652 . 654)) nil (26014 12771 136733 0) 0 nil])
([nil nil ((654 . 657)) nil (26014 12771 136732 0) 0 nil])
([nil nil ((658 . 664)) nil (26014 12771 136731 0) 0 nil])
([nil nil ((662 . 666) (#("wg" 0 2 (fontified nil)) . 662) (662 . 664) (#("wgpu" 0 4 (fontified nil)) . -662) (662 . 666) (#("wg" 0 2 (fontified t)) . -662) (undo-tree-id288 . -2) 664) nil (26014 12771 136730 0) 0 nil])
([nil nil ((666 . 672)) nil (26014 12771 136726 0) 0 nil])
([nil nil ((668 . 674) (#("Buff" 0 4 (fontified nil)) . 668) (668 . 672) (#("Buffer" 0 6 (fontified nil)) . -668) (668 . 674) (#("Buff" 0 4 (face font-lock-type-face fontified t)) . -668) (undo-tree-id287 . -4) 672) nil (26014 12771 136725 0) 0 nil])
([nil nil ((674 . 677)) nil (26014 12771 136721 0) 0 nil])
([nil nil ((678 . 682) (#("        " 0 8 (fontified nil)) . 677) (677 . 685) (#("    " 0 4 (fontified nil)) . 677) (undo-tree-id286 . -4) (676 . 682)) nil (26014 12771 136720 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 890 . 891) (nil fontified nil 677 . 891) (677 . 891)) nil (26014 12771 136717 0) 0 nil])
([nil nil ((937 . 945) (923 . 935) (#("    " 0 4 (fontified t)) . 923) (872 . 888) (#("        " 0 8 (fontified t)) . 872) (808 . 824) (#("        " 0 8 (fontified t)) . 808) (760 . 776) (#("        " 0 8 (fontified t)) . 760) (712 . 724) (#("    " 0 4 (fontified t)) . 712) (677 . 685) 618) nil (26014 12771 136714 0) 0 nil])
([nil nil ((685 . 706)) nil (26014 12771 136710 0) 0 nil])
([nil nil ((706 . 707)) nil (26014 12771 136709 0) 0 nil])
([nil nil ((969 . 978)) nil (26014 12771 136708 0) 0 nil])
([nil nil ((978 . 979)) nil (26014 12771 136707 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -978) (undo-tree-id285 . -1) 979) nil (26014 12771 136706 0) 0 nil])
([nil nil ((978 . 980)) nil (26014 12771 136704 0) 0 nil])
([nil nil ((apply yas--snippet-revive 978 988 #s(yas--snippet nil nil #s(yas--exit 987 nil) 87 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 987 nil) 87 nil nil nil nil)) (978 . 988) (#("include!($0)" 0 12 (fontified nil)) . 978) (978 . 990) (#("in" 0 2 (fontified nil)) . 978) (978 . 980) (#("include!(…)" 0 11 (fontified nil)) . -978) (978 . 989) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -978) (undo-tree-id284 . -2) 980) nil (26014 12771 136702 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -986) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 987) nil (26014 12771 136697 0) 0 nil])
([nil nil ((#("include!" 0 8 (fontified t)) . -978) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) 986) nil (26014 12771 136692 0) 0 nil])
([nil nil ((#("        )" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-mismatched-face) fontified t)) . 970) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -9)) nil (26014 12771 136684 0) 0 nil])
([nil nil ((970 . 978)) nil (26014 12771 136671 0) 0 nil])
([nil nil ((978 . 982)) nil (26014 12771 136669 0) 0 nil])
([nil nil ((978 . 993) (#("inst" 0 4 (fontified nil)) . 978) (978 . 982) (#("instance_buffer" 0 15 (fontified nil)) . -978) (978 . 993) (#("inst" 0 4 (fontified t)) . -978) (undo-tree-id251 . -4) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -4) (undo-tree-id262 . -4) 982) nil (26014 12771 136665 0) 0 nil])
([nil nil ((657 . 658) (t 26014 12771 143606 602000)) nil (26014 12785 414208 0) 0 nil])
([nil nil ((658 . 664)) nil (26014 12785 414207 0) 0 nil])
([nil nil ((664 . 669)) nil (26014 12785 414205 0) 0 nil])
([nil nil ((668 . 672) (#("w" 0 1 (fontified nil)) . 668) (668 . 669) (#("wgpu" 0 4 (fontified nil)) . -668) (668 . 672) (#("w" 0 1 (fontified t)) . -668) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) 669) nil (26014 12785 414203 0) 0 nil])
([nil nil ((672 . 680)) nil (26014 12785 414194 0) 0 nil])
([nil nil ((674 . 680) (#("Device" 0 6 (fontified nil)) . 674) (674 . 680) (#("Device" 0 6 (face font-lock-type-face fontified t)) . -674) (undo-tree-id290 . -6) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -6) (undo-tree-id305 . -6) 680) nil (26014 12785 414187 0) 0 nil])
([nil nil ((#("    pub fn create_instance_buffer(&self, device: &wgpu::Device) -> wgpu::Buffer {
        let instance_buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label: Some(\"Instance Buffer\"),
                contents: bytemuck::cast_slice(&instance_data),
                usage: wgpu::BufferUsages::VERTEX,
            }
        );
        instance_buffer
    }" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 33 (face font-lock-function-name-face fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face rust-ampersand-face fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 41 (fontified t) 41 47 (face font-lock-variable-name-face fontified t) 47 49 (fontified t) 49 50 (face rust-ampersand-face fontified t) 50 54 (face font-lock-constant-face fontified t) 54 56 (fontified t) 56 62 (face font-lock-type-face fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t) 63 65 (fontified t) 65 66 (syntax-table (1) fontified t) 66 67 (fontified t) 67 71 (face font-lock-constant-face fontified t) 71 73 (fontified t) 73 79 (face font-lock-type-face fontified t) 79 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 82 (fontified t) 82 90 (fontified t) 90 93 (face font-lock-keyword-face fontified t) 93 94 (fontified t) 94 109 (face font-lock-variable-name-face fontified t) 109 112 (fontified t) 112 118 (fontified t) 118 137 (fontified t) 137 138 (face (rainbow-delimiters-depth-3-face) fontified t) 138 139 (fontified t) 139 151 (fontified t) 151 152 (face rust-ampersand-face fontified t) 152 156 (face font-lock-constant-face fontified t) 156 158 (fontified t) 158 162 (face font-lock-constant-face fontified t) 162 164 (fontified t) 164 184 (face font-lock-type-face fontified t) 184 185 (fontified t) 185 186 (face (rainbow-delimiters-depth-4-face) fontified t) 186 203 (fontified t) 203 208 (face font-lock-variable-name-face fontified t) 208 210 (fontified t) 210 214 (face font-lock-type-face fontified t) 214 215 (face (rainbow-delimiters-depth-5-face) fontified t) 215 232 (face font-lock-string-face fontified t) 232 233 (face (rainbow-delimiters-depth-5-face) fontified t) 233 251 (fontified t) 251 259 (face font-lock-variable-name-face fontified t) 259 261 (fontified t) 261 269 (face font-lock-constant-face fontified t) 269 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-5-face) fontified t) 282 283 (face rust-ampersand-face fontified t) 283 296 (fontified t) 296 297 (face (rainbow-delimiters-depth-5-face) fontified t) 297 315 (fontified t) 315 320 (face font-lock-variable-name-face fontified t) 320 322 (fontified t) 322 326 (face font-lock-constant-face fontified t) 326 328 (fontified t) 328 340 (face font-lock-type-face fontified t) 340 342 (fontified t) 342 348 (face font-lock-type-face fontified t) 348 362 (fontified t) 362 363 (face (rainbow-delimiters-depth-4-face) fontified t) 363 364 (fontified t) 364 372 (fontified t) 372 373 (face (rainbow-delimiters-depth-3-face) fontified t) 373 374 (fontified t rear-nonsticky t) 374 375 (fontified t) 375 383 (fontified t) 383 398 (fontified t) 398 399 (fontified t) 399 403 (fontified t) 403 404 (face (rainbow-delimiters-depth-2-face) fontified t)) . 618) (undo-tree-id512 . -404) (undo-tree-id513 . -82) (undo-tree-id514 . -39) (undo-tree-id515 . -50) (undo-tree-id516 . -50) (undo-tree-id517 . -50) (undo-tree-id518 . -50) (undo-tree-id519 . -50) (undo-tree-id520 . -56) (undo-tree-id521 . -56) (undo-tree-id522 . -56) (undo-tree-id523 . -56) (undo-tree-id524 . -56) (undo-tree-id525 . -56) (undo-tree-id526 . -56) (undo-tree-id527 . -56) (undo-tree-id528 . -56) (undo-tree-id529 . -56) (undo-tree-id530 . -56) (undo-tree-id531 . -56) (undo-tree-id532 . -56) (undo-tree-id533 . -56) (undo-tree-id534 . -56) (undo-tree-id535 . -62) (undo-tree-id536 . -62) (undo-tree-id537 . -62) (undo-tree-id538 . -62) (undo-tree-id539 . -62) (undo-tree-id540 . -62) (undo-tree-id541 . -62) (undo-tree-id542 . -62) (undo-tree-id543 . -62) (undo-tree-id544 . -62) (undo-tree-id545 . -62) (undo-tree-id546 . -62) (undo-tree-id547 . -62) (undo-tree-id548 . -62) (undo-tree-id549 . -62) (undo-tree-id550 . -62) (undo-tree-id551 . -62) (undo-tree-id552 . -62) (undo-tree-id553 . -62) (undo-tree-id554 . -62) (undo-tree-id555 . -62) (undo-tree-id556 . -62) (undo-tree-id557 . -62) (undo-tree-id558 . -62) (undo-tree-id559 . -62) (undo-tree-id560 . -62) (undo-tree-id561 . -62) (undo-tree-id562 . -62) (undo-tree-id563 . -62) (undo-tree-id564 . -62) (undo-tree-id565 . -62) (undo-tree-id566 . -62) (undo-tree-id567 . -62) (undo-tree-id568 . -62) (undo-tree-id569 . -62) (undo-tree-id570 . -62) (undo-tree-id571 . -62) (undo-tree-id572 . -62) (undo-tree-id573 . -62) (undo-tree-id574 . -62) (undo-tree-id575 . -62) (undo-tree-id576 . -404) (undo-tree-id577 . -404) (undo-tree-id578 . -404) (undo-tree-id579 . -381) (undo-tree-id580 . -369) (undo-tree-id581 . -303) (undo-tree-id582 . -238) (undo-tree-id583 . -189) (undo-tree-id584 . -140) (undo-tree-id585 . -139) (undo-tree-id586 . -374) (undo-tree-id587 . -404) (t 26014 12785 420786 364000)) nil (26014 12872 275564 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -616) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("
" 0 1 (fontified t)) . -617) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 618) nil (26014 12872 275468 0) 0 nil])
([nil nil ((739 . 740) (t 26014 12872 283220 905000)) nil (26014 12947 153145 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2595 . 2596) (nil fontified nil 740 . 2596) (740 . 2596)) nil (26014 12947 153144 0) 0 nil])
([nil nil ((763 . 767)) nil (26014 12947 153142 0) 0 nil])
([nil nil ((715 . 719)) nil (26014 12947 153141 0) 0 nil])
([nil nil ((690 . 694)) nil (26014 12947 153136 0) 0 nil])
([nil nil ((619 . 620) (t 26014 12947 161397 415000)) nil (26014 13156 961814 0) 0 nil])
([nil nil ((2609 . 2611)) nil (26014 13156 961813 0) 0 nil])
([nil nil ((2611 . 2618)) nil (26014 13156 961812 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2614) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#(" " 0 1 (fontified t)) . -2615) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("f" 0 1 (fontified t)) . -2616) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("b" 0 1 (fontified t)) . -2617) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 2618) nil (26014 13156 961809 0) 0 nil])
([nil nil ((2614 . 2618)) nil (26014 13156 961787 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2616) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#(" " 0 1 (fontified t)) . -2617) (undo-tree-id609 . -1) (undo-tree-id610 . -1) 2618) nil (26014 13156 961785 0) 0 nil])
([nil nil ((2616 . 2637)) nil (26014 13156 961777 0) 0 nil])
([nil nil ((2637 . 2640)) nil (26014 13156 961776 0) 0 nil])
([nil nil ((2640 . 2649)) nil (26014 13156 961775 0) 0 nil])
([nil nil ((2646 . 2650) (#("wgp" 0 3 (fontified nil)) . 2646) (2646 . 2649) (#("wgpu" 0 4 (fontified nil)) . -2646) (2646 . 2650) (#("wgp" 0 3 (fontified t)) . -2646) (undo-tree-id598 . -3) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -2) (undo-tree-id602 . -3) (undo-tree-id603 . -3) 2649) nil (26014 13156 961773 0) 0 nil])
([nil nil ((2650 . 2653)) nil (26014 13156 961763 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2652) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) 2653) nil (26014 13156 961762 0) 0 nil])
([nil nil ((2652 . 2655)) nil (26014 13156 961757 0) 0 nil])
([nil nil ((2652 . 2658) (#("Buf" 0 3 (fontified nil)) . 2652) (2652 . 2655) (#("Buffer" 0 6 (fontified nil)) . -2652) (2652 . 2658) (#("Buf" 0 3 (face font-lock-type-face fontified t)) . -2652) (undo-tree-id588 . -3) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -2) (undo-tree-id592 . -3) (undo-tree-id593 . -3) 2655) nil (26014 13156 961754 0) 0 nil])
([nil nil ((2658 . 2661)) nil (26014 13156 961739 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 2662) (2662 . 2666) (2662 . 2663) (#("    " 0 4 (fontified nil)) . 2661) (2661 . 2665) (2660 . 2662)) nil (26014 13156 962826 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2896 . 2897) (nil fontified nil 2661 . 2897) (2661 . 2897)) nil (26014 13194 429729 0) 0 nil] [nil nil ((nil rear-nonsticky nil 4516 . 4517) (nil fontified nil 2661 . 4517) (2661 . 4517)) ((#("impl InstanceRaw {
    fn desc() -> wgpu::VertexBufferLayout<'static> {
        use std::mem;
        wgpu::VertexBufferLayout {
            array_stride: mem::size_of::<InstanceRaw>() as wgpu::BufferAddress,
            // We need to switch from using a step mode of Vertex to Instance
            // This means that our shaders will only change to use the next
            // instance when the shader starts processing a new instance
            step_mode: wgpu::VertexStepMode::Instance,
            attributes: &[
                // A mat4 takes up 4 vertex slots as it is technically 4 vec4s. We need to define a slot
                // for each vec4. We'll have to reassemble the mat4 in the shader.
                wgpu::VertexAttribute {
                    offset: 0,
                    // While our vertex shader only uses locations 0, and 1 now, in later tutorials, we'll
                    // be using 2, 3, and 4, for Vertex. We'll start at slot 5, not conflict with them later
                    shader_location: 5,
                    format: wgpu::VertexFormat::Float32x4,
                },
                wgpu::VertexAttribute {
                    offset: mem::size_of::<[f32; 4]>() as wgpu::BufferAddress,
                    shader_location: 6,
                    format: wgpu::VertexFormat::Float32x4,
                },
                wgpu::VertexAttribute {
                    offset: mem::size_of::<[f32; 8]>() as wgpu::BufferAddress,
                    shader_location: 7,
                    format: wgpu::VertexFormat::Float32x4,
                },
                wgpu::VertexAttribute {
                    offset: mem::size_of::<[f32; 12]>() as wgpu::BufferAddress,
                    shader_location: 8,
                    format: wgpu::VertexFormat::Float32x4,
                },
            ],
        }
    }
}
" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 16 (face font-lock-type-face fontified nil) 16 17 (fontified nil) 17 18 (face (rainbow-delimiters-depth-2-face) fontified nil) 18 23 (fontified nil) 23 25 (face font-lock-keyword-face fontified nil) 25 26 (fontified nil) 26 30 (face font-lock-function-name-face fontified nil) 30 31 (face (rainbow-delimiters-depth-3-face) fontified nil) 31 32 (face (rainbow-delimiters-depth-3-face) fontified nil) 32 34 (fontified nil) 34 35 (syntax-table (1) fontified nil) 35 36 (fontified nil) 36 40 (face font-lock-constant-face fontified nil) 40 42 (fontified nil) 42 60 (face font-lock-type-face fontified nil) 60 61 (face (rainbow-delimiters-depth-3-face) fontified nil) 61 62 (fontified nil) 62 68 (face font-lock-keyword-face fontified nil) 68 69 (face (rainbow-delimiters-depth-3-face) fontified nil) 69 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-3-face) fontified nil) 71 80 (fontified nil) 80 83 (face font-lock-keyword-face fontified nil) 83 84 (fontified nil) 84 87 (face font-lock-constant-face fontified nil) 87 102 (fontified nil) 102 106 (face font-lock-constant-face fontified nil) 106 108 (fontified nil) 108 126 (face font-lock-type-face fontified nil) 126 127 (fontified nil) 127 128 (face (rainbow-delimiters-depth-4-face) fontified nil) 128 141 (fontified nil) 141 153 (face font-lock-variable-name-face fontified nil) 153 155 (fontified nil) 155 158 (face font-lock-constant-face fontified nil) 158 169 (fontified nil) 169 170 (face (rainbow-delimiters-depth-5-face) fontified nil) 170 181 (face font-lock-type-face fontified nil) 181 182 (face (rainbow-delimiters-depth-5-face) fontified nil) 182 183 (face (rainbow-delimiters-depth-5-face) fontified nil) 183 184 (face (rainbow-delimiters-depth-5-face) fontified nil) 184 185 (fontified nil) 185 187 (face font-lock-keyword-face fontified nil) 187 188 (fontified nil) 188 192 (face font-lock-constant-face fontified nil) 192 194 (fontified nil) 194 207 (face font-lock-type-face fontified nil) 207 221 (fontified nil) 221 224 (face font-lock-comment-delimiter-face fontified nil) 224 287 (face font-lock-comment-face fontified nil) 287 299 (fontified nil) 299 302 (face font-lock-comment-delimiter-face fontified nil) 302 363 (face font-lock-comment-face fontified nil) 363 375 (fontified nil) 375 378 (face font-lock-comment-delimiter-face fontified nil) 378 436 (face font-lock-comment-face fontified nil) 436 448 (fontified nil) 448 457 (face font-lock-variable-name-face fontified nil) 457 459 (fontified nil) 459 463 (face font-lock-constant-face fontified nil) 463 465 (fontified nil) 465 479 (face font-lock-type-face fontified nil) 479 481 (fontified nil) 481 489 (face font-lock-type-face fontified nil) 489 503 (fontified nil) 503 513 (face font-lock-variable-name-face fontified nil) 513 515 (fontified nil) 515 516 (face rust-ampersand-face fontified nil) 516 517 (face (rainbow-delimiters-depth-5-face) fontified nil) 517 534 (fontified nil) 534 537 (face font-lock-comment-delimiter-face fontified nil) 537 623 (face font-lock-comment-face fontified nil) 623 639 (fontified nil) 639 642 (face font-lock-comment-delimiter-face fontified nil) 642 706 (face font-lock-comment-face fontified nil) 706 722 (fontified nil) 722 726 (face font-lock-constant-face fontified nil) 726 728 (fontified nil) 728 743 (face font-lock-type-face fontified nil) 743 744 (fontified nil) 744 745 (face (rainbow-delimiters-depth-6-face) fontified nil) 745 766 (fontified nil) 766 772 (face font-lock-variable-name-face fontified nil) 772 797 (fontified nil) 797 800 (face font-lock-comment-delimiter-face fontified nil) 800 884 (face font-lock-comment-face fontified nil) 884 904 (fontified nil) 904 907 (face font-lock-comment-delimiter-face fontified nil) 907 993 (face font-lock-comment-face fontified nil) 993 1013 (fontified nil) 1013 1028 (face font-lock-variable-name-face fontified nil) 1028 1053 (fontified nil) 1053 1059 (face font-lock-variable-name-face fontified nil) 1059 1061 (fontified nil) 1061 1065 (face font-lock-constant-face fontified nil) 1065 1067 (fontified nil) 1067 1079 (face font-lock-type-face fontified nil) 1079 1081 (fontified nil) 1081 1090 (face font-lock-type-face fontified nil) 1090 1108 (fontified nil) 1108 1109 (face (rainbow-delimiters-depth-6-face) fontified nil) 1109 1127 (fontified nil) 1127 1131 (face font-lock-constant-face fontified nil) 1131 1133 (fontified nil) 1133 1148 (face font-lock-type-face fontified nil) 1148 1149 (fontified nil) 1149 1150 (face (rainbow-delimiters-depth-6-face) fontified nil) 1150 1171 (fontified nil) 1171 1177 (face font-lock-variable-name-face fontified nil) 1177 1179 (fontified nil) 1179 1182 (face font-lock-constant-face fontified nil) 1182 1193 (fontified nil) 1193 1194 (face (rainbow-delimiters-depth-7-face) fontified nil) 1194 1195 (face (rainbow-delimiters-depth-8-face) fontified nil) 1195 1198 (face font-lock-type-face fontified nil) 1198 1201 (fontified nil) 1201 1202 (face (rainbow-delimiters-depth-8-face) fontified nil) 1202 1203 (face (rainbow-delimiters-depth-7-face) fontified nil) 1203 1204 (face (rainbow-delimiters-depth-7-face) fontified nil) 1204 1205 (face (rainbow-delimiters-depth-7-face) fontified nil) 1205 1206 (fontified nil) 1206 1208 (face font-lock-keyword-face fontified nil) 1208 1209 (fontified nil) 1209 1213 (face font-lock-constant-face fontified nil) 1213 1215 (fontified nil) 1215 1228 (face font-lock-type-face fontified nil) 1228 1250 (fontified nil) 1250 1265 (face font-lock-variable-name-face fontified nil) 1265 1290 (fontified nil) 1290 1296 (face font-lock-variable-name-face fontified nil) 1296 1298 (fontified nil) 1298 1302 (face font-lock-constant-face fontified nil) 1302 1304 (fontified nil) 1304 1316 (face font-lock-type-face fontified nil) 1316 1318 (fontified nil) 1318 1327 (face font-lock-type-face fontified nil) 1327 1345 (fontified nil) 1345 1346 (face (rainbow-delimiters-depth-6-face) fontified nil) 1346 1364 (fontified nil) 1364 1368 (face font-lock-constant-face fontified nil) 1368 1370 (fontified nil) 1370 1385 (face font-lock-type-face fontified nil) 1385 1386 (fontified nil) 1386 1387 (face (rainbow-delimiters-depth-6-face) fontified nil) 1387 1408 (fontified nil) 1408 1414 (face font-lock-variable-name-face fontified nil) 1414 1416 (fontified nil) 1416 1419 (face font-lock-constant-face fontified nil) 1419 1430 (fontified nil) 1430 1431 (face (rainbow-delimiters-depth-7-face) fontified nil) 1431 1432 (face (rainbow-delimiters-depth-8-face) fontified nil) 1432 1435 (face font-lock-type-face fontified nil) 1435 1438 (fontified nil) 1438 1439 (face (rainbow-delimiters-depth-8-face) fontified nil) 1439 1440 (face (rainbow-delimiters-depth-7-face) fontified nil) 1440 1441 (face (rainbow-delimiters-depth-7-face) fontified nil) 1441 1442 (face (rainbow-delimiters-depth-7-face) fontified nil) 1442 1443 (fontified nil) 1443 1445 (face font-lock-keyword-face fontified nil) 1445 1446 (fontified nil) 1446 1450 (face font-lock-constant-face fontified nil) 1450 1452 (fontified nil) 1452 1465 (face font-lock-type-face fontified nil) 1465 1487 (fontified nil) 1487 1500 (face font-lock-variable-name-face fontified nil) 1500 1502 (face font-lock-variable-name-face fontified nil) 1502 1507 (fontified nil) 1507 1527 (fontified nil) 1527 1533 (face font-lock-variable-name-face fontified nil) 1533 1535 (fontified nil) 1535 1539 (face font-lock-constant-face fontified nil) 1539 1541 (fontified nil) 1541 1553 (face font-lock-type-face fontified nil) 1553 1555 (fontified nil) 1555 1564 (face font-lock-type-face fontified nil) 1564 1582 (fontified nil) 1582 1583 (face (rainbow-delimiters-depth-6-face) fontified nil) 1583 1601 (fontified nil) 1601 1605 (face font-lock-constant-face fontified nil) 1605 1607 (fontified nil) 1607 1622 (face font-lock-type-face fontified nil) 1622 1623 (fontified nil) 1623 1624 (face (rainbow-delimiters-depth-6-face) fontified nil) 1624 1645 (fontified nil) 1645 1651 (face font-lock-variable-name-face fontified nil) 1651 1653 (fontified nil) 1653 1656 (face font-lock-constant-face fontified nil) 1656 1667 (fontified nil) 1667 1668 (face (rainbow-delimiters-depth-7-face) fontified nil) 1668 1669 (face (rainbow-delimiters-depth-8-face) fontified nil) 1669 1672 (face font-lock-type-face fontified nil) 1672 1676 (fontified nil) 1676 1677 (face (rainbow-delimiters-depth-8-face) fontified nil) 1677 1678 (face (rainbow-delimiters-depth-7-face) fontified nil) 1678 1679 (face (rainbow-delimiters-depth-7-face) fontified nil) 1679 1680 (face (rainbow-delimiters-depth-7-face) fontified nil) 1680 1681 (fontified nil) 1681 1683 (face font-lock-keyword-face fontified nil) 1683 1684 (fontified nil) 1684 1688 (face font-lock-constant-face fontified nil) 1688 1690 (fontified nil) 1690 1703 (face font-lock-type-face fontified nil) 1703 1725 (fontified nil) 1725 1740 (face font-lock-variable-name-face fontified nil) 1740 1765 (fontified nil) 1765 1771 (face font-lock-variable-name-face fontified nil) 1771 1773 (fontified nil) 1773 1777 (face font-lock-constant-face fontified nil) 1777 1779 (fontified nil) 1779 1791 (face font-lock-type-face fontified nil) 1791 1793 (fontified nil) 1793 1802 (face font-lock-type-face fontified nil) 1802 1820 (fontified nil) 1820 1821 (face (rainbow-delimiters-depth-6-face) fontified nil) 1821 1835 (fontified nil) 1835 1836 (face (rainbow-delimiters-depth-5-face) fontified nil) 1836 1846 (fontified nil) 1846 1847 (face (rainbow-delimiters-depth-4-face) fontified nil) 1847 1852 (fontified nil) 1852 1853 (face (rainbow-delimiters-depth-3-face) fontified nil) 1853 1854 (fontified nil) 1854 1855 (face (rainbow-delimiters-depth-2-face) fontified nil) 1855 1856 (rear-nonsticky nil fontified nil)) . 2661) (undo-tree-id632 . -1856) (undo-tree-id633 . -1856) (nil fontified t 4514 . 4515) (nil fontified t 4513 . 4514) (nil fontified t 4508 . 4513) (nil fontified t 4507 . 4508) (nil fontified t 4497 . 4507) (nil fontified t 4496 . 4497) (nil fontified t 4482 . 4496) (nil fontified t 4481 . 4482) (nil fontified t 4463 . 4481) (nil fontified t 4454 . 4463) (nil fontified t 4452 . 4454) (nil fontified t 4440 . 4452) (nil fontified t 4438 . 4440) (nil fontified t 4434 . 4438) (nil fontified t 4432 . 4434) (nil fontified t 4426 . 4432) (nil fontified t 4401 . 4426) (nil fontified t 4386 . 4401) (nil fontified t 4364 . 4386) (nil fontified t 4351 . 4364) (nil fontified t 4349 . 4351) (nil fontified t 4345 . 4349) (nil fontified t 4344 . 4345) (nil fontified t 4342 . 4344) (nil fontified t 4341 . 4342) (nil fontified t 4340 . 4341) (nil fontified t 4339 . 4340) (nil fontified t 4338 . 4339) (nil fontified t 4337 . 4338) (nil fontified t 4333 . 4337) (nil fontified t 4330 . 4333) (nil fontified t 4329 . 4330) (nil fontified t 4328 . 4329) (nil fontified t 4317 . 4328) (nil fontified t 4314 . 4317) (nil fontified t 4312 . 4314) (nil fontified t 4306 . 4312) (nil fontified t 4285 . 4306) (nil fontified t 4284 . 4285) (nil fontified t 4283 . 4284) (nil fontified t 4268 . 4283) (nil fontified t 4266 . 4268) (nil fontified t 4262 . 4266) (nil fontified t 4244 . 4262) (nil fontified t 4243 . 4244) (nil fontified t 4225 . 4243) (nil fontified t 4216 . 4225) (nil fontified t 4214 . 4216) (nil fontified t 4202 . 4214) (nil fontified t 4200 . 4202) (nil fontified t 4196 . 4200) (nil fontified t 4194 . 4196) (nil fontified t 4188 . 4194) (nil fontified t 4168 . 4188) (nil fontified t 4163 . 4168) (nil fontified t 4161 . 4163) (nil fontified t 4148 . 4161) (nil fontified t 4126 . 4148) (nil fontified t 4113 . 4126) (nil fontified t 4111 . 4113) (nil fontified t 4107 . 4111) (nil fontified t 4106 . 4107) (nil fontified t 4104 . 4106) (nil fontified t 4103 . 4104) (nil fontified t 4102 . 4103) (nil fontified t 4101 . 4102) (nil fontified t 4100 . 4101) (nil fontified t 4099 . 4100) (nil fontified t 4096 . 4099) (nil fontified t 4093 . 4096) (nil fontified t 4092 . 4093) (nil fontified t 4091 . 4092) (nil fontified t 4080 . 4091) (nil fontified t 4077 . 4080) (nil fontified t 4075 . 4077) (nil fontified t 4069 . 4075) (nil fontified t 4048 . 4069) (nil fontified t 4047 . 4048) (nil fontified t 4046 . 4047) (nil fontified t 4031 . 4046) (nil fontified t 4029 . 4031) (nil fontified t 4025 . 4029) (nil fontified t 4007 . 4025) (nil fontified t 4006 . 4007) (nil fontified t 3988 . 4006) (nil fontified t 3979 . 3988) (nil fontified t 3977 . 3979) (nil fontified t 3965 . 3977) (nil fontified t 3963 . 3965) (nil fontified t 3959 . 3963) (nil fontified t 3957 . 3959) (nil fontified t 3951 . 3957) (nil fontified t 3926 . 3951) (nil fontified t 3911 . 3926) (nil fontified t 3889 . 3911) (nil fontified t 3876 . 3889) (nil fontified t 3874 . 3876) (nil fontified t 3870 . 3874) (nil fontified t 3869 . 3870) (nil fontified t 3867 . 3869) (nil fontified t 3866 . 3867) (nil fontified t 3865 . 3866) (nil fontified t 3864 . 3865) (nil fontified t 3863 . 3864) (nil fontified t 3862 . 3863) (nil fontified t 3859 . 3862) (nil fontified t 3856 . 3859) (nil fontified t 3855 . 3856) (nil fontified t 3854 . 3855) (nil fontified t 3843 . 3854) (nil fontified t 3840 . 3843) (nil fontified t 3838 . 3840) (nil fontified t 3832 . 3838) (nil fontified t 3811 . 3832) (nil fontified t 3810 . 3811) (nil fontified t 3809 . 3810) (nil fontified t 3794 . 3809) (nil fontified t 3792 . 3794) (nil fontified t 3788 . 3792) (nil fontified t 3770 . 3788) (nil fontified t 3769 . 3770) (nil fontified t 3751 . 3769) (nil fontified t 3742 . 3751) (nil fontified t 3740 . 3742) (nil fontified t 3728 . 3740) (nil fontified t 3726 . 3728) (nil fontified t 3722 . 3726) (nil fontified t 3720 . 3722) (nil fontified t 3714 . 3720) (nil fontified t 3689 . 3714) (nil fontified t 3674 . 3689) (nil fontified t 3654 . 3674) (nil fontified t 3568 . 3654) (nil fontified t 3565 . 3568) (nil fontified t 3545 . 3565) (nil fontified t 3461 . 3545) (nil fontified t 3458 . 3461) (nil fontified t 3433 . 3458) (nil fontified t 3427 . 3433) (nil fontified t 3406 . 3427) (nil fontified t 3405 . 3406) (nil fontified t 3404 . 3405) (nil fontified t 3389 . 3404) (nil fontified t 3387 . 3389) (nil fontified t 3383 . 3387) (nil fontified t 3367 . 3383) (nil fontified t 3303 . 3367) (nil fontified t 3300 . 3303) (nil fontified t 3284 . 3300) (nil fontified t 3198 . 3284) (nil fontified t 3195 . 3198) (nil fontified t 3178 . 3195) (nil fontified t 3177 . 3178) (nil fontified t 3176 . 3177) (nil fontified t 3174 . 3176) (nil fontified t 3164 . 3174) (nil fontified t 3150 . 3164) (nil fontified t 3142 . 3150) (nil fontified t 3140 . 3142) (nil fontified t 3126 . 3140) (nil fontified t 3124 . 3126) (nil fontified t 3120 . 3124) (nil fontified t 3118 . 3120) (nil fontified t 3109 . 3118) (nil fontified t 3097 . 3109) (nil fontified t 3039 . 3097) (nil fontified t 3036 . 3039) (nil fontified t 3024 . 3036) (nil fontified t 2963 . 3024) (nil fontified t 2960 . 2963) (nil fontified t 2948 . 2960) (nil fontified t 2885 . 2948) (nil fontified t 2882 . 2885) (nil fontified t 2868 . 2882) (nil fontified t 2855 . 2868) (nil fontified t 2853 . 2855) (nil fontified t 2849 . 2853) (nil fontified t 2848 . 2849) (nil fontified t 2846 . 2848) (nil fontified t 2845 . 2846) (nil fontified t 2844 . 2845) (nil fontified t 2843 . 2844) (nil fontified t 2842 . 2843) (nil fontified t 2831 . 2842) (nil fontified t 2830 . 2831) (nil fontified t 2819 . 2830) (nil fontified t 2816 . 2819) (nil fontified t 2814 . 2816) (nil fontified t 2802 . 2814) (nil fontified t 2789 . 2802) (nil fontified t 2788 . 2789) (nil fontified t 2787 . 2788) (nil fontified t 2769 . 2787) (nil fontified t 2767 . 2769) (nil fontified t 2763 . 2767) (nil fontified t 2748 . 2763) (nil fontified t 2745 . 2748) (nil fontified t 2744 . 2745) (nil fontified t 2741 . 2744) (nil fontified t 2732 . 2741) (nil fontified t 2731 . 2732) (nil fontified t 2730 . 2731) (nil fontified t 2729 . 2730) (nil fontified t 2723 . 2729) (nil fontified t 2722 . 2723) (nil fontified t 2721 . 2722) (nil fontified t 2703 . 2721) (nil fontified t 2701 . 2703) (nil fontified t 2697 . 2701) (nil fontified t 2696 . 2697) (nil fontified t 2695 . 2696) (nil fontified t 2693 . 2695) (nil fontified t 2692 . 2693) (nil fontified t 2691 . 2692) (nil fontified t 2687 . 2691) (nil fontified t 2686 . 2687) (nil fontified t 2684 . 2686) (nil fontified t 2679 . 2684) (nil fontified t 2678 . 2679) (nil fontified t 2677 . 2678) (nil fontified t 2666 . 2677) (nil fontified t 2665 . 2666) (nil fontified t 2661 . 2665) (nil rear-nonsticky t 4516 . 4517)) (26014 13156 961731 0) 0 nil])
([nil nil ((2899 . 2903) (#("    " 0 4 (fontified nil)) . 2898) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (2897 . 2903)) nil (26014 13194 429726 0) 0 nil])
nil
([nil nil ((2903 . 2905)) nil (26014 13194 429722 0) 0 nil])
([nil nil ((2905 . 2909)) nil (26014 13194 429721 0) 0 nil])
([nil nil ((2903 . 2918) (#("instan" 0 6 (fontified nil)) . 2903) (2903 . 2909) (#("instance_buffer" 0 15 (fontified nil)) . -2903) (2903 . 2918) (#("instan" 0 6 (fontified t)) . -2903) (undo-tree-id678 . -6) (undo-tree-id679 . -1) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -5) (undo-tree-id689 . -5) (undo-tree-id690 . -6) (undo-tree-id691 . -6) 2909) nil (26014 13194 429718 0) 0 nil])
([nil nil ((2919 . 2923) (2909 . 2917) (#("    " 0 4 (fontified t)) . 2909) (undo-tree-id677 . -3) (2870 . 2874) (2810 . 2814) (2766 . 2770) (2714 . 2722) (#("    " 0 4 (fontified t)) . 2714) (2661 . 2665) 2608) nil (26014 13194 429702 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2925) (undo-tree-id664 . -1) (undo-tree-id665 . 1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) 2926) nil (26014 13194 429697 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2945) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) 2946) nil (26014 13194 429682 0) 0 nil])
([nil nil ((2641 . 2642)) nil (26014 13194 429673 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2641) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 2642) nil (26014 13194 429671 0) 0 nil])
([nil nil ((2641 . 2649)) nil (26014 13194 429668 0) 0 nil])
([nil nil ((2649 . 2660)) nil (26014 13194 429667 0) 0 nil])
([nil nil ((apply yas--snippet-revive 2657 2662 #s(yas--snippet nil nil #s(yas--exit 2661 nil) 88 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 2661 nil) 88 nil nil nil nil)) (2657 . 2662) (#("Vec<$0>" 0 7 (fontified nil)) . 2657) (2657 . 2664) (#("Vec" 0 3 (fontified nil)) . 2657) (2657 . 2660) (#("Vec<…>" 0 6 (fontified nil)) . -2657) (2657 . 2663) (#("Vec" 0 3 (face font-lock-type-face fontified t)) . -2657) (undo-tree-id643 . -3) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) 2660) nil (26014 13194 429664 0) 0 nil])
([nil nil ((2661 . 2662)) nil (26014 13194 429650 0) 0 nil])
([nil nil ((2661 . 2672) (#("I" 0 1 (fontified nil)) . 2661) (2661 . 2662) (#("InstanceRaw" 0 11 (fontified nil)) . -2661) (2661 . 2672) (#("I" 0 1 (face font-lock-type-face fontified t)) . -2661) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) 2662) nil (26014 13194 429648 0) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -2877) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 2878) nil (26014 13194 429638 0) 0 nil])
([nil nil ((2978 . 2979) 2877) nil (26014 13194 429624 0) 0 nil])
([nil nil ((2641 . 2643) (t 26014 13194 438786 783000)) nil (26014 13204 843157 0) 0 nil])
([nil nil ((2643 . 2652)) nil (26014 13204 844040 0) 0 nil])
([nil nil ((2652 . 2653)) nil (26014 13210 771319 0) 0 nil] [nil nil ((2650 . 2654) (#("wginstance_data" 0 2 (fontified nil) 2 3 (face font-lock-variable-name-face fontified nil) 3 15 (face font-lock-variable-name-face fontified nil)) . 2650) (undo-tree-id695 . 13) (2650 . 2652) (#("wgpu" 0 4 (fontified nil)) . -2650) (2650 . 2654) (#("wg" 0 2 (face font-lock-variable-name-face fontified t)) . -2650) (undo-tree-id696 . -2) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) 2652) ((2650 . 2652) (#("wgpu" 0 4 (fontified nil)) . 2650) (2650 . 2654) (#("wg" 0 2 (fontified nil)) . 2650) (2650 . 2665) (#("wgpu" 0 4 (face font-lock-variable-name-face fontified t)) . 2650) (undo-tree-id706 . -4) (undo-tree-id707 . -4)) (26014 13204 843151 0) 0 nil])
([nil nil ((2652 . 2653)) nil (26014 13210 771318 0) 0 nil])
nil
([nil nil ((2650 . 2654) (#("wgp" 0 3 (fontified nil)) . 2650) (2650 . 2653) (#("wgpu" 0 4 (fontified nil)) . -2650) (2650 . 2654) (#("wgp" 0 3 (fontified t)) . -2650) (undo-tree-id718 . -3) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -3) 2653) nil (26014 13210 771316 0) 0 nil])
([nil nil ((2654 . 2662)) nil (26014 13210 771289 0) 0 nil])
([nil nil ((2656 . 2662) (#("Device" 0 6 (fontified nil)) . 2656) (2656 . 2662) (#("Device" 0 6 (face font-lock-type-face fontified t)) . -2656) (undo-tree-id708 . -6) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -5) (undo-tree-id717 . -5) 2662) nil (26014 13210 771287 0) 0 nil])
([nil nil ((2662 . 2663)) nil (26014 13210 771266 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 27 . 28) (nil fontified nil 26 . 28) (nil fontified nil 17 . 26) (nil fontified nil 15 . 17) (nil fontified nil 11 . 15) (nil fontified nil 9 . 11) (nil fontified nil 5 . 9) (nil fontified nil 4 . 5) (nil fontified nil 1 . 4) (1 . 28) (t 26014 13210 780340 904000)) nil (26014 13249 230074 0) 0 nil])
([nil nil ((2660 . 2661) (t 26014 13249 784508 347000)) nil (26014 13278 490515 0) 0 nil] [nil nil ((2660 . 2661) (t 26014 13225 583293 360000)) ((#("s" 0 1 (face font-lock-function-name-face fontified t)) . 2660) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (t 26014 13246 184687 749000)) (26014 13246 175354 0) 0 nil])
([nil nil ((2700 . 2701)) nil (26014 13278 490513 0) 0 nil])
nil
([nil nil ((2937 . 2938)) nil (26014 13278 490512 0) 0 nil])
([nil nil ((3022 . 3023)) nil (26014 13278 490511 0) 0 nil])
([nil nil ((2761 . 2762)) nil (26014 13278 490507 0) 0 nil])
([nil nil ((2992 . 2998) (t 26014 13278 499851 235000)) nil (26014 15435 233320 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2996) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (#("g" 0 1 (fontified t)) . -2997) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) 2998) nil (26014 15435 233318 0) 0 nil])
([nil nil ((2996 . 2998)) nil (26014 15435 233303 0) 0 nil])
([nil nil ((2995 . 2999) (#("wgp" 0 3 (fontified nil)) . 2995) (2995 . 2998) (#("wgpu" 0 4 (fontified nil)) . -2995) (2995 . 2999) (#("wgp" 0 3 (fontified t)) . -2995) (undo-tree-id795 . -3) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -3) (undo-tree-id813 . -3) 2998) nil (26014 15435 233301 0) 0 nil])
([nil nil ((2999 . 3005)) nil (26014 15435 233279 0) 0 nil])
([nil nil ((3001 . 3013) (#("Buff" 0 4 (fontified nil)) . 3001) (3001 . 3005) (#("BufferUsages" 0 12 (fontified nil)) . -3001) (3001 . 3013) (#("Buff" 0 4 (face font-lock-type-face fontified t)) . -3001) (undo-tree-id779 . -4) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) 3005) nil (26014 15435 233277 0) 0 nil])
([nil nil ((3013 . 3015)) nil (26014 15435 233257 0) 0 nil])
([nil nil ((3015 . 3016)) nil (26014 15435 233256 0) 0 nil])
([nil nil ((3015 . 3023) (#("C" 0 1 (fontified nil)) . 3015) (3015 . 3016) (#("COPY_DST" 0 8 (fontified nil)) . -3015) (3015 . 3023) (#("C" 0 1 (face font-lock-type-face fontified t)) . -3015) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) 3016) nil (26014 15435 233251 0) 0 nil])
([nil nil ((772 . 777) (t 26014 15435 242643 223000)) nil (26015 36107 529262 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 803 . 804) (nil fontified nil 777 . 804) (777 . 804)) nil (26015 36107 529260 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -777) 799) nil (26015 36107 529258 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -799) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 800) nil (26015 36107 529256 0) 0 nil])
([nil nil ((2631 . 2647) (#("                " 0 16 (fontified nil)) . 2630) (undo-tree-id3 . -16) (undo-tree-id4 . -16) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (2629 . 2647)) nil (26015 36107 529237 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3361 . 3362) (nil fontified nil 2647 . 3362) (2647 . 3362)) nil (26015 36107 529232 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -2647) 2386) nil (26015 36107 529230 0) 0 nil])
([nil nil ((2630 . 2646)) nil (26015 36107 529229 0) 0 nil])
([nil nil ((2646 . 2651)) nil (26015 36107 529228 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -2650) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 2651) nil (26015 36107 529226 0) 0 nil])
([nil nil ((2650 . 2652)) nil (26015 36107 529199 0) 0 nil])
([nil nil ((2652 . 2654)) nil (26015 36107 529195 0) 0 nil])
([nil nil ((627 . 640) (t 26015 36107 540066 631000)) nil (26015 36126 340659 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 704 . 705) (nil fontified nil 640 . 705) (640 . 705)) nil (26015 36126 340657 0) 0 nil])
([nil current ((#("            " 0 12 (fontified t)) . -640) 655) nil (26015 36126 340652 0) 0 nil])
nil
