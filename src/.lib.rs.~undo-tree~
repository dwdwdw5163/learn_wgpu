(undo-tree-save-format-version . 1)
"b334c0d5e968df6a74bac7868efdc1f57f4a148d"
[nil nil nil nil (26015 30081 571748 0) 0 nil]
([nil nil ((9947 . 9949) (t 26015 28460 89937 668000)) nil (26015 30161 529191 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9947) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9948) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 9949 (t 26015 30161 532150 935000)) nil (26015 30189 975572 0) 0 nil])
([nil nil ((9947 . 9949) (t 26015 30189 978632 119000)) nil (26015 32657 512214 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9947) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9948) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 9949 (t 26015 32657 515356 138000)) nil (26015 33378 63964 0) 0 nil])
([nil nil ((14473 . 14486) (t 26015 33378 66950 905000)) nil (26015 33840 712071 0) 0 nil])
([nil nil ((14486 . 14491)) nil (26015 33840 712070 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -14486) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("s" 0 1 (fontified t)) . -14487) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t)) . -14488) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("l" 0 1 (fontified t)) . -14489) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("f" 0 1 (fontified t)) . -14490) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 14491) nil (26015 33840 712066 0) 0 nil])
([nil nil ((14486 . 14493)) nil (26015 33840 712008 0) 0 nil])
([nil nil ((14492 . 14508) (#("l" 0 1 (fontified nil)) . 14492) (14492 . 14493) (#("light_bind_group" 0 16 (fontified nil)) . -14492) (14492 . 14508) (#("l" 0 1 (fontified t)) . -14492) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 14493) nil (26015 33840 712003 0) 0 nil])
([nil nil ((14508 . 14509)) nil (26015 33840 711981 0) 0 nil])
([nil nil ((11002 . 11010) (#("        " 0 8 (fontified nil)) . 11001) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (11001 . 11010) (#("        " 0 8 (fontified nil)) . 11000) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (10999 . 11009) (t 26015 33840 715934 273000)) nil (26015 33854 390030 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11667 . 11668) (nil fontified nil 11010 . 11668) (11010 . 11668)) nil (26015 33854 390015 0) 0 nil])
([nil nil ((11809 . 11817) (11795 . 11807) (#("    " 0 4 (fontified t)) . 11795) (11771 . 11787) (#("        " 0 8 (fontified t)) . 11771) (11724 . 11740) (#("        " 0 8 (fontified t)) . 11724) (11670 . 11686) (#("        " 0 8 (fontified t)) . 11670) (11639 . 11655) (#("        " 0 8 (fontified t)) . 11639) (11614 . 11630) (#("        " 0 8 (fontified t)) . 11614) (11589 . 11605) (#("        " 0 8 (fontified t)) . 11589) (11553 . 11565) (#("    " 0 4 (fontified t)) . 11553) (11538 . 11550) (#("    " 0 4 (fontified t)) . 11538) (11453 . 11469) (#("        " 0 8 (fontified t)) . 11453) (11408 . 11424) (#("        " 0 8 (fontified t)) . 11408) (11352 . 11364) (#("    " 0 4 (fontified t)) . 11352) (11336 . 11348) (#("    " 0 4 (fontified t)) . 11336) (11293 . 11309) (#("        " 0 8 (fontified t)) . 11293) (11201 . 11217) (#("        " 0 8 (fontified t)) . 11201) (11147 . 11163) (#("        " 0 8 (fontified t)) . 11147) (11058 . 11070) (#("    " 0 4 (fontified t)) . 11058) (11020 . 11028) 11000) nil (26015 33854 390007 0) 0 nil])
([nil nil ((#("wgpu::ShaderModuleDescriptor {
                label: Some(\"Light Shader\"),
                source: wgpu::ShaderSource::Wgsl(include_str!(\"light.wgsl\").into())," 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t) 6 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-4-face) fontified t) 30 47 (fontified t) 47 52 (face font-lock-variable-name-face fontified t) 52 54 (fontified t) 54 58 (face font-lock-type-face fontified t) 58 59 (face (rainbow-delimiters-depth-5-face) fontified t) 59 73 (face font-lock-string-face fontified t) 73 74 (face (rainbow-delimiters-depth-5-face) fontified t) 74 92 (fontified t) 92 98 (face font-lock-variable-name-face fontified t) 98 100 (fontified t) 100 104 (face font-lock-constant-face fontified t) 104 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 124 (face font-lock-type-face fontified t) 124 125 (face (rainbow-delimiters-depth-5-face) fontified t) 125 137 (face font-lock-preprocessor-face fontified t) 137 138 (face (rainbow-delimiters-depth-6-face) fontified t) 138 150 (face font-lock-string-face fontified t) 150 151 (face (rainbow-delimiters-depth-6-face) fontified t) 151 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-6-face) fontified t) 157 158 (face (rainbow-delimiters-depth-6-face) fontified t) 158 159 (face (rainbow-delimiters-depth-5-face) fontified t) 159 160 (fontified t)) . -11377) (undo-tree-id179 . -160) (undo-tree-id180 . -160) (undo-tree-id181 . -1) (undo-tree-id182 . -2) (undo-tree-id183 . -3) (undo-tree-id184 . -4) (undo-tree-id185 . -7) (undo-tree-id186 . -9) (undo-tree-id187 . -12) (undo-tree-id188 . -15) (undo-tree-id189 . -73) (undo-tree-id190 . -75) (undo-tree-id191 . -132) (undo-tree-id192 . -133) (undo-tree-id193 . -134) (undo-tree-id194 . -136) (undo-tree-id195 . -137) (undo-tree-id196 . -138) (undo-tree-id197 . -139) (undo-tree-id198 . -140) (undo-tree-id199 . -141) (undo-tree-id200 . -142) (undo-tree-id201 . -143) (undo-tree-id202 . -142) (undo-tree-id203 . -141) (undo-tree-id204 . -140) (undo-tree-id205 . -139) (undo-tree-id206 . -137) (undo-tree-id207 . -136) (undo-tree-id208 . -137) (undo-tree-id209 . -138) (undo-tree-id210 . -141) (undo-tree-id211 . -144) (undo-tree-id212 . -146) (undo-tree-id213 . -148) (undo-tree-id214 . -150) (undo-tree-id215 . -151) (undo-tree-id216 . -152) (undo-tree-id217 . -153) (undo-tree-id218 . -154) (undo-tree-id219 . -155) (undo-tree-id220 . -156) (undo-tree-id221 . -157) (undo-tree-id222 . -158) (undo-tree-id223 . -159) (undo-tree-id224 . -160) (undo-tree-id225 . -76) (undo-tree-id226 . -160) (undo-tree-id227 . -160) (undo-tree-id228 . -160) (undo-tree-id229 . -160) (undo-tree-id230 . -160) (undo-tree-id231 . -160) (undo-tree-id232 . -160) (undo-tree-id233 . -160) 11537 (t 26015 33854 393557 760000)) nil (26015 33890 173730 0) 0 nil])
([nil nil ((11377 . 11379)) nil (26015 33890 173674 0) 0 nil])
([nil nil ((11377 . 11381) (#("wp" 0 2 (fontified nil)) . 11377) (11377 . 11379) (#("wgpu" 0 4 (fontified nil)) . -11377) (11377 . 11381) (#("wp" 0 2 (fontified t)) . -11377) (undo-tree-id170 . -2) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) 11379) nil (26015 33890 173672 0) 0 nil])
([nil nil ((11381 . 11387)) nil (26015 33890 173661 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11383 11398 #s(yas--snippet nil nil #s(yas--exit 11397 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11397 nil) 0 nil nil nil nil)) (11383 . 11398) (#("include_wgsl!($0)" 0 17 (fontified nil)) . 11383) (11383 . 11400) (#("incl" 0 4 (fontified nil)) . 11383) (11383 . 11387) (#("include_wgsl!(…)" 0 16 (fontified nil)) . -11383) (11383 . 11399) (#("incl" 0 4 (fontified t)) . -11383) (undo-tree-id157 . -4) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) 11387) nil (26015 33890 173659 0) 0 nil])
([nil nil ((11397 . 11399)) nil (26015 33890 173636 0) 0 nil])
([nil nil ((11398 . 11404)) nil (26015 33890 173635 0) 0 nil])
([nil nil ((11404 . 11408)) nil (26015 33890 173634 0) 0 nil])
([nil nil ((11410 . 11411)) nil (26015 33890 173629 0) 0 nil])
([nil nil ((#("
        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[&camera_bind_group_layout, &light_bind_group_layout],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");
            };
            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };
" 0 1 (fontified t) 1 9 (fontified t) 9 12 (face font-lock-comment-delimiter-face fontified t) 12 19 (face font-lock-comment-face fontified t) 19 27 (fontified t) 27 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 52 (face font-lock-variable-name-face fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 69 (fontified t) 69 72 (face font-lock-keyword-face fontified t) 72 73 (fontified t) 73 79 (face font-lock-variable-name-face fontified t) 79 111 (fontified t) 111 112 (face (rainbow-delimiters-depth-4-face) fontified t) 112 113 (face rust-ampersand-face fontified t) 113 117 (face font-lock-constant-face fontified t) 117 119 (fontified t) 119 143 (face font-lock-type-face fontified t) 143 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-5-face) fontified t) 145 162 (fontified t) 162 167 (face font-lock-variable-name-face fontified t) 167 169 (fontified t) 169 173 (face font-lock-type-face fontified t) 173 174 (face (rainbow-delimiters-depth-6-face) fontified t) 174 197 (face font-lock-string-face fontified t) 197 198 (face (rainbow-delimiters-depth-6-face) fontified t) 198 216 (fontified t) 216 234 (face font-lock-variable-name-face fontified t) 234 236 (fontified t) 236 237 (face rust-ampersand-face fontified t) 237 238 (face (rainbow-delimiters-depth-6-face) fontified t) 238 239 (face rust-ampersand-face fontified t) 239 265 (fontified t) 265 266 (face rust-ampersand-face fontified t) 266 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-6-face) fontified t) 290 308 (fontified t) 308 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 331 (face rust-ampersand-face fontified t) 331 332 (face (rainbow-delimiters-depth-6-face) fontified t) 332 333 (face (rainbow-delimiters-depth-6-face) fontified t) 333 347 (fontified t) 347 348 (face (rainbow-delimiters-depth-5-face) fontified t) 348 349 (face (rainbow-delimiters-depth-4-face) fontified t) 349 351 (fontified t) 351 363 (fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 373 (face font-lock-variable-name-face fontified t) 373 376 (fontified t) 376 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 395 (face font-lock-preprocessor-face fontified t) 395 396 (face (rainbow-delimiters-depth-4-face) fontified t) 396 408 (face font-lock-string-face fontified t) 408 409 (face (rainbow-delimiters-depth-4-face) fontified t) 409 410 (fontified t) 410 411 (fontified t) 411 423 (fontified t) 423 424 (face (rainbow-delimiters-depth-3-face) fontified t) 424 438 (fontified t) 438 460 (fontified t) 460 461 (face (rainbow-delimiters-depth-3-face) fontified t) 461 478 (fontified t) 478 479 (face rust-ampersand-face fontified t) 479 503 (fontified t) 503 504 (face rust-ampersand-face fontified t) 504 528 (fontified t) 528 559 (fontified t) 559 563 (face font-lock-type-face fontified t) 563 564 (face (rainbow-delimiters-depth-4-face) fontified t) 564 571 (face font-lock-constant-face fontified t) 571 573 (fontified t) 573 580 (face font-lock-type-face fontified t) 580 582 (fontified t) 582 594 (face font-lock-type-face fontified t) 594 595 (face (rainbow-delimiters-depth-4-face) fontified t) 595 613 (fontified t) 613 614 (face rust-ampersand-face fontified t) 614 615 (face (rainbow-delimiters-depth-4-face) fontified t) 615 620 (face font-lock-constant-face fontified t) 620 622 (fontified t) 622 633 (face font-lock-type-face fontified t) 633 639 (fontified t) 639 640 (face (rainbow-delimiters-depth-5-face) fontified t) 640 641 (face (rainbow-delimiters-depth-5-face) fontified t) 641 642 (face (rainbow-delimiters-depth-4-face) fontified t) 642 660 (fontified t) 660 680 (fontified t) 680 681 (face (rainbow-delimiters-depth-3-face) fontified t) 681 690 (fontified t) 690 691 (face (rainbow-delimiters-depth-2-face) fontified t) 691 692 (fontified t) 692 693 (fontified t rear-nonsticky t)) . 11001) (undo-tree-id298 . -693) (undo-tree-id299 . -9) (undo-tree-id300 . -376) (undo-tree-id301 . -376) (undo-tree-id302 . -376) (undo-tree-id303 . -376) (undo-tree-id304 . -376) (undo-tree-id305 . -376) (undo-tree-id306 . -376) (undo-tree-id307 . -376) (undo-tree-id308 . -376) (undo-tree-id309 . -376) (undo-tree-id310 . -376) (undo-tree-id311 . -376) (undo-tree-id312 . -376) (undo-tree-id313 . -376) (undo-tree-id314 . -376) (undo-tree-id315 . -376) (undo-tree-id316 . -376) (undo-tree-id317 . -376) (undo-tree-id318 . -376) (undo-tree-id319 . -376) (undo-tree-id320 . -376) (undo-tree-id321 . -376) (undo-tree-id322 . -376) (undo-tree-id323 . -376) (undo-tree-id324 . -376) (undo-tree-id325 . -376) (undo-tree-id326 . -376) (undo-tree-id327 . -376) (undo-tree-id328 . -376) (undo-tree-id329 . -376) (undo-tree-id330 . -376) (undo-tree-id331 . -376) (undo-tree-id332 . -376) (undo-tree-id333 . -376) (undo-tree-id334 . -376) (undo-tree-id335 . -376) (undo-tree-id336 . -376) (undo-tree-id337 . -376) (undo-tree-id338 . -376) (undo-tree-id339 . -376) (undo-tree-id340 . -376) (undo-tree-id341 . -376) (undo-tree-id342 . -376) (undo-tree-id343 . -376) (undo-tree-id344 . -376) (undo-tree-id345 . -376) (undo-tree-id346 . -376) (undo-tree-id347 . -376) (undo-tree-id348 . -376) (undo-tree-id349 . -376) (undo-tree-id350 . -376) (undo-tree-id351 . -376) (undo-tree-id352 . -376) (undo-tree-id353 . -376) (undo-tree-id354 . -376) (undo-tree-id355 . -376) (undo-tree-id356 . -376) (undo-tree-id357 . -376) (undo-tree-id358 . -376) (undo-tree-id359 . -376) (undo-tree-id360 . -376) (undo-tree-id361 . -376) (undo-tree-id362 . -382) (undo-tree-id363 . -382) (undo-tree-id364 . -382) (undo-tree-id365 . -382) (undo-tree-id366 . -382) (undo-tree-id367 . -382) (undo-tree-id368 . -382) (undo-tree-id369 . -382) (undo-tree-id370 . -382) (undo-tree-id371 . -382) (undo-tree-id372 . -382) (undo-tree-id373 . -382) (undo-tree-id374 . 286) (undo-tree-id375 . -410) (undo-tree-id376 . -410) (undo-tree-id377 . -410) (undo-tree-id378 . -410) (undo-tree-id379 . -410) (undo-tree-id380 . -410) (undo-tree-id381 . -410) (undo-tree-id382 . -410) (undo-tree-id383 . -410) (undo-tree-id384 . -410) (undo-tree-id385 . -410) (undo-tree-id386 . -410) (undo-tree-id387 . -410) (undo-tree-id388 . -410) (undo-tree-id389 . -410) (undo-tree-id390 . -410) (undo-tree-id391 . -410) (undo-tree-id392 . -410) (undo-tree-id393 . -410) (undo-tree-id394 . -410) (undo-tree-id395 . -410) (undo-tree-id396 . -410) (undo-tree-id397 . -410) (undo-tree-id398 . -410) (undo-tree-id399 . -410) (undo-tree-id400 . -410) (undo-tree-id401 . -410) (undo-tree-id402 . -55) (undo-tree-id403 . -55) (undo-tree-id404 . -55) (undo-tree-id405 . -55) (undo-tree-id406 . -55) (undo-tree-id407 . -55) (undo-tree-id408 . -55) (undo-tree-id409 . -55) (undo-tree-id410 . -55) (undo-tree-id411 . -55) (undo-tree-id412 . -55) (undo-tree-id413 . -55) (undo-tree-id414 . -55) (undo-tree-id415 . -55) (undo-tree-id416 . -55) (undo-tree-id417 . -55) (undo-tree-id418 . -693) (undo-tree-id419 . -693) (undo-tree-id420 . -693) (undo-tree-id421 . -693) (undo-tree-id422 . -693) (undo-tree-id423 . -693) (undo-tree-id424 . -693) (undo-tree-id425 . -693) (undo-tree-id426 . -693) (undo-tree-id427 . -693) (undo-tree-id428 . -692) (undo-tree-id429 . -692) (undo-tree-id430 . -692) (undo-tree-id431 . -692) (undo-tree-id432 . -692) (undo-tree-id433 . -692) (undo-tree-id434 . -692) (undo-tree-id435 . -692) (undo-tree-id436 . -692) (undo-tree-id437 . -692) (undo-tree-id438 . -692) (undo-tree-id439 . -692) (undo-tree-id440 . -693) (undo-tree-id441 . -693) (undo-tree-id442 . -693) (undo-tree-id443 . -657) (undo-tree-id444 . -498) (undo-tree-id445 . -436) (undo-tree-id446 . -420) (undo-tree-id447 . -343) (undo-tree-id448 . -207) (undo-tree-id449 . -25) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -693) (undo-tree-id456 . -376) (undo-tree-id457 . -693) 11007 (t 26015 33890 179487 341000)) nil (26015 33937 829089 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11658 . 11659) (nil fontified nil 11001 . 11659) (11001 . 11659)) nil (26015 33937 828926 0) 0 nil])
([nil nil ((11808 . 11816) (11794 . 11806) (#("    " 0 4 (fontified t)) . 11794) (undo-tree-id295 . -3) (11770 . 11786) (#("        " 0 8 (fontified t)) . 11770) (11723 . 11739) (#("        " 0 8 (fontified t)) . 11723) (11669 . 11685) (#("        " 0 8 (fontified t)) . 11669) (undo-tree-id296 . -2) (11638 . 11654) (#("        " 0 8 (fontified t)) . 11638) (11613 . 11629) (#("        " 0 8 (fontified t)) . 11613) (11588 . 11604) (#("        " 0 8 (fontified t)) . 11588) (11552 . 11564) (#("    " 0 4 (fontified t)) . 11552) (11537 . 11549) (#("    " 0 4 (fontified t)) . 11537) (11452 . 11468) (#("        " 0 8 (fontified t)) . 11452) (11407 . 11423) (#("        " 0 8 (fontified t)) . 11407) (11351 . 11363) (#("    " 0 4 (fontified t)) . 11351) (11335 . 11347) (#("    " 0 4 (fontified t)) . 11335) (11292 . 11308) (#("        " 0 8 (fontified t)) . 11292) (11200 . 11216) (#("        " 0 8 (fontified t)) . 11200) (11146 . 11162) (#("        " 0 8 (fontified t)) . 11146) (undo-tree-id297 . -1) (11057 . 11069) (#("    " 0 4 (fontified t)) . 11057) (11019 . 11027) (11001 . 11009) 11000) nil (26015 33937 828922 0) 0 nil])
([nil nil ((#(" wgpu::ShaderModuleDescriptor {
                label: Some(\"Light Shader\"),
                source: wgpu::ShaderSource::Wgsl(include_str!(\"light.wgsl\").into())," 0 1 (fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 29 (face font-lock-type-face fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-4-face) fontified t) 31 48 (fontified t) 48 53 (face font-lock-variable-name-face fontified t) 53 55 (fontified t) 55 59 (face font-lock-type-face fontified t) 59 60 (face (rainbow-delimiters-depth-5-face) fontified t) 60 74 (face font-lock-string-face fontified t) 74 75 (face (rainbow-delimiters-depth-5-face) fontified t) 75 93 (fontified t) 93 99 (face font-lock-variable-name-face fontified t) 99 101 (fontified t) 101 105 (face font-lock-constant-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 125 (face font-lock-type-face fontified t) 125 126 (face (rainbow-delimiters-depth-5-face) fontified t) 126 138 (face font-lock-preprocessor-face fontified t) 138 139 (face (rainbow-delimiters-depth-6-face) fontified t) 139 151 (face font-lock-string-face fontified t) 151 152 (face (rainbow-delimiters-depth-6-face) fontified t) 152 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-6-face) fontified t) 158 159 (face (rainbow-delimiters-depth-6-face) fontified t) 159 160 (face (rainbow-delimiters-depth-5-face) fontified t) 160 161 (fontified t)) . -11375) (undo-tree-id261 . -154) (undo-tree-id262 . -161) (undo-tree-id263 . -1) (undo-tree-id264 . -5) (undo-tree-id265 . -10) (undo-tree-id266 . -13) (undo-tree-id267 . -16) (undo-tree-id268 . -19) (undo-tree-id269 . -21) (undo-tree-id270 . -23) (undo-tree-id271 . -26) (undo-tree-id272 . -29) (undo-tree-id273 . -30) (undo-tree-id274 . -31) (undo-tree-id275 . -76) (undo-tree-id276 . -152) (undo-tree-id277 . -153) (undo-tree-id278 . -154) (undo-tree-id279 . -154) (undo-tree-id280 . -154) (undo-tree-id281 . -154) (undo-tree-id282 . -154) (undo-tree-id283 . -154) (undo-tree-id284 . -154) (undo-tree-id285 . -155) (undo-tree-id286 . -156) (undo-tree-id287 . -157) (undo-tree-id288 . -158) (undo-tree-id289 . -159) (undo-tree-id290 . -160) (undo-tree-id291 . -161) (undo-tree-id292 . -77) (undo-tree-id293 . -161) (undo-tree-id294 . -161) 11536) nil (26015 33937 828907 0) 0 nil])
([nil nil ((11375 . 11376)) nil (26015 33937 828868 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -11375) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 11376) nil (26015 33937 828867 0) 0 nil])
([nil nil ((11375 . 11378)) nil (26015 33937 828864 0) 0 nil])
([nil nil ((11376 . 11380) (#("wg" 0 2 (fontified nil)) . 11376) (11376 . 11378) (#("wgpu" 0 4 (fontified nil)) . -11376) (11376 . 11380) (#("wg" 0 2 (fontified t)) . -11376) (undo-tree-id250 . -2) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) 11378) nil (26015 33937 828862 0) 0 nil])
([nil nil ((11380 . 11386)) nil (26015 33937 828851 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11382 11397 #s(yas--snippet nil nil #s(yas--exit 11396 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11396 nil) 1 nil nil nil nil)) (11382 . 11397) (#("include_wgsl!($0)" 0 17 (fontified nil)) . 11382) (11382 . 11399) (#("incl" 0 4 (fontified nil)) . 11382) (11382 . 11386) (#("include_wgsl!(…)" 0 16 (fontified nil)) . -11382) (11382 . 11398) (#("incl" 0 4 (fontified t)) . -11382) (undo-tree-id234 . -4) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) 11386) nil (26015 33937 828848 0) 0 nil])
([nil nil ((11396 . 11398)) nil (26015 33937 828819 0) 0 nil])
([nil nil ((11397 . 11407)) nil (26015 33937 828817 0) 0 nil])
([nil nil ((11409 . 11410)) nil (26015 33937 828813 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -11420) (#("            " 0 12 (fontified nil)) . 11411) (11411 . 11423) (11411 . 11412) (t 26015 33937 835708 705000)) nil (26015 33943 651273 0) 0 nil])
([nil nil ((#("};" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (fontified t)) . 11420) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2)) nil (26015 33943 651270 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11420) (undo-tree-id458 . -1)) nil (26015 33943 651255 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -11424) 11420 (t 26015 33943 658025 428000)) nil (26015 33945 388596 0) 0 nil])
([nil nil ((14918 . 14927) (t 26015 33945 395355 314000)) nil (26015 34147 258160 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14919) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -14920) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#(" " 0 1 (fontified t)) . -14921) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#(" " 0 1 (fontified t)) . -14922) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#(" " 0 1 (fontified t)) . -14923) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -14924) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#(" " 0 1 (fontified t)) . -14925) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#(" " 0 1 (fontified t)) . -14926) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) 14927) nil (26015 34147 258155 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14919) (undo-tree-id528 . -1)) nil (26015 34147 258105 0) 0 nil])
([nil nil ((#("        
" 0 9 (fontified t)) . 14919) (undo-tree-id526 . -8) (undo-tree-id527 . -9)) nil (26015 34147 258102 0) 0 nil])
([nil nil ((14994 . 15002) (#("        " 0 8 (fontified nil)) . 14993) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (14992 . 15002)) nil (26015 34147 258099 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15011 . 15012) (nil fontified nil 15003 . 15012) (nil fontified nil 15002 . 15003) (15002 . 15012)) nil (26015 34147 258095 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15021 . 15022) (nil fontified nil 15013 . 15022) (nil fontified nil 15012 . 15013) (15012 . 15022)) nil (26015 34147 258093 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15031 . 15032) (nil fontified nil 15023 . 15032) (nil fontified nil 15022 . 15023) (15022 . 15032)) nil (26015 34147 258091 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15027) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#(" " 0 1 (fontified t)) . -15028) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#(" " 0 1 (fontified t)) . -15029) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (fontified t)) . -15030) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -15031) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 15032) nil (26015 34147 258088 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (rear-nonsticky t fontified t)) . 15003) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9)) nil (26015 34147 258062 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15003) (undo-tree-id491 . -1)) nil (26015 34147 258056 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (rear-nonsticky t fontified t)) . 15003) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9)) nil (26015 34147 258053 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15003) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1)) nil (26015 34147 258045 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15276 . 15277) (nil fontified nil 15003 . 15277) (15003 . 15277)) nil (26015 34147 258040 0) 0 nil])
([nil nil ((15278 . 15286) (#("    " 0 4 (face font-lock-comment-face fontified nil)) . 15278) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (15277 . 15278)) nil (26015 34147 258036 0) 0 nil])
([nil nil ((12201 . 12214) (t 26015 34147 265858 249000)) nil (26015 34181 829166 0) 0 nil])
([nil nil ((12214 . 12216)) nil (26015 34181 829165 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12213) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("l" 0 1 (fontified t)) . -12214) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#("i" 0 1 (fontified t)) . -12215) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 12216) nil (26015 34181 829163 0) 0 nil])
([nil nil ((3547 . 3552)) nil (26015 34181 829149 0) 0 nil])
([nil nil ((3552 . 3553)) nil (26015 34181 829148 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3552) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 3553) nil (26015 34181 829147 0) 0 nil])
([nil nil ((3552 . 3573)) nil (26015 34181 829143 0) 0 nil])
([nil nil ((3573 . 3577)) nil (26015 34181 829142 0) 0 nil])
([nil nil ((3575 . 3579) (#("wp" 0 2 (fontified nil)) . 3575) (3575 . 3577) (#("wgpu" 0 4 (fontified nil)) . -3575) (3575 . 3579) (#("wp" 0 2 (fontified t)) . -3575) (undo-tree-id623 . -2) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) 3577) nil (26015 34181 829140 0) 0 nil])
([nil nil ((3579 . 3584)) nil (26015 34181 829128 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -3583) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) 3584) nil (26015 34181 829126 0) 0 nil])
([nil nil ((3583 . 3584)) nil (26015 34181 829119 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -3583) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 3584) nil (26015 34181 829118 0) 0 nil])
([nil nil ((3583 . 3588)) nil (26015 34181 829113 0) 0 nil])
([nil nil ((3581 . 3595) (#("RenderP" 0 7 (fontified nil)) . 3581) (3581 . 3588) (#("RenderPipeline" 0 14 (fontified nil)) . -3581) (3581 . 3595) (#("RenderP" 0 7 (face font-lock-type-face fontified t)) . -3581) (undo-tree-id581 . -7) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -5) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -7) (undo-tree-id608 . -7) (undo-tree-id609 . -7) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) 3588) nil (26015 34181 829109 0) 0 nil])
([nil nil ((3595 . 3596)) nil (26015 34181 829068 0) 0 nil])
([nil nil ((12250 . 12263) (t 26015 34181 836495 327000)) nil (26015 34187 955539 0) 0 nil])
([nil nil ((12263 . 12264)) nil (26015 34187 955538 0) 0 nil])
([nil nil ((12263 . 12284) (#("l" 0 1 (fontified nil)) . 12263) (12263 . 12264) (#("light_render_pipeline" 0 21 (fontified nil)) . -12263) (12263 . 12284) (#("l" 0 1 (fontified t)) . -12263) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) 12264) nil (26015 34187 955535 0) 0 nil])
([nil nil ((12284 . 12285)) nil (26015 34187 955518 0) 0 nil])
([nil nil ((11287 . 11308) (t 26015 34187 962940 622000)) nil (26015 34363 637298 0) 0 nil])
([nil nil ((11335 . 11355) (#(" " 0 1 (fontified nil)) . 11334) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (11335 . 11336)) nil (26015 34363 637296 0) 0 nil])
([nil nil ((11379 . 11396)) nil (26015 34363 637277 0) 0 nil])
([nil nil ((9996 . 9998) (t 26015 34363 644813 776000)) nil (26015 34387 726273 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9996) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9997) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) 9998 (t 26015 34387 734378 293000)) nil (26015 34397 966183 0) 0 nil])
([nil nil ((15156 . 15157) (t 26015 34397 973363 76000)) nil (26015 34611 580644 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -15156) (undo-tree-id724 . -1) (undo-tree-id725 . -1) 15157) nil (26015 34611 580643 0) 0 nil])
([nil nil ((15156 . 15160)) nil (26015 34611 580640 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15156 15163 #s(yas--snippet nil nil #s(yas--exit 15162 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15162 nil) 2 nil nil nil nil)) (15156 . 15163) (#("info!($0)" 0 9 (fontified nil)) . 15156) (15156 . 15165) (#("info" 0 4 (fontified nil)) . 15156) (15156 . 15160) (#("info!(…)" 0 8 (fontified nil)) . -15156) (15156 . 15164) (#("info" 0 4 (fontified t)) . -15156) (undo-tree-id714 . -4) (undo-tree-id715 . -1) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) 15160) nil (26015 34611 580638 0) 0 nil])
([nil nil ((15162 . 15164)) nil (26015 34611 580624 0) 0 nil])
([nil nil ((15163 . 15168)) nil (26015 34611 580623 0) 0 nil])
([nil nil ((15168 . 15189)) nil (26015 34611 580622 0) 0 nil])
([nil nil ((15189 . 15190)) nil (26015 34611 580621 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . -15189) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 15190) nil (26015 34611 580620 0) 0 nil])
([nil nil ((15189 . 15190)) nil (26015 34611 580605 0) 0 nil])
([nil nil ((15192 . 15193)) nil (26015 34611 580601 0) 0 nil])
([nil nil ((15470 . 15478) (#("        " 0 8 (fontified nil)) . 15469) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (15477 . 15478) (t 26015 34611 588029 960000)) nil (26015 34691 917332 0) 0 nil])
([nil nil ((15478 . 15482)) nil (26015 34691 917321 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15478 15485 #s(yas--snippet nil nil #s(yas--exit 15484 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15484 nil) 3 nil nil nil nil)) (15478 . 15485) (#("info!($0)" 0 9 (fontified nil)) . 15478) (15478 . 15487) (#("info" 0 4 (fontified nil)) . 15478) (15478 . 15482) (#("info!(…)" 0 8 (fontified nil)) . -15478) (15478 . 15486) (#("info" 0 4 (fontified t)) . -15478) (undo-tree-id757 . -4) (undo-tree-id758 . -1) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -4) (undo-tree-id764 . -4) 15482) nil (26015 34691 917319 0) 0 nil])
([nil nil ((15484 . 15486)) nil (26015 34691 917308 0) 0 nil])
([nil nil ((15485 . 15490)) nil (26015 34691 917307 0) 0 nil])
([nil nil ((#("        render_pass.set_pipeline(&self.render_pipeline); // 2." 0 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t) 33 34 (face rust-ampersand-face fontified t) 34 38 (face font-lock-keyword-face fontified t) 38 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 57 (fontified t) 57 60 (face font-lock-comment-delimiter-face fontified t) 60 62 (face font-lock-comment-face fontified t)) . 15010) (undo-tree-id750 . -62) (undo-tree-id751 . -62) (undo-tree-id752 . -62) (undo-tree-id753 . -62) (undo-tree-id754 . -62) (undo-tree-id755 . -62) (undo-tree-id756 . -62)) nil (26015 34691 917306 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15010) (undo-tree-id748 . -1) (undo-tree-id749 . -1)) nil (26015 34691 917298 0) 0 nil])
([nil nil ((15429 . 15442)) nil (26015 34691 917296 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15504 . 15505) (nil fontified nil 15504 . 15505) (nil fontified nil 15502 . 15504) (nil fontified nil 15499 . 15502) (nil fontified nil 15497 . 15499) (nil fontified nil 15496 . 15497) (nil fontified nil 15480 . 15496) (nil fontified nil 15476 . 15480) (nil fontified nil 15475 . 15476) (nil fontified nil 15474 . 15475) (nil fontified nil 15442 . 15474) (15442 . 15505)) nil (26015 34691 917294 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -15442) 15470) nil (26015 34691 917290 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -15496) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) 15497) nil (26015 34691 917288 0) 0 nil])
([nil nil ((15429 . 15430)) nil (26015 34691 917267 0) 0 nil])
([nil nil ((15427 . 15438)) nil (26015 34691 917266 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -15437) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 15438) nil (26015 34691 917264 0) 0 nil])
([nil nil ((15437 . 15449)) nil (26015 34691 917261 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . -15448) (undo-tree-id726 . -1) (undo-tree-id727 . -1) 15449) nil (26015 34691 917259 0) 0 nil])
([nil nil ((15448 . 15449)) nil (26015 34691 917246 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15461) (undo-tree-id775 . -4) 15480 (t 26015 34691 924953 569000)) nil (26015 34693 923314 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 8628 . 8629) (nil fontified nil 8599 . 8629) (8599 . 8629) (t 26015 34693 931229 884000)) nil (26015 37160 302259 0) 0 nil])
([nil nil ((8599 . 8600)) nil (26015 37160 302254 0) 0 nil])
([nil nil ((#("id()" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-5-face) fontified t) 3 4 (face (rainbow-delimiters-depth-5-face) fontified t)) . -16566) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) 16570 (t 26015 37160 311667 742000)) nil (26015 47228 968874 0) 0 nil])
([nil nil ((#("window()." 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-5-face) fontified t) 7 8 (face (rainbow-delimiters-depth-5-face) fontified t) 8 9 (fontified t)) . -16557) (undo-tree-id951 . -9) (undo-tree-id952 . -9) (undo-tree-id953 . -9) (undo-tree-id954 . -9) (undo-tree-id955 . -9) (undo-tree-id956 . -9) (undo-tree-id957 . -9) (undo-tree-id958 . -9) (undo-tree-id959 . -9) (undo-tree-id960 . -9) (undo-tree-id961 . -9) (undo-tree-id962 . -9) (undo-tree-id963 . -9) (undo-tree-id964 . -9) (undo-tree-id965 . -9) (undo-tree-id966 . -9) (undo-tree-id967 . -9) (undo-tree-id968 . -9) (undo-tree-id969 . -9) (undo-tree-id970 . -9) (undo-tree-id971 . -9) 16566) nil (26015 47228 968852 0) 0 nil])
([nil nil ((#("state." 0 6 (fontified t)) . -16551) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (undo-tree-id945 . -6) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id949 . -6) (undo-tree-id950 . -6) 16557) nil (26015 47228 968830 0) 0 nil])
([nil nil ((#("id == " 0 6 (fontified t)) . -16545) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) 16551) nil (26015 47228 968806 0) 0 nil])
([nil nil ((#("window_" 0 7 (fontified t)) . -16538) (undo-tree-id882 . -7) (undo-tree-id883 . -7) (undo-tree-id884 . -7) (undo-tree-id885 . -7) (undo-tree-id886 . -7) (undo-tree-id887 . -7) (undo-tree-id888 . -7) (undo-tree-id889 . -7) (undo-tree-id890 . -7) (undo-tree-id891 . -7) (undo-tree-id892 . -7) (undo-tree-id893 . -7) (undo-tree-id894 . -7) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) 16545) nil (26015 47228 968781 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16534) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#("i" 0 1 (fontified t)) . -16535) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16536) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#(" " 0 1 (fontified t)) . -16537) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) 16538) nil (26015 47228 968750 0) 0 nil])
([nil nil ((#("                window_id," 0 26 (fontified t)) . 16494) (undo-tree-id1002 . -26) (undo-tree-id1003 . -26) (undo-tree-id1004 . -26) (undo-tree-id1005 . -26) (undo-tree-id1006 . -26) (undo-tree-id1007 . -26) (undo-tree-id1008 . -26) (undo-tree-id1009 . -26) (undo-tree-id1010 . -26) (undo-tree-id1011 . -26) (t 26015 47228 979801 284000)) nil (26015 47237 93797 0) 0 nil])
([nil nil ((16494 . 16510)) nil (26015 47237 93785 0) 0 nil])
([nil nil ((16510 . 16512)) nil (26015 47237 93783 0) 0 nil])
([nil nil ((#("。" 0 1 (fontified t)) . -16510) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (#("。" 0 1 (fontified t)) . -16511) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 16512) nil (26015 47237 93781 0) 0 nil])
([nil nil ((16510 . 16512)) nil (26015 47470 437095 0) 0 nil])
([nil nil ((#("    camera: Camera,
    camera_controller: CameraController," 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 12 (fontified t) 12 18 (face font-lock-type-face fontified t) 18 24 (fontified t) 24 41 (face font-lock-variable-name-face fontified t) 41 43 (fontified t) 43 59 (face font-lock-type-face fontified t) 59 60 (fontified t)) . 3273) (undo-tree-id1114 . -60) (undo-tree-id1115 . -19) (undo-tree-id1116 . -19) (undo-tree-id1117 . -19) (undo-tree-id1118 . -19) (undo-tree-id1119 . -19) (undo-tree-id1120 . -60) (undo-tree-id1121 . -60) (undo-tree-id1122 . -60) (undo-tree-id1123 . -59) (undo-tree-id1124 . -50) (undo-tree-id1125 . -45) (undo-tree-id1126 . -40) (undo-tree-id1127 . -36) (undo-tree-id1128 . -33) (undo-tree-id1129 . -30) (undo-tree-id1130 . -29) (undo-tree-id1131 . -7) (undo-tree-id1132 . -6) (undo-tree-id1133 . -5) (undo-tree-id1134 . -4) (undo-tree-id1135 . -3) (undo-tree-id1136 . -2) (undo-tree-id1137 . -60) (t 26015 47471 876906 897000)) nil (26015 48076 886650 0) 0 nil] [nil nil ((17457 . 17478) (t 26015 47237 101366 18000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 17457) (undo-tree-id1083 . -21) (undo-tree-id1084 . -21) (undo-tree-id1085 . -21) (undo-tree-id1086 . -21) (undo-tree-id1087 . -21) (undo-tree-id1088 . -21) (undo-tree-id1089 . -21) (undo-tree-id1090 . -21) (undo-tree-id1091 . -21) (undo-tree-id1092 . -21) (undo-tree-id1093 . -21) (undo-tree-id1094 . -21) (undo-tree-id1095 . -21) (undo-tree-id1096 . -21) (undo-tree-id1097 . -21) (undo-tree-id1098 . -21) (undo-tree-id1099 . -21) (undo-tree-id1100 . -21) (undo-tree-id1101 . -21) (undo-tree-id1102 . -21) (undo-tree-id1103 . -21) (undo-tree-id1104 . -21) (undo-tree-id1105 . -21) (undo-tree-id1106 . -21) (undo-tree-id1107 . -21) (undo-tree-id1108 . -21) (undo-tree-id1109 . -21) (undo-tree-id1110 . -21) (undo-tree-id1111 . -1) (undo-tree-id1112 . -21) (undo-tree-id1113 . -21)) (26015 47470 95553 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3464 . 3465) (nil fontified nil 3273 . 3465) (3273 . 3465)) nil (26015 48076 886610 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18092 . 18093) (nil fontified nil 18092 . 18093) (nil fontified nil 18070 . 18092) (nil fontified nil 18069 . 18070) (nil fontified nil 18066 . 18069) (nil fontified nil 18060 . 18066) (nil fontified nil 18059 . 18060) (nil fontified nil 18053 . 18059) (nil fontified nil 18051 . 18053) (nil fontified nil 18044 . 18051) (nil fontified nil 18043 . 18044) (nil fontified nil 18042 . 18043) (nil fontified nil 18040 . 18042) (nil fontified nil 18039 . 18040) (nil fontified nil 18038 . 18039) (nil fontified nil 18037 . 18038) (nil fontified nil 18034 . 18037) (nil fontified nil 18010 . 18034) (nil fontified nil 17972 . 18010) (nil fontified nil 17953 . 17972) (nil fontified nil 17936 . 17953) (nil fontified nil 17933 . 17936) (nil fontified nil 17907 . 17933) (nil fontified nil 17906 . 17907) (nil fontified nil 17905 . 17906) (nil fontified nil 17895 . 17905) (nil fontified nil 17894 . 17895) (nil fontified nil 17892 . 17894) (nil fontified nil 17891 . 17892) (nil fontified nil 17880 . 17891) (nil fontified nil 17878 . 17880) (nil fontified nil 17866 . 17878) (nil fontified nil 17864 . 17866) (nil fontified nil 17860 . 17864) (nil fontified nil 17859 . 17860) (nil fontified nil 17856 . 17859) (nil fontified nil 17832 . 17856) (nil fontified nil 17779 . 17832) (nil fontified nil 17776 . 17779) (nil fontified nil 17750 . 17776) (nil fontified nil 17749 . 17750) (nil fontified nil 17739 . 17749) (nil fontified nil 17738 . 17739) (nil fontified nil 17725 . 17738) (nil fontified nil 17724 . 17725) (nil fontified nil 17722 . 17724) (nil fontified nil 17721 . 17722) (nil fontified nil 17717 . 17721) (nil fontified nil 17715 . 17717) (nil fontified nil 17703 . 17715) (nil fontified nil 17701 . 17703) (nil fontified nil 17697 . 17701) (nil fontified nil 17696 . 17697) (nil fontified nil 17693 . 17696) (nil fontified nil 17669 . 17693) (nil fontified nil 17654 . 17669) (nil fontified nil 17637 . 17654) (nil fontified nil 17634 . 17637) (nil fontified nil 17609 . 17634) (nil fontified nil 17608 . 17609) (nil fontified nil 17607 . 17608) (nil fontified nil 17606 . 17607) (nil fontified nil 17605 . 17606) (nil fontified nil 17603 . 17605) (nil fontified nil 17602 . 17603) (nil fontified nil 17601 . 17602) (nil fontified nil 17600 . 17601) (nil fontified nil 17598 . 17600) (nil fontified nil 17573 . 17598) (nil fontified nil 17572 . 17573) (nil fontified nil 17571 . 17572) (nil fontified nil 17570 . 17571) (nil fontified nil 17565 . 17570) (nil fontified nil 17563 . 17565) (nil fontified nil 17558 . 17563) (nil fontified nil 17556 . 17558) (nil fontified nil 17552 . 17556) (nil fontified nil 17551 . 17552) (nil fontified nil 17538 . 17551) (nil fontified nil 17533 . 17538) (nil fontified nil 17513 . 17533) (nil fontified nil 17511 . 17513) (nil fontified nil 17510 . 17511) (nil fontified nil 17509 . 17510) (nil fontified nil 17492 . 17509) (nil fontified nil 17478 . 17492) (17478 . 18093)) ((#("                   state.update();
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }" 0 14 (fontified nil) 14 19 (fontified nil) 19 31 (fontified nil) 31 32 (face (rainbow-delimiters-depth-7-face) fontified nil) 32 33 (face (rainbow-delimiters-depth-7-face) fontified nil) 33 35 (fontified nil) 35 55 (fontified nil) 55 60 (face font-lock-keyword-face fontified nil) 60 73 (fontified nil) 73 74 (face (rainbow-delimiters-depth-7-face) fontified nil) 74 78 (face font-lock-constant-face fontified nil) 78 80 (fontified nil) 80 85 (face font-lock-type-face fontified nil) 85 87 (fontified nil) 87 92 (face font-lock-type-face fontified nil) 92 93 (face (rainbow-delimiters-depth-7-face) fontified nil) 93 94 (fontified nil) 94 95 (face (rainbow-delimiters-depth-7-face) fontified nil) 95 96 (fontified nil) 96 120 (fontified nil) 120 122 (face font-lock-type-face fontified nil) 122 123 (face (rainbow-delimiters-depth-8-face) fontified nil) 123 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-8-face) fontified nil) 125 127 (fontified nil) 127 128 (syntax-table (1) fontified nil) 128 129 (fontified nil) 129 130 (face (rainbow-delimiters-depth-8-face) fontified nil) 130 131 (face (rainbow-delimiters-depth-8-face) fontified nil) 131 132 (fontified nil) 132 156 (fontified nil) 156 159 (face font-lock-comment-delimiter-face fontified nil) 159 176 (face font-lock-comment-face fontified nil) 176 191 (face font-lock-comment-face fontified nil) 191 215 (fontified nil) 215 218 (face font-lock-type-face fontified nil) 218 219 (face (rainbow-delimiters-depth-8-face) fontified nil) 219 223 (face font-lock-constant-face fontified nil) 223 225 (fontified nil) 225 237 (face font-lock-type-face fontified nil) 237 239 (fontified nil) 239 243 (face font-lock-type-face fontified nil) 243 244 (face (rainbow-delimiters-depth-8-face) fontified nil) 244 246 (fontified nil) 246 247 (syntax-table (1) fontified nil) 247 260 (fontified nil) 260 261 (face (rainbow-delimiters-depth-8-face) fontified nil) 261 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-8-face) fontified nil) 272 274 (fontified nil) 274 298 (fontified nil) 298 301 (face font-lock-comment-delimiter-face fontified nil) 301 354 (face font-lock-comment-face fontified nil) 354 378 (fontified nil) 378 381 (face font-lock-type-face fontified nil) 381 382 (face (rainbow-delimiters-depth-8-face) fontified nil) 382 386 (face font-lock-constant-face fontified nil) 386 388 (fontified nil) 388 400 (face font-lock-type-face fontified nil) 400 402 (fontified nil) 402 413 (face font-lock-type-face fontified nil) 413 414 (face (rainbow-delimiters-depth-8-face) fontified nil) 414 416 (fontified nil) 416 417 (syntax-table (1) fontified nil) 417 427 (fontified nil) 427 428 (face (rainbow-delimiters-depth-8-face) fontified nil) 428 429 (face (rainbow-delimiters-depth-8-face) fontified nil) 429 431 (fontified nil) 431 455 (fontified nil) 455 458 (face font-lock-comment-delimiter-face fontified nil) 458 475 (face font-lock-comment-face fontified nil) 475 494 (face font-lock-comment-face fontified nil) 494 532 (face font-lock-comment-face fontified nil) 532 556 (fontified nil) 556 559 (face font-lock-type-face fontified nil) 559 560 (face (rainbow-delimiters-depth-8-face) fontified nil) 560 561 (fontified nil) 561 562 (face (rainbow-delimiters-depth-8-face) fontified nil) 562 564 (fontified nil) 564 565 (syntax-table (1) fontified nil) 565 566 (fontified nil) 566 573 (face font-lock-constant-face fontified nil) 573 575 (fontified nil) 575 581 (face font-lock-preprocessor-face fontified nil) 581 582 (face (rainbow-delimiters-depth-8-face) fontified nil) 582 588 (face font-lock-string-face fontified nil) 588 591 (fontified nil) 591 592 (face (rainbow-delimiters-depth-8-face) fontified nil) 592 594 (fontified nil) 594 614 (fontified nil) 614 615 (face (rainbow-delimiters-depth-7-face) fontified nil rear-nonsticky nil)) . 17478) (undo-tree-id1056 . -474) (undo-tree-id1057 . -31) (undo-tree-id1058 . -474) (undo-tree-id1059 . -474) (undo-tree-id1060 . -474) (undo-tree-id1061 . -474) (undo-tree-id1062 . -474) (undo-tree-id1063 . -474) (undo-tree-id1064 . -474) (undo-tree-id1065 . -474) (undo-tree-id1066 . -474) (undo-tree-id1067 . -474) (undo-tree-id1068 . -474) (undo-tree-id1069 . -474) (undo-tree-id1070 . -474) (undo-tree-id1071 . -474) (undo-tree-id1072 . -474) (undo-tree-id1073 . -474) (undo-tree-id1074 . -474) (undo-tree-id1075 . -474) (undo-tree-id1076 . -474) (undo-tree-id1077 . -474) (undo-tree-id1078 . -474) (undo-tree-id1079 . -474) (undo-tree-id1080 . -474) (undo-tree-id1081 . -474) (undo-tree-id1082 . -31) (nil fontified t 17511 . 17513) (nil fontified t 17573 . 17574) (nil fontified t 17609 . 17610) (nil fontified t 17654 . 17669) (nil fontified t 17750 . 17752) (nil fontified t 17779 . 17832) (nil fontified t 17907 . 17909) (nil fontified t 17972 . 18010) (nil fontified t 18070 . 18072) (nil rear-nonsticky t 18092 . 18093)) (26015 47469 709799 0) 0 nil])
([nil nil ((#("
        let camera = Camera {
            // position the camera 1 unit up and 2 units back
            // +z is out of the screen
            eye: (0.0, 10.0, 2.0).into(),
            // have it look at the origin
            target: (0.0, 5.0, 0.0).into(),
            // which way is \"up\"
            up: cgmath::Vector3::unit_y(),
            aspect: config.width as f32 / config.height as f32,
            fovy: 45.0,
            znear: 0.1,
            zfar: 100.0,
        };
" 0 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 19 (face font-lock-variable-name-face fontified t) 19 22 (fontified t) 22 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-3-face) fontified t) 30 43 (fontified t) 43 46 (face font-lock-comment-delimiter-face fontified t) 46 93 (face font-lock-comment-face fontified t) 93 105 (fontified t) 105 108 (face font-lock-comment-delimiter-face fontified t) 108 132 (face font-lock-comment-face fontified t) 132 144 (fontified t) 144 147 (face font-lock-variable-name-face fontified t) 147 149 (fontified t) 149 150 (face (rainbow-delimiters-depth-4-face) fontified t) 150 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-4-face) fontified t) 165 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-4-face) fontified t) 171 172 (face (rainbow-delimiters-depth-4-face) fontified t) 172 186 (fontified t) 186 189 (face font-lock-comment-delimiter-face fontified t) 189 216 (face font-lock-comment-face fontified t) 216 217 (fontified t) 217 228 (fontified t) 228 234 (fontified t face font-lock-variable-name-face) 234 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-4-face)) 237 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-4-face)) 251 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-4-face)) 257 258 (fontified t face (rainbow-delimiters-depth-4-face)) 258 260 (fontified t) 260 272 (fontified t) 272 275 (face font-lock-comment-delimiter-face fontified t) 275 293 (face font-lock-comment-face fontified t) 293 305 (fontified t) 305 307 (face font-lock-variable-name-face fontified t) 307 309 (fontified t) 309 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 324 (face font-lock-type-face fontified t) 324 332 (fontified t) 332 333 (face (rainbow-delimiters-depth-4-face) fontified t) 333 334 (face (rainbow-delimiters-depth-4-face) fontified t) 334 348 (fontified t) 348 354 (face font-lock-variable-name-face fontified t) 354 369 (fontified t) 369 371 (face font-lock-keyword-face fontified t) 371 372 (fontified t) 372 375 (face font-lock-type-face fontified t) 375 392 (fontified t) 392 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 398 (face font-lock-type-face fontified t) 398 412 (fontified t) 412 416 (face font-lock-variable-name-face fontified t) 416 436 (fontified t) 436 441 (face font-lock-variable-name-face fontified t) 441 460 (fontified t) 460 464 (face font-lock-variable-name-face fontified t) 464 473 (fontified t) 473 481 (fontified t) 481 482 (face (rainbow-delimiters-depth-3-face) fontified t) 482 484 (fontified t)) . 7800) (undo-tree-id1150 . -484) (undo-tree-id1151 . -484) (undo-tree-id1152 . -484) (undo-tree-id1153 . -484) (undo-tree-id1154 . -483) (undo-tree-id1155 . -465) (undo-tree-id1156 . -437) (undo-tree-id1157 . -411) (undo-tree-id1158 . -301) (undo-tree-id1159 . -222) (undo-tree-id1160 . -178) (undo-tree-id1161 . -135) (undo-tree-id1162 . -95) (undo-tree-id1163 . -32) (undo-tree-id1164 . -1) (undo-tree-id1165 . -484) (t 26015 48076 896953 761000)) nil (26015 48096 91638 0) 0 nil])
([nil nil ((#("                   " 0 14 (fontified t) 14 19 (fontified t)) . -17478) 17509) ((17478 . 17497)) (26015 47469 380943 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 8173 . 8174) (nil fontified nil 7800 . 8174) (7800 . 8174)) nil (26015 48096 91622 0) 0 nil])
([nil nil ((17407 . 17409)) ((#(".." 0 1 (fontified t) 1 2 (fontified t)) . 17407) (undo-tree-id1047 . -2) (undo-tree-id1048 . -1) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -2)) (26015 47469 57167 0) 0 nil])
([nil nil ((#("        // ..." 0 8 (fontified t) 8 11 (face font-lock-comment-delimiter-face fontified t) 11 14 (face font-lock-comment-face fontified t)) . 8084) (undo-tree-id1139 . -14) (undo-tree-id1140 . -14) (undo-tree-id1141 . -14) (undo-tree-id1142 . -14) (undo-tree-id1143 . -14) (undo-tree-id1144 . -14) (undo-tree-id1145 . -14) (undo-tree-id1146 . -14) (undo-tree-id1147 . -14) (undo-tree-id1148 . -14) (undo-tree-id1149 . -14)) nil (26015 48096 91619 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -17407) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("." 0 1 (fontified t)) . -17408) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) 17409) ((17407 . 17409)) (26015 47468 696806 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8084) (undo-tree-id1138 . -1)) nil (26015 48096 91604 0) 0 nil])
([nil nil ((17407 . 17409)) ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . 17407) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (t 26015 47426 53605 460000)) (26015 47426 44432 0) 0 nil])
([nil nil ((#("        camera_uniform.update_view_proj(&camera);" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (face rust-ampersand-face fontified t) 41 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-3-face) fontified t) 48 49 (fontified t)) . 8215) (undo-tree-id1174 . -49) (undo-tree-id1175 . -49) (undo-tree-id1176 . -49) (undo-tree-id1177 . -49) (undo-tree-id1178 . -49) (undo-tree-id1179 . -49) (undo-tree-id1180 . -49) (t 26015 48096 100611 30000)) nil (26015 48122 342418 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 8215) (undo-tree-id1173 . -1)) nil (26015 48122 342410 0) 0 nil])
([nil nil ((8215 . 8216)) nil (26015 48122 342408 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -8215) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) 8216) nil (26015 48122 342407 0) 0 nil])
([nil nil ((#("        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (face rust-ampersand-face fontified t) 41 49 (fontified t) 49 50 (face rust-ampersand-face fontified t) 50 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 63 (fontified t) 63 66 (face font-lock-comment-delimiter-face fontified t) 66 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t rear-nonsticky t)) . 8085) (undo-tree-id1166 . -74)) nil (26015 48122 342399 0) 0 nil])
([nil nil ((8140 . 8149)) nil (26015 48122 342382 0) 0 nil])
([nil nil ((nil fontified nil 8222 . 8223) (nil fontified nil 8215 . 8222) (nil fontified nil 8212 . 8215) (nil fontified nil 8210 . 8212) (nil fontified nil 8209 . 8210) (nil fontified nil 8199 . 8209) (nil fontified nil 8198 . 8199) (nil fontified nil 8190 . 8198) (nil fontified nil 8189 . 8190) (nil fontified nil 8188 . 8189) (nil fontified nil 8149 . 8188) (8149 . 8223)) nil (26015 48122 342380 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -8149) 8201) nil (26015 48122 342372 0) 0 nil])
([nil nil ((#("        let camera_controller = CameraController::new(1.0);" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 29 (face font-lock-variable-name-face fontified t) 29 32 (fontified t) 32 48 (face font-lock-type-face fontified t) 48 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-3-face) fontified t) 54 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-3-face) fontified t) 58 59 (fontified t)) . 10520) (undo-tree-id1183 . -59) (undo-tree-id1184 . -59) (undo-tree-id1185 . -59) (undo-tree-id1186 . -59) (undo-tree-id1187 . -59) (undo-tree-id1188 . -59) (undo-tree-id1189 . -59) (t 26015 48122 352339 350000)) nil (26015 48129 761537 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10520) (undo-tree-id1182 . -1)) nil (26015 48129 761529 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10520) (undo-tree-id1181 . -1)) nil (26015 48129 761524 0) 0 nil])
([nil nil ((#("           
            camera,
            camera_controller," 0 16 (fontified t) 16 32 (fontified t) 32 62 (fontified t)) . 12004) (undo-tree-id1220 . -62) (undo-tree-id1221 . -31) (undo-tree-id1222 . -31) (undo-tree-id1223 . -31) (undo-tree-id1224 . -29) (undo-tree-id1225 . -28) (undo-tree-id1226 . -26) (undo-tree-id1227 . -25) (undo-tree-id1228 . -31) (undo-tree-id1229 . -24) (undo-tree-id1230 . -24) (undo-tree-id1231 . -62) (undo-tree-id1232 . -62) (undo-tree-id1233 . -62) (undo-tree-id1234 . -60) (undo-tree-id1235 . -59) (undo-tree-id1236 . -57) (undo-tree-id1237 . -52) (undo-tree-id1238 . -49) (undo-tree-id1239 . -47) (undo-tree-id1240 . -45) (undo-tree-id1241 . -42) (undo-tree-id1242 . -40) (undo-tree-id1243 . -39) (undo-tree-id1244 . -37) (undo-tree-id1245 . -36) (undo-tree-id1246 . -35) (undo-tree-id1247 . -34) (undo-tree-id1248 . -33) (undo-tree-id1249 . -32) (undo-tree-id1250 . -1) (undo-tree-id1251 . -31) (undo-tree-id1252 . -62) 12005 (t 26015 48129 770685 413000)) nil (26015 48151 98327 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12146 . 12147) (nil fontified nil 12004 . 12147) (12004 . 12147)) nil (26015 48151 98290 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12015) 12006) nil (26015 48151 98288 0) 0 nil])
([nil nil ((#(" // NEW!" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 8 (face font-lock-comment-face fontified t)) . 12046) (undo-tree-id1219 . -8)) nil (26015 48151 98287 0) 0 nil])
([nil nil ((#(" // NEW!" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face rear-nonsticky t fontified t)) . 12130) (undo-tree-id1209 . -8) (undo-tree-id1210 . -8) (undo-tree-id1211 . -8) (undo-tree-id1212 . -8) (undo-tree-id1213 . -8) (undo-tree-id1214 . -8) (undo-tree-id1215 . -7) (undo-tree-id1216 . -4) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8)) nil (26015 48151 98284 0) 0 nil])
([nil nil ((#("            // ..." 0 12 (fontified t) 12 15 (face font-lock-comment-delimiter-face fontified t) 15 18 (face font-lock-comment-face fontified t)) . 12078) (undo-tree-id1191 . -18) (undo-tree-id1192 . -18) (undo-tree-id1193 . -17) (undo-tree-id1194 . -15) (undo-tree-id1195 . -14) (undo-tree-id1196 . -13) (undo-tree-id1197 . -12) (undo-tree-id1198 . -11) (undo-tree-id1199 . -10) (undo-tree-id1200 . -18) (undo-tree-id1201 . -18) (undo-tree-id1202 . -18) (undo-tree-id1203 . -18) (undo-tree-id1204 . -18) (undo-tree-id1205 . -18) (undo-tree-id1206 . -18) (undo-tree-id1207 . -18) (undo-tree-id1208 . -18)) nil (26015 48151 98272 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12078) (undo-tree-id1190 . -1)) nil (26015 48151 98253 0) 0 nil])
([nil nil ((12111 . 12124)) nil (26015 48151 98241 0) 0 nil])
([nil nil ((12915 . 12928) (t 26015 48151 109615 892000)) nil (26015 48171 574773 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12988 . 12989) (nil fontified nil 12928 . 12989) (12928 . 12989)) nil (26015 48171 574771 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12928) 12984) nil (26015 48171 574766 0) 0 nil])
([nil nil ((#("        self.camera_controller.process_events(event)" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 36 (fontified t) 36 40 (fontified t) 40 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-3-face) fontified t)) . 13071) (undo-tree-id1322 . -52) (undo-tree-id1323 . -52) (undo-tree-id1324 . -52) (undo-tree-id1325 . -52) (undo-tree-id1326 . -52) (undo-tree-id1327 . -52) (undo-tree-id1328 . -52) (t 26015 48171 586288 598000)) nil (26015 48240 112893 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13071) (undo-tree-id1321 . -1)) nil (26015 48240 112885 0) 0 nil])
([nil nil ((13074 . 13078) (#("        " 0 8 (fontified nil)) . 13073) (13073 . 13081) (#("    " 0 4 (fontified nil)) . 13073) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (13073 . 13078) (#("        " 0 8 (fontified nil)) . 13072) (13072 . 13080) (#("    " 0 4 (fontified nil)) . 13072) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (13076 . 13077) (#("        " 0 8 (fontified nil)) . 13071) (13071 . 13079) (13071 . 13072)) nil (26015 48240 112882 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13752 . 13753) (nil fontified nil 13071 . 13753) (13071 . 13753)) nil (26015 48240 112872 0) 0 nil])
([nil nil ((13820 . 13828) (#("    " 0 4 (fontified t)) . 13820) (13804 . 13808) (13790 . 13794) (13761 . 13777) (#("            " 0 12 (fontified t)) . 13761) (13691 . 13707) (#("            " 0 12 (fontified t)) . 13691) (13680 . 13684) (13653 . 13669) (#("            " 0 12 (fontified t)) . 13653) (undo-tree-id1313 . -9) (13630 . 13646) (#("            " 0 12 (fontified t)) . 13630) (13587 . 13603) (#("            " 0 12 (fontified t)) . 13587) (13557 . 13561) (13543 . 13547) (13514 . 13530) (#("            " 0 12 (fontified t)) . 13514) (undo-tree-id1314 . -8) (13452 . 13468) (#("            " 0 12 (fontified t)) . 13452) (13405 . 13409) (13333 . 13337) (13306 . 13322) (#("            " 0 12 (fontified t)) . 13306) (13134 . 13150) (#("            " 0 12 (fontified t)) . 13134) (13101 . 13105) (13071 . 13079) (#("    " 0 4 (fontified t)) . 13071) 13024) nil (26015 48240 112869 0) 0 nil])
([nil nil ((#("input:" 0 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t)) . -13150) (undo-tree-id1295 . -6) (undo-tree-id1296 . -6) (undo-tree-id1297 . -6) (undo-tree-id1298 . -6) (undo-tree-id1299 . -6) (undo-tree-id1300 . -6) (undo-tree-id1301 . -6) (undo-tree-id1302 . -6) (undo-tree-id1303 . -6) (undo-tree-id1304 . -6) (undo-tree-id1305 . -6) (undo-tree-id1306 . -6) (undo-tree-id1307 . -6) (undo-tree-id1308 . -6) (undo-tree-id1309 . -6) (undo-tree-id1310 . -6) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) 13156) nil (26015 48240 112858 0) 0 nil])
([nil nil ((13150 . 13151)) nil (26015 48240 112840 0) 0 nil])
([nil nil ((13150 . 13155) (#("e" 0 1 (fontified nil)) . 13150) (13150 . 13151) (#("event" 0 5 (fontified nil)) . -13150) (13150 . 13155) (#("e" 0 1 (fontified t)) . -13150) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) 13151) nil (26015 48240 112838 0) 0 nil])
([nil nil ((13155 . 13156)) nil (26015 48240 112831 0) 0 nil])
([nil nil ((#("keycode" 0 7 (face font-lock-variable-name-face fontified t)) . -13217) (undo-tree-id1272 . -7) (undo-tree-id1273 . -7) (undo-tree-id1274 . -7) (undo-tree-id1275 . -7) (undo-tree-id1276 . -7) (undo-tree-id1277 . -7) (undo-tree-id1278 . -7) (undo-tree-id1279 . -7) (undo-tree-id1280 . -7) (undo-tree-id1281 . -7) (undo-tree-id1282 . -7) (undo-tree-id1283 . -7) (undo-tree-id1284 . -7) (undo-tree-id1285 . -7) (undo-tree-id1286 . -7) (undo-tree-id1287 . -7) (undo-tree-id1288 . -7) (undo-tree-id1289 . -7) 13224) nil (26015 48240 112829 0) 0 nil])
([nil nil ((#("virtual_" 0 8 (face font-lock-variable-name-face fontified t)) . -13209) (undo-tree-id1253 . -8) (undo-tree-id1254 . -8) (undo-tree-id1255 . -8) (undo-tree-id1256 . -8) (undo-tree-id1257 . -8) (undo-tree-id1258 . -8) (undo-tree-id1259 . -8) (undo-tree-id1260 . -8) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8) (undo-tree-id1263 . -8) (undo-tree-id1264 . -8) (undo-tree-id1265 . -8) (undo-tree-id1266 . -8) (undo-tree-id1267 . -8) (undo-tree-id1268 . -8) (undo-tree-id1269 . -8) (undo-tree-id1270 . -8) (undo-tree-id1271 . -8) 13217) nil (26015 48240 113123 0) 0 nil])
([nil nil ((13209 . 13211)) nil (26015 48295 581268 0) 0 nil] [nil nil ((13209 . 13210)) ((#("K" 0 1 (face font-lock-variable-name-face fontified t)) . 13209) (undo-tree-id1329 . -1)) (26015 48240 112780 0) 0 nil])
([nil nil ((#("                    p : Some(key)," 0 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (fontified t) 22 24 (fontified t) 24 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-6-face) fontified t) 29 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-6-face) fontified t) 33 34 (fontified t)) . 13189) (undo-tree-id1420 . -20) (undo-tree-id1421 . -20) (undo-tree-id1422 . -20) (undo-tree-id1423 . -20) (undo-tree-id1424 . -20) (undo-tree-id1425 . -20) (undo-tree-id1426 . -20) (undo-tree-id1427 . -20) (undo-tree-id1428 . -20) (undo-tree-id1429 . -20) (undo-tree-id1430 . -20) (undo-tree-id1431 . -20) (undo-tree-id1432 . -20) (undo-tree-id1433 . -20) (undo-tree-id1434 . -20) (undo-tree-id1435 . -20) (undo-tree-id1436 . -20) (undo-tree-id1437 . -20) (undo-tree-id1438 . -20) (undo-tree-id1439 . -21) (undo-tree-id1440 . 12) (undo-tree-id1441 . -21) (undo-tree-id1442 . -21) (undo-tree-id1443 . -21) (undo-tree-id1444 . -21) (undo-tree-id1445 . -22) (undo-tree-id1446 . -22) (undo-tree-id1447 . -22) (undo-tree-id1448 . -34)) nil (26015 48295 581266 0) 0 nil])
nil
([nil nil ((13189 . 13209)) nil (26015 48295 581234 0) 0 nil])
([nil nil ((13209 . 13211)) nil (26015 48295 581233 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -13209) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("h" 0 1 (fontified t)) . -13210) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) 13211) nil (26015 48295 581231 0) 0 nil])
([nil nil ((#("KeyboardInput" 0 13 (face font-lock-type-face fontified t)) . -13173) (undo-tree-id1401 . -13) (undo-tree-id1402 . -13) (undo-tree-id1403 . -11) (undo-tree-id1404 . -11) (undo-tree-id1405 . -11) (undo-tree-id1406 . -11) (undo-tree-id1407 . -11) (undo-tree-id1408 . -13) (undo-tree-id1409 . -13) (undo-tree-id1410 . -13) (undo-tree-id1411 . -13) (undo-tree-id1412 . -13) (undo-tree-id1413 . -13) 13186) nil (26015 48295 581224 0) 0 nil])
([nil nil ((13173 . 13176)) nil (26015 48295 581211 0) 0 nil])
([nil nil ((13173 . 13181) (#("Key" 0 3 (fontified nil)) . 13173) (13173 . 13176) (#("KeyEvent" 0 8 (fontified nil)) . -13173) (13173 . 13181) (#("Key" 0 3 (face font-lock-type-face fontified t)) . -13173) (undo-tree-id1391 . -3) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -3) (undo-tree-id1398 . -3) (undo-tree-id1399 . -3) (undo-tree-id1400 . -3) 13176) nil (26015 48295 581209 0) 0 nil])
([nil nil ((13204 . 13205)) nil (26015 48295 581197 0) 0 nil])
([nil nil ((13204 . 13216) (#("p" 0 1 (fontified nil)) . 13204) (13204 . 13205) (#("physical_key" 0 12 (fontified nil)) . -13204) (13204 . 13216) (#("p" 0 1 (fontified t)) . -13204) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 13205) nil (26015 48295 581195 0) 0 nil])
([nil nil ((13216 . 13219)) nil (26015 48295 581188 0) 0 nil])
([nil nil ((13219 . 13221)) nil (26015 48295 581187 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13218) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -13219) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (#("y" 0 1 (face font-lock-type-face fontified t)) . -13220) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) 13221) nil (26015 48295 581184 0) 0 nil])
([nil nil ((13218 . 13229)) nil (26015 48295 581157 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-type-face fontified t)) . -13226) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -13227) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -13228) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) 13229) nil (26015 48295 581155 0) 0 nil])
([nil nil ((13226 . 13232)) nil (26015 48295 581140 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) 13232) nil (26015 48295 581138 0) 0 nil])
([nil nil ((13231 . 13232)) nil (26015 48295 581130 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) 13232) nil (26015 48295 581129 0) 0 nil])
([nil nil ((13231 . 13232)) nil (26015 48295 581126 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil))) #s(yas--exit 13237 nil) 32 nil #s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil)) nil nil)) (13231 . 13237) (#("Code($1)$0" 0 10 (fontified nil)) . 13231) (13231 . 13241) (#("C" 0 1 (fontified nil)) . 13231) (13231 . 13232) (#("Code(…)" 0 7 (fontified nil)) . -13231) (13231 . 13238) (#("C" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) 13232) nil (26015 48295 581123 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13231 13237 #s(yas--snippet nil (#s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil))) #s(yas--exit 13237 nil) 32 nil #s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil)) nil nil))) nil (26015 48295 581111 0) 0 nil])
([nil nil ((13236 . 13239)) nil (26015 48295 581109 0) 0 nil])
([nil nil ((13240 . 13241)) nil (26015 48295 581105 0) 0 nil])
([nil nil ((#("Left" 0 4 (face font-lock-type-face fontified t)) . -13629) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) 13633 (t 26015 48295 593496 717000)) nil (26015 48332 719894 0) 0 nil])
([nil nil ((#("MouseButton::" 0 11 (face font-lock-type-face fontified t) 11 13 (fontified t)) . -13616) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) (undo-tree-id1470 . -6) (undo-tree-id1471 . -6) (undo-tree-id1472 . -6) (undo-tree-id1473 . -6) (undo-tree-id1474 . -6) (undo-tree-id1475 . -6) (undo-tree-id1476 . -11) (undo-tree-id1477 . -11) (undo-tree-id1478 . -11) (undo-tree-id1479 . -11) (undo-tree-id1480 . -11) (undo-tree-id1481 . -11) (undo-tree-id1482 . -11) (undo-tree-id1483 . -11) (undo-tree-id1484 . -11) (undo-tree-id1485 . -11) (undo-tree-id1486 . -11) (undo-tree-id1487 . -11) (undo-tree-id1488 . -11) (undo-tree-id1489 . -13) (undo-tree-id1490 . -13) (undo-tree-id1491 . -13) (undo-tree-id1492 . -13) (undo-tree-id1493 . -13) (undo-tree-id1494 . -13) (undo-tree-id1495 . -13) (undo-tree-id1496 . -13) (undo-tree-id1497 . -13) (undo-tree-id1498 . -13) (undo-tree-id1499 . -13) 13629) nil (26015 48332 719882 0) 0 nil])
([nil nil ((13616 . 13620)) nil (26015 48332 719850 0) 0 nil])
([nil nil ((256 . 269) (13616 . 13616) (13616 . 13627) (#("Mous" 0 4 (fontified nil)) . 13616) (13616 . 13620) (#("MouseButton (use winit::event::MouseButton)" 0 43 (fontified nil)) . -13616) (13616 . 13659) (#("Mous" 0 4 (face font-lock-type-face fontified t)) . -13616) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -3) (undo-tree-id1463 . -3) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) 13620) nil (26015 48332 719848 0) 0 nil])
([nil nil ((13640 . 13643)) nil (26015 48332 719832 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13642 13646 #s(yas--snippet nil nil #s(yas--exit 13646 nil) 33 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 13646 nil) 33 nil nil nil nil)) (13642 . 13646) (#("Left$0" 0 6 (fontified nil)) . 13642) (13642 . 13648) (#("L" 0 1 (fontified nil)) . 13642) (13642 . 13643) (#("Left" 0 4 (fontified nil)) . -13642) (13642 . 13646) (#("L" 0 1 (face font-lock-type-face fontified t)) . -13642) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) 13643) nil (26015 48453 682490 0) 0 nil])
([nil nil ((17184 . 17197)) nil (26015 48468 152177 0) 0 nil] [nil nil ((17282 . 17299) (t 26015 48332 731409 247000)) ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 17282) (undo-tree-id1801 . -17) (undo-tree-id1802 . -17) (undo-tree-id1803 . -17) (undo-tree-id1804 . -17) (undo-tree-id1805 . -17) (undo-tree-id1806 . -17) (undo-tree-id1807 . -17) (undo-tree-id1808 . -17) (undo-tree-id1809 . -17) (undo-tree-id1810 . -17) (undo-tree-id1811 . -17) (undo-tree-id1812 . -17) (undo-tree-id1813 . -17) (undo-tree-id1814 . -17) (undo-tree-id1815 . -17) (undo-tree-id1816 . -17) (undo-tree-id1817 . -17) (undo-tree-id1818 . -17) (undo-tree-id1819 . -17) (undo-tree-id1820 . -17) (undo-tree-id1821 . -17) (undo-tree-id1822 . -17) (undo-tree-id1823 . -17) (undo-tree-id1824 . -17) (undo-tree-id1825 . -17) (undo-tree-id1826 . -17) (undo-tree-id1827 . -17) (undo-tree-id1828 . -17) (undo-tree-id1829 . -17) (undo-tree-id1830 . -17) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -17) (undo-tree-id1841 . -17) (undo-tree-id1842 . -17) (undo-tree-id1843 . -17) (undo-tree-id1844 . -17) (undo-tree-id1845 . -17) (undo-tree-id1846 . -17) (undo-tree-id1847 . -17) (undo-tree-id1848 . -17) (undo-tree-id1849 . -17) (undo-tree-id1850 . -17) (undo-tree-id1851 . -17) (undo-tree-id1852 . -17) (undo-tree-id1853 . -17) (undo-tree-id1854 . -17) (undo-tree-id1855 . -17) (undo-tree-id1856 . -17) (undo-tree-id1857 . -17) (undo-tree-id1858 . -17) (undo-tree-id1859 . -17) (undo-tree-id1860 . -17) (undo-tree-id1861 . -17) (undo-tree-id1862 . -17) (undo-tree-id1863 . -17) (undo-tree-id1864 . -17) (undo-tree-id1865 . -17) (undo-tree-id1866 . -17) (undo-tree-id1867 . -17) (undo-tree-id1868 . -17) (undo-tree-id1869 . -17) (undo-tree-id1870 . -17) (undo-tree-id1871 . -17) (undo-tree-id1872 . -17) (undo-tree-id1873 . -17) (undo-tree-id1874 . -17) (undo-tree-id1875 . -17) (undo-tree-id1876 . -17) (undo-tree-id1877 . -17) (undo-tree-id1878 . -17) (undo-tree-id1879 . -17) (undo-tree-id1880 . -17) (undo-tree-id1881 . -17) (undo-tree-id1882 . -17) (undo-tree-id1883 . -17) (undo-tree-id1884 . -17) (undo-tree-id1885 . -17) (undo-tree-id1886 . -17) (undo-tree-id1887 . -17) (undo-tree-id1888 . -17) (undo-tree-id1889 . -17) (undo-tree-id1890 . -17) (undo-tree-id1891 . -17) (undo-tree-id1892 . -17) (undo-tree-id1893 . -17) (undo-tree-id1894 . -17) (undo-tree-id1895 . -17) (undo-tree-id1896 . -17) (undo-tree-id1897 . -17) (undo-tree-id1898 . -17) (undo-tree-id1899 . -17) (undo-tree-id1900 . -17) (undo-tree-id1901 . -17) (undo-tree-id1902 . -17) (undo-tree-id1903 . -17) (undo-tree-id1904 . -17) (undo-tree-id1905 . -17) (undo-tree-id1906 . -17) (undo-tree-id1907 . -17) (undo-tree-id1908 . -17) (undo-tree-id1909 . -17) (undo-tree-id1910 . -17) (undo-tree-id1911 . -17) (undo-tree-id1912 . -17) (undo-tree-id1913 . -17) (undo-tree-id1914 . -17) (undo-tree-id1915 . -17) (undo-tree-id1916 . -17) (undo-tree-id1917 . -17) (undo-tree-id1918 . -17) (undo-tree-id1919 . -17) (undo-tree-id1920 . -17) (undo-tree-id1921 . -17) (undo-tree-id1922 . -17) (undo-tree-id1923 . -17) (undo-tree-id1924 . -17) (undo-tree-id1925 . -17) (undo-tree-id1926 . -17) (undo-tree-id1927 . -17) (undo-tree-id1928 . -17) (undo-tree-id1929 . -17) (undo-tree-id1930 . -17) (undo-tree-id1931 . -17) (undo-tree-id1932 . -17) (undo-tree-id1933 . -17) (undo-tree-id1934 . -17) (undo-tree-id1935 . -17) (undo-tree-id1936 . -17) (undo-tree-id1937 . -17) (undo-tree-id1938 . -17) (undo-tree-id1939 . -17) (undo-tree-id1940 . -17) (undo-tree-id1941 . -17) (undo-tree-id1942 . -17) (undo-tree-id1943 . -17) (undo-tree-id1944 . -17) (undo-tree-id1945 . -17) (undo-tree-id1946 . -17) (undo-tree-id1947 . -17) (undo-tree-id1948 . -17) (undo-tree-id1949 . -17) (undo-tree-id1950 . -17) (undo-tree-id1951 . -17) (undo-tree-id1952 . -17) (undo-tree-id1953 . -17) (undo-tree-id1954 . -17) (undo-tree-id1955 . -17) (undo-tree-id1956 . -17) (undo-tree-id1957 . -17) (undo-tree-id1958 . -17) (undo-tree-id1959 . -17) (undo-tree-id1960 . -17) (undo-tree-id1961 . -17) (undo-tree-id1962 . -17) (undo-tree-id1963 . -17) (undo-tree-id1964 . -17) (undo-tree-id1965 . -17) (undo-tree-id1966 . -17) (undo-tree-id1967 . -17) (undo-tree-id1968 . -17) (undo-tree-id1969 . -17) (undo-tree-id1970 . -17) (undo-tree-id1971 . -17) (undo-tree-id1972 . -17) (undo-tree-id1973 . -17) (undo-tree-id1974 . -17) (undo-tree-id1975 . -17) (undo-tree-id1976 . -17) (undo-tree-id1977 . -17) (undo-tree-id1978 . -17) (undo-tree-id1979 . -17) (undo-tree-id1980 . -17) (undo-tree-id1981 . -17) (undo-tree-id1982 . -17) (undo-tree-id1983 . -17) (undo-tree-id1984 . -17) (undo-tree-id1985 . -17) (undo-tree-id1986 . -17) (undo-tree-id1987 . -17) (undo-tree-id1988 . -17) (undo-tree-id1989 . -17) (undo-tree-id1990 . -17) (undo-tree-id1991 . -17) (undo-tree-id1992 . -17) (undo-tree-id1993 . -17) (undo-tree-id1994 . -17) (undo-tree-id1995 . -17) (undo-tree-id1996 . -17) (undo-tree-id1997 . -17) (undo-tree-id1998 . -17) (undo-tree-id1999 . -17) (undo-tree-id2000 . -17) (undo-tree-id2001 . -17) (undo-tree-id2002 . -17) (undo-tree-id2003 . -17) (undo-tree-id2004 . -17) (undo-tree-id2005 . -17) (undo-tree-id2006 . -17) (undo-tree-id2007 . -17) (undo-tree-id2008 . -17) (undo-tree-id2009 . -17) (undo-tree-id2010 . -17) (undo-tree-id2011 . -17) (undo-tree-id2012 . -17) (undo-tree-id2013 . -17) (undo-tree-id2014 . -17) (undo-tree-id2015 . -17) (undo-tree-id2016 . -17) (undo-tree-id2017 . -17) (undo-tree-id2018 . -1) (undo-tree-id2019 . -17) (undo-tree-id2020 . -17) (undo-tree-id2021 . -17) (undo-tree-id2022 . -17) (undo-tree-id2023 . -17) (undo-tree-id2024 . -17) (undo-tree-id2025 . -17)) (26015 48452 549809 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17201 . 17202) (nil fontified nil 17197 . 17202) (17197 . 17202)) nil (26015 48468 152176 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17575 . 17576) (nil fontified nil 17299 . 17576) (17299 . 17576)) ((#("            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }" 0 12 (fontified nil) 12 17 (face font-lock-type-face fontified nil) 17 19 (fontified nil) 19 30 (face font-lock-type-face fontified nil) 30 31 (fontified nil) 31 32 (face (rainbow-delimiters-depth-6-face) fontified nil) 32 33 (fontified nil) 33 49 (fontified nil) 49 54 (face font-lock-variable-name-face fontified nil) 54 56 (fontified nil) 56 67 (face font-lock-type-face fontified nil) 67 69 (fontified nil) 69 80 (face font-lock-type-face fontified nil) 80 81 (face (rainbow-delimiters-depth-7-face) fontified nil) 81 89 (fontified nil) 89 90 (face (rainbow-delimiters-depth-7-face) fontified nil) 90 92 (fontified nil) 92 111 (fontified nil) 111 114 (face font-lock-comment-delimiter-face fontified nil) 114 150 (face font-lock-comment-face fontified nil) 150 162 (fontified nil) 162 163 (face (rainbow-delimiters-depth-6-face) fontified nil) 163 165 (fontified nil) 165 166 (syntax-table (1) fontified nil) 166 167 (fontified nil) 167 169 (face font-lock-keyword-face fontified nil) 169 190 (fontified nil) 190 191 (face (rainbow-delimiters-depth-6-face) fontified nil) 191 192 (fontified nil) 192 245 (fontified nil) 245 246 (face (rainbow-delimiters-depth-7-face) fontified nil) 246 262 (fontified nil) 262 263 (face (rainbow-delimiters-depth-7-face) fontified nil) 263 264 (fontified nil) 264 276 (fontified nil) 276 277 (face (rainbow-delimiters-depth-6-face) fontified nil rear-nonsticky nil)) . 17299) (undo-tree-id1638 . -15) (undo-tree-id1639 . -15) (undo-tree-id1640 . -15) (undo-tree-id1641 . -15) (undo-tree-id1642 . -15) (undo-tree-id1643 . -15) (undo-tree-id1644 . -15) (undo-tree-id1645 . -15) (undo-tree-id1646 . -15) (undo-tree-id1647 . -15) (undo-tree-id1648 . -15) (undo-tree-id1649 . -15) (undo-tree-id1650 . -15) (undo-tree-id1651 . -15) (undo-tree-id1652 . -15) (undo-tree-id1653 . -15) (undo-tree-id1654 . -15) (undo-tree-id1655 . -15) (undo-tree-id1656 . -15) (undo-tree-id1657 . -15) (undo-tree-id1658 . -15) (undo-tree-id1659 . -15) (undo-tree-id1660 . -15) (undo-tree-id1661 . -15) (undo-tree-id1662 . -15) (undo-tree-id1663 . -15) (undo-tree-id1664 . -15) (undo-tree-id1665 . -15) (undo-tree-id1666 . -15) (undo-tree-id1667 . -15) (undo-tree-id1668 . -15) (undo-tree-id1669 . -15) (undo-tree-id1670 . -15) (undo-tree-id1671 . -15) (undo-tree-id1672 . -15) (undo-tree-id1673 . -15) (undo-tree-id1674 . -15) (undo-tree-id1675 . -15) (undo-tree-id1676 . -15) (undo-tree-id1677 . -15) (undo-tree-id1678 . -15) (undo-tree-id1679 . -15) (undo-tree-id1680 . -15) (undo-tree-id1681 . -15) (undo-tree-id1682 . -15) (undo-tree-id1683 . -15) (undo-tree-id1684 . -15) (undo-tree-id1685 . -15) (undo-tree-id1686 . -15) (undo-tree-id1687 . -15) (undo-tree-id1688 . -15) (undo-tree-id1689 . -15) (undo-tree-id1690 . -17) (undo-tree-id1691 . -17) (undo-tree-id1692 . -17) (undo-tree-id1693 . -17) (undo-tree-id1694 . -17) (undo-tree-id1695 . -17) (undo-tree-id1696 . -17) (undo-tree-id1697 . -17) (undo-tree-id1698 . -17) (undo-tree-id1699 . -17) (undo-tree-id1700 . -17) (undo-tree-id1701 . -175) (undo-tree-id1702 . -175) (undo-tree-id1703 . -175) (undo-tree-id1704 . -175) (undo-tree-id1705 . -175) (undo-tree-id1706 . -175) (undo-tree-id1707 . -175) (undo-tree-id1708 . -175) (undo-tree-id1709 . -175) (undo-tree-id1710 . -175) (undo-tree-id1711 . -175) (undo-tree-id1712 . -175) (undo-tree-id1713 . -175) (undo-tree-id1714 . -175) (undo-tree-id1715 . -175) (undo-tree-id1716 . -175) (undo-tree-id1717 . -175) (undo-tree-id1718 . -175) (undo-tree-id1719 . -175) (undo-tree-id1720 . -175) (undo-tree-id1721 . -175) (undo-tree-id1722 . -63) (undo-tree-id1723 . -23) (undo-tree-id1724 . -23) (undo-tree-id1725 . -23) (undo-tree-id1726 . -23) (undo-tree-id1727 . -23) (undo-tree-id1728 . -23) (undo-tree-id1729 . -23) (undo-tree-id1730 . -23) (undo-tree-id1731 . -210) (undo-tree-id1732 . -210) (undo-tree-id1733 . -210) (undo-tree-id1734 . -210) (undo-tree-id1735 . -210) (undo-tree-id1736 . -165) (undo-tree-id1737 . -165) (undo-tree-id1738 . -165) (undo-tree-id1739 . -165) (undo-tree-id1740 . -165) (undo-tree-id1741 . -165) (undo-tree-id1742 . -165) (undo-tree-id1743 . -165) (undo-tree-id1744 . -165) (undo-tree-id1745 . -165) (undo-tree-id1746 . -165) (undo-tree-id1747 . -165) (undo-tree-id1748 . -165) (undo-tree-id1749 . -165) (undo-tree-id1750 . -165) (undo-tree-id1751 . -165) (undo-tree-id1752 . -165) (undo-tree-id1753 . -165) (undo-tree-id1754 . -165) (undo-tree-id1755 . -27) (undo-tree-id1756 . -27) (undo-tree-id1757 . -27) (undo-tree-id1758 . -27) (undo-tree-id1759 . -27) (undo-tree-id1760 . -27) (undo-tree-id1761 . -27) (undo-tree-id1762 . -27) (undo-tree-id1763 . -27) (undo-tree-id1764 . -27) (undo-tree-id1765 . -27) (undo-tree-id1766 . -27) (undo-tree-id1767 . -27) (undo-tree-id1768 . -65) (undo-tree-id1769 . -23) (undo-tree-id1770 . -23) (undo-tree-id1771 . -23) (undo-tree-id1772 . -23) (undo-tree-id1773 . -23) (undo-tree-id1774 . -23) (undo-tree-id1775 . -23) (undo-tree-id1776 . -23) (undo-tree-id1777 . -23) (undo-tree-id1778 . -23) (undo-tree-id1779 . -23) (undo-tree-id1780 . -23) (undo-tree-id1781 . -23) (undo-tree-id1782 . -23) (undo-tree-id1783 . -23) (undo-tree-id1784 . -23) (undo-tree-id1785 . -23) (undo-tree-id1786 . -23) (undo-tree-id1787 . -23) (undo-tree-id1788 . -23) (undo-tree-id1789 . -23) (undo-tree-id1790 . -23) (undo-tree-id1791 . -30) (undo-tree-id1792 . -30) (undo-tree-id1793 . -30) (undo-tree-id1794 . -30) (undo-tree-id1795 . -30) (undo-tree-id1796 . -30) (undo-tree-id1797 . -30) (undo-tree-id1798 . -30) (undo-tree-id1799 . -30) (undo-tree-id1800 . -17) (nil fontified t 17562 . 17563) (nil fontified t 17561 . 17562) (nil fontified t 17545 . 17561) (nil fontified t 17544 . 17545) (nil fontified t 17491 . 17544) (nil fontified t 17490 . 17491) (nil fontified t 17489 . 17490) (nil fontified t 17468 . 17489) (nil fontified t 17466 . 17468) (nil fontified t 17465 . 17466) (nil fontified t 17464 . 17465) (nil fontified t 17462 . 17464) (nil fontified t 17461 . 17462) (nil fontified t 17449 . 17461) (nil fontified t 17413 . 17449) (nil fontified t 17410 . 17413) (nil fontified t 17391 . 17410) (nil fontified t 17389 . 17391) (nil fontified t 17388 . 17389) (nil fontified t 17380 . 17388) (nil fontified t 17379 . 17380) (nil fontified t 17368 . 17379) (nil fontified t 17366 . 17368) (nil fontified t 17355 . 17366) (nil fontified t 17353 . 17355) (nil fontified t 17348 . 17353) (nil fontified t 17332 . 17348) (nil fontified t 17331 . 17332) (nil fontified t 17330 . 17331) (nil fontified t 17329 . 17330) (nil fontified t 17318 . 17329) (nil fontified t 17316 . 17318) (nil fontified t 17311 . 17316) (nil fontified t 17299 . 17311) (nil rear-nonsticky t 17575 . 17576)) (26015 48452 306429 0) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -17197) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (#("v" 0 1 (face font-lock-type-face fontified t)) . -17198) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -17199) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -17200) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#("t" 0 1 (face font-lock-type-face rear-nonsticky t fontified t)) . -17201) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) 17202) nil (26015 48468 152171 0) 0 nil])
([nil nil ((17567 . 17583) (#("            " 0 12 (fontified t)) . 17567) (17507 . 17511) (17445 . 17461) (#("            " 0 12 (fontified t)) . 17445) (17399 . 17403) (17336 . 17340) (#("            " 0 12 (fontified t)) . -17299) 17260) ((17299 . 17311) (#("    " 0 4 (fontified t)) . 17336) (#("    " 0 4 (fontified t)) . 17399) (17445 . 17457) (#("                " 0 16 (fontified t)) . 17445) (#("    " 0 4 (fontified t)) . 17507) (17567 . 17579) (#("                " 0 16 (fontified t)) . 17567)) (26015 48452 1603 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17473 . 17474) (nil fontified nil 17197 . 17474) (17197 . 17474)) nil (26015 48468 152110 0) 0 nil])
([nil nil ((#("Event" 0 5 (face font-lock-type-face fontified t)) . -17299) (undo-tree-id1520 . -3) (undo-tree-id1521 . -3) (undo-tree-id1522 . -3) (undo-tree-id1523 . -3) (undo-tree-id1524 . -3) (undo-tree-id1525 . -3) (undo-tree-id1526 . -3) (undo-tree-id1527 . -3) (undo-tree-id1528 . -3) (undo-tree-id1529 . -3) (undo-tree-id1530 . -3) (undo-tree-id1531 . -3) (undo-tree-id1532 . -3) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -3) (undo-tree-id1558 . -3) (undo-tree-id1559 . -3) (undo-tree-id1560 . -3) (undo-tree-id1561 . -3) (undo-tree-id1562 . -3) (undo-tree-id1563 . -3) (undo-tree-id1564 . -3) (undo-tree-id1565 . -3) (undo-tree-id1566 . -3) (undo-tree-id1567 . -3) (undo-tree-id1568 . -3) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -5) (undo-tree-id1573 . -5) (undo-tree-id1574 . -5) (undo-tree-id1575 . -5) (undo-tree-id1576 . -5) (undo-tree-id1577 . -5) (undo-tree-id1578 . -5) (undo-tree-id1579 . -5) (undo-tree-id1580 . -5) (undo-tree-id1581 . -5) (undo-tree-id1582 . -5) (undo-tree-id1583 . -5) (undo-tree-id1584 . -5) (undo-tree-id1585 . -5) 17304 (t 26015 48364 714780 340000)) ((17299 . 17304)) (26015 48451 769766 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -17197) 17181) nil (26015 48468 152108 0) 0 nil])
([nil nil ((17299 . 17300)) ((#("W" 0 1 (face font-lock-type-face fontified t)) . 17299) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1)) (26015 48451 540297 0) 0 nil])
([nil nil ((17462 . 17463)) nil (26015 48468 152102 0) 0 nil])
([nil nil ((17299 . 17310) (#("W" 0 1 (fontified nil)) . 17299) (17299 . 17300) (#("WindowEvent" 0 11 (fontified nil)) . -17299) (17299 . 17310) (#("W" 0 1 (face font-lock-type-face fontified t)) . -17299) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 17300) ((17299 . 17300) (#("WindowEvent" 0 11 (fontified nil)) . 17299) (17299 . 17310) (#("W" 0 1 (fontified nil)) . 17299) (17299 . 17300) (#("WindowEvent" 0 11 (face font-lock-type-face fontified t)) . 17299) (undo-tree-id1586 . -11) (undo-tree-id1587 . -11) (undo-tree-id1588 . -11) (undo-tree-id1589 . -11) (undo-tree-id1590 . -11) (undo-tree-id1591 . -11) (undo-tree-id1592 . -11) (undo-tree-id1593 . -11) (undo-tree-id1594 . -11) (undo-tree-id1595 . -11) (undo-tree-id1596 . -11) (undo-tree-id1597 . -11) (undo-tree-id1598 . -11) (undo-tree-id1599 . -11) (undo-tree-id1600 . -11) (undo-tree-id1601 . -11) (undo-tree-id1602 . -8) (undo-tree-id1603 . -8) (undo-tree-id1604 . -8) (undo-tree-id1605 . -8) (undo-tree-id1606 . -8) (undo-tree-id1607 . -8) (undo-tree-id1608 . -8) (undo-tree-id1609 . -8) (undo-tree-id1610 . -8) (undo-tree-id1611 . -8) (undo-tree-id1612 . -8) (undo-tree-id1613 . -8) (undo-tree-id1614 . -8) (undo-tree-id1615 . -8) (undo-tree-id1616 . -8) (undo-tree-id1617 . -8) (undo-tree-id1618 . -8) (undo-tree-id1619 . -8) (undo-tree-id1620 . -8) (undo-tree-id1621 . -8) (undo-tree-id1622 . -8) (undo-tree-id1623 . -8) (undo-tree-id1624 . -8) (undo-tree-id1625 . -8) (undo-tree-id1626 . -8) (undo-tree-id1627 . -8) (t 26015 48386 124214 65000)) (26015 48386 112707 0) 0 nil])
([nil nil ((#("DeviceEvent" 0 11 (face font-lock-type-face fontified t)) . -17241) (undo-tree-id2098 . -11) (undo-tree-id2099 . -11) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -11) (undo-tree-id2108 . -11) (undo-tree-id2109 . -11) (undo-tree-id2110 . -11) (undo-tree-id2111 . -11) (undo-tree-id2112 . -11) (undo-tree-id2113 . -11) (undo-tree-id2114 . -11) 17252 (t 26015 48468 164103 340000)) nil (26015 48483 278316 0) 0 nil])
nil
([nil nil ((17241 . 17247)) nil (26015 48483 278298 0) 0 nil])
([nil nil ((269 . 282) (17241 . 17241) (17241 . 17252) (#("Device" 0 6 (fontified nil)) . 17241) (17241 . 17247) (#("DeviceEvent (use winit::event::DeviceEvent)" 0 43 (fontified nil)) . -17241) (17241 . 17284) (#("Device" 0 6 (face font-lock-type-face fontified t)) . -17241) (undo-tree-id2081 . -6) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -3) (undo-tree-id2088 . -3) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -5) (undo-tree-id2092 . -5) (undo-tree-id2093 . -6) (undo-tree-id2094 . -6) (undo-tree-id2095 . -6) (undo-tree-id2096 . -6) (undo-tree-id2097 . -6) 17247) nil (26015 48483 278292 0) 0 nil])
([nil nil ((#("        self.camera_controller.update_camera(&mut self.camera);
        self.camera_uniform.update_view_proj(&self.camera);" 0 3 (fontified t) 3 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 37 (fontified t) 37 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-3-face) fontified t) 45 46 (face rust-ampersand-face fontified t) 46 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-3-face) fontified t) 62 64 (fontified t) 64 72 (fontified t) 72 76 (face font-lock-keyword-face fontified t) 76 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-3-face) fontified t) 109 110 (face rust-ampersand-face fontified t) 110 114 (face font-lock-keyword-face fontified t) 114 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) fontified t) 122 123 (fontified t)) . 13897) (undo-tree-id2115 . -123) (undo-tree-id2116 . -123) (undo-tree-id2117 . -123) (undo-tree-id2118 . -123) (undo-tree-id2119 . -122) (undo-tree-id2120 . -113) (undo-tree-id2121 . -102) (undo-tree-id2122 . -96) (undo-tree-id2123 . -87) (undo-tree-id2124 . -82) (undo-tree-id2125 . -78) (undo-tree-id2126 . -75) (undo-tree-id2127 . -73) (undo-tree-id2128 . -7) (undo-tree-id2129 . -6) (undo-tree-id2130 . -5) (undo-tree-id2131 . -4) (undo-tree-id2132 . -2) (undo-tree-id2133 . -1) (undo-tree-id2134 . -123) (t 26015 48483 290579 350000)) nil (26015 48538 522001 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14033 . 14034) (nil fontified nil 13897 . 14034) (13897 . 14034)) nil (26015 48538 521975 0) 0 nil])
([nil nil ((13961 . 13969) (#("    " 0 4 (fontified t)) . 13961) 14034) nil (26015 48538 521973 0) 0 nil])
([nil nil ((13897 . 13905) (#("    " 0 4 (fontified t)) . 13897) 13918) nil (26015 48538 521967 0) 0 nil])
([nil nil ((#("    fn update(&mut self) {" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t) 14 15 (face rust-ampersand-face fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t)) . 13870) (undo-tree-id2141 . -26) (undo-tree-id2142 . -26) (undo-tree-id2143 . -26) (undo-tree-id2144 . -26) (undo-tree-id2145 . -25) (undo-tree-id2146 . -21) (undo-tree-id2147 . -19) (undo-tree-id2148 . -17) (undo-tree-id2149 . -16) (undo-tree-id2150 . -15) (undo-tree-id2151 . -26) (t 26015 48538 536632 739000)) nil (26015 48558 239985 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13915 . 13916) (nil fontified nil 13870 . 13916) (13870 . 13916)) nil (26015 48558 239972 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -13915) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) 13916) nil (26015 48605 848372 0) 0 nil])
([nil nil ((14446 . 14450) (#("    " 0 4 (fontified nil)) . 14445) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (14445 . 14450) (#("    " 0 4 (fontified nil)) . -14436) (14448 . 14449)) nil (26015 48634 15440 0) 0 nil] [nil nil ((#("        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
             * old_position)
            .into();" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 38 (fontified t) 38 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 66 (face font-lock-type-face fontified t) 66 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-4-face) fontified t) 84 85 (face (rainbow-delimiters-depth-5-face) fontified t) 85 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-5-face) fontified t) 99 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-5-face) fontified t) 105 106 (face (rainbow-delimiters-depth-5-face) fontified t) 106 108 (fontified t) 108 114 (face font-lock-constant-face fontified t) 114 116 (fontified t) 116 119 (face font-lock-type-face fontified t) 119 120 (face (rainbow-delimiters-depth-5-face) fontified t) 120 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-5-face) fontified t) 124 125 (face (rainbow-delimiters-depth-4-face) fontified t) 125 126 (fontified t) 126 137 (fontified t) 137 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-3-face) fontified t) 154 155 (fontified t) 155 171 (fontified t) 171 172 (fontified t) 172 173 (face (rainbow-delimiters-depth-3-face) fontified t) 173 174 (face (rainbow-delimiters-depth-3-face) fontified t) 174 175 (fontified t)) . 14273) (undo-tree-id2159 . -175) (undo-tree-id2160 . -175) (undo-tree-id2161 . -175) (undo-tree-id2162 . -175) (undo-tree-id2163 . -144) (undo-tree-id2164 . -140) (undo-tree-id2165 . -50) (undo-tree-id2166 . -49) (undo-tree-id2167 . -47) (undo-tree-id2168 . -46) (undo-tree-id2169 . -45) (undo-tree-id2170 . -5) (undo-tree-id2171 . -4) (undo-tree-id2172 . -3) (undo-tree-id2173 . -2) (undo-tree-id2174 . -1) (undo-tree-id2175 . -175) (t 26015 48558 251322 677000)) ((14273 . 14448)) (26015 48605 9582 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14622 . 14623) (nil fontified nil 14450 . 14623) (14450 . 14623)) nil (26015 48634 15435 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14445 . 14446) (nil fontified nil 14273 . 14446) (14273 . 14446)) ((#("self.light_uniform.position =
    (cgmath::Quaternion::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
    * old_position).into(); // UPDATED!
" 0 4 (face font-lock-keyword-face fontified nil) 4 30 (fontified nil) 30 34 (fontified nil) 34 35 (face (rainbow-delimiters-depth-3-face) fontified nil) 35 41 (face font-lock-constant-face fontified nil) 41 43 (fontified nil) 43 53 (face font-lock-type-face fontified nil) 53 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-4-face) fontified nil) 71 72 (face (rainbow-delimiters-depth-5-face) fontified nil) 72 85 (fontified nil) 85 86 (face (rainbow-delimiters-depth-5-face) fontified nil) 86 91 (fontified nil) 91 92 (face (rainbow-delimiters-depth-5-face) fontified nil) 92 93 (face (rainbow-delimiters-depth-5-face) fontified nil) 93 95 (fontified nil) 95 101 (face font-lock-constant-face fontified nil) 101 103 (fontified nil) 103 106 (face font-lock-type-face fontified nil) 106 107 (face (rainbow-delimiters-depth-5-face) fontified nil) 107 128 (fontified nil) 128 129 (face (rainbow-delimiters-depth-6-face) fontified nil) 129 130 (face (rainbow-delimiters-depth-6-face) fontified nil) 130 131 (face (rainbow-delimiters-depth-5-face) fontified nil) 131 132 (face (rainbow-delimiters-depth-4-face) fontified nil) 132 133 (fontified nil) 133 137 (fontified nil) 137 151 (fontified nil) 151 152 (face (rainbow-delimiters-depth-3-face) fontified nil) 152 157 (fontified nil) 157 158 (face (rainbow-delimiters-depth-3-face) fontified nil) 158 159 (face (rainbow-delimiters-depth-3-face) fontified nil) 159 161 (fontified nil) 161 164 (face font-lock-comment-delimiter-face fontified nil) 164 172 (face font-lock-comment-face fontified nil) 172 173 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 14273) (undo-tree-id2208 . -133) (undo-tree-id2209 . -135) (undo-tree-id2210 . -133) (undo-tree-id2211 . -133) (undo-tree-id2212 . -133) (undo-tree-id2213 . -133) (undo-tree-id2214 . -133) (undo-tree-id2215 . -133) (undo-tree-id2216 . -133) (undo-tree-id2217 . -133) (undo-tree-id2218 . -133) (undo-tree-id2219 . -133) (undo-tree-id2220 . -133) (undo-tree-id2221 . -133) (undo-tree-id2222 . -133) (undo-tree-id2223 . -133) (undo-tree-id2224 . -133) (undo-tree-id2225 . -133) (undo-tree-id2226 . -133) (undo-tree-id2227 . -133) (undo-tree-id2228 . -133) (undo-tree-id2229 . -133) (undo-tree-id2230 . -133) (undo-tree-id2231 . -133) (undo-tree-id2232 . -133) (undo-tree-id2233 . -133) (undo-tree-id2234 . -133) (undo-tree-id2235 . -133) (undo-tree-id2236 . -133) (undo-tree-id2237 . -133) (undo-tree-id2238 . -133) (undo-tree-id2239 . -133) (nil fontified t 14405 . 14406) (nil fontified t 14404 . 14405) (nil fontified t 14403 . 14404) (nil fontified t 14402 . 14403) (nil fontified t 14401 . 14402) (nil fontified t 14380 . 14401) (nil fontified t 14379 . 14380) (nil fontified t 14376 . 14379) (nil fontified t 14374 . 14376) (nil fontified t 14368 . 14374) (nil fontified t 14366 . 14368) (nil fontified t 14365 . 14366) (nil fontified t 14364 . 14365) (nil fontified t 14359 . 14364) (nil fontified t 14358 . 14359) (nil fontified t 14345 . 14358) (nil fontified t 14344 . 14345) (nil fontified t 14343 . 14344) (nil fontified t 14326 . 14343) (nil fontified t 14316 . 14326) (nil fontified t 14314 . 14316) (nil fontified t 14308 . 14314) (nil fontified t 14307 . 14308) (nil fontified t 14303 . 14307) (nil fontified t 14277 . 14303) (nil fontified t 14273 . 14277) (nil rear-nonsticky t 14445 . 14446)) (26015 48604 553799 0) 0 nil])
([nil nil ((14587 . 14596) (#("    " 0 4 (fontified t)) . 14587) (14480 . 14488) (#("    " 0 4 (fontified t)) . 14480) 14464) nil (26015 48634 15433 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14460) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (14410 . 14419) (#("    " 0 4 (fontified t)) . 14410) (undo-tree-id2158 . -2) (14303 . 14311) (#("    " 0 4 (fontified t)) . 14303) (14269 . 14273) (#("    " 0 4 (fontified t)) . -14198) 14194) ((14198 . 14202) (#("    " 0 4 (fontified t)) . 14269) (14303 . 14307) (#("        " 0 8 (fontified t)) . 14303) (14410 . 14414) (#("         " 0 9 (fontified t)) . 14410) (undo-tree-id2176 . -9) (undo-tree-id2177 . -9) (undo-tree-id2178 . -9) (undo-tree-id2179 . -9) (undo-tree-id2180 . -9) (undo-tree-id2181 . -9) (undo-tree-id2182 . -9) (undo-tree-id2183 . -9) (undo-tree-id2184 . -9) (undo-tree-id2185 . -9) (undo-tree-id2186 . -9) (undo-tree-id2187 . -9) (undo-tree-id2188 . -9) (undo-tree-id2189 . -9) (undo-tree-id2190 . -9) (undo-tree-id2191 . -9) (undo-tree-id2192 . -9) (undo-tree-id2193 . -9) (undo-tree-id2194 . -9) (undo-tree-id2195 . -9) (undo-tree-id2196 . -9) (undo-tree-id2197 . -9) (undo-tree-id2198 . -9) (undo-tree-id2199 . -9) (undo-tree-id2200 . -9) (undo-tree-id2201 . -9) (undo-tree-id2202 . -9) (undo-tree-id2203 . -9) (undo-tree-id2204 . -9) (undo-tree-id2205 . -9) (undo-tree-id2206 . -9) (undo-tree-id2207 . -9) (14460 . 14464) (t 26015 48595 548669 749000)) (26015 48595 535377 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14711) (#("    " 0 4 (fontified t)) . -14617) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (#("    " 0 2 (fontified t) 2 4 (fontified t)) . -14392) (#("    " 0 4 (fontified t)) . -14307) (undo-tree-id2259 . -4) (undo-tree-id2260 . -3) (undo-tree-id2261 . -1) (#("    " 0 4 (fontified t)) . -14269) (undo-tree-id2262 . -1) (#("    " 0 4 (fontified t)) . -14194) (#("    " 0 4 (fontified t)) . -14170) 14179) nil (26015 48634 15430 0) 0 nil])
nil
([nil nil ((14755 . 14759) (14653 . 14661) (#("    " 0 4 (fontified t)) . 14653) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (14612 . 14616) (14500 . 14504) (14454 . 14462) (#("    " 0 4 (fontified t)) . 14454) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) (undo-tree-id2248 . -4) (14440 . 14444) (14412 . 14416) (14323 . 14327) (14277 . 14285) (#("    " 0 4 (fontified t)) . 14277) (undo-tree-id2249 . -4) (undo-tree-id2250 . -4) (undo-tree-id2251 . -3) (undo-tree-id2252 . -2) (undo-tree-id2253 . -1) (14198 . 14206) (#("    " 0 4 (fontified t)) . 14198) (14170 . 14178) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . 14170) (13870 . 13874) 13861) nil (26015 48634 15416 0) 0 nil])
([nil nil ((apply -12 14277 14465 undo--wrap-and-run-primitive-undo 14277 14465 ((14449 . 14452) (14417 . 14420) (14326 . 14329) (14285 . 14288) 14277))) nil (26015 48634 15388 0) 0 nil])
([nil nil ((#("Quaternion" 0 10 (face font-lock-type-face fontified t)) . -14525) (undo-tree-id2271 . -10) (undo-tree-id2272 . -10) (undo-tree-id2273 . -10) (undo-tree-id2274 . -10) (undo-tree-id2275 . -10) (undo-tree-id2276 . -10) (undo-tree-id2277 . -10) (undo-tree-id2278 . -10) (undo-tree-id2279 . -10) (undo-tree-id2280 . -10) (undo-tree-id2281 . -10) (undo-tree-id2282 . -10) (undo-tree-id2283 . -10) (undo-tree-id2284 . -10) 14535 (t 26015 48634 28076 304000)) nil (26015 48729 738560 0) 0 nil])
([nil nil ((14525 . 14526)) nil (26015 48729 738545 0) 0 nil])
([nil nil ((14525 . 14532) (#("M" 0 1 (fontified nil)) . 14525) (14525 . 14526) (#("Matrix4" 0 7 (fontified nil)) . -14525) (14525 . 14532) (#("M" 0 1 (face font-lock-type-face fontified t)) . -14525) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) 14526) nil (26015 48729 738536 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17439 . 17440) (nil fontified nil 17375 . 17440) (17375 . 17440) (t 26015 48729 752252 958000)) nil (26015 48791 417923 0) 0 nil])
([nil nil ((#("                    state.update();" 0 15 (fontified t) 15 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-7-face) fontified t) 33 34 (face (rainbow-delimiters-depth-7-face) fontified t) 34 35 (fontified t)) . 18899) (undo-tree-id2285 . -35) (undo-tree-id2286 . -35) (undo-tree-id2287 . -35) (undo-tree-id2288 . -35) (undo-tree-id2289 . -31) (undo-tree-id2290 . -19) (undo-tree-id2291 . -15) (undo-tree-id2292 . -11) (undo-tree-id2293 . -8) (undo-tree-id2294 . -5) (undo-tree-id2295 . -3) (undo-tree-id2296 . -1) (undo-tree-id2297 . -35)) nil (26015 48791 417920 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 19071 . 19072) (nil fontified nil 18899 . 19072) (18899 . 19072)) nil (26015 48791 417893 0) 0 nil])
([nil nil ((19067 . 19071) (19023 . 19027) (18970 . 18974) (18915 . 18919) 18763) nil (26015 48791 417888 0) 0 nil])
([nil nil ((137 . 19804) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 74 (face font-lock-constant-face fontified t) 74 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 82 (face font-lock-type-face fontified t) 82 84 (fontified t) 84 95 (face font-lock-type-face fontified t) 95 97 (fontified t) 97 105 (face font-lock-type-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face)) 152 162 (face font-lock-constant-face) 164 165 (face (rainbow-delimiters-depth-2-face)) 165 176 (face font-lock-type-face) 178 187 (face font-lock-type-face) 187 188 (face (rainbow-delimiters-depth-2-face)) 194 200 (face font-lock-constant-face) 202 215 (face font-lock-type-face) 217 225 (face font-lock-constant-face) 227 228 (face (rainbow-delimiters-depth-2-face)) 228 239 (face font-lock-type-face) 241 248 (face font-lock-type-face) 248 249 (face (rainbow-delimiters-depth-2-face)) 251 252 (face (rainbow-delimiters-depth-1-face)) 254 257 (face font-lock-keyword-face) 258 262 (face font-lock-constant-face) 264 268 (face font-lock-constant-face) 270 279 (face font-lock-type-face) 282 285 (face font-lock-keyword-face) 286 293 (face font-lock-constant-face) 295 298 (face font-lock-keyword-face) 299 305 (face font-lock-constant-face) 307 310 (face font-lock-keyword-face) 311 320 (face font-lock-constant-face) 322 325 (face font-lock-keyword-face) 326 334 (face font-lock-constant-face) 336 339 (face font-lock-keyword-face) 340 350 (face font-lock-constant-face) 352 355 (face font-lock-keyword-face) 356 361 (face font-lock-constant-face) 363 366 (face font-lock-keyword-face) 367 372 (face font-lock-constant-face) 374 377 (face font-lock-comment-delimiter-face) 377 384 (face font-lock-comment-face) 384 387 (face font-lock-keyword-face) 388 393 (face font-lock-constant-face) 395 401 (face font-lock-constant-face) 403 409 (face font-lock-type-face) 412 415 (face font-lock-keyword-face) 416 422 (face font-lock-constant-face) 427 430 (face font-lock-keyword-face) 431 439 (face font-lock-constant-face) 444 447 (face font-lock-keyword-face) 448 453 (face font-lock-constant-face) 455 456 (face (rainbow-delimiters-depth-1-face)) 456 465 (face font-lock-type-face) 467 473 (face font-lock-type-face) 473 474 (face (rainbow-delimiters-depth-1-face)) 477 479 (face font-lock-keyword-face) 480 502 (face font-lock-function-name-face) 502 503 (face (rainbow-delimiters-depth-1-face)) 508 514 (face font-lock-variable-name-face) 516 517 (face rust-ampersand-face) 517 521 (face font-lock-constant-face) 523 529 (face font-lock-type-face) 535 541 (face font-lock-variable-name-face) 543 544 (face rust-ampersand-face) 544 548 (face font-lock-constant-face) 550 564 (face font-lock-type-face) 570 582 (face font-lock-variable-name-face) 584 588 (face font-lock-constant-face) 590 603 (face font-lock-type-face) 609 621 (face font-lock-variable-name-face) 623 629 (face font-lock-type-face) 629 630 (face (rainbow-delimiters-depth-2-face)) 630 634 (face font-lock-constant-face) 636 649 (face font-lock-type-face) 649 650 (face (rainbow-delimiters-depth-2-face)) 656 670 (face font-lock-variable-name-face) 672 673 (face rust-ampersand-face) 673 674 (face (rainbow-delimiters-depth-2-face)) 674 678 (face font-lock-constant-face) 680 698 (face font-lock-type-face) 698 699 (face (rainbow-delimiters-depth-2-face)) 705 711 (face font-lock-variable-name-face) 713 717 (face font-lock-constant-face) 719 741 (face font-lock-type-face) 743 744 (face (rainbow-delimiters-depth-1-face)) 746 747 (syntax-table (1)) 748 752 (face font-lock-constant-face) 754 768 (face font-lock-type-face) 769 770 (face (rainbow-delimiters-depth-1-face)) 775 778 (face font-lock-keyword-face) 779 785 (face font-lock-variable-name-face) 815 816 (face (rainbow-delimiters-depth-2-face)) 822 823 (face (rainbow-delimiters-depth-2-face)) 859 860 (face (rainbow-delimiters-depth-2-face)) 860 861 (face rust-ampersand-face) 861 865 (face font-lock-constant-face) 867 891 (face font-lock-type-face) 892 893 (face (rainbow-delimiters-depth-3-face)) 902 907 (face font-lock-variable-name-face) 909 913 (face font-lock-type-face) 913 914 (face (rainbow-delimiters-depth-4-face)) 914 931 (face font-lock-string-face) 931 932 (face (rainbow-delimiters-depth-4-face)) 942 948 (face font-lock-variable-name-face) 950 954 (face font-lock-type-face) 954 955 (face (rainbow-delimiters-depth-4-face)) 961 962 (face (rainbow-delimiters-depth-4-face)) 972 978 (face font-lock-variable-name-face) 980 984 (face font-lock-constant-face) 986 997 (face font-lock-type-face) 998 999 (face (rainbow-delimiters-depth-4-face)) 1012 1018 (face font-lock-variable-name-face) 1020 1021 (face rust-ampersand-face) 1041 1052 (face font-lock-variable-name-face) 1054 1063 (face font-lock-string-face) 1077 1084 (face font-lock-variable-name-face) 1110 1111 (face (rainbow-delimiters-depth-4-face)) 1121 1129 (face font-lock-variable-name-face) 1131 1135 (face font-lock-type-face) 1135 1136 (face (rainbow-delimiters-depth-4-face)) 1136 1140 (face font-lock-constant-face) 1142 1155 (face font-lock-type-face) 1156 1157 (face (rainbow-delimiters-depth-5-face)) 1170 1176 (face font-lock-variable-name-face) 1178 1179 (face rust-ampersand-face) 1199 1210 (face font-lock-variable-name-face) 1212 1221 (face font-lock-string-face) 1235 1242 (face font-lock-variable-name-face) 1244 1245 (face rust-ampersand-face) 1245 1246 (face (rainbow-delimiters-depth-6-face)) 1246 1250 (face font-lock-type-face) 1250 1251 (face (rainbow-delimiters-depth-7-face)) 1251 1255 (face font-lock-constant-face) 1257 1273 (face font-lock-type-face) 1274 1275 (face (rainbow-delimiters-depth-8-face)) 1292 1298 (face font-lock-variable-name-face) 1330 1335 (face font-lock-variable-name-face) 1337 1341 (face font-lock-type-face) 1341 1342 (face (rainbow-delimiters-depth-9-face)) 1342 1346 (face font-lock-constant-face) 1348 1358 (face font-lock-type-face) 1359 1360 (face (rainbow-delimiters-depth-1-face)) 1381 1386 (face font-lock-variable-name-face) 1388 1390 (face font-lock-constant-face) 1390 1392 (face font-lock-constant-face) 1394 1408 (face font-lock-type-face) 1410 1417 (face font-lock-type-face) 1439 1444 (face font-lock-variable-name-face) 1446 1450 (face font-lock-constant-face) 1452 1466 (face font-lock-type-face) 1468 1475 (face font-lock-type-face) 1493 1494 (face (rainbow-delimiters-depth-1-face)) 1494 1495 (face (rainbow-delimiters-depth-9-face)) 1513 1523 (face font-lock-variable-name-face) 1525 1529 (face font-lock-constant-face) 1531 1542 (face font-lock-type-face) 1544 1547 (face font-lock-type-face) 1561 1562 (face (rainbow-delimiters-depth-8-face)) 1562 1563 (face (rainbow-delimiters-depth-7-face)) 1563 1564 (face (rainbow-delimiters-depth-6-face)) 1574 1575 (face (rainbow-delimiters-depth-5-face)) 1575 1576 (face (rainbow-delimiters-depth-4-face)) 1586 1595 (face font-lock-variable-name-face) 1597 1601 (face font-lock-constant-face) 1603 1617 (face font-lock-type-face) 1618 1619 (face (rainbow-delimiters-depth-4-face)) 1632 1640 (face font-lock-variable-name-face) 1642 1646 (face font-lock-constant-face) 1648 1665 (face font-lock-type-face) 1667 1679 (face font-lock-type-face) 1693 1711 (face font-lock-variable-name-face) 1713 1717 (face font-lock-type-face) 1731 1741 (face font-lock-variable-name-face) 1743 1747 (face font-lock-constant-face) 1749 1758 (face font-lock-type-face) 1760 1763 (face font-lock-type-face) 1777 1786 (face font-lock-variable-name-face) 1788 1792 (face font-lock-type-face) 1792 1793 (face (rainbow-delimiters-depth-5-face)) 1793 1797 (face font-lock-constant-face) 1799 1803 (face font-lock-type-face) 1805 1809 (face font-lock-type-face) 1809 1810 (face (rainbow-delimiters-depth-5-face)) 1824 1827 (face font-lock-comment-delimiter-face) 1827 1909 (face font-lock-comment-face) 1921 1933 (face font-lock-variable-name-face) 1935 1939 (face font-lock-constant-face) 1941 1952 (face font-lock-type-face) 1954 1958 (face font-lock-type-face) 1972 1975 (face font-lock-comment-delimiter-face) 1975 2013 (face font-lock-comment-face) 2025 2040 (face font-lock-variable-name-face) 2042 2047 (face font-lock-keyword-face) 2061 2064 (face font-lock-comment-delimiter-face) 2064 2110 (face font-lock-comment-face) 2122 2134 (face font-lock-variable-name-face) 2136 2141 (face font-lock-keyword-face) 2151 2152 (face (rainbow-delimiters-depth-4-face)) 2162 2175 (face font-lock-variable-name-face) 2193 2194 (face (rainbow-delimiters-depth-4-face)) 2203 2207 (face font-lock-constant-face) 2209 2226 (face font-lock-type-face) 2227 2228 (face (rainbow-delimiters-depth-5-face)) 2261 2280 (face font-lock-variable-name-face) 2282 2286 (face font-lock-keyword-face) 2300 2313 (face font-lock-variable-name-face) 2315 2319 (face font-lock-constant-face) 2321 2336 (face font-lock-type-face) 2338 2342 (face font-lock-type-face) 2356 2363 (face font-lock-variable-name-face) 2365 2369 (face font-lock-constant-face) 2371 2383 (face font-lock-type-face) 2392 2393 (face (rainbow-delimiters-depth-6-face)) 2393 2394 (face (rainbow-delimiters-depth-6-face)) 2408 2412 (face font-lock-variable-name-face) 2414 2418 (face font-lock-constant-face) 2420 2434 (face font-lock-type-face) 2443 2444 (face (rainbow-delimiters-depth-6-face)) 2444 2445 (face (rainbow-delimiters-depth-6-face)) 2455 2456 (face (rainbow-delimiters-depth-5-face)) 2456 2457 (face (rainbow-delimiters-depth-4-face)) 2467 2478 (face font-lock-variable-name-face) 2480 2484 (face font-lock-constant-face) 2486 2502 (face font-lock-type-face) 2503 2504 (face (rainbow-delimiters-depth-4-face)) 2517 2522 (face font-lock-variable-name-face) 2539 2543 (face font-lock-variable-name-face) 2561 2586 (face font-lock-variable-name-face) 2588 2593 (face font-lock-keyword-face) 2603 2604 (face (rainbow-delimiters-depth-4-face)) 2614 2623 (face font-lock-variable-name-face) 2625 2629 (face font-lock-type-face) 2635 2636 (face (rainbow-delimiters-depth-3-face)) 2636 2637 (face (rainbow-delimiters-depth-2-face)) 2638 2639 (face (rainbow-delimiters-depth-1-face)) 2642 2648 (face font-lock-keyword-face) 2649 2654 (face font-lock-type-face) 2655 2656 (face (rainbow-delimiters-depth-1-face)) 2661 2668 (face font-lock-variable-name-face) 2670 2674 (face font-lock-constant-face) 2676 2683 (face font-lock-type-face) 2689 2695 (face font-lock-variable-name-face) 2697 2701 (face font-lock-constant-face) 2703 2709 (face font-lock-type-face) 2715 2720 (face font-lock-variable-name-face) 2722 2726 (face font-lock-constant-face) 2728 2733 (face font-lock-type-face) 2739 2745 (face font-lock-variable-name-face) 2747 2751 (face font-lock-constant-face) 2753 2773 (face font-lock-type-face) 2779 2783 (face font-lock-variable-name-face) 2785 2790 (face font-lock-constant-face) 2792 2795 (face font-lock-constant-face) 2797 2809 (face font-lock-type-face) 2809 2810 (face (rainbow-delimiters-depth-2-face)) 2810 2813 (face font-lock-type-face) 2813 2814 (face (rainbow-delimiters-depth-2-face)) 2820 2823 (face font-lock-comment-delimiter-face) 2823 2872 (face font-lock-comment-face) 2876 2879 (face font-lock-comment-delimiter-face) 2879 2919 (face font-lock-comment-face) 2919 2928 (face font-lock-comment-face) 2932 2935 (face font-lock-comment-delimiter-face) 2935 2980 (face font-lock-comment-face) 2984 2990 (face font-lock-variable-name-face) 2992 2998 (face font-lock-type-face) 3004 3019 (face font-lock-variable-name-face) 3021 3025 (face font-lock-constant-face) 3027 3041 (face font-lock-type-face) 3047 3056 (face font-lock-variable-name-face) 3058 3063 (face font-lock-constant-face) 3065 3070 (face font-lock-type-face) 3078 3103 (face font-lock-variable-name-face) 3105 3109 (face font-lock-constant-face) 3111 3126 (face font-lock-type-face) 3132 3145 (face font-lock-variable-name-face) 3147 3154 (face font-lock-type-face) 3166 3172 (face font-lock-variable-name-face) 3174 3180 (face font-lock-constant-face) 3182 3188 (face font-lock-type-face) 3190 3193 (face font-lock-comment-delimiter-face) 3193 3202 (face font-lock-comment-face) 3206 3216 (face font-lock-variable-name-face) 3218 3224 (face font-lock-constant-face) 3226 3236 (face font-lock-type-face) 3238 3241 (face font-lock-comment-delimiter-face) 3241 3246 (face font-lock-comment-face) 3250 3267 (face font-lock-variable-name-face) 3269 3275 (face font-lock-constant-face) 3277 3293 (face font-lock-type-face) 3295 3298 (face font-lock-comment-delimiter-face) 3298 3307 (face font-lock-comment-face) 3311 3314 (face font-lock-comment-delimiter-face) 3314 3318 (face font-lock-comment-face) 3322 3325 (face font-lock-comment-delimiter-face) 3325 3330 (face font-lock-comment-face) 3334 3347 (face font-lock-variable-name-face) 3349 3353 (face font-lock-type-face) 3353 3354 (rear-nonsticky t) 3360 3374 (face font-lock-variable-name-face) 3376 3389 (face font-lock-type-face) 3395 3408 (face font-lock-variable-name-face) 3410 3414 (face font-lock-constant-face) 3416 3422 (face font-lock-type-face) 3428 3445 (face font-lock-variable-name-face) 3447 3451 (face font-lock-constant-face) 3453 3462 (face font-lock-type-face) 3469 3482 (face font-lock-variable-name-face) 3484 3496 (face font-lock-type-face) 3502 3514 (face font-lock-variable-name-face) 3516 3520 (face font-lock-constant-face) 3522 3528 (face font-lock-type-face) 3534 3550 (face font-lock-variable-name-face) 3552 3556 (face font-lock-constant-face) 3558 3567 (face font-lock-type-face) 3573 3594 (face font-lock-variable-name-face) 3596 3600 (face font-lock-constant-face) 3602 3616 (face font-lock-type-face) 3623 3632 (face font-lock-variable-name-face) 3634 3637 (face font-lock-type-face) 3637 3638 (face (rainbow-delimiters-depth-2-face)) 3638 3646 (face font-lock-type-face) 3646 3647 (face (rainbow-delimiters-depth-2-face)) 3653 3668 (face font-lock-variable-name-face) 3670 3674 (face font-lock-constant-face) 3676 3682 (face font-lock-type-face) 3691 3692 (face (rainbow-delimiters-depth-1-face)) 3694 3698 (face font-lock-keyword-face) 3699 3704 (face font-lock-type-face) 3705 3706 (face (rainbow-delimiters-depth-1-face)) 3711 3714 (face font-lock-comment-delimiter-face) 3714 3766 (face font-lock-comment-face) 3770 3775 (face font-lock-keyword-face) 3776 3778 (face font-lock-keyword-face) 3779 3782 (face font-lock-function-name-face) 3782 3783 (face (rainbow-delimiters-depth-2-face)) 3783 3789 (face font-lock-variable-name-face) 3791 3797 (face font-lock-type-face) 3797 3798 (face (rainbow-delimiters-depth-2-face)) 3800 3801 (syntax-table (1)) 3802 3806 (face font-lock-type-face) 3807 3808 (face (rainbow-delimiters-depth-2-face)) 3817 3820 (face font-lock-keyword-face) 3821 3825 (face font-lock-variable-name-face) 3845 3846 (face (rainbow-delimiters-depth-3-face)) 3846 3847 (face (rainbow-delimiters-depth-3-face)) 3858 3861 (face font-lock-comment-delimiter-face) 3861 3897 (face font-lock-comment-face) 3905 3908 (face font-lock-comment-delimiter-face) 3908 3923 (face font-lock-comment-face) 3923 3924 (syntax-table (1) face font-lock-comment-face) 3924 3964 (face font-lock-comment-face) 3972 3975 (face font-lock-keyword-face) 3976 3984 (face font-lock-variable-name-face) 3987 3991 (face font-lock-constant-face) 3993 4001 (face font-lock-type-face) 4006 4007 (face (rainbow-delimiters-depth-3-face)) 4007 4011 (face font-lock-constant-face) 4013 4031 (face font-lock-type-face) 4032 4033 (face (rainbow-delimiters-depth-4-face)) 4046 4054 (face font-lock-variable-name-face) 4056 4060 (face font-lock-constant-face) 4062 4070 (face font-lock-type-face) 4075 4076 (face (rainbow-delimiters-depth-5-face)) 4076 4077 (face (rainbow-delimiters-depth-5-face)) 4093 4100 (face font-lock-type-face) 4109 4110 (face (rainbow-delimiters-depth-5-face)) 4110 4111 (face (rainbow-delimiters-depth-5-face)) 4120 4121 (face (rainbow-delimiters-depth-4-face)) 4121 4122 (face (rainbow-delimiters-depth-3-face)) 4141 4144 (face font-lock-comment-delimiter-face) 4144 4153 (face font-lock-comment-face) 4161 4163 (face font-lock-comment-delimiter-face) 4163 4164 (face font-lock-comment-face) 4172 4175 (face font-lock-comment-delimiter-face) 4175 4240 (face font-lock-comment-face) 4248 4251 (face font-lock-comment-delimiter-face) 4251 4298 (face font-lock-comment-face) 4306 4309 (face font-lock-keyword-face) 4310 4317 (face font-lock-variable-name-face) 4320 4326 (face rust-unsafe) 4327 4328 (face (rainbow-delimiters-depth-3-face)) 4352 4353 (face (rainbow-delimiters-depth-4-face)) 4353 4354 (face rust-ampersand-face) 4360 4361 (face (rainbow-delimiters-depth-4-face)) 4362 4363 (face (rainbow-delimiters-depth-3-face)) 4370 4371 (face (rainbow-delimiters-depth-3-face)) 4371 4372 (face (rainbow-delimiters-depth-3-face)) 4383 4386 (face font-lock-keyword-face) 4387 4394 (face font-lock-variable-name-face) 4421 4422 (face (rainbow-delimiters-depth-3-face)) 4435 4436 (face rust-ampersand-face) 4436 4440 (face font-lock-constant-face) 4442 4463 (face font-lock-type-face) 4464 4465 (face (rainbow-delimiters-depth-4-face)) 4482 4498 (face font-lock-variable-name-face) 4500 4504 (face font-lock-constant-face) 4506 4521 (face font-lock-type-face) 4530 4531 (face (rainbow-delimiters-depth-5-face)) 4531 4532 (face (rainbow-delimiters-depth-5-face)) 4550 4568 (face font-lock-variable-name-face) 4570 4574 (face font-lock-type-face) 4574 4575 (face (rainbow-delimiters-depth-5-face)) 4575 4576 (face rust-ampersand-face) 4583 4584 (face (rainbow-delimiters-depth-5-face)) 4602 4624 (face font-lock-variable-name-face) 4626 4631 (face font-lock-keyword-face) 4645 4646 (face (rainbow-delimiters-depth-4-face)) 4656 4657 (face (rainbow-delimiters-depth-3-face)) 4658 4663 (face font-lock-keyword-face) 4670 4671 (face (rainbow-delimiters-depth-3-face)) 4671 4672 (face (rainbow-delimiters-depth-3-face)) 4683 4686 (face font-lock-keyword-face) 4687 4688 (face (rainbow-delimiters-depth-3-face)) 4701 4702 (face (rainbow-delimiters-depth-3-face)) 4727 4728 (face (rainbow-delimiters-depth-3-face)) 4741 4742 (face rust-ampersand-face) 4742 4746 (face font-lock-constant-face) 4748 4764 (face font-lock-type-face) 4765 4766 (face (rainbow-delimiters-depth-4-face)) 4783 4791 (face font-lock-variable-name-face) 4793 4797 (face font-lock-constant-face) 4799 4807 (face font-lock-type-face) 4814 4815 (face (rainbow-delimiters-depth-5-face)) 4815 4816 (face (rainbow-delimiters-depth-5-face)) 4834 4837 (face font-lock-comment-delimiter-face) 4837 4855 (face font-lock-comment-face) 4855 4889 (face font-lock-comment-face) 4905 4908 (face font-lock-comment-delimiter-face) 4908 4964 (face font-lock-comment-face) 4980 4986 (face font-lock-variable-name-face) 4988 4990 (face font-lock-keyword-face) 4991 4995 (face font-lock-preprocessor-face) 4995 4996 (face (rainbow-delimiters-depth-5-face)) 5010 5018 (face font-lock-string-face) 5018 5019 (face (rainbow-delimiters-depth-5-face)) 5020 5021 (face (rainbow-delimiters-depth-5-face)) 5042 5046 (face font-lock-constant-face) 5048 5054 (face font-lock-type-face) 5081 5082 (face (rainbow-delimiters-depth-6-face)) 5082 5083 (face (rainbow-delimiters-depth-6-face)) 5100 5101 (face (rainbow-delimiters-depth-5-face)) 5102 5106 (face font-lock-keyword-face) 5107 5108 (face (rainbow-delimiters-depth-5-face)) 5129 5133 (face font-lock-constant-face) 5135 5141 (face font-lock-type-face) 5150 5151 (face (rainbow-delimiters-depth-6-face)) 5151 5152 (face (rainbow-delimiters-depth-6-face)) 5169 5170 (face (rainbow-delimiters-depth-5-face)) 5188 5193 (face font-lock-variable-name-face) 5195 5199 (face font-lock-type-face) 5213 5214 (face (rainbow-delimiters-depth-4-face)) 5228 5232 (face font-lock-type-face) 5234 5237 (face font-lock-comment-delimiter-face) 5237 5248 (face font-lock-comment-face) 5256 5257 (face (rainbow-delimiters-depth-3-face)) 5258 5263 (face font-lock-keyword-face) 5270 5271 (face (rainbow-delimiters-depth-3-face)) 5271 5272 (face (rainbow-delimiters-depth-3-face)) 5284 5287 (face font-lock-keyword-face) 5288 5300 (face font-lock-variable-name-face) 5327 5328 (face (rainbow-delimiters-depth-3-face)) 5328 5329 (face rust-ampersand-face) 5336 5337 (face (rainbow-delimiters-depth-3-face)) 5347 5350 (face font-lock-comment-delimiter-face) 5350 5430 (face font-lock-comment-face) 5438 5441 (face font-lock-comment-delimiter-face) 5441 5521 (face font-lock-comment-face) 5529 5532 (face font-lock-comment-delimiter-face) 5532 5606 (face font-lock-comment-face) 5614 5617 (face font-lock-keyword-face) 5618 5632 (face font-lock-variable-name-face) 5660 5661 (face (rainbow-delimiters-depth-3-face)) 5661 5662 (face (rainbow-delimiters-depth-3-face)) 5682 5683 (face (rainbow-delimiters-depth-3-face)) 5683 5684 (face (rainbow-delimiters-depth-3-face)) 5704 5705 (face (rainbow-delimiters-depth-3-face)) 5718 5719 (face (rainbow-delimiters-depth-4-face)) 5719 5720 (face (rainbow-delimiters-depth-4-face)) 5720 5721 (face (rainbow-delimiters-depth-3-face)) 5739 5740 (face (rainbow-delimiters-depth-3-face)) 5740 5741 (face (rainbow-delimiters-depth-3-face)) 5764 5765 (face (rainbow-delimiters-depth-3-face)) 5785 5786 (face (rainbow-delimiters-depth-4-face)) 5787 5788 (face (rainbow-delimiters-depth-4-face)) 5788 5789 (face (rainbow-delimiters-depth-3-face)) 5799 5802 (face font-lock-keyword-face) 5803 5809 (face font-lock-variable-name-face) 5812 5816 (face font-lock-constant-face) 5818 5838 (face font-lock-type-face) 5839 5840 (face (rainbow-delimiters-depth-3-face)) 5853 5858 (face font-lock-variable-name-face) 5860 5864 (face font-lock-constant-face) 5866 5879 (face font-lock-type-face) 5881 5898 (face font-lock-type-face) 5912 5918 (face font-lock-variable-name-face) 5948 5953 (face font-lock-variable-name-face) 5979 5985 (face font-lock-variable-name-face) 6012 6024 (face font-lock-variable-name-face) 6052 6053 (face (rainbow-delimiters-depth-4-face)) 6054 6055 (face (rainbow-delimiters-depth-4-face)) 6069 6079 (face font-lock-variable-name-face) 6105 6106 (face (rainbow-delimiters-depth-4-face)) 6107 6108 (face (rainbow-delimiters-depth-4-face)) 6122 6134 (face font-lock-variable-name-face) 6136 6140 (face font-lock-preprocessor-face) 6140 6141 (face (rainbow-delimiters-depth-4-face)) 6141 6142 (face (rainbow-delimiters-depth-4-face)) 6152 6153 (face (rainbow-delimiters-depth-3-face)) 6180 6181 (face (rainbow-delimiters-depth-3-face)) 6181 6182 (face rust-ampersand-face) 6190 6191 (face rust-ampersand-face) 6197 6198 (face (rainbow-delimiters-depth-3-face)) 6218 6221 (face font-lock-keyword-face) 6222 6247 (face font-lock-variable-name-face) 6293 6294 (face (rainbow-delimiters-depth-3-face)) 6294 6295 (face rust-ampersand-face) 6295 6299 (face font-lock-constant-face) 6301 6326 (face font-lock-type-face) 6327 6328 (face (rainbow-delimiters-depth-4-face)) 6345 6352 (face font-lock-variable-name-face) 6354 6355 (face rust-ampersand-face) 6355 6356 (face (rainbow-delimiters-depth-5-face)) 6377 6381 (face font-lock-constant-face) 6383 6389 (face font-lock-type-face) 6389 6403 (face font-lock-type-face) 6404 6405 (face (rainbow-delimiters-depth-6-face)) 6430 6437 (face font-lock-variable-name-face) 6466 6476 (face font-lock-variable-name-face) 6478 6482 (face font-lock-constant-face) 6484 6496 (face font-lock-type-face) 6498 6506 (face font-lock-type-face) 6532 6534 (face font-lock-variable-name-face) 6536 6540 (face font-lock-constant-face) 6542 6553 (face font-lock-type-face) 6555 6562 (face font-lock-type-face) 6563 6564 (face (rainbow-delimiters-depth-7-face)) 6593 6605 (face font-lock-variable-name-face) 6607 6612 (face font-lock-keyword-face) 6642 6653 (face font-lock-variable-name-face) 6653 6656 (face font-lock-variable-name-face) 6658 6662 (face font-lock-constant-face) 6664 6684 (face font-lock-type-face) 6686 6688 (face font-lock-type-face) 6718 6729 (face font-lock-variable-name-face) 6731 6735 (face font-lock-constant-face) 6737 6754 (face font-lock-type-face) 6756 6761 (face font-lock-type-face) 6762 6763 (face (rainbow-delimiters-depth-8-face)) 6764 6774 (face font-lock-variable-name-face) 6776 6780 (face font-lock-keyword-face) 6781 6782 (face (rainbow-delimiters-depth-8-face)) 6808 6809 (face (rainbow-delimiters-depth-7-face)) 6835 6840 (face font-lock-variable-name-face) 6842 6846 (face font-lock-type-face) 6868 6869 (face (rainbow-delimiters-depth-6-face)) 6891 6895 (face font-lock-constant-face) 6897 6917 (face font-lock-type-face) 6918 6919 (face (rainbow-delimiters-depth-6-face)) 6944 6951 (face font-lock-variable-name-face) 6980 6990 (face font-lock-variable-name-face) 6992 6996 (face font-lock-constant-face) 6998 7010 (face font-lock-type-face) 7012 7020 (face font-lock-type-face) 7046 7049 (face font-lock-comment-delimiter-face) 7049 7095 (face font-lock-comment-face) 7119 7122 (face font-lock-comment-delimiter-face) 7122 7157 (face font-lock-comment-face) 7181 7183 (face font-lock-variable-name-face) 7185 7189 (face font-lock-constant-face) 7191 7202 (face font-lock-type-face) 7204 7211 (face font-lock-type-face) 7211 7212 (face (rainbow-delimiters-depth-7-face)) 7212 7216 (face font-lock-constant-face) 7218 7236 (face font-lock-type-face) 7238 7247 (face font-lock-type-face) 7247 7248 (face (rainbow-delimiters-depth-7-face)) 7274 7279 (face font-lock-variable-name-face) 7281 7285 (face font-lock-type-face) 7307 7308 (face (rainbow-delimiters-depth-6-face)) 7326 7327 (face (rainbow-delimiters-depth-5-face)) 7345 7350 (face font-lock-variable-name-face) 7352 7356 (face font-lock-type-face) 7356 7357 (face (rainbow-delimiters-depth-5-face)) 7357 7384 (face font-lock-string-face) 7384 7385 (face (rainbow-delimiters-depth-5-face)) 7399 7400 (face (rainbow-delimiters-depth-4-face)) 7400 7401 (face (rainbow-delimiters-depth-3-face)) 7412 7417 (face font-lock-preprocessor-face) 7417 7418 (face (rainbow-delimiters-depth-3-face)) 7418 7430 (face font-lock-string-face) 7430 7431 (face (rainbow-delimiters-depth-3-face)) 7441 7444 (face font-lock-keyword-face) 7445 7454 (face font-lock-variable-name-face) 7457 7462 (face font-lock-constant-face) 7472 7473 (face (rainbow-delimiters-depth-3-face)) 7473 7526 (face font-lock-string-face) 7528 7529 (face rust-ampersand-face) 7537 7538 (face rust-ampersand-face) 7545 7546 (face rust-ampersand-face) 7571 7572 (face (rainbow-delimiters-depth-3-face)) 7579 7580 (face (rainbow-delimiters-depth-3-face)) 7580 7581 (face (rainbow-delimiters-depth-3-face)) 7592 7595 (face font-lock-keyword-face) 7596 7609 (face font-lock-variable-name-face) 7612 7619 (face font-lock-constant-face) 7621 7628 (face font-lock-type-face) 7650 7651 (face (rainbow-delimiters-depth-3-face)) 7651 7652 (face rust-ampersand-face) 7660 7661 (face rust-ampersand-face) 7669 7684 (face font-lock-string-face) 7684 7685 (face (rainbow-delimiters-depth-3-face)) 7697 7700 (face font-lock-keyword-face) 7701 7707 (face font-lock-variable-name-face) 7710 7716 (face font-lock-constant-face) 7718 7724 (face font-lock-type-face) 7729 7730 (face (rainbow-delimiters-depth-3-face)) 7730 7731 (face (rainbow-delimiters-depth-4-face)) 7745 7746 (face (rainbow-delimiters-depth-4-face)) 7748 7754 (face font-lock-constant-face) 7756 7759 (face font-lock-type-face) 7759 7760 (face (rainbow-delimiters-depth-4-face)) 7765 7766 (face (rainbow-delimiters-depth-4-face)) 7768 7774 (face font-lock-constant-face) 7776 7779 (face font-lock-type-face) 7779 7780 (face (rainbow-delimiters-depth-4-face)) 7785 7786 (face (rainbow-delimiters-depth-4-face)) 7786 7787 (face (rainbow-delimiters-depth-3-face)) 7797 7800 (face font-lock-keyword-face) 7801 7811 (face font-lock-variable-name-face) 7814 7820 (face font-lock-constant-face) 7822 7832 (face font-lock-type-face) 7837 7838 (face (rainbow-delimiters-depth-3-face)) 7867 7873 (face font-lock-constant-face) 7875 7878 (face font-lock-type-face) 7878 7879 (face (rainbow-delimiters-depth-4-face)) 7883 7884 (face (rainbow-delimiters-depth-4-face)) 7896 7897 (face (rainbow-delimiters-depth-3-face)) 7907 7910 (face font-lock-keyword-face) 7911 7928 (face font-lock-variable-name-face) 7931 7937 (face font-lock-constant-face) 7939 7955 (face font-lock-type-face) 7960 7961 (face (rainbow-delimiters-depth-3-face)) 7969 7970 (face (rainbow-delimiters-depth-3-face)) 7983 7986 (face font-lock-keyword-face) 7987 7990 (face font-lock-keyword-face) 7991 8005 (face font-lock-variable-name-face) 8008 8021 (face font-lock-type-face) 8026 8027 (face (rainbow-delimiters-depth-3-face)) 8027 8028 (face (rainbow-delimiters-depth-3-face)) 8069 8070 (face (rainbow-delimiters-depth-3-face)) 8070 8071 (face rust-ampersand-face) 8079 8080 (face rust-ampersand-face) 8090 8091 (face (rainbow-delimiters-depth-3-face)) 8093 8096 (face font-lock-comment-delimiter-face) 8096 8103 (face font-lock-comment-face) 8103 8104 (face font-lock-comment-face rear-nonsticky t) 8104 8105 (face font-lock-comment-face) 8113 8116 (face font-lock-keyword-face) 8117 8130 (face font-lock-variable-name-face) 8168 8169 (face (rainbow-delimiters-depth-3-face)) 8169 8170 (face rust-ampersand-face) 8176 8177 (face (rainbow-delimiters-depth-3-face)) 8189 8192 (face font-lock-keyword-face) 8193 8217 (face font-lock-variable-name-face) 8251 8252 (face (rainbow-delimiters-depth-3-face)) 8252 8253 (face rust-ampersand-face) 8253 8257 (face font-lock-constant-face) 8259 8284 (face font-lock-type-face) 8285 8286 (face (rainbow-delimiters-depth-4-face)) 8299 8306 (face font-lock-variable-name-face) 8308 8309 (face rust-ampersand-face) 8309 8310 (face (rainbow-delimiters-depth-5-face)) 8327 8331 (face font-lock-constant-face) 8333 8353 (face font-lock-type-face) 8354 8355 (face (rainbow-delimiters-depth-6-face)) 8376 8383 (face font-lock-variable-name-face) 8408 8418 (face font-lock-variable-name-face) 8420 8424 (face font-lock-constant-face) 8426 8438 (face font-lock-type-face) 8440 8446 (face font-lock-type-face) 8449 8453 (face font-lock-constant-face) 8455 8467 (face font-lock-type-face) 8469 8476 (face font-lock-type-face) 8476 8477 (face font-lock-type-face rear-nonsticky t) 8499 8501 (face font-lock-variable-name-face) 8503 8507 (face font-lock-constant-face) 8509 8520 (face font-lock-type-face) 8522 8528 (face font-lock-type-face) 8529 8530 (face (rainbow-delimiters-depth-7-face)) 8555 8557 (face font-lock-variable-name-face) 8559 8563 (face font-lock-constant-face) 8565 8582 (face font-lock-type-face) 8584 8591 (face font-lock-type-face) 8617 8635 (face font-lock-variable-name-face) 8637 8642 (face font-lock-keyword-face) 8668 8684 (face font-lock-variable-name-face) 8686 8690 (face font-lock-type-face) 8712 8713 (face (rainbow-delimiters-depth-7-face)) 8735 8740 (face font-lock-variable-name-face) 8742 8746 (face font-lock-type-face) 8764 8765 (face (rainbow-delimiters-depth-6-face)) 8778 8779 (face (rainbow-delimiters-depth-5-face)) 8793 8798 (face font-lock-variable-name-face) 8800 8804 (face font-lock-type-face) 8804 8805 (face (rainbow-delimiters-depth-5-face)) 8805 8831 (face font-lock-string-face) 8831 8832 (face (rainbow-delimiters-depth-5-face)) 8842 8843 (face (rainbow-delimiters-depth-4-face)) 8843 8844 (face (rainbow-delimiters-depth-3-face)) 8855 8858 (face font-lock-keyword-face) 8859 8876 (face font-lock-variable-name-face) 8903 8904 (face (rainbow-delimiters-depth-3-face)) 8904 8905 (face rust-ampersand-face) 8905 8909 (face font-lock-constant-face) 8911 8930 (face font-lock-type-face) 8931 8932 (face (rainbow-delimiters-depth-4-face)) 8945 8951 (face font-lock-variable-name-face) 8953 8954 (face rust-ampersand-face) 8992 8999 (face font-lock-variable-name-face) 9001 9002 (face rust-ampersand-face) 9002 9003 (face (rainbow-delimiters-depth-5-face)) 9020 9024 (face font-lock-constant-face) 9026 9040 (face font-lock-type-face) 9041 9042 (face (rainbow-delimiters-depth-6-face)) 9063 9070 (face font-lock-variable-name-face) 9095 9103 (face font-lock-variable-name-face) 9136 9137 (face (rainbow-delimiters-depth-7-face)) 9137 9138 (face (rainbow-delimiters-depth-7-face)) 9156 9157 (face (rainbow-delimiters-depth-6-face)) 9170 9171 (face (rainbow-delimiters-depth-5-face)) 9185 9190 (face font-lock-variable-name-face) 9192 9196 (face font-lock-type-face) 9196 9197 (face (rainbow-delimiters-depth-5-face)) 9197 9216 (face font-lock-string-face) 9216 9217 (face (rainbow-delimiters-depth-5-face)) 9227 9228 (face (rainbow-delimiters-depth-4-face)) 9228 9229 (face (rainbow-delimiters-depth-3-face)) 9240 9243 (face font-lock-keyword-face) 9244 9257 (face font-lock-variable-name-face) 9260 9265 (face font-lock-constant-face) 9267 9275 (face font-lock-type-face) 9275 9279 (face font-lock-type-face) 9280 9281 (face (rainbow-delimiters-depth-3-face)) 9294 9302 (face font-lock-variable-name-face) 9304 9305 (face (rainbow-delimiters-depth-4-face)) 9323 9324 (face (rainbow-delimiters-depth-4-face)) 9338 9343 (face font-lock-variable-name-face) 9345 9346 (face (rainbow-delimiters-depth-4-face)) 9364 9365 (face (rainbow-delimiters-depth-4-face)) 9375 9376 (face (rainbow-delimiters-depth-3-face)) 9386 9389 (face font-lock-keyword-face) 9390 9391 (face (rainbow-delimiters-depth-3-face)) 9446 9447 (face (rainbow-delimiters-depth-3-face)) 9462 9467 (face font-lock-constant-face) 9503 9504 (face (rainbow-delimiters-depth-3-face)) 9504 9505 (face rust-ampersand-face) 9513 9514 (face rust-ampersand-face) 9527 9528 (face (rainbow-delimiters-depth-3-face)) 9540 9542 (face font-lock-comment-delimiter-face) 9542 9550 (face font-lock-comment-face) 9550 9572 (face font-lock-comment-face) 9580 9583 (face font-lock-keyword-face) 9584 9586 (face font-lock-variable-name-face) 9586 9604 (face font-lock-variable-name-face) 9604 9605 (face font-lock-variable-name-face) 9605 9606 (face font-lock-variable-name-face) 9650 9651 (face (rainbow-delimiters-depth-3-face)) 9651 9652 (face rust-ampersand-face) 9652 9656 (face font-lock-constant-face) 9658 9679 (face font-lock-type-face) 9679 9682 (face font-lock-type-face) 9683 9684 (face (rainbow-delimiters-depth-4-face)) 9701 9706 (face font-lock-variable-name-face) 9708 9712 (face font-lock-type-face) 9712 9713 (face (rainbow-delimiters-depth-5-face)) 9713 9737 (face font-lock-string-face) 9737 9738 (face (rainbow-delimiters-depth-5-face)) 9756 9774 (face font-lock-variable-name-face) 9776 9777 (face rust-ampersand-face) 9777 9778 (face (rainbow-delimiters-depth-5-face)) 9799 9800 (face rust-ampersand-face) 9847 9848 (face rust-ampersand-face) 9894 9895 (face rust-ampersand-face) 9936 9937 (face (rainbow-delimiters-depth-5-face)) 9955 9975 (face font-lock-variable-name-face) 9977 9978 (face rust-ampersand-face) 9978 9979 (face (rainbow-delimiters-depth-5-face)) 9979 9980 (face (rainbow-delimiters-depth-5-face)) 9994 9995 (face (rainbow-delimiters-depth-4-face)) 9995 9996 (face (rainbow-delimiters-depth-3-face)) 10015 10018 (face font-lock-keyword-face) 10019 10034 (face font-lock-variable-name-face) 10037 10038 (face (rainbow-delimiters-depth-3-face)) 10051 10054 (face font-lock-keyword-face) 10055 10061 (face font-lock-variable-name-face) 10064 10068 (face font-lock-constant-face) 10070 10083 (face font-lock-preprocessor-face) 10083 10084 (face (rainbow-delimiters-depth-4-face)) 10084 10097 (face font-lock-string-face) 10097 10098 (face (rainbow-delimiters-depth-4-face)) 10135 10136 (face (rainbow-delimiters-depth-4-face)) 10153 10154 (face rust-ampersand-face) 10178 10179 (face rust-ampersand-face) 10250 10254 (face font-lock-type-face) 10254 10255 (face (rainbow-delimiters-depth-5-face)) 10255 10262 (face font-lock-constant-face) 10264 10271 (face font-lock-type-face) 10273 10285 (face font-lock-type-face) 10285 10286 (face (rainbow-delimiters-depth-5-face)) 10304 10305 (face rust-ampersand-face) 10305 10306 (face (rainbow-delimiters-depth-5-face)) 10306 10311 (face font-lock-constant-face) 10313 10324 (face font-lock-type-face) 10330 10331 (face (rainbow-delimiters-depth-6-face)) 10331 10332 (face (rainbow-delimiters-depth-6-face)) 10334 10345 (face font-lock-type-face) 10351 10352 (face (rainbow-delimiters-depth-6-face)) 10352 10353 (face (rainbow-delimiters-depth-6-face)) 10353 10354 (face (rainbow-delimiters-depth-5-face)) 10392 10393 (face (rainbow-delimiters-depth-4-face)) 10402 10403 (face (rainbow-delimiters-depth-3-face)) 10426 10429 (face font-lock-keyword-face) 10430 10439 (face font-lock-variable-name-face) 10442 10446 (face font-lock-preprocessor-face) 10446 10447 (face (rainbow-delimiters-depth-3-face)) 10460 10468 (face font-lock-type-face) 10469 10470 (face (rainbow-delimiters-depth-4-face)) 10487 10495 (face font-lock-variable-name-face) 10497 10503 (face font-lock-constant-face) 10505 10512 (face font-lock-type-face) 10518 10519 (face (rainbow-delimiters-depth-5-face)) 10519 10520 (face (rainbow-delimiters-depth-5-face)) 10538 10546 (face font-lock-variable-name-face) 10548 10554 (face font-lock-constant-face) 10556 10566 (face font-lock-type-face) 10580 10581 (face (rainbow-delimiters-depth-5-face)) 10581 10587 (face font-lock-constant-face) 10589 10592 (face font-lock-type-face) 10592 10593 (face (rainbow-delimiters-depth-6-face)) 10596 10597 (face (rainbow-delimiters-depth-6-face)) 10597 10598 (face (rainbow-delimiters-depth-5-face)) 10616 10623 (face font-lock-variable-name-face) 10625 10631 (face font-lock-constant-face) 10633 10640 (face font-lock-type-face) 10645 10646 (face (rainbow-delimiters-depth-5-face)) 10659 10660 (face (rainbow-delimiters-depth-5-face)) 10674 10675 (face (rainbow-delimiters-depth-4-face)) 10685 10686 (face (rainbow-delimiters-depth-3-face)) 10696 10699 (face font-lock-keyword-face) 10700 10713 (face font-lock-variable-name-face) 10730 10731 (face (rainbow-delimiters-depth-3-face)) 10731 10732 (face (rainbow-delimiters-depth-3-face)) 10736 10737 (face (rainbow-delimiters-depth-3-face)) 10737 10745 (face font-lock-type-face) 10753 10754 (face (rainbow-delimiters-depth-3-face)) 10764 10765 (face (rainbow-delimiters-depth-3-face)) 10765 10768 (face font-lock-type-face) 10768 10769 (face (rainbow-delimiters-depth-4-face)) 10770 10771 (face (rainbow-delimiters-depth-4-face)) 10771 10772 (face (rainbow-delimiters-depth-3-face)) 10772 10773 (face (rainbow-delimiters-depth-3-face)) 10773 10774 (face (rainbow-delimiters-depth-3-face)) 10784 10787 (face font-lock-keyword-face) 10788 10803 (face font-lock-variable-name-face) 10806 10814 (face font-lock-constant-face) 10839 10840 (face (rainbow-delimiters-depth-3-face)) 10840 10841 (face rust-ampersand-face) 10849 10850 (face rust-ampersand-face) 10863 10864 (face (rainbow-delimiters-depth-3-face)) 10875 10878 (face font-lock-comment-delimiter-face) 10878 10885 (face font-lock-comment-face) 10893 10896 (face font-lock-keyword-face) 10897 10918 (face font-lock-variable-name-face) 10921 10922 (face (rainbow-delimiters-depth-3-face)) 10935 10938 (face font-lock-keyword-face) 10939 10945 (face font-lock-variable-name-face) 10977 10978 (face (rainbow-delimiters-depth-4-face)) 10978 10979 (face rust-ampersand-face) 10979 10983 (face font-lock-constant-face) 10985 11009 (face font-lock-type-face) 11010 11011 (face (rainbow-delimiters-depth-5-face)) 11028 11033 (face font-lock-variable-name-face) 11035 11039 (face font-lock-type-face) 11039 11040 (face (rainbow-delimiters-depth-6-face)) 11040 11048 (face font-lock-string-face) 11048 11063 (face font-lock-string-face) 11063 11064 (face (rainbow-delimiters-depth-6-face)) 11082 11100 (face font-lock-variable-name-face) 11102 11103 (face rust-ampersand-face) 11103 11104 (face (rainbow-delimiters-depth-6-face)) 11125 11126 (face rust-ampersand-face) 11172 11173 (face rust-ampersand-face) 11213 11214 (face (rainbow-delimiters-depth-6-face)) 11232 11252 (face font-lock-variable-name-face) 11254 11255 (face rust-ampersand-face) 11255 11256 (face (rainbow-delimiters-depth-6-face)) 11256 11257 (face (rainbow-delimiters-depth-6-face)) 11271 11272 (face (rainbow-delimiters-depth-5-face)) 11272 11273 (face (rainbow-delimiters-depth-4-face)) 11287 11290 (face font-lock-keyword-face) 11291 11297 (face font-lock-variable-name-face) 11300 11304 (face font-lock-constant-face) 11306 11319 (face font-lock-preprocessor-face) 11319 11320 (face (rainbow-delimiters-depth-4-face)) 11320 11332 (face font-lock-string-face) 11332 11333 (face (rainbow-delimiters-depth-4-face)) 11370 11371 (face (rainbow-delimiters-depth-4-face)) 11388 11389 (face rust-ampersand-face) 11413 11414 (face rust-ampersand-face) 11469 11473 (face font-lock-type-face) 11473 11474 (face (rainbow-delimiters-depth-5-face)) 11474 11481 (face font-lock-constant-face) 11483 11490 (face font-lock-type-face) 11492 11504 (face font-lock-type-face) 11504 11505 (face (rainbow-delimiters-depth-5-face)) 11523 11524 (face rust-ampersand-face) 11524 11525 (face (rainbow-delimiters-depth-5-face)) 11525 11530 (face font-lock-constant-face) 11532 11543 (face font-lock-type-face) 11549 11550 (face (rainbow-delimiters-depth-6-face)) 11550 11551 (face (rainbow-delimiters-depth-6-face)) 11551 11552 (face (rainbow-delimiters-depth-5-face)) 11590 11591 (face (rainbow-delimiters-depth-4-face)) 11600 11601 (face (rainbow-delimiters-depth-3-face)) 11602 11603 (rear-nonsticky t) 11613 11617 (face font-lock-type-face) 11618 11619 (face (rainbow-delimiters-depth-3-face)) 11979 11992 (face font-lock-variable-name-face) 11994 11999 (face font-lock-keyword-face) 12292 12293 (face (rainbow-delimiters-depth-3-face)) 12299 12300 (face (rainbow-delimiters-depth-2-face)) 12306 12309 (face font-lock-keyword-face) 12310 12312 (face font-lock-keyword-face) 12313 12319 (face font-lock-function-name-face) 12319 12320 (face (rainbow-delimiters-depth-2-face)) 12320 12321 (face rust-ampersand-face) 12321 12325 (face font-lock-keyword-face) 12325 12326 (face (rainbow-delimiters-depth-2-face)) 12328 12329 (syntax-table (1)) 12330 12331 (face rust-ampersand-face) 12331 12337 (face font-lock-type-face) 12338 12339 (face (rainbow-delimiters-depth-2-face)) 12348 12349 (face rust-ampersand-face) 12349 12353 (face font-lock-keyword-face) 12365 12366 (face (rainbow-delimiters-depth-2-face)) 12372 12374 (face font-lock-keyword-face) 12375 12381 (face font-lock-function-name-face) 12381 12382 (face (rainbow-delimiters-depth-2-face)) 12382 12383 (face rust-ampersand-face) 12383 12386 (face font-lock-keyword-face) 12387 12391 (face font-lock-keyword-face) 12393 12401 (face font-lock-variable-name-face) 12403 12408 (face font-lock-constant-face) 12410 12413 (face font-lock-constant-face) 12415 12427 (face font-lock-type-face) 12427 12428 (face (rainbow-delimiters-depth-3-face)) 12428 12431 (face font-lock-type-face) 12431 12432 (face (rainbow-delimiters-depth-3-face)) 12432 12433 (face (rainbow-delimiters-depth-2-face)) 12434 12435 (face (rainbow-delimiters-depth-2-face)) 12444 12446 (face font-lock-keyword-face) 12462 12463 (syntax-table (1)) 12485 12486 (syntax-table (1)) 12489 12490 (face (rainbow-delimiters-depth-3-face)) 12503 12507 (face font-lock-keyword-face) 12537 12541 (face font-lock-keyword-face) 12585 12589 (face font-lock-keyword-face) 12635 12639 (face font-lock-keyword-face) 12657 12658 (face (rainbow-delimiters-depth-4-face)) 12658 12659 (face rust-ampersand-face) 12659 12663 (face font-lock-keyword-face) 12672 12673 (face rust-ampersand-face) 12673 12677 (face font-lock-keyword-face) 12684 12685 (face (rainbow-delimiters-depth-4-face)) 12699 12703 (face font-lock-keyword-face) 12720 12727 (face font-lock-constant-face) 12729 12736 (face font-lock-type-face) 12758 12759 (face (rainbow-delimiters-depth-4-face)) 12759 12760 (face rust-ampersand-face) 12760 12764 (face font-lock-keyword-face) 12773 12774 (face rust-ampersand-face) 12774 12778 (face font-lock-keyword-face) 12787 12802 (face font-lock-string-face) 12802 12803 (face (rainbow-delimiters-depth-4-face)) 12817 12821 (face font-lock-keyword-face) 12839 12840 (face (rainbow-delimiters-depth-4-face)) 12871 12872 (face (rainbow-delimiters-depth-4-face)) 12873 12874 (rear-nonsticky t) 12896 12897 (face (rainbow-delimiters-depth-3-face)) 12902 12903 (face (rainbow-delimiters-depth-2-face)) 12909 12911 (face font-lock-keyword-face) 12912 12917 (face font-lock-function-name-face) 12917 12918 (face (rainbow-delimiters-depth-2-face)) 12918 12919 (face rust-ampersand-face) 12919 12922 (face font-lock-keyword-face) 12923 12927 (face font-lock-keyword-face) 12929 12934 (face font-lock-variable-name-face) 12936 12937 (face rust-ampersand-face) 12937 12948 (face font-lock-type-face) 12948 12949 (face (rainbow-delimiters-depth-2-face)) 12951 12952 (syntax-table (1)) 12953 12957 (face font-lock-type-face) 12958 12959 (face (rainbow-delimiters-depth-2-face)) 12968 12973 (face font-lock-keyword-face) 12980 12981 (face (rainbow-delimiters-depth-3-face)) 12994 13005 (face font-lock-type-face) 13007 13020 (face font-lock-type-face) 13021 13022 (face (rainbow-delimiters-depth-4-face)) 13039 13044 (face font-lock-variable-name-face) 13062 13070 (face font-lock-type-face) 13071 13072 (face (rainbow-delimiters-depth-5-face)) 13093 13105 (face font-lock-variable-name-face) 13107 13118 (face font-lock-type-face) 13120 13124 (face font-lock-type-face) 13124 13125 (face (rainbow-delimiters-depth-6-face)) 13128 13129 (face (rainbow-delimiters-depth-6-face)) 13197 13198 (face (rainbow-delimiters-depth-5-face)) 13231 13232 (face (rainbow-delimiters-depth-4-face)) 13234 13235 (syntax-table (1)) 13236 13240 (face font-lock-keyword-face) 13275 13276 (face (rainbow-delimiters-depth-4-face)) 13288 13289 (face (rainbow-delimiters-depth-4-face)) 13303 13314 (face font-lock-type-face) 13316 13326 (face font-lock-type-face) 13327 13328 (face (rainbow-delimiters-depth-4-face)) 13339 13340 (face (rainbow-delimiters-depth-4-face)) 13342 13343 (syntax-table (1)) 13344 13345 (face (rainbow-delimiters-depth-4-face)) 13362 13366 (face font-lock-keyword-face) 13399 13400 (face (rainbow-delimiters-depth-5-face)) 13405 13406 (face (rainbow-delimiters-depth-5-face)) 13424 13428 (face font-lock-keyword-face) 13441 13442 (face (rainbow-delimiters-depth-4-face)) 13455 13466 (face font-lock-type-face) 13468 13478 (face font-lock-type-face) 13479 13480 (face (rainbow-delimiters-depth-4-face)) 13497 13503 (face font-lock-variable-name-face) 13505 13516 (face font-lock-type-face) 13518 13522 (face font-lock-type-face) 13524 13540 (fontified t) 13540 13547 (fontified t) 13547 13563 (fontified t) 13563 13566 (fontified t) 13566 13578 (fontified t) 13578 13579 (face (rainbow-delimiters-depth-4-face) fontified t) 13579 13581 (fontified t) 13581 13582 (fontified t syntax-table (1)) 13582 13583 (fontified t) 13583 13584 (face (rainbow-delimiters-depth-4-face) fontified t) 13584 13585 (fontified t) 13585 13601 (fontified t) 13601 13605 (face font-lock-keyword-face fontified t) 13605 13632 (fontified t) 13632 13644 (face font-lock-type-face fontified t) 13644 13646 (fontified t) 13646 13653 (face font-lock-type-face fontified t) 13653 13655 (fontified t) 13655 13671 (fontified t) 13671 13675 (face font-lock-keyword-face fontified t) 13675 13676 (fontified t) 13676 13688 (fontified t) 13688 13689 (face (rainbow-delimiters-depth-4-face) fontified t) 13689 13690 (fontified t) 13690 13705 (fontified t) 13705 13706 (fontified t syntax-table (1)) 13706 13707 (fontified t) 13707 13712 (face font-lock-keyword-face fontified t) 13712 13714 (fontified t) 13714 13722 (fontified t) 13722 13723 (face (rainbow-delimiters-depth-3-face) fontified t rear-nonsticky t) 13723 13724 (fontified t) 13724 13725 (fontified t) 13725 13726 (fontified t) 13726 13730 (fontified t) 13730 13731 (face (rainbow-delimiters-depth-2-face) fontified t) 13731 13732 (fontified t) 13732 13733 (fontified t) 13733 13737 (fontified t) 13737 13739 (face font-lock-keyword-face fontified t) 13739 13740 (fontified t) 13740 13746 (face font-lock-function-name-face fontified t) 13746 13747 (face (rainbow-delimiters-depth-2-face) fontified t) 13747 13748 (face rust-ampersand-face fontified t) 13748 13751 (face font-lock-keyword-face fontified t) 13751 13752 (fontified t) 13752 13756 (face font-lock-keyword-face fontified t) 13756 13758 (fontified t) 13758 13760 (face font-lock-variable-name-face fontified t) 13760 13762 (fontified t) 13762 13769 (face font-lock-constant-face fontified t) 13769 13771 (fontified t) 13771 13779 (face font-lock-type-face fontified t) 13779 13780 (face (rainbow-delimiters-depth-2-face) fontified t) 13780 13781 (fontified t) 13781 13782 (face (rainbow-delimiters-depth-2-face) fontified t) 13782 13783 (fontified t) 13783 13791 (fontified t) 13791 13795 (face font-lock-keyword-face fontified t) 13795 13827 (fontified t) 13827 13828 (face (rainbow-delimiters-depth-3-face) fontified t) 13828 13829 (face rust-ampersand-face fontified t) 13829 13832 (face font-lock-keyword-face fontified t) 13832 13833 (fontified t) 13833 13837 (face font-lock-keyword-face fontified t) 13837 13848 (fontified t) 13848 13849 (face (rainbow-delimiters-depth-3-face) fontified t) 13849 13851 (fontified t) 13851 13859 (fontified t) 13859 13863 (face font-lock-keyword-face fontified t) 13863 13895 (fontified t) 13895 13896 (face (rainbow-delimiters-depth-3-face) fontified t) 13896 13897 (face rust-ampersand-face fontified t) 13897 13901 (face font-lock-keyword-face fontified t) 13901 13910 (fontified t) 13910 13911 (face rust-ampersand-face fontified t) 13911 13915 (face font-lock-keyword-face fontified t) 13915 13926 (fontified t) 13926 13927 (face (rainbow-delimiters-depth-3-face) fontified t) 13927 13928 (fontified t rear-nonsticky t) 13928 13929 (fontified t) 13929 13937 (fontified t) 13937 13941 (face font-lock-keyword-face fontified t) 13941 13960 (fontified t) 13960 13961 (face (rainbow-delimiters-depth-3-face) fontified t) 13961 13962 (face rust-ampersand-face fontified t) 13962 13966 (face font-lock-keyword-face fontified t) 13966 13985 (fontified t) 13985 13993 (face font-lock-constant-face fontified t) 13993 14005 (fontified t) 14005 14006 (face (rainbow-delimiters-depth-4-face) fontified t) 14006 14007 (face rust-ampersand-face fontified t) 14007 14008 (face (rainbow-delimiters-depth-5-face) fontified t) 14008 14012 (face font-lock-keyword-face fontified t) 14012 14027 (fontified t) 14027 14028 (face (rainbow-delimiters-depth-5-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-4-face) fontified t) 14029 14030 (face (rainbow-delimiters-depth-3-face) fontified t) 14030 14032 (fontified t) 14032 14033 (fontified t) 14033 14041 (fontified t) 14041 14044 (face font-lock-comment-delimiter-face fontified t) 14044 14061 (face font-lock-comment-face fontified t) 14061 14069 (fontified t) 14069 14072 (face font-lock-keyword-face fontified t) 14072 14073 (fontified t) 14073 14085 (face font-lock-variable-name-face fontified t) 14085 14088 (fontified t) 14088 14094 (face font-lock-constant-face fontified t) 14094 14096 (fontified t) 14096 14103 (face font-lock-type-face fontified t) 14103 14109 (fontified t) 14109 14110 (face (rainbow-delimiters-depth-3-face) fontified t) 14110 14114 (face font-lock-keyword-face fontified t) 14114 14137 (fontified t) 14137 14138 (face (rainbow-delimiters-depth-3-face) fontified t) 14138 14140 (fontified t) 14140 14148 (fontified t) 14148 14151 (face font-lock-comment-delimiter-face fontified t) 14151 14155 (face font-lock-comment-face fontified t) 14155 14181 (face font-lock-comment-face fontified t) 14181 14189 (fontified t) 14189 14192 (face font-lock-comment-delimiter-face fontified t) 14192 14196 (face font-lock-comment-delimiter-face fontified t) 14196 14197 (face font-lock-comment-face fontified t) 14197 14203 (face font-lock-comment-face fontified t) 14203 14205 (face font-lock-comment-face fontified t) 14205 14212 (face font-lock-comment-face fontified t) 14212 14229 (face font-lock-comment-face fontified t) 14229 14230 (face font-lock-comment-face fontified t) 14230 14231 (face font-lock-comment-face fontified t) 14231 14244 (face font-lock-comment-face fontified t) 14244 14245 (face font-lock-comment-face fontified t) 14245 14250 (face font-lock-comment-face fontified t) 14250 14251 (face font-lock-comment-face fontified t) 14251 14252 (face font-lock-comment-face fontified t) 14252 14254 (face font-lock-comment-face fontified t) 14254 14260 (face font-lock-comment-face fontified t) 14260 14262 (face font-lock-comment-face fontified t) 14262 14265 (face font-lock-comment-face fontified t) 14265 14266 (face font-lock-comment-face fontified t) 14266 14269 (face font-lock-comment-face fontified t) 14269 14270 (face font-lock-comment-face fontified t) 14270 14271 (face font-lock-comment-face fontified t) 14271 14272 (face font-lock-comment-face fontified t) 14272 14280 (fontified t) 14280 14283 (face font-lock-comment-delimiter-face fontified t) 14283 14288 (face font-lock-comment-delimiter-face fontified t) 14288 14302 (face font-lock-comment-face fontified t) 14302 14303 (face font-lock-comment-face fontified t) 14303 14304 (face font-lock-comment-face fontified t) 14304 14312 (fontified t) 14312 14315 (face font-lock-comment-delimiter-face fontified t) 14315 14319 (face font-lock-comment-delimiter-face fontified t) 14319 14323 (face font-lock-comment-face fontified t) 14323 14324 (face font-lock-comment-face fontified t) 14324 14325 (face font-lock-comment-face fontified t) 14325 14326 (face font-lock-comment-face fontified t) 14326 14328 (face font-lock-comment-face fontified t) 14328 14329 (fontified t) 14329 14337 (fontified t) 14337 14341 (face font-lock-keyword-face fontified t) 14341 14367 (fontified t) 14367 14379 (fontified t) 14379 14380 (face (rainbow-delimiters-depth-3-face) fontified t) 14380 14386 (face font-lock-constant-face fontified t) 14386 14388 (fontified t) 14388 14395 (face font-lock-type-face fontified t) 14395 14412 (fontified t) 14412 14413 (face (rainbow-delimiters-depth-4-face) fontified t) 14413 14414 (face (rainbow-delimiters-depth-5-face) fontified t) 14414 14427 (fontified t) 14427 14428 (face (rainbow-delimiters-depth-5-face) fontified t) 14428 14433 (fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14435 (face (rainbow-delimiters-depth-5-face) fontified t) 14435 14437 (fontified t) 14437 14443 (face font-lock-constant-face fontified t) 14443 14445 (fontified t) 14445 14448 (face font-lock-type-face fontified t) 14448 14449 (face (rainbow-delimiters-depth-5-face) fontified t) 14449 14470 (fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-6-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-5-face) fontified t) 14473 14474 (face (rainbow-delimiters-depth-4-face) fontified t) 14474 14475 (fontified t) 14475 14488 (fontified t) 14488 14502 (fontified t) 14502 14503 (face (rainbow-delimiters-depth-3-face) fontified t) 14503 14508 (fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14510 (face (rainbow-delimiters-depth-3-face) fontified t) 14510 14512 (fontified t) 14512 14515 (face font-lock-comment-delimiter-face fontified t) 14515 14523 (face font-lock-comment-face fontified t) 14523 14524 (face font-lock-comment-face fontified t rear-nonsticky t) 14524 14525 (fontified t) 14525 14533 (fontified t) 14533 14537 (face font-lock-keyword-face fontified t) 14537 14551 (fontified t) 14551 14556 (fontified t) 14556 14557 (face (rainbow-delimiters-depth-3-face) fontified t) 14557 14558 (face rust-ampersand-face fontified t) 14558 14562 (face font-lock-keyword-face fontified t) 14562 14580 (fontified t) 14580 14588 (face font-lock-constant-face fontified t) 14588 14600 (fontified t) 14600 14601 (face (rainbow-delimiters-depth-4-face) fontified t) 14601 14602 (face rust-ampersand-face fontified t) 14602 14603 (face (rainbow-delimiters-depth-5-face) fontified t) 14603 14607 (face font-lock-keyword-face fontified t) 14607 14621 (fontified t) 14621 14622 (face (rainbow-delimiters-depth-5-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-4-face) fontified t) 14623 14624 (face (rainbow-delimiters-depth-3-face) fontified t) 14624 14626 (fontified t) 14626 14627 (fontified t) 14627 14631 (fontified t) 14631 14632 (face (rainbow-delimiters-depth-2-face) fontified t) 14632 14633 (fontified t) 14633 14634 (fontified t) 14634 14638 (fontified t) 14638 14640 (face font-lock-keyword-face fontified t) 14640 14641 (fontified t) 14641 14647 (face font-lock-function-name-face fontified t) 14647 14648 (face (rainbow-delimiters-depth-2-face) fontified t) 14648 14649 (face rust-ampersand-face fontified t) 14649 14652 (face font-lock-keyword-face fontified t) 14652 14653 (fontified t) 14653 14657 (face font-lock-keyword-face fontified t) 14657 14659 (fontified t) 14659 14664 (face font-lock-variable-name-face fontified t) 14664 14666 (fontified t) 14666 14670 (face font-lock-constant-face fontified t) 14670 14672 (fontified t) 14672 14677 (face font-lock-type-face fontified t) 14677 14678 (face (rainbow-delimiters-depth-2-face) fontified t) 14678 14680 (fontified t) 14680 14681 (fontified t syntax-table (1)) 14681 14682 (fontified t) 14682 14688 (face font-lock-type-face fontified t) 14688 14689 (face (rainbow-delimiters-depth-2-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14691 (face (rainbow-delimiters-depth-3-face) fontified t) 14691 14693 (fontified t) 14693 14697 (face font-lock-constant-face fontified t) 14697 14699 (fontified t) 14699 14711 (face font-lock-type-face fontified t) 14711 14712 (face (rainbow-delimiters-depth-2-face) fontified t) 14712 14713 (fontified t) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified t) 14714 14715 (fontified t) 14715 14723 (fontified t) 14723 14726 (face font-lock-keyword-face fontified t) 14726 14727 (fontified t) 14727 14733 (face font-lock-variable-name-face fontified t) 14733 14736 (fontified t) 14736 14740 (face font-lock-keyword-face fontified t) 14740 14742 (fontified t) 14742 14756 (fontified t) 14756 14768 (fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face (rainbow-delimiters-depth-3-face) fontified t) 14770 14771 (face rust-question-mark fontified t) 14771 14773 (fontified t) 14773 14781 (fontified t) 14781 14784 (face font-lock-keyword-face fontified t) 14784 14785 (fontified t) 14785 14789 (face font-lock-variable-name-face fontified t) 14789 14805 (fontified t) 14805 14818 (fontified t) 14818 14819 (face (rainbow-delimiters-depth-3-face) fontified t) 14819 14820 (face rust-ampersand-face fontified t) 14820 14824 (face font-lock-constant-face fontified t) 14824 14826 (fontified t) 14826 14847 (face font-lock-type-face fontified t) 14847 14850 (fontified t) 14850 14856 (fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-4-face) fontified t) 14858 14859 (face (rainbow-delimiters-depth-3-face) fontified t) 14859 14861 (fontified t) 14861 14864 (fontified t) 14864 14869 (fontified t) 14869 14872 (face font-lock-keyword-face fontified t) 14872 14873 (fontified t) 14873 14876 (face font-lock-keyword-face fontified t) 14876 14877 (fontified t) 14877 14884 (face font-lock-variable-name-face fontified t) 14884 14885 (fontified t) 14885 14887 (fontified t) 14887 14891 (face font-lock-keyword-face fontified t) 14891 14921 (fontified t) 14921 14922 (face (rainbow-delimiters-depth-3-face) fontified t) 14922 14923 (face rust-ampersand-face fontified t) 14923 14927 (face font-lock-constant-face fontified t) 14927 14929 (fontified t) 14929 14953 (face font-lock-type-face fontified t) 14953 14954 (fontified t) 14954 14955 (face (rainbow-delimiters-depth-4-face) fontified t) 14955 14956 (fontified t) 14956 14968 (fontified t) 14968 14973 (face font-lock-variable-name-face fontified t) 14973 14975 (fontified t) 14975 14979 (face font-lock-type-face fontified t) 14979 14980 (face (rainbow-delimiters-depth-5-face) fontified t) 14980 14996 (face font-lock-string-face fontified t) 14996 14997 (face (rainbow-delimiters-depth-5-face) fontified t) 14997 14999 (fontified t) 14999 15007 (fontified t) 15007 15008 (face (rainbow-delimiters-depth-4-face) fontified t) 15008 15009 (face (rainbow-delimiters-depth-3-face) fontified t) 15009 15011 (fontified t) 15011 15020 (fontified t) 15020 15028 (fontified t) 15028 15031 (face font-lock-keyword-face fontified t) 15031 15032 (fontified t) 15032 15035 (face font-lock-keyword-face fontified t) 15035 15036 (fontified t) 15036 15047 (face font-lock-variable-name-face fontified t) 15047 15063 (fontified t) 15063 15075 (fontified t) 15075 15076 (face (rainbow-delimiters-depth-3-face) fontified t) 15076 15077 (face rust-ampersand-face fontified t) 15077 15081 (face font-lock-constant-face fontified t) 15081 15083 (fontified t) 15083 15103 (face font-lock-type-face fontified t) 15103 15104 (fontified t) 15104 15105 (face (rainbow-delimiters-depth-4-face) fontified t) 15105 15106 (fontified t) 15106 15118 (fontified t) 15118 15123 (face font-lock-variable-name-face fontified t) 15123 15125 (fontified t) 15125 15129 (face font-lock-type-face fontified t) 15129 15130 (face (rainbow-delimiters-depth-5-face) fontified t) 15130 15143 (face font-lock-string-face fontified t) 15143 15144 (face (rainbow-delimiters-depth-5-face) fontified t) 15144 15146 (fontified t) 15146 15158 (fontified t) 15158 15175 (face font-lock-variable-name-face fontified t) 15175 15177 (fontified t) 15177 15178 (face rust-ampersand-face fontified t) 15178 15179 (face (rainbow-delimiters-depth-5-face) fontified t) 15179 15183 (face font-lock-type-face fontified t) 15183 15184 (face (rainbow-delimiters-depth-6-face) fontified t) 15184 15188 (face font-lock-constant-face fontified t) 15188 15190 (fontified t) 15190 15215 (face font-lock-type-face fontified t) 15215 15216 (fontified t) 15216 15217 (face (rainbow-delimiters-depth-7-face) fontified t) 15217 15218 (fontified t) 15218 15234 (fontified t) 15234 15238 (face font-lock-variable-name-face fontified t) 15238 15239 (fontified t) 15239 15240 (fontified t) 15240 15241 (face rust-ampersand-face fontified t) 15241 15247 (fontified t) 15247 15252 (fontified t) 15252 15263 (fontified t) 15263 15277 (face font-lock-variable-name-face fontified t) 15277 15278 (fontified t) 15278 15279 (fontified t) 15279 15283 (face font-lock-type-face fontified t) 15283 15285 (fontified t) 15285 15292 (fontified t) 15292 15301 (fontified t) 15301 15304 (face font-lock-variable-name-face fontified t) 15304 15306 (fontified t) 15306 15310 (face font-lock-constant-face fontified t) 15310 15312 (fontified t) 15312 15322 (face font-lock-type-face fontified t) 15322 15323 (fontified t) 15323 15324 (face (rainbow-delimiters-depth-8-face) fontified t) 15324 15325 (fontified t) 15325 15341 (fontified t) 15341 15345 (fontified t) 15345 15349 (face font-lock-variable-name-face fontified t) 15349 15351 (fontified t) 15351 15355 (face font-lock-constant-face fontified t) 15355 15357 (fontified t) 15357 15363 (face font-lock-type-face fontified t) 15363 15365 (fontified t) 15365 15370 (face font-lock-type-face fontified t) 15370 15371 (face (rainbow-delimiters-depth-9-face) fontified t) 15371 15376 (fontified t) 15376 15377 (face (rainbow-delimiters-depth-9-face) fontified t) 15377 15379 (fontified t) 15379 15399 (fontified t) 15399 15404 (face font-lock-variable-name-face fontified t) 15404 15406 (fontified t) 15406 15410 (face font-lock-constant-face fontified t) 15410 15412 (fontified t) 15412 15419 (face font-lock-type-face fontified t) 15419 15421 (fontified t) 15421 15426 (face font-lock-type-face fontified t) 15426 15428 (fontified t) 15428 15444 (fontified t) 15444 15445 (face (rainbow-delimiters-depth-8-face) fontified t) 15445 15447 (fontified t) 15447 15459 (fontified t) 15459 15460 (face (rainbow-delimiters-depth-7-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-6-face) fontified t) 15461 15462 (face (rainbow-delimiters-depth-5-face) fontified t) 15462 15476 (fontified t) 15476 15478 (face font-lock-variable-name-face fontified t) 15478 15479 (face font-lock-variable-name-face fontified t) 15479 15480 (face font-lock-variable-name-face fontified t) 15480 15486 (face font-lock-variable-name-face fontified t) 15486 15492 (face font-lock-variable-name-face fontified t) 15492 15500 (face font-lock-variable-name-face fontified t) 15500 15502 (fontified t) 15502 15506 (face font-lock-type-face fontified t) 15506 15507 (face (rainbow-delimiters-depth-5-face) fontified t) 15507 15511 (face font-lock-constant-face fontified t) 15511 15513 (fontified t) 15513 15514 (face font-lock-type-face fontified t) 15514 15545 (face font-lock-type-face fontified t) 15545 15546 (fontified t) 15546 15547 (face (rainbow-delimiters-depth-6-face) fontified t) 15547 15548 (fontified t) 15548 15560 (fontified t) 15560 15564 (fontified t) 15564 15568 (face font-lock-variable-name-face fontified t) 15568 15570 (fontified t) 15570 15571 (face rust-ampersand-face fontified t) 15571 15575 (face font-lock-keyword-face fontified t) 15575 15578 (fontified t) 15578 15596 (fontified t) 15596 15612 (fontified t) 15612 15621 (face font-lock-variable-name-face fontified t) 15621 15623 (fontified t) 15623 15627 (face font-lock-type-face fontified t) 15627 15628 (face (rainbow-delimiters-depth-7-face) fontified t) 15628 15632 (face font-lock-constant-face fontified t) 15632 15634 (fontified t) 15634 15638 (face font-lock-type-face fontified t) 15638 15644 (face font-lock-type-face fontified t) 15644 15645 (fontified t) 15645 15646 (face (rainbow-delimiters-depth-8-face) fontified t) 15646 15647 (fontified t) 15647 15667 (fontified t) 15667 15671 (face font-lock-variable-name-face fontified t) 15671 15673 (fontified t) 15673 15677 (face font-lock-constant-face fontified t) 15677 15679 (fontified t) 15679 15685 (face font-lock-type-face fontified t) 15685 15687 (fontified t) 15687 15692 (face font-lock-type-face fontified t) 15692 15693 (face (rainbow-delimiters-depth-9-face) fontified t) 15693 15696 (fontified t) 15696 15697 (face (rainbow-delimiters-depth-9-face) fontified t) 15697 15719 (fontified t) 15719 15724 (face font-lock-variable-name-face fontified t) 15724 15726 (fontified t) 15726 15730 (face font-lock-constant-face fontified t) 15730 15732 (fontified t) 15732 15739 (face font-lock-type-face fontified t) 15739 15741 (fontified t) 15741 15746 (face font-lock-type-face fontified t) 15746 15764 (fontified t) 15764 15765 (face (rainbow-delimiters-depth-8-face) fontified t) 15765 15766 (face (rainbow-delimiters-depth-7-face) fontified t) 15766 15784 (fontified t) 15784 15795 (face font-lock-variable-name-face fontified t) 15795 15797 (fontified t) 15797 15801 (face font-lock-type-face fontified t) 15801 15803 (fontified t) 15803 15815 (fontified t) 15815 15816 (face (rainbow-delimiters-depth-6-face) fontified t) 15816 15817 (face (rainbow-delimiters-depth-5-face) fontified t) 15817 15819 (fontified t) 15819 15826 (fontified t) 15826 15831 (fontified t) 15831 15850 (face font-lock-variable-name-face fontified t) 15850 15852 (fontified t) 15852 15856 (face font-lock-type-face fontified t) 15856 15858 (fontified t) 15858 15870 (fontified t) 15870 15874 (face font-lock-variable-name-face fontified t) 15874 15886 (face font-lock-variable-name-face fontified t) 15886 15888 (fontified t) 15888 15892 (face font-lock-type-face fontified t) 15892 15894 (fontified t) 15894 15902 (fontified t) 15902 15903 (face (rainbow-delimiters-depth-4-face) fontified t) 15903 15904 (face (rainbow-delimiters-depth-3-face) fontified t) 15904 15906 (fontified t) 15906 15914 (fontified t) 15914 15917 (face font-lock-comment-delimiter-face fontified t) 15917 15922 (face font-lock-comment-face fontified t) 15922 15959 (fontified t) 15959 15960 (face (rainbow-delimiters-depth-3-face) fontified t) 15960 15963 (fontified t) 15963 15967 (face font-lock-keyword-face fontified t) 15967 15975 (fontified t) 15975 15989 (fontified t) 15989 15990 (fontified t face (rainbow-delimiters-depth-4-face)) 15990 15992 (fontified t) 15992 15993 (fontified t face (rainbow-delimiters-depth-4-face)) 15993 15994 (fontified t face (rainbow-delimiters-depth-3-face)) 15994 15996 (fontified t) 15996 15997 (fontified t) 15997 16005 (fontified t) 16005 16010 (face font-lock-preprocessor-face fontified t) 16010 16011 (face (rainbow-delimiters-depth-3-face) fontified t) 16011 16024 (face font-lock-string-face fontified t) 16024 16025 (face font-lock-string-face fontified t) 16025 16028 (face font-lock-string-face fontified t) 16028 16040 (face font-lock-string-face fontified t) 16040 16041 (face (rainbow-delimiters-depth-3-face) fontified t) 16041 16042 (fontified t) 16042 16043 (fontified t) 16043 16051 (fontified t) 16051 16054 (face font-lock-keyword-face fontified t) 16054 16055 (fontified t) 16055 16060 (face font-lock-keyword-face fontified t) 16060 16062 (fontified t) 16062 16067 (face font-lock-constant-face fontified t) 16067 16069 (fontified t) 16069 16078 (face font-lock-type-face fontified t) 16078 16080 (fontified t) 16080 16083 (face font-lock-comment-delimiter-face fontified t) 16083 16088 (face font-lock-comment-face fontified t) 16088 16120 (fontified t) 16120 16121 (face (rainbow-delimiters-depth-3-face) fontified t) 16121 16122 (face rust-ampersand-face fontified t) 16122 16126 (face font-lock-keyword-face fontified t) 16126 16148 (fontified t) 16148 16149 (face (rainbow-delimiters-depth-3-face) fontified t) 16149 16151 (fontified t) 16151 16154 (face font-lock-comment-delimiter-face fontified t) 16154 16159 (face font-lock-comment-face fontified t) 16159 16195 (fontified t) 16195 16196 (face (rainbow-delimiters-depth-3-face) fontified t) 16196 16197 (fontified t) 16197 16209 (fontified t) 16209 16210 (face rust-ampersand-face fontified t) 16210 16214 (face font-lock-keyword-face fontified t) 16214 16226 (fontified t) 16226 16238 (fontified t) 16238 16239 (face rust-ampersand-face fontified t) 16239 16243 (face font-lock-keyword-face fontified t) 16243 16247 (fontified t) 16247 16263 (fontified t) 16263 16275 (fontified t) 16275 16276 (face rust-ampersand-face fontified t) 16276 16280 (face font-lock-keyword-face fontified t) 16280 16299 (fontified t) 16299 16307 (fontified t) 16307 16308 (face (rainbow-delimiters-depth-3-face) fontified t) 16308 16310 (fontified t) 16310 16313 (face font-lock-comment-delimiter-face fontified t) 16313 16316 (face font-lock-comment-face fontified t) 16316 16317 (face font-lock-comment-face fontified t rear-nonsticky t) 16317 16318 (face font-lock-comment-face fontified t) 16318 16319 (fontified t) 16319 16327 (fontified t) 16327 16332 (face font-lock-preprocessor-face fontified t) 16332 16333 (face (rainbow-delimiters-depth-3-face) fontified t) 16333 16362 (face font-lock-string-face fontified t) 16362 16363 (face (rainbow-delimiters-depth-3-face) fontified t) 16363 16364 (fontified t) 16364 16365 (fontified t) 16365 16373 (fontified t) 16373 16397 (fontified t) 16397 16398 (face (rainbow-delimiters-depth-3-face) fontified t) 16398 16399 (face rust-ampersand-face fontified t) 16399 16403 (face font-lock-keyword-face fontified t) 16403 16419 (fontified t) 16419 16420 (face (rainbow-delimiters-depth-3-face) fontified t) 16420 16422 (fontified t) 16422 16425 (face font-lock-comment-delimiter-face fontified t) 16425 16427 (face font-lock-comment-face fontified t) 16427 16428 (face font-lock-comment-face fontified t) 16428 16468 (fontified t) 16468 16469 (face (rainbow-delimiters-depth-3-face) fontified t) 16469 16470 (fontified t) 16470 16482 (fontified t) 16482 16483 (face rust-ampersand-face fontified t) 16483 16487 (face font-lock-keyword-face fontified t) 16487 16499 (fontified t) 16499 16514 (fontified t) 16514 16518 (face font-lock-keyword-face fontified t) 16518 16532 (fontified t) 16532 16533 (face (rainbow-delimiters-depth-4-face) fontified t) 16533 16534 (face (rainbow-delimiters-depth-4-face) fontified t) 16534 16535 (fontified t) 16535 16537 (face font-lock-keyword-face fontified t) 16537 16538 (fontified t) 16538 16541 (face font-lock-type-face fontified t) 16541 16543 (fontified t) 16543 16555 (fontified t) 16555 16556 (face rust-ampersand-face fontified t) 16556 16560 (face font-lock-keyword-face fontified t) 16560 16580 (fontified t) 16580 16592 (fontified t) 16592 16593 (face rust-ampersand-face fontified t) 16593 16597 (face font-lock-keyword-face fontified t) 16597 16598 (fontified t) 16598 16615 (fontified t) 16615 16616 (fontified t) 16616 16624 (fontified t) 16624 16625 (face (rainbow-delimiters-depth-3-face) fontified t) 16625 16627 (fontified t) 16627 16628 (fontified t) 16628 16640 (fontified t) 16640 16641 (face (rainbow-delimiters-depth-3-face) fontified t) 16641 16652 (fontified t) 16652 16653 (face (rainbow-delimiters-depth-3-face) fontified t) 16653 16655 (fontified t) 16655 16656 (fontified t) 16656 16657 (fontified t) 16657 16665 (fontified t) 16665 16668 (face font-lock-comment-delimiter-face fontified t) 16668 16669 (face font-lock-comment-face fontified t) 16669 16721 (face font-lock-comment-face fontified t) 16721 16729 (fontified t) 16729 16733 (face font-lock-keyword-face fontified t) 16733 16746 (fontified t) 16746 16747 (face (rainbow-delimiters-depth-3-face) fontified t) 16747 16750 (face font-lock-constant-face fontified t) 16750 16752 (fontified t) 16752 16756 (face font-lock-constant-face fontified t) 16756 16762 (fontified t) 16762 16763 (face (rainbow-delimiters-depth-4-face) fontified t) 16763 16777 (fontified t) 16777 16778 (face (rainbow-delimiters-depth-5-face) fontified t) 16778 16779 (face (rainbow-delimiters-depth-5-face) fontified t) 16779 16780 (face (rainbow-delimiters-depth-4-face) fontified t) 16780 16781 (face (rainbow-delimiters-depth-3-face) fontified t) 16781 16783 (fontified t) 16783 16785 (fontified t) 16785 16805 (fontified t) 16805 16806 (face (rainbow-delimiters-depth-3-face) fontified t) 16806 16807 (face (rainbow-delimiters-depth-3-face) fontified t) 16807 16809 (fontified t) 16809 16810 (fontified t) 16810 16818 (fontified t) 16818 16820 (face font-lock-type-face fontified t) 16820 16821 (face (rainbow-delimiters-depth-3-face) fontified t) 16821 16822 (face (rainbow-delimiters-depth-4-face) fontified t) 16822 16823 (face (rainbow-delimiters-depth-4-face) fontified t) 16823 16824 (face (rainbow-delimiters-depth-3-face) fontified t) 16824 16825 (fontified t) 16825 16826 (fontified t) 16826 16830 (fontified t) 16830 16831 (face (rainbow-delimiters-depth-2-face) fontified t) 16831 16832 (fontified t) 16832 16833 (face (rainbow-delimiters-depth-1-face) fontified t) 16833 16834 (fontified t) 16834 16835 (fontified t) 16835 16836 (fontified t) 16836 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16845 (face font-lock-keyword-face fontified t) 16845 16846 (fontified t) 16846 16848 (face font-lock-keyword-face fontified t) 16848 16849 (fontified t) 16849 16852 (face font-lock-function-name-face fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (face (rainbow-delimiters-depth-1-face) fontified t) 16854 16855 (fontified t) 16855 16856 (face (rainbow-delimiters-depth-1-face) fontified t) 16856 16857 (fontified t) 16857 16866 (fontified t) 16866 16869 (face font-lock-keyword-face fontified t) 16869 16870 (fontified t) 16870 16880 (face font-lock-variable-name-face fontified t) 16880 16883 (fontified t) 16883 16892 (face font-lock-type-face fontified t) 16892 16897 (fontified t) 16897 16898 (face (rainbow-delimiters-depth-2-face) fontified t) 16898 16899 (face (rainbow-delimiters-depth-2-face) fontified t) 16899 16906 (fontified t) 16906 16907 (face (rainbow-delimiters-depth-2-face) fontified t) 16907 16908 (face (rainbow-delimiters-depth-2-face) fontified t) 16908 16914 (fontified t) 16914 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16924 (face font-lock-variable-name-face fontified t) 16924 16927 (fontified t) 16927 16940 (face font-lock-type-face fontified t) 16940 16945 (fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16947 (face (rainbow-delimiters-depth-2-face) fontified t) 16947 16953 (fontified t) 16953 16954 (face (rainbow-delimiters-depth-2-face) fontified t) 16954 16955 (face rust-ampersand-face fontified t) 16955 16959 (fontified t) 16959 16965 (fontified t) 16965 16966 (face (rainbow-delimiters-depth-2-face) fontified t) 16966 16973 (fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16975 (face (rainbow-delimiters-depth-2-face) fontified t) 16975 16977 (fontified t) 16977 16982 (fontified t) 16982 16985 (face font-lock-comment-delimiter-face fontified t) 16985 17048 (face font-lock-comment-face fontified t) 17048 17059 (face font-lock-comment-face fontified t) 17059 17063 (fontified t) 17063 17066 (face font-lock-comment-delimiter-face fontified t) 17066 17096 (face font-lock-comment-face fontified t) 17096 17123 (face font-lock-comment-face fontified t) 17123 17139 (face font-lock-comment-face fontified t) 17139 17147 (fontified t) 17147 17170 (fontified t) 17170 17171 (face (rainbow-delimiters-depth-2-face) fontified t) 17171 17182 (face font-lock-type-face fontified t) 17182 17184 (fontified t) 17184 17188 (face font-lock-type-face fontified t) 17188 17189 (face (rainbow-delimiters-depth-2-face) fontified t) 17189 17191 (fontified t) 17191 17196 (fontified t) 17196 17199 (face font-lock-keyword-face fontified t) 17199 17200 (fontified t) 17200 17203 (face font-lock-keyword-face fontified t) 17203 17204 (fontified t) 17204 17209 (face font-lock-variable-name-face fontified t) 17209 17212 (fontified t) 17212 17217 (face font-lock-type-face fontified t) 17217 17222 (fontified t) 17222 17223 (face (rainbow-delimiters-depth-2-face) fontified t) 17223 17229 (fontified t) 17229 17230 (face (rainbow-delimiters-depth-2-face) fontified t) 17230 17231 (fontified t) 17231 17236 (face font-lock-keyword-face fontified t) 17236 17238 (fontified t) 17238 17242 (fontified t) 17242 17245 (face font-lock-keyword-face fontified t) 17245 17246 (fontified t) 17246 17249 (face font-lock-keyword-face fontified t) 17249 17250 (fontified t) 17250 17266 (face font-lock-variable-name-face fontified t) 17266 17269 (fontified t) 17269 17276 (face font-lock-constant-face fontified t) 17276 17278 (fontified t) 17278 17285 (face font-lock-type-face fontified t) 17285 17290 (fontified t) 17290 17291 (face (rainbow-delimiters-depth-2-face) fontified t) 17291 17292 (face (rainbow-delimiters-depth-2-face) fontified t) 17292 17295 (fontified t) 17295 17298 (face font-lock-comment-delimiter-face fontified t) 17298 17302 (face font-lock-comment-face fontified t) 17302 17303 (face font-lock-comment-face rear-nonsticky t fontified t) 17303 17304 (fontified t) 17304 17309 (fontified t) 17309 17312 (face font-lock-comment-delimiter-face fontified t) 17312 17318 (face font-lock-comment-face fontified t) 17318 17336 (fontified t) 17336 17337 (face (rainbow-delimiters-depth-2-face) fontified t) 17337 17341 (face font-lock-keyword-face fontified t) 17341 17356 (fontified t) 17356 17357 (face (rainbow-delimiters-depth-3-face) fontified t) 17357 17358 (fontified t) 17358 17366 (fontified t) 17366 17371 (face font-lock-keyword-face fontified t) 17371 17378 (fontified t) 17378 17379 (face (rainbow-delimiters-depth-4-face) fontified t) 17379 17380 (fontified t) 17380 17392 (fontified t) 17392 17397 (face font-lock-type-face fontified t) 17397 17399 (fontified t) 17399 17410 (face font-lock-type-face fontified t) 17410 17411 (fontified t) 17411 17412 (face (rainbow-delimiters-depth-5-face) fontified t) 17412 17413 (fontified t) 17413 17429 (fontified t) 17429 17434 (face font-lock-variable-name-face fontified t) 17434 17436 (fontified t) 17436 17447 (face font-lock-type-face fontified t) 17447 17449 (fontified t) 17449 17460 (face font-lock-type-face fontified t) 17460 17461 (face (rainbow-delimiters-depth-6-face) fontified t) 17461 17469 (fontified t) 17469 17470 (face (rainbow-delimiters-depth-6-face) fontified t) 17470 17472 (fontified t) 17472 17491 (fontified t) 17491 17494 (face font-lock-comment-delimiter-face fontified t) 17494 17530 (face font-lock-comment-face fontified t) 17530 17542 (fontified t) 17542 17543 (face (rainbow-delimiters-depth-5-face) fontified t) 17543 17545 (fontified t) 17545 17546 (fontified t syntax-table (1)) 17546 17547 (fontified t) 17547 17549 (face font-lock-keyword-face fontified t) 17549 17561 (fontified t) 17561 17570 (fontified t) 17570 17571 (face (rainbow-delimiters-depth-5-face) fontified t) 17571 17572 (fontified t) 17572 17608 (fontified t) 17608 17625 (fontified t) 17625 17626 (face (rainbow-delimiters-depth-6-face) fontified t) 17626 17642 (fontified t) 17642 17643 (face (rainbow-delimiters-depth-6-face) fontified t) 17643 17644 (fontified t) 17644 17656 (fontified t) 17656 17657 (face (rainbow-delimiters-depth-5-face) fontified t rear-nonsticky t) 17657 17658 (fontified t) 17658 17659 (fontified t) 17659 17671 (fontified t) 17671 17676 (face font-lock-type-face fontified t) 17676 17678 (fontified t) 17678 17689 (face font-lock-type-face fontified t) 17689 17690 (fontified t) 17690 17691 (face (rainbow-delimiters-depth-5-face) fontified t) 17691 17708 (fontified t) 17708 17711 (face font-lock-keyword-face fontified t) 17711 17712 (fontified t) 17712 17717 (face font-lock-variable-name-face fontified t) 17717 17719 (fontified t) 17719 17737 (fontified t) 17737 17738 (fontified t) 17738 17744 (fontified t) 17744 17750 (fontified t) 17750 17751 (face (rainbow-delimiters-depth-5-face) fontified t) 17751 17753 (fontified t) 17753 17754 (syntax-table (1) fontified t) 17754 17755 (fontified t) 17755 17756 (face (rainbow-delimiters-depth-5-face) fontified t) 17756 17757 (fontified t) 17757 17773 (fontified t) 17773 17775 (face font-lock-keyword-face fontified t) 17775 17788 (fontified t) 17788 17789 (face (rainbow-delimiters-depth-6-face) fontified t) 17789 17794 (fontified t) 17794 17795 (face (rainbow-delimiters-depth-6-face) fontified t) 17795 17796 (fontified t) 17796 17797 (face (rainbow-delimiters-depth-6-face) fontified t) 17797 17798 (fontified t) 17798 17801 (face font-lock-comment-delimiter-face fontified t) 17801 17810 (face font-lock-comment-face fontified t) 17810 17830 (fontified t) 17830 17835 (face font-lock-keyword-face fontified t) 17835 17842 (fontified t) 17842 17843 (face (rainbow-delimiters-depth-7-face) fontified t) 17843 17868 (fontified t) 17868 17879 (face font-lock-type-face fontified t) 17879 17881 (fontified t) 17881 17882 (face font-lock-type-face fontified t) 17882 17895 (face font-lock-type-face fontified t) 17895 17896 (fontified t) 17896 17926 (fontified t) 17926 17934 (face font-lock-type-face fontified t) 17934 17937 (face font-lock-type-face fontified t) 17937 17939 (fontified t) 17939 17944 (face font-lock-type-face fontified t) 17944 17952 (face font-lock-type-face fontified t) 17952 17953 (fontified t) 17953 17954 (face (rainbow-delimiters-depth-8-face) fontified t) 17954 17955 (fontified t) 17955 17987 (fontified t) 17987 17992 (face font-lock-variable-name-face fontified t) 17992 18026 (fontified t) 18026 18034 (face font-lock-type-face fontified t) 18034 18035 (fontified t) 18035 18036 (face (rainbow-delimiters-depth-9-face) fontified t) 18036 18073 (fontified t) 18073 18078 (face font-lock-variable-name-face fontified t) 18078 18080 (fontified t) 18080 18092 (face font-lock-type-face fontified t) 18092 18094 (fontified t) 18094 18101 (face font-lock-type-face fontified t) 18101 18103 (fontified t) 18103 18139 (fontified t) 18139 18145 (face font-lock-variable-name-face fontified t) 18145 18151 (face font-lock-variable-name-face fontified t) 18151 18153 (fontified t) 18153 18161 (face font-lock-type-face fontified t) 18161 18164 (face font-lock-type-face fontified t) 18164 18166 (fontified t) 18166 18170 (face font-lock-type-face fontified t) 18170 18171 (face (rainbow-delimiters-depth-1-face) fontified t) 18171 18178 (face font-lock-type-face fontified t) 18178 18180 (fontified t) 18180 18186 (face font-lock-type-face fontified t) 18186 18187 (face (rainbow-delimiters-depth-1-face) fontified t) 18187 18189 (fontified t) 18189 18192 (fontified t) 18192 18218 (fontified t) 18218 18228 (fontified t) 18228 18260 (fontified t) 18260 18261 (face (rainbow-delimiters-depth-9-face) fontified t) 18261 18326 (fontified t) 18326 18327 (face (rainbow-delimiters-depth-8-face) fontified t) 18327 18329 (fontified t) 18329 18330 (syntax-table (1) fontified t) 18330 18340 (fontified t) 18340 18341 (face (rainbow-delimiters-depth-8-face) fontified t) 18341 18342 (face (rainbow-delimiters-depth-8-face) fontified t) 18342 18368 (fontified t) 18368 18379 (face font-lock-type-face fontified t) 18379 18381 (fontified t) 18381 18388 (face font-lock-type-face fontified t) 18388 18389 (face (rainbow-delimiters-depth-8-face) fontified t) 18389 18402 (fontified t) 18402 18403 (face (rainbow-delimiters-depth-8-face) fontified t) 18403 18405 (fontified t) 18405 18406 (syntax-table (1) fontified t) 18406 18407 (fontified t) 18407 18408 (face (rainbow-delimiters-depth-8-face) fontified t) 18408 18416 (fontified t) 18416 18422 (fontified t) 18422 18449 (fontified t) 18449 18450 (face (rainbow-delimiters-depth-9-face) fontified t) 18450 18464 (fontified t) 18464 18465 (face (rainbow-delimiters-depth-9-face) fontified t) 18465 18467 (fontified t) 18467 18521 (fontified t) 18521 18522 (fontified t) 18522 18523 (face (rainbow-delimiters-depth-9-face) fontified t) 18523 18524 (face (rainbow-delimiters-depth-9-face) fontified t) 18524 18526 (fontified t) 18526 18550 (fontified t) 18550 18551 (face (rainbow-delimiters-depth-8-face) fontified t) 18551 18580 (fontified t) 18580 18581 (syntax-table (1) fontified t) 18581 18582 (fontified t) 18582 18583 (face (rainbow-delimiters-depth-8-face) fontified t) 18583 18584 (face (rainbow-delimiters-depth-8-face) fontified t) 18584 18605 (fontified t) 18605 18606 (face (rainbow-delimiters-depth-7-face) fontified t) 18606 18623 (fontified t) 18623 18624 (face (rainbow-delimiters-depth-6-face) fontified t) 18624 18625 (fontified t) 18625 18629 (face font-lock-keyword-face fontified t) 18629 18630 (fontified t) 18630 18631 (face (rainbow-delimiters-depth-6-face) fontified t) 18631 18632 (fontified t) 18632 18652 (fontified t) 18652 18653 (fontified t) 18653 18657 (fontified t) 18657 18679 (fontified t) 18679 18680 (face (rainbow-delimiters-depth-7-face) fontified t) 18680 18681 (face (rainbow-delimiters-depth-7-face) fontified t) 18681 18682 (fontified t) 18682 18683 (fontified t) 18683 18699 (fontified t) 18699 18700 (face (rainbow-delimiters-depth-6-face) fontified t) 18700 18718 (fontified t) 18718 18720 (face font-lock-keyword-face fontified t) 18720 18731 (fontified t) 18731 18742 (face font-lock-type-face fontified t) 18742 18744 (fontified t) 18744 18759 (face font-lock-type-face fontified t) 18759 18760 (fontified t) 18760 18761 (face (rainbow-delimiters-depth-6-face) fontified t) 18761 18762 (fontified t) 18762 18782 (fontified t) 18782 18785 (face font-lock-keyword-face fontified t) 18785 18786 (fontified t) 18786 18789 (face font-lock-variable-name-face fontified t) 18789 18792 (fontified t) 18792 18799 (face font-lock-constant-face fontified t) 18799 18801 (fontified t) 18801 18808 (face font-lock-type-face fontified t) 18808 18813 (fontified t) 18813 18814 (face (rainbow-delimiters-depth-7-face) fontified t) 18814 18815 (face (rainbow-delimiters-depth-7-face) fontified t) 18815 18817 (fontified t) 18817 18837 (fontified t) 18837 18840 (face font-lock-keyword-face fontified t) 18840 18841 (fontified t) 18841 18843 (face font-lock-variable-name-face fontified t) 18843 18870 (fontified t) 18870 18914 (fontified t) 18914 18946 (fontified t) 18946 18947 (face (rainbow-delimiters-depth-7-face) fontified t) 18947 18949 (fontified t) 18949 18950 (face (rainbow-delimiters-depth-7-face) fontified t) 18950 18951 (rear-nonsticky t fontified t) 18951 18952 (fontified t) 18952 18958 (fontified t) 18958 18972 (fontified t) 18972 18977 (face font-lock-keyword-face fontified t) 18977 18990 (fontified t) 18990 18991 (face (rainbow-delimiters-depth-7-face) fontified t) 18991 18995 (face font-lock-constant-face fontified t) 18995 18997 (fontified t) 18997 19002 (face font-lock-type-face fontified t) 19002 19004 (fontified t) 19004 19009 (face font-lock-type-face fontified t) 19009 19010 (face (rainbow-delimiters-depth-7-face) fontified t) 19010 19011 (fontified t) 19011 19012 (face (rainbow-delimiters-depth-7-face) fontified t) 19012 19013 (fontified t) 19013 19037 (fontified t) 19037 19039 (face font-lock-type-face fontified t) 19039 19040 (face (rainbow-delimiters-depth-8-face) fontified t) 19040 19041 (fontified t) 19041 19042 (face (rainbow-delimiters-depth-8-face) fontified t) 19042 19044 (fontified t) 19044 19045 (fontified t syntax-table (1)) 19045 19046 (fontified t) 19046 19047 (face (rainbow-delimiters-depth-8-face) fontified t) 19047 19048 (face (rainbow-delimiters-depth-8-face) fontified t) 19048 19067 (fontified t) 19067 19073 (fontified t) 19073 19076 (face font-lock-comment-delimiter-face fontified t) 19076 19093 (face font-lock-comment-face fontified t) 19093 19108 (face font-lock-comment-face fontified t) 19108 19126 (fontified t) 19126 19132 (fontified t) 19132 19135 (face font-lock-type-face fontified t) 19135 19136 (face (rainbow-delimiters-depth-8-face) fontified t) 19136 19140 (face font-lock-constant-face fontified t) 19140 19142 (fontified t) 19142 19146 (face font-lock-type-face fontified t) 19146 19154 (face font-lock-type-face fontified t) 19154 19156 (fontified t) 19156 19160 (face font-lock-type-face fontified t) 19160 19161 (face (rainbow-delimiters-depth-8-face) fontified t) 19161 19163 (fontified t) 19163 19164 (fontified t syntax-table (1)) 19164 19177 (fontified t) 19177 19178 (face (rainbow-delimiters-depth-8-face) fontified t) 19178 19188 (fontified t) 19188 19189 (face (rainbow-delimiters-depth-8-face) fontified t) 19189 19191 (fontified t) 19191 19215 (fontified t) 19215 19218 (face font-lock-comment-delimiter-face fontified t) 19218 19226 (face font-lock-comment-face fontified t) 19226 19271 (face font-lock-comment-face fontified t) 19271 19295 (fontified t) 19295 19298 (face font-lock-type-face fontified t) 19298 19299 (face (rainbow-delimiters-depth-8-face) fontified t) 19299 19303 (face font-lock-constant-face fontified t) 19303 19305 (fontified t) 19305 19313 (face font-lock-type-face fontified t) 19313 19317 (face font-lock-type-face fontified t) 19317 19319 (fontified t) 19319 19330 (face font-lock-type-face fontified t) 19330 19331 (face (rainbow-delimiters-depth-8-face) fontified t) 19331 19333 (fontified t) 19333 19334 (fontified t syntax-table (1)) 19334 19344 (fontified t) 19344 19345 (face (rainbow-delimiters-depth-8-face) fontified t) 19345 19346 (face (rainbow-delimiters-depth-8-face) fontified t) 19346 19348 (fontified t) 19348 19372 (fontified t) 19372 19375 (face font-lock-comment-delimiter-face fontified t) 19375 19392 (face font-lock-comment-face fontified t) 19392 19411 (face font-lock-comment-face fontified t) 19411 19449 (face font-lock-comment-face fontified t) 19449 19473 (fontified t) 19473 19476 (face font-lock-type-face fontified t) 19476 19477 (face (rainbow-delimiters-depth-8-face) fontified t) 19477 19478 (fontified t) 19478 19479 (face (rainbow-delimiters-depth-8-face) fontified t) 19479 19481 (fontified t) 19481 19482 (syntax-table (1) fontified t) 19482 19483 (fontified t) 19483 19490 (face font-lock-constant-face fontified t) 19490 19492 (fontified t) 19492 19498 (face font-lock-preprocessor-face fontified t) 19498 19499 (face (rainbow-delimiters-depth-8-face) fontified t) 19499 19505 (face font-lock-string-face fontified t) 19505 19508 (fontified t) 19508 19509 (face (rainbow-delimiters-depth-8-face) fontified t) 19509 19531 (fontified t) 19531 19532 (face (rainbow-delimiters-depth-7-face) fontified t) 19532 19549 (fontified t) 19549 19550 (face (rainbow-delimiters-depth-6-face) fontified t) 19550 19563 (fontified t) 19563 19564 (face (rainbow-delimiters-depth-5-face) fontified t) 19564 19582 (fontified t) 19582 19583 (syntax-table (1) fontified t) 19583 19584 (fontified t) 19584 19585 (face (rainbow-delimiters-depth-5-face) fontified t) 19585 19586 (face (rainbow-delimiters-depth-5-face) fontified t) 19586 19595 (fontified t) 19595 19596 (face (rainbow-delimiters-depth-4-face) fontified t) 19596 19601 (fontified t) 19601 19602 (face (rainbow-delimiters-depth-3-face) fontified t) 19602 19603 (face (rainbow-delimiters-depth-2-face) fontified t) 19603 19610 (fontified t) 19610 19611 (face (rainbow-delimiters-depth-2-face) fontified t)) . 137) (undo-tree-id2427 . -19225) (undo-tree-id2428 . -17786) (undo-tree-id2429 . -12294) (undo-tree-id2430 . -13130) (undo-tree-id2431 . -17715) (undo-tree-id2432 . -17756) (undo-tree-id2433 . -16656) (undo-tree-id2434 . -17683) (undo-tree-id2435 . -16857) (undo-tree-id2436 . -17684) (undo-tree-id2437 . -18626) (undo-tree-id2438 . -18626) (undo-tree-id2439 . -17358) (undo-tree-id2440 . -17684) (undo-tree-id2441 . -17392) (undo-tree-id2442 . -17780) (undo-tree-id2443 . -13783) (undo-tree-id2444 . -13733) (undo-tree-id2445 . -14140) (undo-tree-id2446 . -14525) (undo-tree-id2447 . -14329) (undo-tree-id2448 . -14524) (undo-tree-id2449 . -14886) (undo-tree-id2450 . -15127) (undo-tree-id2451 . -15360) (undo-tree-id2452 . -14140) (undo-tree-id2453 . -14327) (undo-tree-id2454 . -18762) (undo-tree-id2455 . -18762) (undo-tree-id2456 . -18762) (undo-tree-id2457 . -18762) (undo-tree-id2458 . -18762) (undo-tree-id2459 . -18762) (undo-tree-id2460 . -18762) (undo-tree-id2461 . -18762) (undo-tree-id2462 . -18762) (undo-tree-id2463 . -18762) (undo-tree-id2464 . -18762) (undo-tree-id2465 . -17238) (undo-tree-id2466 . -18762) (undo-tree-id2467 . -18762) (undo-tree-id2468 . -19225) (undo-tree-id2469 . -18626) (undo-tree-id2470 . -18626) (undo-tree-id2471 . -18626) (undo-tree-id2472 . -18626) (undo-tree-id2473 . -18626) (undo-tree-id2474 . -18626) (undo-tree-id2475 . -18626) (undo-tree-id2476 . -18626) (undo-tree-id2477 . -18626) (undo-tree-id2478 . -18626) (undo-tree-id2479 . -18626) (undo-tree-id2480 . -18626) (undo-tree-id2481 . -18626) (undo-tree-id2482 . -18626) (undo-tree-id2483 . -18626) (undo-tree-id2484 . -18626) (undo-tree-id2485 . -18626) (undo-tree-id2486 . -18626) (undo-tree-id2487 . -18626) (undo-tree-id2488 . -18626) (undo-tree-id2489 . -18626) (undo-tree-id2490 . -18626) (undo-tree-id2491 . -18626) (undo-tree-id2492 . -18626) (undo-tree-id2493 . -18626) (undo-tree-id2494 . -18626) (undo-tree-id2495 . -18626) (undo-tree-id2496 . -18626) (undo-tree-id2497 . -18626) (undo-tree-id2498 . -18626) (undo-tree-id2499 . -18626) (undo-tree-id2500 . -18626) (undo-tree-id2501 . -18607) (undo-tree-id2502 . -18626) (undo-tree-id2503 . -18626) (undo-tree-id2504 . -18626) (undo-tree-id2505 . -18626) (undo-tree-id2506 . -18626) (undo-tree-id2507 . -18626) (undo-tree-id2508 . -18626) (undo-tree-id2509 . -18626) (undo-tree-id2510 . -18626) (undo-tree-id2511 . -18626) (undo-tree-id2512 . -18626) (undo-tree-id2513 . -18626) (undo-tree-id2514 . -18626) (undo-tree-id2515 . -18626) (undo-tree-id2516 . -18626) (undo-tree-id2517 . -18626) (undo-tree-id2518 . -18626) (undo-tree-id2519 . -18626) (undo-tree-id2520 . -18626) (undo-tree-id2521 . -18626) (undo-tree-id2522 . -18626) (undo-tree-id2523 . -18626) (undo-tree-id2524 . -18626) (undo-tree-id2525 . -18626) (undo-tree-id2526 . -18626) (undo-tree-id2527 . -18626) (undo-tree-id2528 . -18626) (undo-tree-id2529 . -18626) (undo-tree-id2530 . -18626) (undo-tree-id2531 . -18626) (undo-tree-id2532 . -18626) (undo-tree-id2533 . -18626) (undo-tree-id2534 . -18626) (undo-tree-id2535 . -18626) (undo-tree-id2536 . -18626) (undo-tree-id2537 . -18626) (undo-tree-id2538 . -18626) (undo-tree-id2539 . -18626) (undo-tree-id2540 . -18626) (undo-tree-id2541 . -18626) (undo-tree-id2542 . -18626) (undo-tree-id2543 . -18626) (undo-tree-id2544 . -18626) (undo-tree-id2545 . -18626) (undo-tree-id2546 . -18626) 18763 (t 26015 48791 432758 310000)) nil (26015 50443 565762 0) 0 nil])
([nil nil ((#("obj" 0 3 (face font-lock-string-face fontified t)) . -7639) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) 7642 (t 26015 50394 91322 141000)) nil (26015 50443 565640 0) 0 nil])
([nil nil ((#("CheetaDefault." 0 14 (face font-lock-string-face fontified t)) . -7625) (undo-tree-id2410 . -14) (undo-tree-id2411 . -14) (undo-tree-id2412 . -14) (undo-tree-id2413 . -14) (undo-tree-id2414 . -14) (undo-tree-id2415 . -14) (undo-tree-id2416 . -14) (undo-tree-id2417 . -14) (undo-tree-id2418 . -14) 7639) nil (26015 50443 565630 0) 0 nil])
([nil nil ((#("奇塔/" 0 3 (face font-lock-string-face fontified t)) . -7622) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) 7625) nil (26015 50443 565620 0) 0 nil])
([nil nil ((#("追放】" 0 3 (face font-lock-string-face fontified t)) . -7619) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) 7622) nil (26015 50443 565609 0) 0 nil])
([nil nil ((#("2：" 0 2 (face font-lock-string-face fontified t)) . -7617) (undo-tree-id2377 . -2) (undo-tree-id2378 . -2) (undo-tree-id2379 . -2) (undo-tree-id2380 . -2) (undo-tree-id2381 . -2) (undo-tree-id2382 . -2) (undo-tree-id2383 . -2) (undo-tree-id2384 . -2) (undo-tree-id2385 . -2) (undo-tree-id2386 . -2) (undo-tree-id2387 . -2) (undo-tree-id2388 . -2) 7619) nil (26015 50443 565598 0) 0 nil])
([nil nil ((#("少女前线" 0 4 (face font-lock-string-face fontified t)) . -7613) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) 7617) nil (26015 50443 565585 0) 0 nil])
([nil nil ((#("Downloads/【" 0 11 (face font-lock-string-face fontified t)) . -7602) (undo-tree-id2350 . -11) (undo-tree-id2351 . -11) (undo-tree-id2352 . -11) (undo-tree-id2353 . -11) (undo-tree-id2354 . -11) (undo-tree-id2355 . -11) (undo-tree-id2356 . -11) (undo-tree-id2357 . -11) (undo-tree-id2358 . -11) (undo-tree-id2359 . -11) (undo-tree-id2360 . -11) (undo-tree-id2361 . -11) (undo-tree-id2362 . -11) (undo-tree-id2363 . -11) 7613) nil (26015 50443 565571 0) 0 nil])
([nil nil ((#("zhang/" 0 6 (face font-lock-string-face fontified t)) . -7596) (undo-tree-id2335 . -6) (undo-tree-id2336 . -6) (undo-tree-id2337 . -6) (undo-tree-id2338 . -6) (undo-tree-id2339 . -6) (undo-tree-id2340 . -6) (undo-tree-id2341 . -6) (undo-tree-id2342 . -6) (undo-tree-id2343 . -6) (undo-tree-id2344 . -6) (undo-tree-id2345 . -6) (undo-tree-id2346 . -6) (undo-tree-id2347 . -6) (undo-tree-id2348 . -6) (undo-tree-id2349 . -6) 7602) nil (26015 50443 565556 0) 0 nil])
([nil nil ((#("home/" 0 5 (face font-lock-string-face fontified t)) . -7591) (undo-tree-id2319 . -5) (undo-tree-id2320 . -5) (undo-tree-id2321 . -5) (undo-tree-id2322 . -5) (undo-tree-id2323 . -5) (undo-tree-id2324 . -5) (undo-tree-id2325 . -5) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5) (undo-tree-id2329 . -5) (undo-tree-id2330 . -5) (undo-tree-id2331 . -5) (undo-tree-id2332 . -5) (undo-tree-id2333 . -5) (undo-tree-id2334 . -5) 7596) nil (26015 50443 565541 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -7590) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) 7591) nil (26015 50443 565523 0) 0 nil])
([nil nil ((7590 . 7611)) nil (26015 50443 565504 0) 0 nil])
([nil nil ((7611 . 7616)) nil (26015 50443 565503 0) 0 nil])
([nil nil ((7616 . 7619)) nil (26015 50443 565502 0) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-string-face fontified t)) . -7618) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) 7619) nil (26015 50443 565501 0) 0 nil])
([nil nil ((7618 . 7630)) nil (26015 50443 565490 0) 0 nil])
([nil nil ((7624 . 7629)) nil (26015 50443 565489 0) 0 nil])
([nil nil ((7629 . 7631)) nil (26015 50443 565488 0) 0 nil])
([nil nil ((7637 . 7641)) nil (26015 50443 565483 0) 0 nil])
([nil nil ((#("Default" 0 7 (face font-lock-string-face fontified t)) . -7624) (undo-tree-id2547 . -7) (undo-tree-id2548 . -7) (undo-tree-id2549 . -7) (undo-tree-id2550 . -7) (undo-tree-id2551 . -7) (undo-tree-id2552 . -7) (undo-tree-id2553 . -7) (undo-tree-id2554 . -7) (undo-tree-id2555 . -7) (undo-tree-id2556 . -7) (undo-tree-id2557 . -7) (undo-tree-id2558 . -7) 7631 (t 26015 50443 592397 570000)) nil (26015 50480 204368 0) 0 nil])
([nil nil ((7630 . 7637)) nil (26015 50480 204343 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 27 (face font-lock-constant-face fontified t) 27 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 39 (face font-lock-type-face fontified t) 39 41 (fontified t) 41 57 (face font-lock-type-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 60 (fontified t) 60 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 69 (face font-lock-constant-face fontified t) 69 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 77 (fontified t) 77 82 (face font-lock-constant-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 90 (face font-lock-type-face fontified t) 90 92 (fontified t) 92 103 (face font-lock-type-face fontified t) 103 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 131 (face font-lock-type-face fontified t) 131 133 (fontified t) 133 144 (face font-lock-type-face fontified t) 144 146 (fontified t) 146 159 (face font-lock-type-face fontified t) 159 161 (fontified t) 161 175 (face font-lock-type-face fontified t) 175 176 (face (rainbow-delimiters-depth-2-face) fontified t) 176 182 (fontified t) 182 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 206 (face font-lock-type-face fontified t) 206 208 (fontified t) 208 217 (face font-lock-type-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 224 (fontified t) 224 230 (face font-lock-constant-face fontified t) 230 232 (fontified t) 232 245 (face font-lock-type-face fontified t) 245 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 249 (fontified t) 249 252 (face font-lock-keyword-face fontified t) 252 253 (fontified t) 253 257 (face font-lock-constant-face fontified t) 257 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 265 (fontified t) 265 274 (face font-lock-type-face fontified t) 274 277 (fontified t) 277 280 (face font-lock-keyword-face fontified t) 280 281 (fontified t) 281 288 (face font-lock-constant-face fontified t) 288 290 (fontified t) 290 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 300 (face font-lock-constant-face fontified t) 300 302 (fontified t) 302 305 (face font-lock-keyword-face fontified t) 305 306 (fontified t) 306 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-constant-face fontified t) 329 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 340 (face font-lock-constant-face fontified t) 340 342 (fontified t) 342 345 (face font-lock-keyword-face fontified t) 345 346 (fontified t) 346 351 (face font-lock-constant-face fontified t) 351 353 (fontified t) 353 356 (face font-lock-comment-delimiter-face fontified t) 356 363 (face font-lock-comment-face fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 388 (face font-lock-type-face fontified t) 388 391 (fontified t) 391 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 406 (fontified t) 406 409 (face font-lock-keyword-face fontified t) 409 410 (fontified t) 410 418 (face font-lock-constant-face fontified t) 418 423 (fontified t) 423 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 432 (face font-lock-constant-face fontified t) 432 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 444 (face font-lock-type-face fontified t) 444 446 (fontified t) 446 452 (face font-lock-type-face fontified t) 452 453 (face (rainbow-delimiters-depth-1-face) fontified t) 453 456 (fontified t) 456 458 (face font-lock-keyword-face fontified t) 458 459 (fontified t) 459 481 (face font-lock-function-name-face fontified t) 481 482 (face (rainbow-delimiters-depth-1-face) fontified t) 482 487 (fontified t) 487 493 (face font-lock-variable-name-face fontified t) 493 495 (fontified t) 495 496 (face rust-ampersand-face fontified t) 496 500 (face font-lock-constant-face fontified t) 500 502 (fontified t) 502 508 (face font-lock-type-face fontified t) 508 514 (fontified t) 514 520 (face font-lock-variable-name-face fontified t) 520 522 (fontified t) 522 523 (face rust-ampersand-face fontified t) 523 527 (face font-lock-constant-face fontified t) 527 529 (fontified t) 529 543 (face font-lock-type-face fontified t) 543 549 (fontified t) 549 561 (face font-lock-variable-name-face fontified t) 561 563 (fontified t) 563 567 (face font-lock-constant-face fontified t) 567 569 (fontified t) 569 582 (face font-lock-type-face fontified t) 582 588 (fontified t) 588 600 (face font-lock-variable-name-face fontified t) 600 602 (fontified t) 602 608 (face font-lock-type-face fontified t) 608 609 (face (rainbow-delimiters-depth-2-face) fontified t) 609 613 (face font-lock-constant-face fontified t) 613 615 (fontified t) 615 628 (face font-lock-type-face fontified t) 628 629 (face (rainbow-delimiters-depth-2-face) fontified t) 629 635 (fontified t) 635 649 (face font-lock-variable-name-face fontified t) 649 651 (fontified t) 651 652 (face rust-ampersand-face fontified t) 652 653 (face (rainbow-delimiters-depth-2-face) fontified t) 653 657 (face font-lock-constant-face fontified t) 657 659 (fontified t) 659 677 (face font-lock-type-face fontified t) 677 678 (face (rainbow-delimiters-depth-2-face) fontified t) 678 684 (fontified t) 684 690 (face font-lock-variable-name-face fontified t) 690 692 (fontified t) 692 696 (face font-lock-constant-face fontified t) 696 698 (fontified t) 698 720 (face font-lock-type-face fontified t) 720 722 (fontified t) 722 723 (face (rainbow-delimiters-depth-1-face) fontified t) 723 725 (fontified t) 725 726 (syntax-table (1) fontified t) 726 727 (fontified t) 727 731 (face font-lock-constant-face fontified t) 731 733 (fontified t) 733 747 (face font-lock-type-face fontified t) 747 748 (fontified t) 748 749 (face (rainbow-delimiters-depth-1-face) fontified t) 749 754 (fontified t) 754 757 (face font-lock-keyword-face fontified t) 757 758 (fontified t) 758 764 (face font-lock-variable-name-face fontified t) 764 794 (fontified t) 794 795 (face (rainbow-delimiters-depth-2-face) fontified t) 795 801 (fontified t) 801 802 (face (rainbow-delimiters-depth-2-face) fontified t) 802 838 (fontified t) 838 839 (face (rainbow-delimiters-depth-2-face) fontified t) 839 840 (face rust-ampersand-face fontified t) 840 844 (face font-lock-constant-face fontified t) 844 846 (fontified t) 846 870 (face font-lock-type-face fontified t) 870 871 (fontified t) 871 872 (face (rainbow-delimiters-depth-3-face) fontified t) 872 881 (fontified t) 881 886 (face font-lock-variable-name-face fontified t) 886 888 (fontified t) 888 892 (face font-lock-type-face fontified t) 892 893 (face (rainbow-delimiters-depth-4-face) fontified t) 893 910 (face font-lock-string-face fontified t) 910 911 (face (rainbow-delimiters-depth-4-face) fontified t) 911 921 (fontified t) 921 927 (face font-lock-variable-name-face fontified t) 927 929 (fontified t) 929 933 (face font-lock-type-face fontified t) 933 934 (face (rainbow-delimiters-depth-4-face) fontified t) 934 940 (fontified t) 940 941 (face (rainbow-delimiters-depth-4-face) fontified t) 941 951 (fontified t) 951 957 (face font-lock-variable-name-face fontified t) 957 959 (fontified t) 959 963 (face font-lock-constant-face fontified t) 963 965 (fontified t) 965 976 (face font-lock-type-face fontified t) 976 977 (fontified t) 977 978 (face (rainbow-delimiters-depth-4-face) fontified t) 978 991 (fontified t) 991 997 (face font-lock-variable-name-face fontified t) 997 999 (fontified t) 999 1000 (face rust-ampersand-face fontified t) 1000 1020 (fontified t) 1020 1031 (face font-lock-variable-name-face fontified t) 1031 1033 (fontified t) 1033 1042 (face font-lock-string-face fontified t) 1042 1056 (fontified t) 1056 1063 (face font-lock-variable-name-face fontified t) 1063 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-4-face) fontified t) 1090 1100 (fontified t) 1100 1108 (face font-lock-variable-name-face fontified t) 1108 1110 (fontified t) 1110 1114 (face font-lock-type-face fontified t) 1114 1115 (face (rainbow-delimiters-depth-4-face) fontified t) 1115 1119 (face font-lock-constant-face fontified t) 1119 1121 (fontified t) 1121 1134 (face font-lock-type-face fontified t) 1134 1135 (fontified t) 1135 1136 (face (rainbow-delimiters-depth-5-face) fontified t) 1136 1149 (fontified t) 1149 1155 (face font-lock-variable-name-face fontified t) 1155 1157 (fontified t) 1157 1158 (face rust-ampersand-face fontified t) 1158 1178 (fontified t) 1178 1189 (face font-lock-variable-name-face fontified t) 1189 1191 (fontified t) 1191 1200 (face font-lock-string-face fontified t) 1200 1214 (fontified t) 1214 1221 (face font-lock-variable-name-face fontified t) 1221 1223 (fontified t) 1223 1224 (face rust-ampersand-face fontified t) 1224 1225 (face (rainbow-delimiters-depth-6-face) fontified t) 1225 1229 (face font-lock-type-face fontified t) 1229 1230 (face (rainbow-delimiters-depth-7-face) fontified t) 1230 1234 (face font-lock-constant-face fontified t) 1234 1236 (fontified t) 1236 1252 (face font-lock-type-face fontified t) 1252 1253 (fontified t) 1253 1254 (face (rainbow-delimiters-depth-8-face) fontified t) 1254 1271 (fontified t) 1271 1277 (face font-lock-variable-name-face fontified t) 1277 1309 (fontified t) 1309 1314 (face font-lock-variable-name-face fontified t) 1314 1316 (fontified t) 1316 1320 (face font-lock-type-face fontified t) 1320 1321 (face (rainbow-delimiters-depth-9-face) fontified t) 1321 1325 (face font-lock-constant-face fontified t) 1325 1327 (fontified t) 1327 1337 (face font-lock-type-face fontified t) 1337 1338 (fontified t) 1338 1339 (face (rainbow-delimiters-depth-1-face) fontified t) 1339 1360 (fontified t) 1360 1365 (face font-lock-variable-name-face fontified t) 1365 1367 (fontified t) 1367 1371 (face font-lock-constant-face fontified t) 1371 1373 (fontified t) 1373 1387 (face font-lock-type-face fontified t) 1387 1389 (fontified t) 1389 1396 (face font-lock-type-face fontified t) 1396 1418 (fontified t) 1418 1423 (face font-lock-variable-name-face fontified t) 1423 1425 (fontified t) 1425 1429 (face font-lock-constant-face fontified t) 1429 1431 (fontified t) 1431 1445 (face font-lock-type-face fontified t) 1445 1447 (fontified t) 1447 1454 (face font-lock-type-face fontified t) 1454 1472 (fontified t) 1472 1473 (face (rainbow-delimiters-depth-1-face) fontified t) 1473 1474 (face (rainbow-delimiters-depth-9-face) fontified t) 1474 1492 (fontified t) 1492 1500 (face font-lock-variable-name-face fontified t) 1500 1502 (face font-lock-variable-name-face fontified t) 1502 1504 (fontified t) 1504 1508 (face font-lock-constant-face fontified t) 1508 1510 (fontified t) 1510 1521 (face font-lock-type-face fontified t) 1521 1523 (fontified t) 1523 1526 (face font-lock-type-face fontified t) 1526 1528 (fontified t) 1528 1540 (fontified t) 1540 1541 (face (rainbow-delimiters-depth-8-face) fontified t) 1541 1542 (face (rainbow-delimiters-depth-7-face) fontified t) 1542 1543 (face (rainbow-delimiters-depth-6-face) fontified t) 1543 1553 (fontified t) 1553 1554 (face (rainbow-delimiters-depth-5-face) fontified t) 1554 1555 (face (rainbow-delimiters-depth-4-face) fontified t) 1555 1565 (fontified t) 1565 1574 (face font-lock-variable-name-face fontified t) 1574 1576 (fontified t) 1576 1580 (face font-lock-constant-face fontified t) 1580 1582 (fontified t) 1582 1596 (face font-lock-type-face fontified t) 1596 1597 (fontified t) 1597 1598 (face (rainbow-delimiters-depth-4-face) fontified t) 1598 1611 (fontified t) 1611 1619 (face font-lock-variable-name-face fontified t) 1619 1621 (fontified t) 1621 1625 (face font-lock-constant-face fontified t) 1625 1627 (fontified t) 1627 1644 (face font-lock-type-face fontified t) 1644 1646 (fontified t) 1646 1658 (face font-lock-type-face fontified t) 1658 1672 (fontified t) 1672 1690 (face font-lock-variable-name-face fontified t) 1690 1692 (fontified t) 1692 1696 (face font-lock-type-face fontified t) 1696 1710 (fontified t) 1710 1720 (face font-lock-variable-name-face fontified t) 1720 1722 (fontified t) 1722 1726 (face font-lock-constant-face fontified t) 1726 1728 (fontified t) 1728 1737 (face font-lock-type-face fontified t) 1737 1739 (fontified t) 1739 1742 (face font-lock-type-face fontified t) 1742 1756 (fontified t) 1756 1765 (face font-lock-variable-name-face fontified t) 1765 1767 (fontified t) 1767 1771 (face font-lock-type-face fontified t) 1771 1772 (face (rainbow-delimiters-depth-5-face) fontified t) 1772 1776 (face font-lock-constant-face fontified t) 1776 1778 (fontified t) 1778 1782 (face font-lock-type-face fontified t) 1782 1784 (fontified t) 1784 1788 (face font-lock-type-face fontified t) 1788 1789 (face (rainbow-delimiters-depth-5-face) fontified t) 1789 1803 (fontified t) 1803 1806 (face font-lock-comment-delimiter-face fontified t) 1806 1888 (face font-lock-comment-face fontified t) 1888 1900 (fontified t) 1900 1912 (face font-lock-variable-name-face fontified t) 1912 1914 (fontified t) 1914 1918 (face font-lock-constant-face fontified t) 1918 1920 (fontified t) 1920 1931 (face font-lock-type-face fontified t) 1931 1933 (fontified t) 1933 1937 (face font-lock-type-face fontified t) 1937 1951 (fontified t) 1951 1954 (face font-lock-comment-delimiter-face fontified t) 1954 1992 (face font-lock-comment-face fontified t) 1992 2004 (fontified t) 2004 2019 (face font-lock-variable-name-face fontified t) 2019 2021 (fontified t) 2021 2026 (face font-lock-keyword-face fontified t) 2026 2040 (fontified t) 2040 2043 (face font-lock-comment-delimiter-face fontified t) 2043 2089 (face font-lock-comment-face fontified t) 2089 2101 (fontified t) 2101 2113 (face font-lock-variable-name-face fontified t) 2113 2115 (fontified t) 2115 2120 (face font-lock-keyword-face fontified t) 2120 2130 (fontified t) 2130 2131 (face (rainbow-delimiters-depth-4-face) fontified t) 2131 2141 (fontified t) 2141 2154 (face font-lock-variable-name-face fontified t) 2154 2172 (fontified t) 2172 2173 (face (rainbow-delimiters-depth-4-face) fontified t) 2173 2182 (fontified t) 2182 2186 (face font-lock-constant-face fontified t) 2186 2188 (fontified t) 2188 2205 (face font-lock-type-face fontified t) 2205 2206 (fontified t) 2206 2207 (face (rainbow-delimiters-depth-5-face) fontified t) 2207 2240 (fontified t) 2240 2259 (face font-lock-variable-name-face fontified t) 2259 2261 (fontified t) 2261 2265 (face font-lock-keyword-face fontified t) 2265 2279 (fontified t) 2279 2292 (face font-lock-variable-name-face fontified t) 2292 2294 (fontified t) 2294 2298 (face font-lock-constant-face fontified t) 2298 2300 (fontified t) 2300 2315 (face font-lock-type-face fontified t) 2315 2317 (fontified t) 2317 2321 (face font-lock-type-face fontified t) 2321 2335 (fontified t) 2335 2342 (face font-lock-variable-name-face fontified t) 2342 2344 (fontified t) 2344 2348 (face font-lock-constant-face fontified t) 2348 2350 (fontified t) 2350 2362 (face font-lock-type-face fontified t) 2362 2371 (fontified t) 2371 2372 (face (rainbow-delimiters-depth-6-face) fontified t) 2372 2373 (face (rainbow-delimiters-depth-6-face) fontified t) 2373 2387 (fontified t) 2387 2391 (face font-lock-variable-name-face fontified t) 2391 2393 (fontified t) 2393 2397 (face font-lock-constant-face fontified t) 2397 2399 (fontified t) 2399 2413 (face font-lock-type-face fontified t) 2413 2422 (fontified t) 2422 2423 (face (rainbow-delimiters-depth-6-face) fontified t) 2423 2424 (face (rainbow-delimiters-depth-6-face) fontified t) 2424 2434 (fontified t) 2434 2435 (face (rainbow-delimiters-depth-5-face) fontified t) 2435 2436 (face (rainbow-delimiters-depth-4-face) fontified t) 2436 2446 (fontified t) 2446 2457 (face font-lock-variable-name-face fontified t) 2457 2459 (fontified t) 2459 2463 (face font-lock-constant-face fontified t) 2463 2465 (fontified t) 2465 2481 (face font-lock-type-face fontified t) 2481 2482 (fontified t) 2482 2483 (face (rainbow-delimiters-depth-4-face) fontified t) 2483 2496 (fontified t) 2496 2501 (face font-lock-variable-name-face fontified t) 2501 2518 (fontified t) 2518 2522 (face font-lock-variable-name-face fontified t) 2522 2540 (fontified t) 2540 2565 (face font-lock-variable-name-face fontified t) 2565 2567 (fontified t) 2567 2572 (face font-lock-keyword-face fontified t) 2572 2582 (fontified t) 2582 2583 (face (rainbow-delimiters-depth-4-face) fontified t) 2583 2593 (fontified t) 2593 2602 (face font-lock-variable-name-face fontified t) 2602 2604 (fontified t) 2604 2608 (face font-lock-type-face fontified t) 2608 2614 (fontified t) 2614 2615 (face (rainbow-delimiters-depth-3-face) fontified t) 2615 2616 (face (rainbow-delimiters-depth-2-face) fontified t) 2616 2617 (fontified t) 2617 2618 (face (rainbow-delimiters-depth-1-face) fontified t) 2618 2620 (fontified t) 2620 2626 (face font-lock-keyword-face fontified t) 2626 2627 (fontified t) 2627 2632 (face font-lock-type-face fontified t) 2632 2633 (fontified t) 2633 2634 (face (rainbow-delimiters-depth-1-face) fontified t) 2634 2639 (fontified t) 2639 2646 (face font-lock-variable-name-face fontified t) 2646 2648 (fontified t) 2648 2652 (face font-lock-constant-face fontified t) 2652 2654 (fontified t) 2654 2661 (face font-lock-type-face fontified t) 2661 2667 (fontified t) 2667 2673 (face font-lock-variable-name-face fontified t) 2673 2675 (fontified t) 2675 2679 (face font-lock-constant-face fontified t) 2679 2681 (fontified t) 2681 2687 (face font-lock-type-face fontified t) 2687 2693 (fontified t) 2693 2698 (face font-lock-variable-name-face fontified t) 2698 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2706 (fontified t) 2706 2711 (face font-lock-type-face fontified t) 2711 2717 (fontified t) 2717 2723 (face font-lock-variable-name-face fontified t) 2723 2725 (fontified t) 2725 2729 (face font-lock-constant-face fontified t) 2729 2731 (fontified t) 2731 2751 (face font-lock-type-face fontified t) 2751 2757 (fontified t) 2757 2761 (face font-lock-variable-name-face fontified t) 2761 2763 (fontified t) 2763 2768 (face font-lock-constant-face fontified t) 2768 2770 (fontified t) 2770 2773 (face font-lock-constant-face fontified t) 2773 2775 (fontified t) 2775 2787 (face font-lock-type-face fontified t) 2787 2788 (face (rainbow-delimiters-depth-2-face) fontified t) 2788 2791 (face font-lock-type-face fontified t) 2791 2792 (face (rainbow-delimiters-depth-2-face) fontified t) 2792 2798 (fontified t) 2798 2801 (face font-lock-comment-delimiter-face fontified t) 2801 2850 (face font-lock-comment-face fontified t) 2850 2854 (fontified t) 2854 2857 (face font-lock-comment-delimiter-face fontified t) 2857 2906 (face font-lock-comment-face fontified t) 2906 2910 (fontified t) 2910 2913 (face font-lock-comment-delimiter-face fontified t) 2913 2958 (face font-lock-comment-face fontified t) 2958 2962 (fontified t) 2962 2968 (face font-lock-variable-name-face fontified t) 2968 2970 (fontified t) 2970 2976 (face font-lock-type-face fontified t) 2976 2982 (fontified t) 2982 2997 (face font-lock-variable-name-face fontified t) 2997 2999 (fontified t) 2999 3003 (face font-lock-constant-face fontified t) 3003 3005 (fontified t) 3005 3019 (face font-lock-type-face fontified t) 3019 3025 (fontified t) 3025 3028 (face font-lock-variable-name-face fontified t) 3028 3034 (face font-lock-variable-name-face fontified t) 3034 3036 (fontified t) 3036 3041 (face font-lock-constant-face fontified t) 3041 3043 (fontified t) 3043 3048 (face font-lock-type-face fontified t) 3048 3050 (fontified t) 3050 3056 (fontified t) 3056 3081 (face font-lock-variable-name-face fontified t) 3081 3083 (fontified t) 3083 3087 (face font-lock-constant-face fontified t) 3087 3089 (fontified t) 3089 3104 (face font-lock-type-face fontified t) 3104 3110 (fontified t) 3110 3123 (face font-lock-variable-name-face fontified t) 3123 3125 (fontified t) 3125 3132 (face font-lock-type-face fontified t) 3132 3144 (fontified t) 3144 3150 (face font-lock-variable-name-face fontified t) 3150 3152 (fontified t) 3152 3158 (face font-lock-constant-face fontified t) 3158 3160 (fontified t) 3160 3166 (face font-lock-type-face fontified t) 3166 3168 (fontified t) 3168 3171 (face font-lock-comment-delimiter-face fontified t) 3171 3180 (face font-lock-comment-face fontified t) 3180 3184 (fontified t) 3184 3194 (face font-lock-variable-name-face fontified t) 3194 3196 (fontified t) 3196 3202 (face font-lock-constant-face fontified t) 3202 3204 (fontified t) 3204 3214 (face font-lock-type-face fontified t) 3214 3216 (fontified t) 3216 3219 (face font-lock-comment-delimiter-face fontified t) 3219 3224 (face font-lock-comment-face fontified t) 3224 3228 (fontified t) 3228 3245 (face font-lock-variable-name-face fontified t) 3245 3247 (fontified t) 3247 3253 (face font-lock-constant-face fontified t) 3253 3255 (fontified t) 3255 3271 (face font-lock-type-face fontified t) 3271 3273 (fontified t) 3273 3276 (face font-lock-comment-delimiter-face fontified t) 3276 3285 (face font-lock-comment-face fontified t) 3285 3289 (fontified t) 3289 3292 (face font-lock-comment-delimiter-face fontified t) 3292 3296 (face font-lock-comment-face fontified t) 3296 3300 (fontified t) 3300 3303 (face font-lock-comment-delimiter-face fontified t) 3303 3308 (face font-lock-comment-face fontified t) 3308 3312 (fontified t) 3312 3325 (face font-lock-variable-name-face fontified t) 3325 3327 (fontified t) 3327 3331 (face font-lock-type-face fontified t) 3331 3339 (fontified t) 3339 3353 (face font-lock-variable-name-face fontified t) 3353 3355 (fontified t) 3355 3368 (face font-lock-type-face fontified t) 3368 3374 (fontified t) 3374 3387 (face font-lock-variable-name-face fontified t) 3387 3389 (fontified t) 3389 3393 (face font-lock-constant-face fontified t) 3393 3395 (fontified t) 3395 3401 (face font-lock-type-face fontified t) 3401 3407 (fontified t) 3407 3424 (face font-lock-variable-name-face fontified t) 3424 3426 (fontified t) 3426 3430 (face font-lock-constant-face fontified t) 3430 3432 (fontified t) 3432 3441 (face font-lock-type-face fontified t) 3441 3448 (fontified t) 3448 3461 (face font-lock-variable-name-face fontified t) 3461 3463 (fontified t) 3463 3475 (face font-lock-type-face fontified t) 3475 3481 (fontified t) 3481 3493 (face font-lock-variable-name-face fontified t) 3493 3495 (fontified t) 3495 3499 (face font-lock-constant-face fontified t) 3499 3501 (fontified t) 3501 3507 (face font-lock-type-face fontified t) 3507 3513 (fontified t) 3513 3529 (face font-lock-variable-name-face fontified t) 3529 3531 (fontified t) 3531 3535 (face font-lock-constant-face fontified t) 3535 3537 (fontified t) 3537 3546 (face font-lock-type-face fontified t) 3546 3552 (fontified t) 3552 3573 (face font-lock-variable-name-face fontified t) 3573 3575 (fontified t) 3575 3579 (face font-lock-constant-face fontified t) 3579 3581 (fontified t) 3581 3595 (face font-lock-type-face fontified t) 3595 3602 (fontified t) 3602 3611 (face font-lock-variable-name-face fontified t) 3611 3613 (fontified t) 3613 3616 (face font-lock-type-face fontified t) 3616 3617 (face (rainbow-delimiters-depth-2-face) fontified t) 3617 3625 (face font-lock-type-face fontified t) 3625 3626 (face (rainbow-delimiters-depth-2-face) fontified t) 3626 3632 (fontified t) 3632 3647 (face font-lock-variable-name-face fontified t) 3647 3649 (fontified t) 3649 3653 (face font-lock-constant-face fontified t) 3653 3655 (fontified t) 3655 3661 (face font-lock-type-face fontified t) 3661 3670 (fontified t) 3670 3671 (face (rainbow-delimiters-depth-1-face) fontified t) 3671 3673 (fontified t) 3673 3677 (face font-lock-keyword-face fontified t) 3677 3678 (fontified t) 3678 3683 (face font-lock-type-face fontified t) 3683 3684 (fontified t) 3684 3685 (face (rainbow-delimiters-depth-1-face) fontified t) 3685 3690 (fontified t) 3690 3693 (face font-lock-comment-delimiter-face fontified t) 3693 3745 (face font-lock-comment-face fontified t) 3745 3749 (fontified t) 3749 3754 (face font-lock-keyword-face fontified t) 3754 3755 (fontified t) 3755 3757 (face font-lock-keyword-face fontified t) 3757 3758 (fontified t) 3758 3761 (face font-lock-function-name-face fontified t) 3761 3762 (face (rainbow-delimiters-depth-2-face) fontified t) 3762 3768 (face font-lock-variable-name-face fontified t) 3768 3770 (fontified t) 3770 3776 (face font-lock-type-face fontified t) 3776 3777 (face (rainbow-delimiters-depth-2-face) fontified t) 3777 3779 (fontified t) 3779 3780 (syntax-table (1) fontified t) 3780 3781 (fontified t) 3781 3785 (face font-lock-type-face fontified t) 3785 3786 (fontified t) 3786 3787 (face (rainbow-delimiters-depth-2-face) fontified t) 3787 3796 (fontified t) 3796 3799 (face font-lock-keyword-face fontified t) 3799 3800 (fontified t) 3800 3804 (face font-lock-variable-name-face fontified t) 3804 3824 (fontified t) 3824 3825 (face (rainbow-delimiters-depth-3-face) fontified t) 3825 3826 (face (rainbow-delimiters-depth-3-face) fontified t) 3826 3837 (fontified t) 3837 3840 (face font-lock-comment-delimiter-face fontified t) 3840 3876 (face font-lock-comment-face fontified t) 3876 3884 (fontified t) 3884 3887 (face font-lock-comment-delimiter-face fontified t) 3887 3902 (face font-lock-comment-face fontified t) 3902 3903 (face font-lock-comment-face syntax-table (1) fontified t) 3903 3943 (face font-lock-comment-face fontified t) 3943 3951 (fontified t) 3951 3954 (face font-lock-keyword-face fontified t) 3954 3955 (fontified t) 3955 3963 (face font-lock-variable-name-face fontified t) 3963 3966 (fontified t) 3966 3970 (face font-lock-constant-face fontified t) 3970 3972 (fontified t) 3972 3980 (face font-lock-type-face fontified t) 3980 3985 (fontified t) 3985 3986 (face (rainbow-delimiters-depth-3-face) fontified t) 3986 3990 (face font-lock-constant-face fontified t) 3990 3992 (fontified t) 3992 4010 (face font-lock-type-face fontified t) 4010 4011 (fontified t) 4011 4012 (face (rainbow-delimiters-depth-4-face) fontified t) 4012 4025 (fontified t) 4025 4033 (face font-lock-variable-name-face fontified t) 4033 4035 (fontified t) 4035 4039 (face font-lock-constant-face fontified t) 4039 4041 (fontified t) 4041 4049 (face font-lock-type-face fontified t) 4049 4054 (fontified t) 4054 4055 (face (rainbow-delimiters-depth-5-face) fontified t) 4055 4056 (face (rainbow-delimiters-depth-5-face) fontified t) 4056 4072 (fontified t) 4072 4079 (face font-lock-type-face fontified t) 4079 4088 (fontified t) 4088 4089 (face (rainbow-delimiters-depth-5-face) fontified t) 4089 4090 (face (rainbow-delimiters-depth-5-face) fontified t) 4090 4099 (fontified t) 4099 4100 (face (rainbow-delimiters-depth-4-face) fontified t) 4100 4101 (face (rainbow-delimiters-depth-3-face) fontified t) 4101 4120 (fontified t) 4120 4123 (face font-lock-comment-delimiter-face fontified t) 4123 4132 (face font-lock-comment-face fontified t) 4132 4140 (fontified t) 4140 4142 (face font-lock-comment-delimiter-face fontified t) 4142 4143 (face font-lock-comment-face fontified t) 4143 4151 (fontified t) 4151 4154 (face font-lock-comment-delimiter-face fontified t) 4154 4219 (face font-lock-comment-face fontified t) 4219 4227 (fontified t) 4227 4230 (face font-lock-comment-delimiter-face fontified t) 4230 4277 (face font-lock-comment-face fontified t) 4277 4285 (fontified t) 4285 4288 (face font-lock-keyword-face fontified t) 4288 4289 (fontified t) 4289 4296 (face font-lock-variable-name-face fontified t) 4296 4299 (fontified t) 4299 4305 (face rust-unsafe fontified t) 4305 4306 (fontified t) 4306 4307 (face (rainbow-delimiters-depth-3-face) fontified t) 4307 4331 (fontified t) 4331 4332 (face (rainbow-delimiters-depth-4-face) fontified t) 4332 4333 (face rust-ampersand-face fontified t) 4333 4339 (fontified t) 4339 4340 (face (rainbow-delimiters-depth-4-face) fontified t) 4340 4341 (fontified t) 4341 4342 (face (rainbow-delimiters-depth-3-face) fontified t) 4342 4349 (fontified t) 4349 4350 (face (rainbow-delimiters-depth-3-face) fontified t) 4350 4351 (face (rainbow-delimiters-depth-3-face) fontified t) 4351 4362 (fontified t) 4362 4365 (face font-lock-keyword-face fontified t) 4365 4366 (fontified t) 4366 4373 (face font-lock-variable-name-face fontified t) 4373 4400 (fontified t) 4400 4401 (face (rainbow-delimiters-depth-3-face) fontified t) 4401 4414 (fontified t) 4414 4415 (face rust-ampersand-face fontified t) 4415 4419 (face font-lock-constant-face fontified t) 4419 4421 (fontified t) 4421 4442 (face font-lock-type-face fontified t) 4442 4443 (fontified t) 4443 4444 (face (rainbow-delimiters-depth-4-face) fontified t) 4444 4461 (fontified t) 4461 4477 (face font-lock-variable-name-face fontified t) 4477 4479 (fontified t) 4479 4483 (face font-lock-constant-face fontified t) 4483 4485 (fontified t) 4485 4500 (face font-lock-type-face fontified t) 4500 4509 (fontified t) 4509 4510 (face (rainbow-delimiters-depth-5-face) fontified t) 4510 4511 (face (rainbow-delimiters-depth-5-face) fontified t) 4511 4529 (fontified t) 4529 4547 (face font-lock-variable-name-face fontified t) 4547 4549 (fontified t) 4549 4550 (face font-lock-type-face fontified t) 4550 4553 (fontified t face font-lock-type-face) 4553 4554 (fontified t face (rainbow-delimiters-depth-5-face)) 4554 4555 (fontified t face rust-ampersand-face) 4555 4562 (fontified t) 4562 4563 (fontified t face (rainbow-delimiters-depth-5-face)) 4563 4565 (fontified t) 4565 4581 (fontified t) 4581 4603 (face font-lock-variable-name-face fontified t) 4603 4605 (fontified t) 4605 4610 (face font-lock-keyword-face fontified t) 4610 4624 (fontified t) 4624 4625 (face (rainbow-delimiters-depth-4-face) fontified t) 4625 4635 (fontified t) 4635 4636 (face (rainbow-delimiters-depth-3-face) fontified t) 4636 4637 (fontified t) 4637 4642 (face font-lock-keyword-face fontified t) 4642 4649 (fontified t) 4649 4650 (face (rainbow-delimiters-depth-3-face) fontified t) 4650 4651 (face (rainbow-delimiters-depth-3-face) fontified t) 4651 4662 (fontified t) 4662 4665 (face font-lock-keyword-face fontified t) 4665 4666 (fontified t) 4666 4667 (face (rainbow-delimiters-depth-3-face) fontified t) 4667 4680 (fontified t) 4680 4681 (face (rainbow-delimiters-depth-3-face) fontified t) 4681 4706 (fontified t) 4706 4707 (face (rainbow-delimiters-depth-3-face) fontified t) 4707 4720 (fontified t) 4720 4721 (face rust-ampersand-face fontified t) 4721 4725 (face font-lock-constant-face fontified t) 4725 4727 (fontified t) 4727 4743 (face font-lock-type-face fontified t) 4743 4744 (fontified t) 4744 4745 (face (rainbow-delimiters-depth-4-face) fontified t) 4745 4762 (fontified t) 4762 4770 (face font-lock-variable-name-face fontified t) 4770 4772 (fontified t) 4772 4776 (face font-lock-constant-face fontified t) 4776 4778 (fontified t) 4778 4786 (face font-lock-type-face fontified t) 4786 4793 (fontified t) 4793 4794 (face (rainbow-delimiters-depth-5-face) fontified t) 4794 4795 (face (rainbow-delimiters-depth-5-face) fontified t) 4795 4813 (fontified t) 4813 4816 (face font-lock-comment-delimiter-face fontified t) 4816 4868 (face font-lock-comment-face fontified t) 4868 4884 (fontified t) 4884 4887 (face font-lock-comment-delimiter-face fontified t) 4887 4943 (face font-lock-comment-face fontified t) 4943 4959 (fontified t) 4959 4965 (face font-lock-variable-name-face fontified t) 4965 4967 (fontified t) 4967 4969 (face font-lock-keyword-face fontified t) 4969 4970 (fontified t) 4970 4974 (face font-lock-preprocessor-face fontified t) 4974 4975 (face (rainbow-delimiters-depth-5-face) fontified t) 4975 4989 (fontified t) 4989 4997 (face font-lock-string-face fontified t) 4997 4998 (face (rainbow-delimiters-depth-5-face) fontified t) 4998 4999 (fontified t) 4999 5000 (face (rainbow-delimiters-depth-5-face) fontified t) 5000 5021 (fontified t) 5021 5025 (face font-lock-constant-face fontified t) 5025 5027 (fontified t) 5027 5033 (face font-lock-type-face fontified t) 5033 5060 (fontified t) 5060 5061 (face (rainbow-delimiters-depth-6-face) fontified t) 5061 5062 (face (rainbow-delimiters-depth-6-face) fontified t) 5062 5079 (fontified t) 5079 5080 (face (rainbow-delimiters-depth-5-face) fontified t) 5080 5081 (fontified t) 5081 5085 (face font-lock-keyword-face fontified t) 5085 5086 (fontified t) 5086 5087 (face (rainbow-delimiters-depth-5-face) fontified t) 5087 5108 (fontified t) 5108 5112 (face font-lock-constant-face fontified t) 5112 5114 (fontified t) 5114 5120 (face font-lock-type-face fontified t) 5120 5129 (fontified t) 5129 5130 (face (rainbow-delimiters-depth-6-face) fontified t) 5130 5131 (face (rainbow-delimiters-depth-6-face) fontified t) 5131 5148 (fontified t) 5148 5149 (face (rainbow-delimiters-depth-5-face) fontified t) 5149 5167 (fontified t) 5167 5172 (face font-lock-variable-name-face fontified t) 5172 5174 (fontified t) 5174 5178 (face font-lock-type-face fontified t) 5178 5192 (fontified t) 5192 5193 (face (rainbow-delimiters-depth-4-face) fontified t) 5193 5207 (fontified t) 5207 5211 (face font-lock-type-face fontified t) 5211 5213 (fontified t) 5213 5216 (face font-lock-comment-delimiter-face fontified t) 5216 5227 (face font-lock-comment-face fontified t) 5227 5235 (fontified t) 5235 5236 (face (rainbow-delimiters-depth-3-face) fontified t) 5236 5237 (fontified t) 5237 5242 (face font-lock-keyword-face fontified t) 5242 5249 (fontified t) 5249 5250 (face (rainbow-delimiters-depth-3-face) fontified t) 5250 5251 (face (rainbow-delimiters-depth-3-face) fontified t) 5251 5263 (fontified t) 5263 5266 (face font-lock-keyword-face fontified t) 5266 5267 (fontified t) 5267 5279 (face font-lock-variable-name-face fontified t) 5279 5306 (fontified t) 5306 5307 (face (rainbow-delimiters-depth-3-face) fontified t) 5307 5308 (face rust-ampersand-face fontified t) 5308 5315 (fontified t) 5315 5316 (face (rainbow-delimiters-depth-3-face) fontified t) 5316 5326 (fontified t) 5326 5329 (face font-lock-comment-delimiter-face fontified t) 5329 5409 (face font-lock-comment-face fontified t) 5409 5417 (fontified t) 5417 5420 (face font-lock-comment-delimiter-face fontified t) 5420 5500 (face font-lock-comment-face fontified t) 5500 5508 (fontified t) 5508 5511 (face font-lock-comment-delimiter-face fontified t) 5511 5585 (face font-lock-comment-face fontified t) 5585 5593 (fontified t) 5593 5596 (face font-lock-keyword-face fontified t) 5596 5597 (fontified t) 5597 5611 (face font-lock-variable-name-face fontified t) 5611 5639 (fontified t) 5639 5640 (face (rainbow-delimiters-depth-3-face) fontified t) 5640 5641 (face (rainbow-delimiters-depth-3-face) fontified t) 5641 5661 (fontified t) 5661 5662 (face (rainbow-delimiters-depth-3-face) fontified t) 5662 5663 (face (rainbow-delimiters-depth-3-face) fontified t) 5663 5683 (fontified t) 5683 5684 (face (rainbow-delimiters-depth-3-face) fontified t) 5684 5697 (fontified t) 5697 5698 (face (rainbow-delimiters-depth-4-face) fontified t) 5698 5699 (face (rainbow-delimiters-depth-4-face) fontified t) 5699 5700 (face (rainbow-delimiters-depth-3-face) fontified t) 5700 5718 (fontified t) 5718 5719 (face (rainbow-delimiters-depth-3-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-3-face) fontified t) 5720 5743 (fontified t) 5743 5744 (face (rainbow-delimiters-depth-3-face) fontified t) 5744 5764 (fontified t) 5764 5765 (face (rainbow-delimiters-depth-4-face) fontified t) 5765 5766 (fontified t) 5766 5767 (face (rainbow-delimiters-depth-4-face) fontified t) 5767 5768 (face (rainbow-delimiters-depth-3-face) fontified t) 5768 5778 (fontified t) 5778 5781 (face font-lock-keyword-face fontified t) 5781 5782 (fontified t) 5782 5788 (face font-lock-variable-name-face fontified t) 5788 5791 (fontified t) 5791 5795 (face font-lock-constant-face fontified t) 5795 5797 (fontified t) 5797 5817 (face font-lock-type-face fontified t) 5817 5818 (fontified t) 5818 5819 (face (rainbow-delimiters-depth-3-face) fontified t) 5819 5832 (fontified t) 5832 5837 (face font-lock-variable-name-face fontified t) 5837 5839 (fontified t) 5839 5843 (face font-lock-constant-face fontified t) 5843 5845 (fontified t) 5845 5858 (face font-lock-type-face fontified t) 5858 5860 (fontified t) 5860 5877 (face font-lock-type-face fontified t) 5877 5891 (fontified t) 5891 5897 (face font-lock-variable-name-face fontified t) 5897 5927 (fontified t) 5927 5932 (face font-lock-variable-name-face fontified t) 5932 5958 (fontified t) 5958 5964 (face font-lock-variable-name-face fontified t) 5964 5991 (fontified t) 5991 6003 (face font-lock-variable-name-face fontified t) 6003 6031 (fontified t) 6031 6032 (face (rainbow-delimiters-depth-4-face) fontified t) 6032 6033 (fontified t) 6033 6034 (face (rainbow-delimiters-depth-4-face) fontified t) 6034 6048 (fontified t) 6048 6058 (face font-lock-variable-name-face fontified t) 6058 6065 (fontified t) 6065 6084 (fontified t) 6084 6085 (fontified t face (rainbow-delimiters-depth-4-face)) 6085 6086 (fontified t) 6086 6087 (fontified t face (rainbow-delimiters-depth-4-face)) 6087 6089 (fontified t) 6089 6101 (fontified t) 6101 6113 (face font-lock-variable-name-face fontified t) 6113 6115 (fontified t) 6115 6119 (face font-lock-preprocessor-face fontified t) 6119 6120 (face (rainbow-delimiters-depth-4-face) fontified t) 6120 6121 (face (rainbow-delimiters-depth-4-face) fontified t) 6121 6131 (fontified t) 6131 6132 (face (rainbow-delimiters-depth-3-face) fontified t) 6132 6159 (fontified t) 6159 6160 (face (rainbow-delimiters-depth-3-face) fontified t) 6160 6161 (face rust-ampersand-face fontified t) 6161 6169 (fontified t) 6169 6170 (face rust-ampersand-face fontified t) 6170 6176 (fontified t) 6176 6177 (face (rainbow-delimiters-depth-3-face) fontified t) 6177 6197 (fontified t) 6197 6200 (face font-lock-keyword-face fontified t) 6200 6201 (fontified t) 6201 6226 (face font-lock-variable-name-face fontified t) 6226 6272 (fontified t) 6272 6273 (face (rainbow-delimiters-depth-3-face) fontified t) 6273 6274 (face rust-ampersand-face fontified t) 6274 6278 (face font-lock-constant-face fontified t) 6278 6280 (fontified t) 6280 6305 (face font-lock-type-face fontified t) 6305 6306 (fontified t) 6306 6307 (face (rainbow-delimiters-depth-4-face) fontified t) 6307 6324 (fontified t) 6324 6331 (face font-lock-variable-name-face fontified t) 6331 6333 (fontified t) 6333 6334 (face rust-ampersand-face fontified t) 6334 6335 (face (rainbow-delimiters-depth-5-face) fontified t) 6335 6356 (fontified t) 6356 6360 (face font-lock-constant-face fontified t) 6360 6362 (fontified t) 6362 6382 (face font-lock-type-face fontified t) 6382 6383 (fontified t) 6383 6384 (face (rainbow-delimiters-depth-6-face) fontified t) 6384 6409 (fontified t) 6409 6416 (face font-lock-variable-name-face fontified t) 6416 6445 (fontified t) 6445 6455 (face font-lock-variable-name-face fontified t) 6455 6457 (fontified t) 6457 6461 (face font-lock-constant-face fontified t) 6461 6463 (fontified t) 6463 6475 (face font-lock-type-face fontified t) 6475 6477 (fontified t) 6477 6485 (face font-lock-type-face fontified t) 6485 6511 (fontified t) 6511 6513 (face font-lock-variable-name-face fontified t) 6513 6515 (fontified t) 6515 6519 (face font-lock-constant-face fontified t) 6519 6521 (fontified t) 6521 6532 (face font-lock-type-face fontified t) 6532 6534 (fontified t) 6534 6541 (face font-lock-type-face fontified t) 6541 6542 (fontified t) 6542 6543 (face (rainbow-delimiters-depth-7-face) fontified t) 6543 6572 (fontified t) 6572 6584 (face font-lock-variable-name-face fontified t) 6584 6586 (fontified t) 6586 6591 (face font-lock-keyword-face fontified t) 6591 6621 (fontified t) 6621 6635 (face font-lock-variable-name-face fontified t) 6635 6637 (fontified t) 6637 6641 (face font-lock-constant-face fontified t) 6641 6643 (fontified t) 6643 6663 (face font-lock-type-face fontified t) 6663 6665 (fontified t) 6665 6667 (face font-lock-type-face fontified t) 6667 6697 (fontified t) 6697 6708 (face font-lock-variable-name-face fontified t) 6708 6710 (fontified t) 6710 6714 (face font-lock-constant-face fontified t) 6714 6716 (fontified t) 6716 6733 (face font-lock-type-face fontified t) 6733 6735 (fontified t) 6735 6740 (face font-lock-type-face fontified t) 6740 6741 (fontified t) 6741 6742 (face (rainbow-delimiters-depth-8-face) fontified t) 6742 6743 (fontified t) 6743 6753 (face font-lock-variable-name-face fontified t) 6753 6755 (fontified t) 6755 6759 (face font-lock-keyword-face fontified t) 6759 6760 (fontified t) 6760 6761 (face (rainbow-delimiters-depth-8-face) fontified t) 6761 6787 (fontified t) 6787 6788 (face (rainbow-delimiters-depth-7-face) fontified t) 6788 6814 (fontified t) 6814 6819 (face font-lock-variable-name-face fontified t) 6819 6821 (fontified t) 6821 6825 (face font-lock-type-face fontified t) 6825 6847 (fontified t) 6847 6848 (face (rainbow-delimiters-depth-6-face) fontified t) 6848 6870 (fontified t) 6870 6874 (face font-lock-constant-face fontified t) 6874 6876 (fontified t) 6876 6896 (face font-lock-type-face fontified t) 6896 6897 (fontified t) 6897 6898 (face (rainbow-delimiters-depth-6-face) fontified t) 6898 6923 (fontified t) 6923 6930 (face font-lock-variable-name-face fontified t) 6930 6959 (fontified t) 6959 6969 (face font-lock-variable-name-face fontified t) 6969 6971 (fontified t) 6971 6975 (face font-lock-constant-face fontified t) 6975 6977 (fontified t) 6977 6989 (face font-lock-type-face fontified t) 6989 6991 (fontified t) 6991 6999 (face font-lock-type-face fontified t) 6999 7025 (fontified t) 7025 7028 (face font-lock-comment-delimiter-face fontified t) 7028 7074 (face font-lock-comment-face fontified t) 7074 7098 (fontified t) 7098 7101 (face font-lock-comment-delimiter-face fontified t) 7101 7136 (face font-lock-comment-face fontified t) 7136 7160 (fontified t) 7160 7162 (face font-lock-variable-name-face fontified t) 7162 7164 (fontified t) 7164 7168 (face font-lock-constant-face fontified t) 7168 7170 (fontified t) 7170 7181 (face font-lock-type-face fontified t) 7181 7183 (fontified t) 7183 7190 (face font-lock-type-face fontified t) 7190 7191 (face (rainbow-delimiters-depth-7-face) fontified t) 7191 7195 (face font-lock-constant-face fontified t) 7195 7197 (fontified t) 7197 7215 (face font-lock-type-face fontified t) 7215 7217 (fontified t) 7217 7226 (face font-lock-type-face fontified t) 7226 7227 (face (rainbow-delimiters-depth-7-face) fontified t) 7227 7253 (fontified t) 7253 7258 (face font-lock-variable-name-face fontified t) 7258 7260 (fontified t) 7260 7264 (face font-lock-type-face fontified t) 7264 7286 (fontified t) 7286 7287 (face (rainbow-delimiters-depth-6-face) fontified t) 7287 7305 (fontified t) 7305 7306 (face (rainbow-delimiters-depth-5-face) fontified t) 7306 7324 (fontified t) 7324 7329 (face font-lock-variable-name-face fontified t) 7329 7331 (fontified t) 7331 7335 (face font-lock-type-face fontified t) 7335 7336 (face (rainbow-delimiters-depth-5-face) fontified t) 7336 7363 (face font-lock-string-face fontified t) 7363 7364 (face (rainbow-delimiters-depth-5-face) fontified t) 7364 7378 (fontified t) 7378 7379 (face (rainbow-delimiters-depth-4-face) fontified t) 7379 7380 (face (rainbow-delimiters-depth-3-face) fontified t) 7380 7391 (fontified t) 7391 7396 (face font-lock-preprocessor-face fontified t) 7396 7397 (face (rainbow-delimiters-depth-3-face) fontified t) 7397 7409 (face font-lock-string-face fontified t) 7409 7410 (face (rainbow-delimiters-depth-3-face) fontified t) 7410 7412 (fontified t) 7412 7420 (fontified t) 7420 7423 (face font-lock-keyword-face fontified t) 7423 7424 (fontified t) 7424 7433 (face font-lock-variable-name-face fontified t) 7433 7436 (fontified t) 7436 7441 (face font-lock-constant-face fontified t) 7441 7451 (fontified t) 7451 7452 (face (rainbow-delimiters-depth-3-face) fontified t) 7452 7505 (face font-lock-string-face fontified t) 7505 7507 (fontified t) 7507 7508 (face rust-ampersand-face fontified t) 7508 7516 (fontified t) 7516 7517 (face rust-ampersand-face fontified t) 7517 7524 (fontified t) 7524 7525 (face rust-ampersand-face fontified t) 7525 7550 (fontified t) 7550 7551 (face (rainbow-delimiters-depth-3-face) fontified t) 7551 7558 (fontified t) 7558 7559 (face (rainbow-delimiters-depth-3-face) fontified t) 7559 7560 (face (rainbow-delimiters-depth-3-face) fontified t) 7560 7562 (fontified t) 7562 7571 (fontified t) 7571 7574 (face font-lock-keyword-face fontified t) 7574 7575 (fontified t) 7575 7588 (face font-lock-variable-name-face fontified t) 7588 7591 (fontified t) 7591 7598 (face font-lock-constant-face fontified t) 7598 7600 (fontified t) 7600 7607 (face font-lock-type-face fontified t) 7607 7629 (fontified t) 7629 7630 (face (rainbow-delimiters-depth-3-face) fontified t) 7630 7631 (face rust-ampersand-face fontified t) 7631 7639 (fontified t) 7639 7640 (face rust-ampersand-face fontified t) 7640 7648 (fontified t) 7648 7663 (face font-lock-string-face fontified t) 7663 7664 (face (rainbow-delimiters-depth-3-face) fontified t) 7664 7666 (fontified t) 7666 7676 (fontified t) 7676 7679 (face font-lock-keyword-face fontified t) 7679 7680 (fontified t) 7680 7686 (face font-lock-variable-name-face fontified t) 7686 7689 (fontified t) 7689 7695 (face font-lock-constant-face fontified t) 7695 7697 (fontified t) 7697 7703 (face font-lock-type-face fontified t) 7703 7708 (fontified t) 7708 7709 (face (rainbow-delimiters-depth-3-face) fontified t) 7709 7710 (face (rainbow-delimiters-depth-4-face) fontified t) 7710 7724 (fontified t) 7724 7725 (face (rainbow-delimiters-depth-4-face) fontified t) 7725 7727 (fontified t) 7727 7733 (face font-lock-constant-face fontified t) 7733 7735 (fontified t) 7735 7738 (face font-lock-type-face fontified t) 7738 7739 (face (rainbow-delimiters-depth-4-face) fontified t) 7739 7744 (fontified t) 7744 7745 (face (rainbow-delimiters-depth-4-face) fontified t) 7745 7747 (fontified t) 7747 7753 (face font-lock-constant-face fontified t) 7753 7755 (fontified t) 7755 7758 (face font-lock-type-face fontified t) 7758 7759 (face (rainbow-delimiters-depth-4-face) fontified t) 7759 7764 (fontified t) 7764 7765 (face (rainbow-delimiters-depth-4-face) fontified t) 7765 7766 (face (rainbow-delimiters-depth-3-face) fontified t) 7766 7776 (fontified t) 7776 7779 (face font-lock-keyword-face fontified t) 7779 7780 (fontified t) 7780 7790 (face font-lock-variable-name-face fontified t) 7790 7793 (fontified t) 7793 7799 (face font-lock-constant-face fontified t) 7799 7801 (fontified t) 7801 7811 (face font-lock-type-face fontified t) 7811 7816 (fontified t) 7816 7817 (face (rainbow-delimiters-depth-3-face) fontified t) 7817 7846 (fontified t) 7846 7852 (face font-lock-constant-face fontified t) 7852 7854 (fontified t) 7854 7857 (face font-lock-type-face fontified t) 7857 7858 (face (rainbow-delimiters-depth-4-face) fontified t) 7858 7862 (fontified t) 7862 7863 (face (rainbow-delimiters-depth-4-face) fontified t) 7863 7875 (fontified t) 7875 7876 (face (rainbow-delimiters-depth-3-face) fontified t) 7876 7886 (fontified t) 7886 7889 (face font-lock-keyword-face fontified t) 7889 7890 (fontified t) 7890 7907 (face font-lock-variable-name-face fontified t) 7907 7910 (fontified t) 7910 7916 (face font-lock-constant-face fontified t) 7916 7918 (fontified t) 7918 7934 (face font-lock-type-face fontified t) 7934 7939 (fontified t) 7939 7940 (face (rainbow-delimiters-depth-3-face) fontified t) 7940 7948 (fontified t) 7948 7949 (face (rainbow-delimiters-depth-3-face) fontified t) 7949 7962 (fontified t) 7962 7965 (face font-lock-keyword-face fontified t) 7965 7966 (fontified t) 7966 7969 (face font-lock-keyword-face fontified t) 7969 7970 (fontified t) 7970 7984 (face font-lock-variable-name-face fontified t) 7984 7987 (fontified t) 7987 8000 (face font-lock-type-face fontified t) 8000 8005 (fontified t) 8005 8006 (face (rainbow-delimiters-depth-3-face) fontified t) 8006 8007 (face (rainbow-delimiters-depth-3-face) fontified t) 8007 8048 (fontified t) 8048 8049 (face (rainbow-delimiters-depth-3-face) fontified t) 8049 8050 (face rust-ampersand-face fontified t) 8050 8058 (fontified t) 8058 8059 (face rust-ampersand-face fontified t) 8059 8069 (fontified t) 8069 8070 (face (rainbow-delimiters-depth-3-face) fontified t) 8070 8072 (fontified t) 8072 8075 (face font-lock-comment-delimiter-face fontified t) 8075 8084 (face font-lock-comment-face fontified t) 8084 8092 (fontified t) 8092 8095 (face font-lock-keyword-face fontified t) 8095 8096 (fontified t) 8096 8109 (face font-lock-variable-name-face fontified t) 8109 8147 (fontified t) 8147 8148 (face (rainbow-delimiters-depth-3-face) fontified t) 8148 8149 (face rust-ampersand-face fontified t) 8149 8155 (fontified t) 8155 8156 (face (rainbow-delimiters-depth-3-face) fontified t) 8156 8168 (fontified t) 8168 8171 (face font-lock-keyword-face fontified t) 8171 8172 (fontified t) 8172 8196 (face font-lock-variable-name-face fontified t) 8196 8230 (fontified t) 8230 8231 (face (rainbow-delimiters-depth-3-face) fontified t) 8231 8232 (face rust-ampersand-face fontified t) 8232 8236 (face font-lock-constant-face fontified t) 8236 8238 (fontified t) 8238 8263 (face font-lock-type-face fontified t) 8263 8264 (fontified t) 8264 8265 (face (rainbow-delimiters-depth-4-face) fontified t) 8265 8278 (fontified t) 8278 8285 (face font-lock-variable-name-face fontified t) 8285 8287 (fontified t) 8287 8288 (face rust-ampersand-face fontified t) 8288 8289 (face (rainbow-delimiters-depth-5-face) fontified t) 8289 8306 (fontified t) 8306 8310 (face font-lock-constant-face fontified t) 8310 8312 (fontified t) 8312 8332 (face font-lock-type-face fontified t) 8332 8333 (fontified t) 8333 8334 (face (rainbow-delimiters-depth-6-face) fontified t) 8334 8355 (fontified t) 8355 8362 (face font-lock-variable-name-face fontified t) 8362 8387 (fontified t) 8387 8397 (face font-lock-variable-name-face fontified t) 8397 8399 (fontified t) 8399 8403 (face font-lock-constant-face fontified t) 8403 8405 (fontified t) 8405 8417 (face font-lock-type-face fontified t) 8417 8419 (fontified t) 8419 8425 (face font-lock-type-face fontified t) 8425 8428 (fontified t) 8428 8432 (face font-lock-constant-face fontified t) 8432 8434 (fontified t) 8434 8446 (face font-lock-type-face fontified t) 8446 8448 (fontified t) 8448 8456 (face font-lock-type-face fontified t) 8456 8478 (fontified t) 8478 8480 (face font-lock-variable-name-face fontified t) 8480 8482 (fontified t) 8482 8486 (face font-lock-constant-face fontified t) 8486 8488 (fontified t) 8488 8499 (face font-lock-type-face fontified t) 8499 8501 (fontified t) 8501 8507 (face font-lock-type-face fontified t) 8507 8508 (fontified t) 8508 8509 (face (rainbow-delimiters-depth-7-face) fontified t) 8509 8534 (fontified t) 8534 8536 (face font-lock-variable-name-face fontified t) 8536 8538 (fontified t) 8538 8542 (face font-lock-constant-face fontified t) 8542 8544 (fontified t) 8544 8561 (face font-lock-type-face fontified t) 8561 8563 (fontified t) 8563 8570 (face font-lock-type-face fontified t) 8570 8596 (fontified t) 8596 8614 (face font-lock-variable-name-face fontified t) 8614 8616 (fontified t) 8616 8621 (face font-lock-keyword-face fontified t) 8621 8647 (fontified t) 8647 8663 (face font-lock-variable-name-face fontified t) 8663 8665 (fontified t) 8665 8669 (face font-lock-type-face fontified t) 8669 8691 (fontified t) 8691 8692 (face (rainbow-delimiters-depth-7-face) fontified t) 8692 8714 (fontified t) 8714 8719 (face font-lock-variable-name-face fontified t) 8719 8721 (fontified t) 8721 8725 (face font-lock-type-face fontified t) 8725 8743 (fontified t) 8743 8744 (face (rainbow-delimiters-depth-6-face) fontified t) 8744 8757 (fontified t) 8757 8758 (face (rainbow-delimiters-depth-5-face) fontified t) 8758 8772 (fontified t) 8772 8777 (face font-lock-variable-name-face fontified t) 8777 8779 (fontified t) 8779 8783 (face font-lock-type-face fontified t) 8783 8784 (face (rainbow-delimiters-depth-5-face) fontified t) 8784 8810 (face font-lock-string-face fontified t) 8810 8811 (face (rainbow-delimiters-depth-5-face) fontified t) 8811 8821 (fontified t) 8821 8822 (face (rainbow-delimiters-depth-4-face) fontified t) 8822 8823 (face (rainbow-delimiters-depth-3-face) fontified t) 8823 8834 (fontified t) 8834 8837 (face font-lock-keyword-face fontified t) 8837 8838 (fontified t) 8838 8855 (face font-lock-variable-name-face fontified t) 8855 8882 (fontified t) 8882 8883 (face (rainbow-delimiters-depth-3-face) fontified t) 8883 8884 (face rust-ampersand-face fontified t) 8884 8888 (face font-lock-constant-face fontified t) 8888 8890 (fontified t) 8890 8909 (face font-lock-type-face fontified t) 8909 8910 (fontified t) 8910 8911 (face (rainbow-delimiters-depth-4-face) fontified t) 8911 8924 (fontified t) 8924 8930 (face font-lock-variable-name-face fontified t) 8930 8932 (fontified t) 8932 8933 (face rust-ampersand-face fontified t) 8933 8940 (fontified t) 8940 8959 (fontified t) 8959 8971 (fontified t) 8971 8978 (face font-lock-variable-name-face fontified t) 8978 8980 (fontified t) 8980 8981 (face rust-ampersand-face fontified t) 8981 8982 (face (rainbow-delimiters-depth-5-face) fontified t) 8982 8999 (fontified t) 8999 9003 (face font-lock-constant-face fontified t) 9003 9005 (fontified t) 9005 9019 (face font-lock-type-face fontified t) 9019 9020 (fontified t) 9020 9021 (face (rainbow-delimiters-depth-6-face) fontified t) 9021 9042 (fontified t) 9042 9049 (face font-lock-variable-name-face fontified t) 9049 9062 (fontified t) 9062 9074 (fontified t) 9074 9082 (fontified t face font-lock-variable-name-face) 9082 9115 (fontified t) 9115 9116 (fontified t face (rainbow-delimiters-depth-7-face)) 9116 9117 (fontified t face (rainbow-delimiters-depth-7-face)) 9117 9119 (fontified t) 9119 9135 (fontified t) 9135 9136 (face (rainbow-delimiters-depth-6-face) fontified t) 9136 9149 (fontified t) 9149 9150 (face (rainbow-delimiters-depth-5-face) fontified t) 9150 9164 (fontified t) 9164 9166 (face font-lock-variable-name-face fontified t) 9166 9169 (face font-lock-variable-name-face fontified t) 9169 9171 (fontified t) 9171 9175 (face font-lock-type-face fontified t) 9175 9176 (face (rainbow-delimiters-depth-5-face) fontified t) 9176 9195 (face font-lock-string-face fontified t) 9195 9196 (face (rainbow-delimiters-depth-5-face) fontified t) 9196 9198 (fontified t) 9198 9206 (fontified t) 9206 9207 (face (rainbow-delimiters-depth-4-face) fontified t) 9207 9208 (face (rainbow-delimiters-depth-3-face) fontified t) 9208 9219 (fontified t) 9219 9222 (face font-lock-keyword-face fontified t) 9222 9223 (fontified t) 9223 9236 (face font-lock-variable-name-face fontified t) 9236 9239 (fontified t) 9239 9244 (face font-lock-constant-face fontified t) 9244 9246 (fontified t) 9246 9258 (face font-lock-type-face fontified t) 9258 9259 (fontified t) 9259 9260 (face (rainbow-delimiters-depth-3-face) fontified t) 9260 9273 (fontified t) 9273 9281 (face font-lock-variable-name-face fontified t) 9281 9283 (fontified t) 9283 9284 (face (rainbow-delimiters-depth-4-face) fontified t) 9284 9302 (fontified t) 9302 9303 (face (rainbow-delimiters-depth-4-face) fontified t) 9303 9317 (fontified t) 9317 9322 (face font-lock-variable-name-face fontified t) 9322 9324 (fontified t) 9324 9325 (face (rainbow-delimiters-depth-4-face) fontified t) 9325 9343 (fontified t) 9343 9344 (face (rainbow-delimiters-depth-4-face) fontified t) 9344 9354 (fontified t) 9354 9355 (face (rainbow-delimiters-depth-3-face) fontified t) 9355 9365 (fontified t) 9365 9368 (face font-lock-keyword-face fontified t) 9368 9369 (fontified t) 9369 9370 (face (rainbow-delimiters-depth-3-face) fontified t) 9370 9425 (fontified t) 9425 9426 (face (rainbow-delimiters-depth-3-face) fontified t) 9426 9441 (fontified t) 9441 9446 (face font-lock-constant-face fontified t) 9446 9482 (fontified t) 9482 9483 (face (rainbow-delimiters-depth-3-face) fontified t) 9483 9484 (face rust-ampersand-face fontified t) 9484 9492 (fontified t) 9492 9493 (face rust-ampersand-face fontified t) 9493 9506 (fontified t) 9506 9507 (face (rainbow-delimiters-depth-3-face) fontified t) 9507 9519 (fontified t) 9519 9521 (face font-lock-comment-delimiter-face fontified t) 9521 9551 (face font-lock-comment-face fontified t) 9551 9559 (fontified t) 9559 9562 (face font-lock-keyword-face fontified t) 9562 9563 (fontified t) 9563 9585 (face font-lock-variable-name-face fontified t) 9585 9629 (fontified t) 9629 9630 (face (rainbow-delimiters-depth-3-face) fontified t) 9630 9631 (face rust-ampersand-face fontified t) 9631 9635 (face font-lock-constant-face fontified t) 9635 9637 (fontified t) 9637 9661 (face font-lock-type-face fontified t) 9661 9662 (fontified t) 9662 9663 (face (rainbow-delimiters-depth-4-face) fontified t) 9663 9680 (fontified t) 9680 9685 (face font-lock-variable-name-face fontified t) 9685 9687 (fontified t) 9687 9691 (face font-lock-type-face fontified t) 9691 9692 (face (rainbow-delimiters-depth-5-face) fontified t) 9692 9716 (face font-lock-string-face fontified t) 9716 9717 (face (rainbow-delimiters-depth-5-face) fontified t) 9717 9735 (fontified t) 9735 9753 (face font-lock-variable-name-face fontified t) 9753 9755 (fontified t) 9755 9756 (face rust-ampersand-face fontified t) 9756 9757 (face (rainbow-delimiters-depth-5-face) fontified t) 9757 9778 (fontified t) 9778 9779 (face rust-ampersand-face fontified t) 9779 9826 (fontified t) 9826 9827 (face rust-ampersand-face fontified t) 9827 9873 (fontified t) 9873 9874 (face rust-ampersand-face fontified t) 9874 9915 (fontified t) 9915 9916 (face (rainbow-delimiters-depth-5-face) fontified t) 9916 9934 (fontified t) 9934 9954 (face font-lock-variable-name-face fontified t) 9954 9956 (fontified t) 9956 9957 (face rust-ampersand-face fontified t) 9957 9958 (face (rainbow-delimiters-depth-5-face) fontified t) 9958 9959 (face (rainbow-delimiters-depth-5-face) fontified t) 9959 9973 (fontified t) 9973 9974 (face (rainbow-delimiters-depth-4-face) fontified t) 9974 9975 (face (rainbow-delimiters-depth-3-face) fontified t) 9975 9994 (fontified t) 9994 9997 (face font-lock-keyword-face fontified t) 9997 9998 (fontified t) 9998 10013 (face font-lock-variable-name-face fontified t) 10013 10016 (fontified t) 10016 10017 (face (rainbow-delimiters-depth-3-face) fontified t) 10017 10030 (fontified t) 10030 10033 (face font-lock-keyword-face fontified t) 10033 10034 (fontified t) 10034 10040 (face font-lock-variable-name-face fontified t) 10040 10043 (fontified t) 10043 10047 (face font-lock-constant-face fontified t) 10047 10049 (fontified t) 10049 10062 (face font-lock-preprocessor-face fontified t) 10062 10063 (face (rainbow-delimiters-depth-4-face) fontified t) 10063 10076 (face font-lock-string-face fontified t) 10076 10077 (face (rainbow-delimiters-depth-4-face) fontified t) 10077 10114 (fontified t) 10114 10115 (face (rainbow-delimiters-depth-4-face) fontified t) 10115 10132 (fontified t) 10132 10133 (face rust-ampersand-face fontified t) 10133 10157 (fontified t) 10157 10158 (face rust-ampersand-face fontified t) 10158 10229 (fontified t) 10229 10233 (face font-lock-type-face fontified t) 10233 10234 (face (rainbow-delimiters-depth-5-face) fontified t) 10234 10241 (face font-lock-constant-face fontified t) 10241 10243 (fontified t) 10243 10250 (face font-lock-type-face fontified t) 10250 10252 (fontified t) 10252 10264 (face font-lock-type-face fontified t) 10264 10265 (face (rainbow-delimiters-depth-5-face) fontified t) 10265 10283 (fontified t) 10283 10284 (face rust-ampersand-face fontified t) 10284 10285 (face (rainbow-delimiters-depth-5-face) fontified t) 10285 10290 (face font-lock-constant-face fontified t) 10290 10292 (fontified t) 10292 10303 (face font-lock-type-face fontified t) 10303 10309 (fontified t) 10309 10310 (face (rainbow-delimiters-depth-6-face) fontified t) 10310 10311 (face (rainbow-delimiters-depth-6-face) fontified t) 10311 10313 (fontified t) 10313 10324 (face font-lock-type-face fontified t) 10324 10330 (fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10332 (face (rainbow-delimiters-depth-6-face) fontified t) 10332 10333 (face (rainbow-delimiters-depth-5-face) fontified t) 10333 10371 (fontified t) 10371 10372 (face (rainbow-delimiters-depth-4-face) fontified t) 10372 10381 (fontified t) 10381 10382 (face (rainbow-delimiters-depth-3-face) fontified t) 10382 10405 (fontified t) 10405 10408 (face font-lock-keyword-face fontified t) 10408 10409 (fontified t) 10409 10418 (face font-lock-variable-name-face fontified t) 10418 10421 (fontified t) 10421 10425 (face font-lock-preprocessor-face fontified t) 10425 10426 (face (rainbow-delimiters-depth-3-face) fontified t) 10426 10439 (fontified t) 10439 10447 (face font-lock-type-face fontified t) 10447 10448 (fontified t) 10448 10449 (face (rainbow-delimiters-depth-4-face) fontified t) 10449 10459 (fontified t) 10459 10466 (fontified t) 10466 10474 (face font-lock-variable-name-face fontified t) 10474 10476 (fontified t) 10476 10482 (face font-lock-constant-face fontified t) 10482 10484 (fontified t) 10484 10491 (face font-lock-type-face fontified t) 10491 10497 (fontified t) 10497 10498 (face (rainbow-delimiters-depth-5-face) fontified t) 10498 10499 (face (rainbow-delimiters-depth-5-face) fontified t) 10499 10501 (fontified t) 10501 10517 (fontified t) 10517 10525 (face font-lock-variable-name-face fontified t) 10525 10527 (fontified t) 10527 10533 (face font-lock-constant-face fontified t) 10533 10535 (fontified t) 10535 10545 (face font-lock-type-face fontified t) 10545 10559 (fontified t) 10559 10560 (face (rainbow-delimiters-depth-5-face) fontified t) 10560 10566 (face font-lock-constant-face fontified t) 10566 10568 (fontified t) 10568 10571 (face font-lock-type-face fontified t) 10571 10572 (face (rainbow-delimiters-depth-6-face) fontified t) 10572 10575 (fontified t) 10575 10576 (face (rainbow-delimiters-depth-6-face) fontified t) 10576 10577 (face (rainbow-delimiters-depth-5-face) fontified t) 10577 10595 (fontified t) 10595 10602 (face font-lock-variable-name-face fontified t) 10602 10604 (fontified t) 10604 10610 (face font-lock-constant-face fontified t) 10610 10612 (fontified t) 10612 10619 (face font-lock-type-face fontified t) 10619 10624 (fontified t) 10624 10625 (fontified t face (rainbow-delimiters-depth-5-face)) 10625 10638 (fontified t) 10638 10639 (fontified t face (rainbow-delimiters-depth-5-face)) 10639 10641 (fontified t) 10653 10654 (face (rainbow-delimiters-depth-4-face)) 10664 10665 (face (rainbow-delimiters-depth-3-face)) 10675 10678 (face font-lock-keyword-face) 10679 10692 (face font-lock-variable-name-face) 10709 10710 (face (rainbow-delimiters-depth-3-face)) 10710 10711 (face (rainbow-delimiters-depth-3-face)) 10715 10716 (face (rainbow-delimiters-depth-3-face)) 10716 10724 (face font-lock-type-face) 10732 10733 (face (rainbow-delimiters-depth-3-face)) 10743 10744 (face (rainbow-delimiters-depth-3-face)) 10744 10747 (face font-lock-type-face) 10747 10748 (face (rainbow-delimiters-depth-4-face)) 10749 10750 (face (rainbow-delimiters-depth-4-face)) 10750 10751 (face (rainbow-delimiters-depth-3-face)) 10751 10752 (face (rainbow-delimiters-depth-3-face)) 10752 10753 (face (rainbow-delimiters-depth-3-face)) 12307 12308 (syntax-table (1)) 12441 12442 (syntax-table (1)) 12464 12465 (syntax-table (1))) . 137) (undo-tree-id2568 . -7500) (undo-tree-id2569 . -7500) (undo-tree-id2570 . -6763) (undo-tree-id2571 . 12166) 7637 (t 26015 50480 226860 249000)) nil (26015 51038 368800 0) 0 nil])
([nil nil ((#("    event_loop.set_control_flow(ControlFlow::Poll);
" 0 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 43 (face font-lock-type-face fontified t) 43 45 (fontified t) 45 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) fontified t) 50 52 (fontified t)) . 17276) (undo-tree-id2559 . -52) (undo-tree-id2560 . -52) (undo-tree-id2561 . -35) (undo-tree-id2562 . -24) (undo-tree-id2563 . -19) (undo-tree-id2564 . -42) (undo-tree-id2565 . -52) (undo-tree-id2566 . -28) (undo-tree-id2567 . -27) 17328 (t 26015 50943 946312 589000)) nil (26015 51038 368793 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17440 . 17441) (nil fontified nil 17439 . 17441) (nil fontified nil 17438 . 17439) (nil fontified nil 17434 . 17438) (nil fontified nil 17432 . 17434) (nil fontified nil 17421 . 17432) (nil fontified nil 17420 . 17421) (nil fontified nil 17389 . 17420) (17389 . 17441)) nil (26015 51038 368770 0) 0 nil])
([nil nil ((137 . 19803) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!

    event_loop.set_control_flow(ControlFlow::Poll);

    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 74 (face font-lock-constant-face fontified t) 74 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 82 (face font-lock-type-face fontified t) 82 84 (fontified t) 84 95 (face font-lock-type-face fontified t) 95 97 (fontified t) 97 105 (face font-lock-type-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 132 (face font-lock-type-face fontified t) 132 134 (fontified t) 134 145 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) fontified t) 146 152 (fontified t) 152 162 (face font-lock-constant-face fontified t) 162 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-2-face) fontified t) 165 176 (face font-lock-type-face fontified t) 176 178 (fontified t) 178 187 (face font-lock-type-face fontified t) 187 188 (face (rainbow-delimiters-depth-2-face) fontified t) 188 194 (fontified t) 194 200 (face font-lock-constant-face fontified t) 200 202 (fontified t) 202 215 (face font-lock-type-face fontified t) 215 217 (fontified t) 217 225 (face font-lock-constant-face fontified t) 225 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-2-face) fontified t) 228 239 (face font-lock-type-face fontified t) 239 241 (fontified t) 241 248 (face font-lock-type-face fontified t) 248 249 (face (rainbow-delimiters-depth-2-face) fontified t) 249 251 (fontified t) 251 252 (face (rainbow-delimiters-depth-1-face) fontified t) 252 254 (fontified t) 254 257 (face font-lock-keyword-face fontified t) 257 258 (fontified t) 258 262 (face font-lock-constant-face fontified t) 262 264 (fontified t) 264 268 (face font-lock-constant-face fontified t) 268 270 (fontified t) 270 279 (face font-lock-type-face fontified t) 279 282 (fontified t) 282 285 (face font-lock-keyword-face fontified t) 285 286 (fontified t) 286 293 (face font-lock-constant-face fontified t) 293 295 (fontified t) 295 298 (face font-lock-keyword-face fontified t) 298 299 (fontified t) 299 305 (face font-lock-constant-face fontified t) 305 307 (fontified t) 307 310 (face font-lock-keyword-face fontified t) 310 311 (fontified t) 311 320 (face font-lock-constant-face fontified t) 320 322 (fontified t) 322 325 (face font-lock-keyword-face fontified t) 325 326 (fontified t) 326 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 339 (face font-lock-keyword-face fontified t) 339 340 (fontified t) 340 350 (face font-lock-constant-face fontified t) 350 352 (fontified t) 352 355 (face font-lock-keyword-face fontified t) 355 356 (fontified t) 356 361 (face font-lock-constant-face fontified t) 361 363 (fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 377 (face font-lock-comment-delimiter-face fontified t) 377 384 (face font-lock-comment-face fontified t) 384 387 (face font-lock-keyword-face fontified t) 387 388 (fontified t) 388 393 (face font-lock-constant-face fontified t) 393 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 403 (fontified t) 403 409 (face font-lock-type-face fontified t) 409 412 (fontified t) 412 415 (face font-lock-keyword-face fontified t) 415 416 (fontified t) 416 422 (face font-lock-constant-face fontified t) 422 427 (fontified t) 427 430 (face font-lock-keyword-face fontified t) 430 431 (fontified t) 431 439 (face font-lock-constant-face fontified t) 439 444 (fontified t) 444 447 (face font-lock-keyword-face fontified t) 447 448 (fontified t) 448 453 (face font-lock-constant-face fontified t) 453 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-1-face) fontified t) 456 465 (face font-lock-type-face fontified t) 465 467 (fontified t) 467 473 (face font-lock-type-face fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 477 (fontified t) 477 479 (face font-lock-keyword-face fontified t) 479 480 (fontified t) 480 502 (face font-lock-function-name-face fontified t) 502 503 (face (rainbow-delimiters-depth-1-face) fontified t) 503 508 (fontified t) 508 514 (face font-lock-variable-name-face fontified t) 514 516 (fontified t) 516 517 (face rust-ampersand-face fontified t) 517 521 (face font-lock-constant-face fontified t) 521 523 (fontified t) 523 529 (face font-lock-type-face fontified t) 529 535 (fontified t) 535 541 (face font-lock-variable-name-face fontified t) 541 543 (fontified t) 543 544 (face rust-ampersand-face fontified t) 544 548 (face font-lock-constant-face fontified t) 548 550 (fontified t) 550 564 (face font-lock-type-face fontified t) 564 570 (fontified t) 570 582 (face font-lock-variable-name-face fontified t) 582 584 (fontified t) 584 588 (face font-lock-constant-face fontified t) 588 590 (fontified t) 590 603 (face font-lock-type-face fontified t) 603 609 (fontified t) 609 621 (face font-lock-variable-name-face fontified t) 621 623 (fontified t) 623 629 (face font-lock-type-face fontified t) 629 630 (face (rainbow-delimiters-depth-2-face) fontified t) 630 634 (face font-lock-constant-face fontified t) 634 636 (fontified t) 636 649 (face font-lock-type-face fontified t) 649 650 (face (rainbow-delimiters-depth-2-face) fontified t) 650 656 (fontified t) 656 670 (face font-lock-variable-name-face fontified t) 670 672 (fontified t) 672 673 (face rust-ampersand-face fontified t) 673 674 (face (rainbow-delimiters-depth-2-face) fontified t) 674 678 (face font-lock-constant-face fontified t) 678 680 (fontified t) 680 698 (face font-lock-type-face fontified t) 698 699 (face (rainbow-delimiters-depth-2-face) fontified t) 699 705 (fontified t) 705 711 (face font-lock-variable-name-face fontified t) 711 713 (fontified t) 713 717 (face font-lock-constant-face fontified t) 717 719 (fontified t) 719 741 (face font-lock-type-face fontified t) 741 743 (fontified t) 743 744 (face (rainbow-delimiters-depth-1-face) fontified t) 744 746 (fontified t) 746 747 (syntax-table (1) fontified t) 747 748 (fontified t) 748 752 (face font-lock-constant-face fontified t) 752 754 (fontified t) 754 768 (face font-lock-type-face fontified t) 768 769 (fontified t) 769 770 (face (rainbow-delimiters-depth-1-face) fontified t) 770 775 (fontified t) 775 778 (face font-lock-keyword-face fontified t) 778 779 (fontified t) 779 785 (face font-lock-variable-name-face fontified t) 785 815 (fontified t) 815 816 (face (rainbow-delimiters-depth-2-face) fontified t) 816 822 (fontified t) 822 823 (face (rainbow-delimiters-depth-2-face) fontified t) 823 859 (fontified t) 859 860 (face (rainbow-delimiters-depth-2-face) fontified t) 860 861 (face rust-ampersand-face fontified t) 861 865 (face font-lock-constant-face fontified t) 865 867 (fontified t) 867 891 (face font-lock-type-face fontified t) 891 892 (fontified t) 892 893 (face (rainbow-delimiters-depth-3-face) fontified t) 893 902 (fontified t) 902 907 (face font-lock-variable-name-face fontified t) 907 909 (fontified t) 909 913 (face font-lock-type-face fontified t) 913 914 (face (rainbow-delimiters-depth-4-face) fontified t) 914 931 (face font-lock-string-face fontified t) 931 932 (face (rainbow-delimiters-depth-4-face) fontified t) 932 942 (fontified t) 942 948 (face font-lock-variable-name-face fontified t) 948 950 (fontified t) 950 954 (face font-lock-type-face fontified t) 954 955 (face (rainbow-delimiters-depth-4-face) fontified t) 955 961 (fontified t) 961 962 (face (rainbow-delimiters-depth-4-face) fontified t) 962 972 (fontified t) 972 978 (face font-lock-variable-name-face fontified t) 978 980 (fontified t) 980 984 (face font-lock-constant-face fontified t) 984 986 (fontified t) 986 997 (face font-lock-type-face fontified t) 997 998 (fontified t) 998 999 (face (rainbow-delimiters-depth-4-face) fontified t) 999 1012 (fontified t) 1012 1018 (face font-lock-variable-name-face fontified t) 1018 1020 (fontified t) 1020 1021 (face rust-ampersand-face fontified t) 1021 1041 (fontified t) 1041 1052 (face font-lock-variable-name-face fontified t) 1052 1054 (fontified t) 1054 1063 (face font-lock-string-face fontified t) 1063 1077 (fontified t) 1077 1084 (face font-lock-variable-name-face fontified t) 1084 1110 (fontified t) 1110 1111 (face (rainbow-delimiters-depth-4-face) fontified t) 1111 1121 (fontified t) 1121 1129 (face font-lock-variable-name-face fontified t) 1129 1131 (fontified t) 1131 1135 (face font-lock-type-face fontified t) 1135 1136 (face (rainbow-delimiters-depth-4-face) fontified t) 1136 1140 (face font-lock-constant-face fontified t) 1140 1142 (fontified t) 1142 1155 (face font-lock-type-face fontified t) 1155 1156 (fontified t) 1156 1157 (face (rainbow-delimiters-depth-5-face) fontified t) 1157 1170 (fontified t) 1170 1176 (face font-lock-variable-name-face fontified t) 1176 1178 (fontified t) 1178 1179 (face rust-ampersand-face fontified t) 1179 1199 (fontified t) 1199 1210 (face font-lock-variable-name-face fontified t) 1210 1212 (fontified t) 1212 1221 (face font-lock-string-face fontified t) 1221 1235 (fontified t) 1235 1242 (face font-lock-variable-name-face fontified t) 1242 1244 (fontified t) 1244 1245 (face rust-ampersand-face fontified t) 1245 1246 (face (rainbow-delimiters-depth-6-face) fontified t) 1246 1250 (face font-lock-type-face fontified t) 1250 1251 (face (rainbow-delimiters-depth-7-face) fontified t) 1251 1255 (face font-lock-constant-face fontified t) 1255 1257 (fontified t) 1257 1273 (face font-lock-type-face fontified t) 1273 1274 (fontified t) 1274 1275 (face (rainbow-delimiters-depth-8-face) fontified t) 1275 1292 (fontified t) 1292 1298 (face font-lock-variable-name-face fontified t) 1298 1330 (fontified t) 1330 1335 (face font-lock-variable-name-face fontified t) 1335 1337 (fontified t) 1337 1341 (face font-lock-type-face fontified t) 1341 1342 (face (rainbow-delimiters-depth-9-face) fontified t) 1342 1346 (face font-lock-constant-face fontified t) 1346 1348 (fontified t) 1348 1358 (face font-lock-type-face fontified t) 1358 1359 (fontified t) 1359 1360 (face (rainbow-delimiters-depth-1-face) fontified t) 1360 1381 (fontified t) 1381 1386 (face font-lock-variable-name-face fontified t) 1386 1388 (fontified t) 1388 1392 (face font-lock-constant-face fontified t) 1392 1394 (fontified t) 1394 1408 (face font-lock-type-face fontified t) 1408 1410 (fontified t) 1410 1417 (face font-lock-type-face fontified t) 1417 1439 (fontified t) 1439 1444 (face font-lock-variable-name-face fontified t) 1444 1446 (fontified t) 1446 1450 (face font-lock-constant-face fontified t) 1450 1452 (fontified t) 1452 1466 (face font-lock-type-face fontified t) 1466 1468 (fontified t) 1468 1475 (face font-lock-type-face fontified t) 1475 1493 (fontified t) 1493 1494 (face (rainbow-delimiters-depth-1-face) fontified t) 1494 1495 (face (rainbow-delimiters-depth-9-face) fontified t) 1495 1500 (fontified t) 1500 1513 (fontified t) 1513 1523 (face font-lock-variable-name-face fontified t) 1523 1525 (fontified t) 1525 1529 (face font-lock-constant-face fontified t) 1529 1531 (fontified t) 1531 1542 (face font-lock-type-face fontified t) 1542 1544 (fontified t) 1544 1547 (face font-lock-type-face fontified t) 1547 1549 (fontified t) 1549 1561 (fontified t) 1561 1562 (face (rainbow-delimiters-depth-8-face) fontified t) 1562 1563 (face (rainbow-delimiters-depth-7-face) fontified t) 1563 1564 (face (rainbow-delimiters-depth-6-face) fontified t) 1564 1574 (fontified t) 1574 1575 (face (rainbow-delimiters-depth-5-face) fontified t) 1575 1576 (face (rainbow-delimiters-depth-4-face) fontified t) 1576 1586 (fontified t) 1586 1595 (face font-lock-variable-name-face fontified t) 1595 1597 (fontified t) 1597 1601 (face font-lock-constant-face fontified t) 1601 1603 (fontified t) 1603 1617 (face font-lock-type-face fontified t) 1617 1618 (fontified t) 1618 1619 (face (rainbow-delimiters-depth-4-face) fontified t) 1619 1632 (fontified t) 1632 1640 (face font-lock-variable-name-face fontified t) 1640 1642 (fontified t) 1642 1646 (face font-lock-constant-face fontified t) 1646 1648 (fontified t) 1648 1665 (face font-lock-type-face fontified t) 1665 1667 (fontified t) 1667 1679 (face font-lock-type-face fontified t) 1679 1693 (fontified t) 1693 1711 (face font-lock-variable-name-face fontified t) 1711 1713 (fontified t) 1713 1717 (face font-lock-type-face fontified t) 1717 1731 (fontified t) 1731 1741 (face font-lock-variable-name-face fontified t) 1741 1743 (fontified t) 1743 1747 (face font-lock-constant-face fontified t) 1747 1749 (fontified t) 1749 1758 (face font-lock-type-face fontified t) 1758 1760 (fontified t) 1760 1763 (face font-lock-type-face fontified t) 1763 1777 (fontified t) 1777 1786 (face font-lock-variable-name-face fontified t) 1786 1788 (fontified t) 1788 1792 (face font-lock-type-face fontified t) 1792 1793 (face (rainbow-delimiters-depth-5-face) fontified t) 1793 1797 (face font-lock-constant-face fontified t) 1797 1799 (fontified t) 1799 1803 (face font-lock-type-face fontified t) 1803 1805 (fontified t) 1805 1809 (face font-lock-type-face fontified t) 1809 1810 (face (rainbow-delimiters-depth-5-face) fontified t) 1810 1824 (fontified t) 1824 1827 (face font-lock-comment-delimiter-face fontified t) 1827 1909 (face font-lock-comment-face fontified t) 1909 1921 (fontified t) 1921 1933 (face font-lock-variable-name-face fontified t) 1933 1935 (fontified t) 1935 1939 (face font-lock-constant-face fontified t) 1939 1941 (fontified t) 1941 1952 (face font-lock-type-face fontified t) 1952 1954 (fontified t) 1954 1958 (face font-lock-type-face fontified t) 1958 1972 (fontified t) 1972 1975 (face font-lock-comment-delimiter-face fontified t) 1975 2013 (face font-lock-comment-face fontified t) 2013 2025 (fontified t) 2025 2040 (face font-lock-variable-name-face fontified t) 2040 2042 (fontified t) 2042 2047 (face font-lock-keyword-face fontified t) 2047 2061 (fontified t) 2061 2064 (face font-lock-comment-delimiter-face fontified t) 2064 2110 (face font-lock-comment-face fontified t) 2110 2122 (fontified t) 2122 2134 (face font-lock-variable-name-face fontified t) 2134 2136 (fontified t) 2136 2141 (face font-lock-keyword-face fontified t) 2141 2151 (fontified t) 2151 2152 (face (rainbow-delimiters-depth-4-face) fontified t) 2152 2162 (fontified t) 2162 2175 (face font-lock-variable-name-face fontified t) 2175 2193 (fontified t) 2193 2194 (face (rainbow-delimiters-depth-4-face) fontified t) 2194 2203 (fontified t) 2203 2207 (face font-lock-constant-face fontified t) 2207 2209 (fontified t) 2209 2226 (face font-lock-type-face fontified t) 2226 2227 (fontified t) 2227 2228 (face (rainbow-delimiters-depth-5-face) fontified t) 2228 2261 (fontified t) 2261 2280 (face font-lock-variable-name-face fontified t) 2280 2282 (fontified t) 2282 2286 (face font-lock-keyword-face fontified t) 2286 2300 (fontified t) 2300 2313 (face font-lock-variable-name-face fontified t) 2313 2315 (fontified t) 2315 2319 (face font-lock-constant-face fontified t) 2319 2321 (fontified t) 2321 2336 (face font-lock-type-face fontified t) 2336 2338 (fontified t) 2338 2342 (face font-lock-type-face fontified t) 2342 2356 (fontified t) 2356 2363 (face font-lock-variable-name-face fontified t) 2363 2365 (fontified t) 2365 2369 (face font-lock-constant-face fontified t) 2369 2371 (fontified t) 2371 2383 (face font-lock-type-face fontified t) 2383 2392 (fontified t) 2392 2393 (face (rainbow-delimiters-depth-6-face) fontified t) 2393 2394 (face (rainbow-delimiters-depth-6-face) fontified t) 2394 2408 (fontified t) 2408 2412 (face font-lock-variable-name-face fontified t) 2412 2414 (fontified t) 2414 2418 (face font-lock-constant-face fontified t) 2418 2420 (fontified t) 2420 2434 (face font-lock-type-face fontified t) 2434 2443 (fontified t) 2443 2444 (face (rainbow-delimiters-depth-6-face) fontified t) 2444 2445 (face (rainbow-delimiters-depth-6-face) fontified t) 2445 2455 (fontified t) 2455 2456 (face (rainbow-delimiters-depth-5-face) fontified t) 2456 2457 (face (rainbow-delimiters-depth-4-face) fontified t) 2457 2467 (fontified t) 2467 2478 (face font-lock-variable-name-face fontified t) 2478 2480 (fontified t) 2480 2484 (face font-lock-constant-face fontified t) 2484 2486 (fontified t) 2486 2502 (face font-lock-type-face fontified t) 2502 2503 (fontified t) 2503 2504 (face (rainbow-delimiters-depth-4-face) fontified t) 2504 2517 (fontified t) 2517 2522 (face font-lock-variable-name-face fontified t) 2522 2539 (fontified t) 2539 2543 (face font-lock-variable-name-face fontified t) 2543 2561 (fontified t) 2561 2586 (face font-lock-variable-name-face fontified t) 2586 2588 (fontified t) 2588 2593 (face font-lock-keyword-face fontified t) 2593 2603 (fontified t) 2603 2604 (face (rainbow-delimiters-depth-4-face) fontified t) 2604 2614 (fontified t) 2614 2623 (face font-lock-variable-name-face fontified t) 2623 2625 (fontified t) 2625 2629 (face font-lock-type-face fontified t) 2629 2635 (fontified t) 2635 2636 (face (rainbow-delimiters-depth-3-face) fontified t) 2636 2637 (face (rainbow-delimiters-depth-2-face) fontified t) 2637 2638 (fontified t) 2638 2639 (face (rainbow-delimiters-depth-1-face) fontified t) 2639 2642 (fontified t) 2642 2648 (face font-lock-keyword-face fontified t) 2648 2649 (fontified t) 2649 2654 (face font-lock-type-face fontified t) 2654 2655 (fontified t) 2655 2656 (face (rainbow-delimiters-depth-1-face) fontified t) 2656 2661 (fontified t) 2661 2668 (face font-lock-variable-name-face fontified t) 2668 2670 (fontified t) 2670 2674 (face font-lock-constant-face fontified t) 2674 2676 (fontified t) 2676 2683 (face font-lock-type-face fontified t) 2683 2689 (fontified t) 2689 2695 (face font-lock-variable-name-face fontified t) 2695 2697 (fontified t) 2697 2701 (face font-lock-constant-face fontified t) 2701 2703 (fontified t) 2703 2709 (face font-lock-type-face fontified t) 2709 2715 (fontified t) 2715 2720 (face font-lock-variable-name-face fontified t) 2720 2722 (fontified t) 2722 2726 (face font-lock-constant-face fontified t) 2726 2728 (fontified t) 2728 2733 (face font-lock-type-face fontified t) 2733 2739 (fontified t) 2739 2745 (face font-lock-variable-name-face fontified t) 2745 2747 (fontified t) 2747 2751 (face font-lock-constant-face fontified t) 2751 2753 (fontified t) 2753 2773 (face font-lock-type-face fontified t) 2773 2779 (fontified t) 2779 2783 (face font-lock-variable-name-face fontified t) 2783 2785 (fontified t) 2785 2790 (face font-lock-constant-face fontified t) 2790 2792 (fontified t) 2792 2795 (face font-lock-constant-face fontified t) 2795 2797 (fontified t) 2797 2809 (face font-lock-type-face fontified t) 2809 2810 (face (rainbow-delimiters-depth-2-face) fontified t) 2810 2813 (face font-lock-type-face fontified t) 2813 2814 (face (rainbow-delimiters-depth-2-face) fontified t) 2814 2820 (fontified t) 2820 2823 (face font-lock-comment-delimiter-face fontified t) 2823 2872 (face font-lock-comment-face fontified t) 2872 2876 (fontified t) 2876 2879 (face font-lock-comment-delimiter-face fontified t) 2879 2928 (face font-lock-comment-face fontified t) 2928 2932 (fontified t) 2932 2935 (face font-lock-comment-delimiter-face fontified t) 2935 2980 (face font-lock-comment-face fontified t) 2980 2984 (fontified t) 2984 2990 (face font-lock-variable-name-face fontified t) 2990 2992 (fontified t) 2992 2998 (face font-lock-type-face fontified t) 2998 3004 (fontified t) 3004 3019 (face font-lock-variable-name-face fontified t) 3019 3021 (fontified t) 3021 3025 (face font-lock-constant-face fontified t) 3025 3027 (fontified t) 3027 3041 (face font-lock-type-face fontified t) 3041 3047 (fontified t) 3047 3049 (face font-lock-variable-name-face fontified t) 3049 3056 (face font-lock-variable-name-face fontified t) 3056 3058 (fontified t) 3058 3063 (face font-lock-constant-face fontified t) 3063 3065 (fontified t) 3065 3070 (face font-lock-type-face fontified t) 3070 3072 (fontified t) 3072 3078 (fontified t) 3078 3103 (face font-lock-variable-name-face fontified t) 3103 3105 (fontified t) 3105 3109 (face font-lock-constant-face fontified t) 3109 3111 (fontified t) 3111 3126 (face font-lock-type-face fontified t) 3126 3132 (fontified t) 3132 3145 (face font-lock-variable-name-face fontified t) 3145 3147 (fontified t) 3147 3154 (face font-lock-type-face fontified t) 3154 3166 (fontified t) 3166 3172 (face font-lock-variable-name-face fontified t) 3172 3174 (fontified t) 3174 3180 (face font-lock-constant-face fontified t) 3180 3182 (fontified t) 3182 3188 (face font-lock-type-face fontified t) 3188 3190 (fontified t) 3190 3193 (face font-lock-comment-delimiter-face fontified t) 3193 3202 (face font-lock-comment-face fontified t) 3202 3206 (fontified t) 3206 3216 (face font-lock-variable-name-face fontified t) 3216 3218 (fontified t) 3218 3224 (face font-lock-constant-face fontified t) 3224 3226 (fontified t) 3226 3236 (face font-lock-type-face fontified t) 3236 3238 (fontified t) 3238 3241 (face font-lock-comment-delimiter-face fontified t) 3241 3246 (face font-lock-comment-face fontified t) 3246 3250 (fontified t) 3250 3267 (face font-lock-variable-name-face fontified t) 3267 3269 (fontified t) 3269 3275 (face font-lock-constant-face fontified t) 3275 3277 (fontified t) 3277 3293 (face font-lock-type-face fontified t) 3293 3295 (fontified t) 3295 3298 (face font-lock-comment-delimiter-face fontified t) 3298 3307 (face font-lock-comment-face fontified t) 3307 3311 (fontified t) 3311 3314 (face font-lock-comment-delimiter-face fontified t) 3314 3318 (face font-lock-comment-face fontified t) 3318 3322 (fontified t) 3322 3325 (face font-lock-comment-delimiter-face fontified t) 3325 3330 (face font-lock-comment-face fontified t) 3330 3334 (fontified t) 3334 3347 (face font-lock-variable-name-face fontified t) 3347 3349 (fontified t) 3349 3353 (face font-lock-type-face fontified t) 3353 3360 (fontified t) 3360 3374 (face font-lock-variable-name-face fontified t) 3374 3376 (fontified t) 3376 3389 (face font-lock-type-face fontified t) 3389 3395 (fontified t) 3395 3408 (face font-lock-variable-name-face fontified t) 3408 3410 (fontified t) 3410 3414 (face font-lock-constant-face fontified t) 3414 3416 (fontified t) 3416 3422 (face font-lock-type-face fontified t) 3422 3428 (fontified t) 3428 3445 (face font-lock-variable-name-face fontified t) 3445 3447 (fontified t) 3447 3451 (face font-lock-constant-face fontified t) 3451 3453 (fontified t) 3453 3462 (face font-lock-type-face fontified t) 3462 3469 (fontified t) 3469 3482 (face font-lock-variable-name-face fontified t) 3482 3484 (fontified t) 3484 3496 (face font-lock-type-face fontified t) 3496 3502 (fontified t) 3502 3514 (face font-lock-variable-name-face fontified t) 3514 3516 (fontified t) 3516 3520 (face font-lock-constant-face fontified t) 3520 3522 (fontified t) 3522 3528 (face font-lock-type-face fontified t) 3528 3534 (fontified t) 3534 3550 (face font-lock-variable-name-face fontified t) 3550 3552 (fontified t) 3552 3556 (face font-lock-constant-face fontified t) 3556 3558 (fontified t) 3558 3567 (face font-lock-type-face fontified t) 3567 3573 (fontified t) 3573 3594 (face font-lock-variable-name-face fontified t) 3594 3596 (fontified t) 3596 3600 (face font-lock-constant-face fontified t) 3600 3602 (fontified t) 3602 3616 (face font-lock-type-face fontified t) 3616 3623 (fontified t) 3623 3632 (face font-lock-variable-name-face fontified t) 3632 3634 (fontified t) 3634 3637 (face font-lock-type-face fontified t) 3637 3638 (face (rainbow-delimiters-depth-2-face) fontified t) 3638 3646 (face font-lock-type-face fontified t) 3646 3647 (face (rainbow-delimiters-depth-2-face) fontified t) 3647 3653 (fontified t) 3653 3668 (face font-lock-variable-name-face fontified t) 3668 3670 (fontified t) 3670 3674 (face font-lock-constant-face fontified t) 3674 3676 (fontified t) 3676 3682 (face font-lock-type-face fontified t) 3682 3691 (fontified t) 3691 3692 (face (rainbow-delimiters-depth-1-face) fontified t) 3692 3694 (fontified t) 3694 3698 (face font-lock-keyword-face fontified t) 3698 3699 (fontified t) 3699 3704 (face font-lock-type-face fontified t) 3704 3705 (fontified t) 3705 3706 (face (rainbow-delimiters-depth-1-face) fontified t) 3706 3711 (fontified t) 3711 3714 (face font-lock-comment-delimiter-face fontified t) 3714 3766 (face font-lock-comment-face fontified t) 3766 3770 (fontified t) 3770 3775 (face font-lock-keyword-face fontified t) 3775 3776 (fontified t) 3776 3778 (face font-lock-keyword-face fontified t) 3778 3779 (fontified t) 3779 3782 (face font-lock-function-name-face fontified t) 3782 3783 (face (rainbow-delimiters-depth-2-face) fontified t) 3783 3789 (face font-lock-variable-name-face fontified t) 3789 3791 (fontified t) 3791 3797 (face font-lock-type-face fontified t) 3797 3798 (face (rainbow-delimiters-depth-2-face) fontified t) 3798 3800 (fontified t) 3800 3801 (syntax-table (1) fontified t) 3801 3802 (fontified t) 3802 3806 (face font-lock-type-face fontified t) 3806 3807 (fontified t) 3807 3808 (face (rainbow-delimiters-depth-2-face) fontified t) 3808 3817 (fontified t) 3817 3820 (face font-lock-keyword-face fontified t) 3820 3821 (fontified t) 3821 3825 (face font-lock-variable-name-face fontified t) 3825 3845 (fontified t) 3845 3846 (face (rainbow-delimiters-depth-3-face) fontified t) 3846 3847 (face (rainbow-delimiters-depth-3-face) fontified t) 3847 3858 (fontified t) 3858 3861 (face font-lock-comment-delimiter-face fontified t) 3861 3897 (face font-lock-comment-face fontified t) 3897 3905 (fontified t) 3905 3908 (face font-lock-comment-delimiter-face fontified t) 3908 3923 (face font-lock-comment-face fontified t) 3923 3924 (face font-lock-comment-face syntax-table (1) fontified t) 3924 3964 (face font-lock-comment-face fontified t) 3964 3972 (fontified t) 3972 3975 (face font-lock-keyword-face fontified t) 3975 3976 (fontified t) 3976 3984 (face font-lock-variable-name-face fontified t) 3984 3987 (fontified t) 3987 3991 (face font-lock-constant-face fontified t) 3991 3993 (fontified t) 3993 4001 (face font-lock-type-face fontified t) 4001 4006 (fontified t) 4006 4007 (face (rainbow-delimiters-depth-3-face) fontified t) 4007 4011 (face font-lock-constant-face fontified t) 4011 4013 (fontified t) 4013 4031 (face font-lock-type-face fontified t) 4031 4032 (fontified t) 4032 4033 (face (rainbow-delimiters-depth-4-face) fontified t) 4033 4046 (fontified t) 4046 4054 (face font-lock-variable-name-face fontified t) 4054 4056 (fontified t) 4056 4060 (face font-lock-constant-face fontified t) 4060 4062 (fontified t) 4062 4070 (face font-lock-type-face fontified t) 4070 4075 (fontified t) 4075 4076 (face (rainbow-delimiters-depth-5-face) fontified t) 4076 4077 (face (rainbow-delimiters-depth-5-face) fontified t) 4077 4093 (fontified t) 4093 4100 (face font-lock-type-face fontified t) 4100 4109 (fontified t) 4109 4110 (face (rainbow-delimiters-depth-5-face) fontified t) 4110 4111 (face (rainbow-delimiters-depth-5-face) fontified t) 4111 4120 (fontified t) 4120 4121 (face (rainbow-delimiters-depth-4-face) fontified t) 4121 4122 (face (rainbow-delimiters-depth-3-face) fontified t) 4122 4141 (fontified t) 4141 4144 (face font-lock-comment-delimiter-face fontified t) 4144 4153 (face font-lock-comment-face fontified t) 4153 4161 (fontified t) 4161 4163 (face font-lock-comment-delimiter-face fontified t) 4163 4164 (face font-lock-comment-face fontified t) 4164 4172 (fontified t) 4172 4175 (face font-lock-comment-delimiter-face fontified t) 4175 4240 (face font-lock-comment-face fontified t) 4240 4248 (fontified t) 4248 4251 (face font-lock-comment-delimiter-face fontified t) 4251 4298 (face font-lock-comment-face fontified t) 4298 4306 (fontified t) 4306 4309 (face font-lock-keyword-face fontified t) 4309 4310 (fontified t) 4310 4317 (face font-lock-variable-name-face fontified t) 4317 4320 (fontified t) 4320 4326 (face rust-unsafe fontified t) 4326 4327 (fontified t) 4327 4328 (face (rainbow-delimiters-depth-3-face) fontified t) 4328 4352 (fontified t) 4352 4353 (face (rainbow-delimiters-depth-4-face) fontified t) 4353 4354 (face rust-ampersand-face fontified t) 4354 4360 (fontified t) 4360 4361 (face (rainbow-delimiters-depth-4-face) fontified t) 4361 4362 (fontified t) 4362 4363 (face (rainbow-delimiters-depth-3-face) fontified t) 4363 4370 (fontified t) 4370 4371 (face (rainbow-delimiters-depth-3-face) fontified t) 4371 4372 (face (rainbow-delimiters-depth-3-face) fontified t) 4372 4383 (fontified t) 4383 4386 (face font-lock-keyword-face fontified t) 4386 4387 (fontified t) 4387 4394 (face font-lock-variable-name-face fontified t) 4394 4421 (fontified t) 4421 4422 (face (rainbow-delimiters-depth-3-face) fontified t) 4422 4435 (fontified t) 4435 4436 (face rust-ampersand-face fontified t) 4436 4440 (face font-lock-constant-face fontified t) 4440 4442 (fontified t) 4442 4463 (face font-lock-type-face fontified t) 4463 4464 (fontified t) 4464 4465 (face (rainbow-delimiters-depth-4-face) fontified t) 4465 4482 (fontified t) 4482 4498 (face font-lock-variable-name-face fontified t) 4498 4500 (fontified t) 4500 4504 (face font-lock-constant-face fontified t) 4504 4506 (fontified t) 4506 4521 (face font-lock-type-face fontified t) 4521 4530 (fontified t) 4530 4531 (face (rainbow-delimiters-depth-5-face) fontified t) 4531 4532 (face (rainbow-delimiters-depth-5-face) fontified t) 4532 4550 (fontified t) 4550 4568 (face font-lock-variable-name-face fontified t) 4568 4570 (fontified t) 4570 4572 (face font-lock-type-face fontified t) 4572 4574 (fontified t face font-lock-type-face) 4574 4575 (fontified t face (rainbow-delimiters-depth-5-face)) 4575 4576 (fontified t face rust-ampersand-face) 4576 4583 (fontified t) 4583 4584 (fontified t face (rainbow-delimiters-depth-5-face)) 4584 4586 (fontified t) 4586 4602 (fontified t) 4602 4624 (face font-lock-variable-name-face fontified t) 4624 4626 (fontified t) 4626 4631 (face font-lock-keyword-face fontified t) 4631 4645 (fontified t) 4645 4646 (face (rainbow-delimiters-depth-4-face) fontified t) 4646 4656 (fontified t) 4656 4657 (face (rainbow-delimiters-depth-3-face) fontified t) 4657 4658 (fontified t) 4658 4663 (face font-lock-keyword-face fontified t) 4663 4670 (fontified t) 4670 4671 (face (rainbow-delimiters-depth-3-face) fontified t) 4671 4672 (face (rainbow-delimiters-depth-3-face) fontified t) 4672 4683 (fontified t) 4683 4686 (face font-lock-keyword-face fontified t) 4686 4687 (fontified t) 4687 4688 (face (rainbow-delimiters-depth-3-face) fontified t) 4688 4701 (fontified t) 4701 4702 (face (rainbow-delimiters-depth-3-face) fontified t) 4702 4727 (fontified t) 4727 4728 (face (rainbow-delimiters-depth-3-face) fontified t) 4728 4741 (fontified t) 4741 4742 (face rust-ampersand-face fontified t) 4742 4746 (face font-lock-constant-face fontified t) 4746 4748 (fontified t) 4748 4764 (face font-lock-type-face fontified t) 4764 4765 (fontified t) 4765 4766 (face (rainbow-delimiters-depth-4-face) fontified t) 4766 4783 (fontified t) 4783 4791 (face font-lock-variable-name-face fontified t) 4791 4793 (fontified t) 4793 4797 (face font-lock-constant-face fontified t) 4797 4799 (fontified t) 4799 4807 (face font-lock-type-face fontified t) 4807 4814 (fontified t) 4814 4815 (face (rainbow-delimiters-depth-5-face) fontified t) 4815 4816 (face (rainbow-delimiters-depth-5-face) fontified t) 4816 4834 (fontified t) 4834 4837 (face font-lock-comment-delimiter-face fontified t) 4837 4889 (face font-lock-comment-face fontified t) 4889 4905 (fontified t) 4905 4908 (face font-lock-comment-delimiter-face fontified t) 4908 4964 (face font-lock-comment-face fontified t) 4964 4980 (fontified t) 4980 4986 (face font-lock-variable-name-face fontified t) 4986 4988 (fontified t) 4988 4990 (face font-lock-keyword-face fontified t) 4990 4991 (fontified t) 4991 4995 (face font-lock-preprocessor-face fontified t) 4995 4996 (face (rainbow-delimiters-depth-5-face) fontified t) 4996 5010 (fontified t) 5010 5018 (face font-lock-string-face fontified t) 5018 5019 (face (rainbow-delimiters-depth-5-face) fontified t) 5019 5020 (fontified t) 5020 5021 (face (rainbow-delimiters-depth-5-face) fontified t) 5021 5042 (fontified t) 5042 5046 (face font-lock-constant-face fontified t) 5046 5048 (fontified t) 5048 5054 (face font-lock-type-face fontified t) 5054 5081 (fontified t) 5081 5082 (face (rainbow-delimiters-depth-6-face) fontified t) 5082 5083 (face (rainbow-delimiters-depth-6-face) fontified t) 5083 5100 (fontified t) 5100 5101 (face (rainbow-delimiters-depth-5-face) fontified t) 5101 5102 (fontified t) 5102 5106 (face font-lock-keyword-face fontified t) 5106 5107 (fontified t) 5107 5108 (face (rainbow-delimiters-depth-5-face) fontified t) 5108 5129 (fontified t) 5129 5133 (face font-lock-constant-face fontified t) 5133 5135 (fontified t) 5135 5141 (face font-lock-type-face fontified t) 5141 5150 (fontified t) 5150 5151 (face (rainbow-delimiters-depth-6-face) fontified t) 5151 5152 (face (rainbow-delimiters-depth-6-face) fontified t) 5152 5169 (fontified t) 5169 5170 (face (rainbow-delimiters-depth-5-face) fontified t) 5170 5188 (fontified t) 5188 5193 (face font-lock-variable-name-face fontified t) 5193 5195 (fontified t) 5195 5199 (face font-lock-type-face fontified t) 5199 5213 (fontified t) 5213 5214 (face (rainbow-delimiters-depth-4-face) fontified t) 5214 5228 (fontified t) 5228 5232 (face font-lock-type-face fontified t) 5232 5234 (fontified t) 5234 5237 (face font-lock-comment-delimiter-face fontified t) 5237 5248 (face font-lock-comment-face fontified t) 5248 5256 (fontified t) 5256 5257 (face (rainbow-delimiters-depth-3-face) fontified t) 5257 5258 (fontified t) 5258 5263 (face font-lock-keyword-face fontified t) 5263 5270 (fontified t) 5270 5271 (face (rainbow-delimiters-depth-3-face) fontified t) 5271 5272 (face (rainbow-delimiters-depth-3-face) fontified t) 5272 5284 (fontified t) 5284 5287 (face font-lock-keyword-face fontified t) 5287 5288 (fontified t) 5288 5300 (face font-lock-variable-name-face fontified t) 5300 5327 (fontified t) 5327 5328 (face (rainbow-delimiters-depth-3-face) fontified t) 5328 5329 (face rust-ampersand-face fontified t) 5329 5336 (fontified t) 5336 5337 (face (rainbow-delimiters-depth-3-face) fontified t) 5337 5347 (fontified t) 5347 5350 (face font-lock-comment-delimiter-face fontified t) 5350 5430 (face font-lock-comment-face fontified t) 5430 5438 (fontified t) 5438 5441 (face font-lock-comment-delimiter-face fontified t) 5441 5521 (face font-lock-comment-face fontified t) 5521 5529 (fontified t) 5529 5532 (face font-lock-comment-delimiter-face fontified t) 5532 5606 (face font-lock-comment-face fontified t) 5606 5614 (fontified t) 5614 5617 (face font-lock-keyword-face fontified t) 5617 5618 (fontified t) 5618 5632 (face font-lock-variable-name-face fontified t) 5632 5660 (fontified t) 5660 5661 (face (rainbow-delimiters-depth-3-face) fontified t) 5661 5662 (face (rainbow-delimiters-depth-3-face) fontified t) 5662 5682 (fontified t) 5682 5683 (face (rainbow-delimiters-depth-3-face) fontified t) 5683 5684 (face (rainbow-delimiters-depth-3-face) fontified t) 5684 5704 (fontified t) 5704 5705 (face (rainbow-delimiters-depth-3-face) fontified t) 5705 5718 (fontified t) 5718 5719 (face (rainbow-delimiters-depth-4-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-4-face) fontified t) 5720 5721 (face (rainbow-delimiters-depth-3-face) fontified t) 5721 5739 (fontified t) 5739 5740 (face (rainbow-delimiters-depth-3-face) fontified t) 5740 5741 (face (rainbow-delimiters-depth-3-face) fontified t) 5741 5764 (fontified t) 5764 5765 (face (rainbow-delimiters-depth-3-face) fontified t) 5765 5785 (fontified t) 5785 5786 (face (rainbow-delimiters-depth-4-face) fontified t) 5786 5787 (fontified t) 5787 5788 (face (rainbow-delimiters-depth-4-face) fontified t) 5788 5789 (face (rainbow-delimiters-depth-3-face) fontified t) 5789 5799 (fontified t) 5799 5802 (face font-lock-keyword-face fontified t) 5802 5803 (fontified t) 5803 5809 (face font-lock-variable-name-face fontified t) 5809 5812 (fontified t) 5812 5816 (face font-lock-constant-face fontified t) 5816 5818 (fontified t) 5818 5838 (face font-lock-type-face fontified t) 5838 5839 (fontified t) 5839 5840 (face (rainbow-delimiters-depth-3-face) fontified t) 5840 5853 (fontified t) 5853 5858 (face font-lock-variable-name-face fontified t) 5858 5860 (fontified t) 5860 5864 (face font-lock-constant-face fontified t) 5864 5866 (fontified t) 5866 5879 (face font-lock-type-face fontified t) 5879 5881 (fontified t) 5881 5898 (face font-lock-type-face fontified t) 5898 5912 (fontified t) 5912 5918 (face font-lock-variable-name-face fontified t) 5918 5948 (fontified t) 5948 5953 (face font-lock-variable-name-face fontified t) 5953 5979 (fontified t) 5979 5985 (face font-lock-variable-name-face fontified t) 5985 6012 (fontified t) 6012 6024 (face font-lock-variable-name-face fontified t) 6024 6052 (fontified t) 6052 6053 (face (rainbow-delimiters-depth-4-face) fontified t) 6053 6054 (fontified t) 6054 6055 (face (rainbow-delimiters-depth-4-face) fontified t) 6055 6069 (fontified t) 6069 6079 (face font-lock-variable-name-face fontified t) 6079 6086 (fontified t) 6086 6105 (fontified t) 6105 6106 (fontified t face (rainbow-delimiters-depth-4-face)) 6106 6107 (fontified t) 6107 6108 (fontified t face (rainbow-delimiters-depth-4-face)) 6108 6110 (fontified t) 6110 6122 (fontified t) 6122 6134 (face font-lock-variable-name-face fontified t) 6134 6136 (fontified t) 6136 6140 (face font-lock-preprocessor-face fontified t) 6140 6141 (face (rainbow-delimiters-depth-4-face) fontified t) 6141 6142 (face (rainbow-delimiters-depth-4-face) fontified t) 6142 6152 (fontified t) 6152 6153 (face (rainbow-delimiters-depth-3-face) fontified t) 6153 6180 (fontified t) 6180 6181 (face (rainbow-delimiters-depth-3-face) fontified t) 6181 6182 (face rust-ampersand-face fontified t) 6182 6190 (fontified t) 6190 6191 (face rust-ampersand-face fontified t) 6191 6197 (fontified t) 6197 6198 (face (rainbow-delimiters-depth-3-face) fontified t) 6198 6218 (fontified t) 6218 6221 (face font-lock-keyword-face fontified t) 6221 6222 (fontified t) 6222 6247 (face font-lock-variable-name-face fontified t) 6247 6293 (fontified t) 6293 6294 (face (rainbow-delimiters-depth-3-face) fontified t) 6294 6295 (face rust-ampersand-face fontified t) 6295 6299 (face font-lock-constant-face fontified t) 6299 6301 (fontified t) 6301 6326 (face font-lock-type-face fontified t) 6326 6327 (fontified t) 6327 6328 (face (rainbow-delimiters-depth-4-face) fontified t) 6328 6345 (fontified t) 6345 6352 (face font-lock-variable-name-face fontified t) 6352 6354 (fontified t) 6354 6355 (face rust-ampersand-face fontified t) 6355 6356 (face (rainbow-delimiters-depth-5-face) fontified t) 6356 6377 (fontified t) 6377 6381 (face font-lock-constant-face fontified t) 6381 6383 (fontified t) 6383 6403 (face font-lock-type-face fontified t) 6403 6404 (fontified t) 6404 6405 (face (rainbow-delimiters-depth-6-face) fontified t) 6405 6430 (fontified t) 6430 6437 (face font-lock-variable-name-face fontified t) 6437 6466 (fontified t) 6466 6476 (face font-lock-variable-name-face fontified t) 6476 6478 (fontified t) 6478 6482 (face font-lock-constant-face fontified t) 6482 6484 (fontified t) 6484 6496 (face font-lock-type-face fontified t) 6496 6498 (fontified t) 6498 6506 (face font-lock-type-face fontified t) 6506 6532 (fontified t) 6532 6534 (face font-lock-variable-name-face fontified t) 6534 6536 (fontified t) 6536 6540 (face font-lock-constant-face fontified t) 6540 6542 (fontified t) 6542 6553 (face font-lock-type-face fontified t) 6553 6555 (fontified t) 6555 6562 (face font-lock-type-face fontified t) 6562 6563 (fontified t) 6563 6564 (face (rainbow-delimiters-depth-7-face) fontified t) 6564 6593 (fontified t) 6593 6605 (face font-lock-variable-name-face fontified t) 6605 6607 (fontified t) 6607 6612 (face font-lock-keyword-face fontified t) 6612 6642 (fontified t) 6642 6656 (face font-lock-variable-name-face fontified t) 6656 6658 (fontified t) 6658 6662 (face font-lock-constant-face fontified t) 6662 6664 (fontified t) 6664 6684 (face font-lock-type-face fontified t) 6684 6686 (fontified t) 6686 6688 (face font-lock-type-face fontified t) 6688 6718 (fontified t) 6718 6729 (face font-lock-variable-name-face fontified t) 6729 6731 (fontified t) 6731 6735 (face font-lock-constant-face fontified t) 6735 6737 (fontified t) 6737 6754 (face font-lock-type-face fontified t) 6754 6756 (fontified t) 6756 6761 (face font-lock-type-face fontified t) 6761 6762 (fontified t) 6762 6763 (face (rainbow-delimiters-depth-8-face) fontified t) 6763 6764 (fontified t) 6764 6774 (face font-lock-variable-name-face fontified t) 6774 6776 (fontified t) 6776 6780 (face font-lock-keyword-face fontified t) 6780 6781 (fontified t) 6781 6782 (face (rainbow-delimiters-depth-8-face) fontified t) 6782 6808 (fontified t) 6808 6809 (face (rainbow-delimiters-depth-7-face) fontified t) 6809 6835 (fontified t) 6835 6840 (face font-lock-variable-name-face fontified t) 6840 6842 (fontified t) 6842 6846 (face font-lock-type-face fontified t) 6846 6868 (fontified t) 6868 6869 (face (rainbow-delimiters-depth-6-face) fontified t) 6869 6891 (fontified t) 6891 6895 (face font-lock-constant-face fontified t) 6895 6897 (fontified t) 6897 6917 (face font-lock-type-face fontified t) 6917 6918 (fontified t) 6918 6919 (face (rainbow-delimiters-depth-6-face) fontified t) 6919 6944 (fontified t) 6944 6951 (face font-lock-variable-name-face fontified t) 6951 6980 (fontified t) 6980 6990 (face font-lock-variable-name-face fontified t) 6990 6992 (fontified t) 6992 6996 (face font-lock-constant-face fontified t) 6996 6998 (fontified t) 6998 7010 (face font-lock-type-face fontified t) 7010 7012 (fontified t) 7012 7020 (face font-lock-type-face fontified t) 7020 7046 (fontified t) 7046 7049 (face font-lock-comment-delimiter-face fontified t) 7049 7095 (face font-lock-comment-face fontified t) 7095 7119 (fontified t) 7119 7122 (face font-lock-comment-delimiter-face fontified t) 7122 7157 (face font-lock-comment-face fontified t) 7157 7181 (fontified t) 7181 7183 (face font-lock-variable-name-face fontified t) 7183 7185 (fontified t) 7185 7189 (face font-lock-constant-face fontified t) 7189 7191 (fontified t) 7191 7202 (face font-lock-type-face fontified t) 7202 7204 (fontified t) 7204 7211 (face font-lock-type-face fontified t) 7211 7212 (face (rainbow-delimiters-depth-7-face) fontified t) 7212 7216 (face font-lock-constant-face fontified t) 7216 7218 (fontified t) 7218 7236 (face font-lock-type-face fontified t) 7236 7238 (fontified t) 7238 7247 (face font-lock-type-face fontified t) 7247 7248 (face (rainbow-delimiters-depth-7-face) fontified t) 7248 7274 (fontified t) 7274 7279 (face font-lock-variable-name-face fontified t) 7279 7281 (fontified t) 7281 7285 (face font-lock-type-face fontified t) 7285 7307 (fontified t) 7307 7308 (face (rainbow-delimiters-depth-6-face) fontified t) 7308 7326 (fontified t) 7326 7327 (face (rainbow-delimiters-depth-5-face) fontified t) 7327 7345 (fontified t) 7345 7350 (face font-lock-variable-name-face fontified t) 7350 7352 (fontified t) 7352 7356 (face font-lock-type-face fontified t) 7356 7357 (face (rainbow-delimiters-depth-5-face) fontified t) 7357 7384 (face font-lock-string-face fontified t) 7384 7385 (face (rainbow-delimiters-depth-5-face) fontified t) 7385 7399 (fontified t) 7399 7400 (face (rainbow-delimiters-depth-4-face) fontified t) 7400 7401 (face (rainbow-delimiters-depth-3-face) fontified t) 7401 7412 (fontified t) 7412 7417 (face font-lock-preprocessor-face fontified t) 7417 7418 (face (rainbow-delimiters-depth-3-face) fontified t) 7418 7430 (face font-lock-string-face fontified t) 7430 7431 (face (rainbow-delimiters-depth-3-face) fontified t) 7431 7441 (fontified t) 7441 7444 (face font-lock-keyword-face fontified t) 7444 7445 (fontified t) 7445 7454 (face font-lock-variable-name-face fontified t) 7454 7457 (fontified t) 7457 7462 (face font-lock-constant-face fontified t) 7462 7472 (fontified t) 7472 7473 (face (rainbow-delimiters-depth-3-face) fontified t) 7473 7526 (face font-lock-string-face fontified t) 7526 7528 (fontified t) 7528 7529 (face rust-ampersand-face fontified t) 7529 7537 (fontified t) 7537 7538 (face rust-ampersand-face fontified t) 7538 7545 (fontified t) 7545 7546 (face rust-ampersand-face fontified t) 7546 7571 (fontified t) 7571 7572 (face (rainbow-delimiters-depth-3-face) fontified t) 7572 7579 (fontified t) 7579 7580 (face (rainbow-delimiters-depth-3-face) fontified t) 7580 7581 (face (rainbow-delimiters-depth-3-face) fontified t) 7581 7592 (fontified t) 7592 7595 (face font-lock-keyword-face fontified t) 7595 7596 (fontified t) 7596 7609 (face font-lock-variable-name-face fontified t) 7609 7610 (fontified t) 7610 7612 (fontified t) 7612 7619 (fontified t face font-lock-constant-face) 7619 7621 (fontified t) 7621 7628 (fontified t face font-lock-type-face) 7628 7650 (fontified t) 7650 7651 (fontified t face (rainbow-delimiters-depth-3-face)) 7651 7652 (fontified t face rust-ampersand-face) 7652 7660 (fontified t) 7660 7661 (fontified t face rust-ampersand-face) 7661 7669 (fontified t) 7669 7684 (fontified t face font-lock-string-face) 7684 7685 (fontified t face (rainbow-delimiters-depth-3-face)) 7685 7687 (fontified t) 7687 7697 (fontified t) 7697 7700 (face font-lock-keyword-face fontified t) 7700 7701 (fontified t) 7701 7707 (face font-lock-variable-name-face fontified t) 7707 7710 (fontified t) 7710 7716 (face font-lock-constant-face fontified t) 7716 7718 (fontified t) 7718 7724 (face font-lock-type-face fontified t) 7724 7729 (fontified t) 7729 7730 (face (rainbow-delimiters-depth-3-face) fontified t) 7730 7731 (face (rainbow-delimiters-depth-4-face) fontified t) 7731 7745 (fontified t) 7745 7746 (face (rainbow-delimiters-depth-4-face) fontified t) 7746 7748 (fontified t) 7748 7754 (face font-lock-constant-face fontified t) 7754 7756 (fontified t) 7756 7759 (face font-lock-type-face fontified t) 7759 7760 (face (rainbow-delimiters-depth-4-face) fontified t) 7760 7765 (fontified t) 7765 7766 (face (rainbow-delimiters-depth-4-face) fontified t) 7766 7768 (fontified t) 7768 7774 (face font-lock-constant-face fontified t) 7774 7776 (fontified t) 7776 7779 (face font-lock-type-face fontified t) 7779 7780 (face (rainbow-delimiters-depth-4-face) fontified t) 7780 7785 (fontified t) 7785 7786 (face (rainbow-delimiters-depth-4-face) fontified t) 7786 7787 (face (rainbow-delimiters-depth-3-face) fontified t) 7787 7797 (fontified t) 7797 7800 (face font-lock-keyword-face fontified t) 7800 7801 (fontified t) 7801 7811 (face font-lock-variable-name-face fontified t) 7811 7814 (fontified t) 7814 7820 (face font-lock-constant-face fontified t) 7820 7822 (fontified t) 7822 7832 (face font-lock-type-face fontified t) 7832 7837 (fontified t) 7837 7838 (face (rainbow-delimiters-depth-3-face) fontified t) 7838 7867 (fontified t) 7867 7873 (face font-lock-constant-face fontified t) 7873 7875 (fontified t) 7875 7878 (face font-lock-type-face fontified t) 7878 7879 (face (rainbow-delimiters-depth-4-face) fontified t) 7879 7883 (fontified t) 7883 7884 (face (rainbow-delimiters-depth-4-face) fontified t) 7884 7896 (fontified t) 7896 7897 (face (rainbow-delimiters-depth-3-face) fontified t) 7897 7907 (fontified t) 7907 7910 (face font-lock-keyword-face fontified t) 7910 7911 (fontified t) 7911 7928 (face font-lock-variable-name-face fontified t) 7928 7931 (fontified t) 7931 7937 (face font-lock-constant-face fontified t) 7937 7939 (fontified t) 7939 7955 (face font-lock-type-face fontified t) 7955 7960 (fontified t) 7960 7961 (face (rainbow-delimiters-depth-3-face) fontified t) 7961 7969 (fontified t) 7969 7970 (face (rainbow-delimiters-depth-3-face) fontified t) 7970 7983 (fontified t) 7983 7986 (face font-lock-keyword-face fontified t) 7986 7987 (fontified t) 7987 7990 (face font-lock-keyword-face fontified t) 7990 7991 (fontified t) 7991 8005 (face font-lock-variable-name-face fontified t) 8005 8008 (fontified t) 8008 8021 (face font-lock-type-face fontified t) 8021 8026 (fontified t) 8026 8027 (face (rainbow-delimiters-depth-3-face) fontified t) 8027 8028 (face (rainbow-delimiters-depth-3-face) fontified t) 8028 8069 (fontified t) 8069 8070 (face (rainbow-delimiters-depth-3-face) fontified t) 8070 8071 (face rust-ampersand-face fontified t) 8071 8079 (fontified t) 8079 8080 (face rust-ampersand-face fontified t) 8080 8090 (fontified t) 8090 8091 (face (rainbow-delimiters-depth-3-face) fontified t) 8091 8093 (fontified t) 8093 8096 (face font-lock-comment-delimiter-face fontified t) 8096 8105 (face font-lock-comment-face fontified t) 8105 8113 (fontified t) 8113 8116 (face font-lock-keyword-face fontified t) 8116 8117 (fontified t) 8117 8130 (face font-lock-variable-name-face fontified t) 8130 8168 (fontified t) 8168 8169 (face (rainbow-delimiters-depth-3-face) fontified t) 8169 8170 (face rust-ampersand-face fontified t) 8170 8176 (fontified t) 8176 8177 (face (rainbow-delimiters-depth-3-face) fontified t) 8177 8189 (fontified t) 8189 8192 (face font-lock-keyword-face fontified t) 8192 8193 (fontified t) 8193 8217 (face font-lock-variable-name-face fontified t) 8217 8251 (fontified t) 8251 8252 (face (rainbow-delimiters-depth-3-face) fontified t) 8252 8253 (face rust-ampersand-face fontified t) 8253 8257 (face font-lock-constant-face fontified t) 8257 8259 (fontified t) 8259 8284 (face font-lock-type-face fontified t) 8284 8285 (fontified t) 8285 8286 (face (rainbow-delimiters-depth-4-face) fontified t) 8286 8299 (fontified t) 8299 8306 (face font-lock-variable-name-face fontified t) 8306 8308 (fontified t) 8308 8309 (face rust-ampersand-face fontified t) 8309 8310 (face (rainbow-delimiters-depth-5-face) fontified t) 8310 8327 (fontified t) 8327 8331 (face font-lock-constant-face fontified t) 8331 8333 (fontified t) 8333 8353 (face font-lock-type-face fontified t) 8353 8354 (fontified t) 8354 8355 (face (rainbow-delimiters-depth-6-face) fontified t) 8355 8376 (fontified t) 8376 8383 (face font-lock-variable-name-face fontified t) 8383 8408 (fontified t) 8408 8418 (face font-lock-variable-name-face fontified t) 8418 8420 (fontified t) 8420 8424 (face font-lock-constant-face fontified t) 8424 8426 (fontified t) 8426 8438 (face font-lock-type-face fontified t) 8438 8440 (fontified t) 8440 8446 (face font-lock-type-face fontified t) 8446 8449 (fontified t) 8449 8453 (face font-lock-constant-face fontified t) 8453 8455 (fontified t) 8455 8467 (face font-lock-type-face fontified t) 8467 8469 (fontified t) 8469 8477 (face font-lock-type-face fontified t) 8477 8499 (fontified t) 8499 8501 (face font-lock-variable-name-face fontified t) 8501 8503 (fontified t) 8503 8507 (face font-lock-constant-face fontified t) 8507 8509 (fontified t) 8509 8520 (face font-lock-type-face fontified t) 8520 8522 (fontified t) 8522 8528 (face font-lock-type-face fontified t) 8528 8529 (fontified t) 8529 8530 (face (rainbow-delimiters-depth-7-face) fontified t) 8530 8555 (fontified t) 8555 8557 (face font-lock-variable-name-face fontified t) 8557 8559 (fontified t) 8559 8563 (face font-lock-constant-face fontified t) 8563 8565 (fontified t) 8565 8582 (face font-lock-type-face fontified t) 8582 8584 (fontified t) 8584 8591 (face font-lock-type-face fontified t) 8591 8617 (fontified t) 8617 8635 (face font-lock-variable-name-face fontified t) 8635 8637 (fontified t) 8637 8642 (face font-lock-keyword-face fontified t) 8642 8668 (fontified t) 8668 8684 (face font-lock-variable-name-face fontified t) 8684 8686 (fontified t) 8686 8690 (face font-lock-type-face fontified t) 8690 8712 (fontified t) 8712 8713 (face (rainbow-delimiters-depth-7-face) fontified t) 8713 8735 (fontified t) 8735 8740 (face font-lock-variable-name-face fontified t) 8740 8742 (fontified t) 8742 8746 (face font-lock-type-face fontified t) 8746 8764 (fontified t) 8764 8765 (face (rainbow-delimiters-depth-6-face) fontified t) 8765 8778 (fontified t) 8778 8779 (face (rainbow-delimiters-depth-5-face) fontified t) 8779 8793 (fontified t) 8793 8798 (face font-lock-variable-name-face fontified t) 8798 8800 (fontified t) 8800 8804 (face font-lock-type-face fontified t) 8804 8805 (face (rainbow-delimiters-depth-5-face) fontified t) 8805 8831 (face font-lock-string-face fontified t) 8831 8832 (face (rainbow-delimiters-depth-5-face) fontified t) 8832 8842 (fontified t) 8842 8843 (face (rainbow-delimiters-depth-4-face) fontified t) 8843 8844 (face (rainbow-delimiters-depth-3-face) fontified t) 8844 8855 (fontified t) 8855 8858 (face font-lock-keyword-face fontified t) 8858 8859 (fontified t) 8859 8876 (face font-lock-variable-name-face fontified t) 8876 8903 (fontified t) 8903 8904 (face (rainbow-delimiters-depth-3-face) fontified t) 8904 8905 (face rust-ampersand-face fontified t) 8905 8909 (face font-lock-constant-face fontified t) 8909 8911 (fontified t) 8911 8930 (face font-lock-type-face fontified t) 8930 8931 (fontified t) 8931 8932 (face (rainbow-delimiters-depth-4-face) fontified t) 8932 8945 (fontified t) 8945 8951 (face font-lock-variable-name-face fontified t) 8951 8953 (fontified t) 8953 8954 (face rust-ampersand-face fontified t) 8954 8992 (fontified t) 8992 8999 (face font-lock-variable-name-face fontified t) 8999 9001 (fontified t) 9001 9002 (face rust-ampersand-face fontified t) 9002 9003 (face (rainbow-delimiters-depth-5-face) fontified t) 9003 9020 (fontified t) 9020 9024 (face font-lock-constant-face fontified t) 9024 9026 (fontified t) 9026 9040 (face font-lock-type-face fontified t) 9040 9041 (fontified t) 9041 9042 (face (rainbow-delimiters-depth-6-face) fontified t) 9042 9063 (fontified t) 9063 9070 (face font-lock-variable-name-face fontified t) 9070 9095 (fontified t) 9095 9103 (face font-lock-variable-name-face fontified t) 9103 9136 (fontified t) 9136 9137 (face (rainbow-delimiters-depth-7-face) fontified t) 9137 9138 (face (rainbow-delimiters-depth-7-face) fontified t) 9138 9156 (fontified t) 9156 9157 (face (rainbow-delimiters-depth-6-face) fontified t) 9157 9170 (fontified t) 9170 9171 (face (rainbow-delimiters-depth-5-face) fontified t) 9171 9185 (fontified t) 9185 9187 (face font-lock-variable-name-face fontified t) 9187 9190 (fontified t face font-lock-variable-name-face) 9190 9192 (fontified t) 9192 9196 (fontified t face font-lock-type-face) 9196 9197 (fontified t face (rainbow-delimiters-depth-5-face)) 9197 9216 (fontified t face font-lock-string-face) 9216 9217 (fontified t face (rainbow-delimiters-depth-5-face)) 9217 9219 (fontified t) 9219 9227 (fontified t) 9227 9228 (face (rainbow-delimiters-depth-4-face) fontified t) 9228 9229 (face (rainbow-delimiters-depth-3-face) fontified t) 9229 9240 (fontified t) 9240 9243 (face font-lock-keyword-face fontified t) 9243 9244 (fontified t) 9244 9257 (face font-lock-variable-name-face fontified t) 9257 9260 (fontified t) 9260 9265 (face font-lock-constant-face fontified t) 9265 9267 (fontified t) 9267 9279 (face font-lock-type-face fontified t) 9279 9280 (fontified t) 9280 9281 (face (rainbow-delimiters-depth-3-face) fontified t) 9281 9294 (fontified t) 9294 9302 (face font-lock-variable-name-face fontified t) 9302 9304 (fontified t) 9304 9305 (face (rainbow-delimiters-depth-4-face) fontified t) 9305 9323 (fontified t) 9323 9324 (face (rainbow-delimiters-depth-4-face) fontified t) 9324 9338 (fontified t) 9338 9343 (face font-lock-variable-name-face fontified t) 9343 9345 (fontified t) 9345 9346 (face (rainbow-delimiters-depth-4-face) fontified t) 9346 9364 (fontified t) 9364 9365 (face (rainbow-delimiters-depth-4-face) fontified t) 9365 9375 (fontified t) 9375 9376 (face (rainbow-delimiters-depth-3-face) fontified t) 9376 9386 (fontified t) 9386 9389 (face font-lock-keyword-face fontified t) 9389 9390 (fontified t) 9390 9391 (face (rainbow-delimiters-depth-3-face) fontified t) 9391 9446 (fontified t) 9446 9447 (face (rainbow-delimiters-depth-3-face) fontified t) 9447 9462 (fontified t) 9462 9467 (face font-lock-constant-face fontified t) 9467 9503 (fontified t) 9503 9504 (face (rainbow-delimiters-depth-3-face) fontified t) 9504 9505 (face rust-ampersand-face fontified t) 9505 9513 (fontified t) 9513 9514 (face rust-ampersand-face fontified t) 9514 9527 (fontified t) 9527 9528 (face (rainbow-delimiters-depth-3-face) fontified t) 9528 9540 (fontified t) 9540 9542 (face font-lock-comment-delimiter-face fontified t) 9542 9572 (face font-lock-comment-face fontified t) 9572 9580 (fontified t) 9580 9583 (face font-lock-keyword-face fontified t) 9583 9584 (fontified t) 9584 9606 (face font-lock-variable-name-face fontified t) 9606 9650 (fontified t) 9650 9651 (face (rainbow-delimiters-depth-3-face) fontified t) 9651 9652 (face rust-ampersand-face fontified t) 9652 9656 (face font-lock-constant-face fontified t) 9656 9658 (fontified t) 9658 9682 (face font-lock-type-face fontified t) 9682 9683 (fontified t) 9683 9684 (face (rainbow-delimiters-depth-4-face) fontified t) 9684 9701 (fontified t) 9701 9706 (face font-lock-variable-name-face fontified t) 9706 9708 (fontified t) 9708 9712 (face font-lock-type-face fontified t) 9712 9713 (face (rainbow-delimiters-depth-5-face) fontified t) 9713 9737 (face font-lock-string-face fontified t) 9737 9738 (face (rainbow-delimiters-depth-5-face) fontified t) 9738 9756 (fontified t) 9756 9774 (face font-lock-variable-name-face fontified t) 9774 9776 (fontified t) 9776 9777 (face rust-ampersand-face fontified t) 9777 9778 (face (rainbow-delimiters-depth-5-face) fontified t) 9778 9799 (fontified t) 9799 9800 (face rust-ampersand-face fontified t) 9800 9847 (fontified t) 9847 9848 (face rust-ampersand-face fontified t) 9848 9894 (fontified t) 9894 9895 (face rust-ampersand-face fontified t) 9895 9936 (fontified t) 9936 9937 (face (rainbow-delimiters-depth-5-face) fontified t) 9937 9955 (fontified t) 9955 9975 (face font-lock-variable-name-face fontified t) 9975 9977 (fontified t) 9977 9978 (face rust-ampersand-face fontified t) 9978 9979 (face (rainbow-delimiters-depth-5-face) fontified t) 9979 9980 (face (rainbow-delimiters-depth-5-face) fontified t) 9980 9994 (fontified t) 9994 9995 (face (rainbow-delimiters-depth-4-face) fontified t) 9995 9996 (face (rainbow-delimiters-depth-3-face) fontified t) 9996 10015 (fontified t) 10015 10018 (face font-lock-keyword-face fontified t) 10018 10019 (fontified t) 10019 10034 (face font-lock-variable-name-face fontified t) 10034 10037 (fontified t) 10037 10038 (face (rainbow-delimiters-depth-3-face) fontified t) 10038 10051 (fontified t) 10051 10054 (face font-lock-keyword-face fontified t) 10054 10055 (fontified t) 10055 10061 (face font-lock-variable-name-face fontified t) 10061 10064 (fontified t) 10064 10068 (face font-lock-constant-face fontified t) 10068 10070 (fontified t) 10070 10083 (face font-lock-preprocessor-face fontified t) 10083 10084 (face (rainbow-delimiters-depth-4-face) fontified t) 10084 10097 (face font-lock-string-face fontified t) 10097 10098 (face (rainbow-delimiters-depth-4-face) fontified t) 10098 10135 (fontified t) 10135 10136 (face (rainbow-delimiters-depth-4-face) fontified t) 10136 10153 (fontified t) 10153 10154 (face rust-ampersand-face fontified t) 10154 10178 (fontified t) 10178 10179 (face rust-ampersand-face fontified t) 10179 10250 (fontified t) 10250 10254 (face font-lock-type-face fontified t) 10254 10255 (face (rainbow-delimiters-depth-5-face) fontified t) 10255 10262 (face font-lock-constant-face fontified t) 10262 10264 (fontified t) 10264 10271 (face font-lock-type-face fontified t) 10271 10273 (fontified t) 10273 10285 (face font-lock-type-face fontified t) 10285 10286 (face (rainbow-delimiters-depth-5-face) fontified t) 10286 10304 (fontified t) 10304 10305 (face rust-ampersand-face fontified t) 10305 10306 (face (rainbow-delimiters-depth-5-face) fontified t) 10306 10311 (face font-lock-constant-face fontified t) 10311 10313 (fontified t) 10313 10324 (face font-lock-type-face fontified t) 10324 10330 (fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10332 (face (rainbow-delimiters-depth-6-face) fontified t) 10332 10334 (fontified t) 10334 10345 (face font-lock-type-face fontified t) 10345 10351 (fontified t) 10351 10352 (face (rainbow-delimiters-depth-6-face) fontified t) 10352 10353 (face (rainbow-delimiters-depth-6-face) fontified t) 10353 10354 (face (rainbow-delimiters-depth-5-face) fontified t) 10354 10392 (fontified t) 10392 10393 (face (rainbow-delimiters-depth-4-face) fontified t) 10393 10402 (fontified t) 10402 10403 (face (rainbow-delimiters-depth-3-face) fontified t) 10403 10426 (fontified t) 10426 10429 (face font-lock-keyword-face fontified t) 10429 10430 (fontified t) 10430 10439 (face font-lock-variable-name-face fontified t) 10439 10442 (fontified t) 10442 10446 (face font-lock-preprocessor-face fontified t) 10446 10447 (face (rainbow-delimiters-depth-3-face) fontified t) 10447 10460 (fontified t) 10460 10468 (face font-lock-type-face fontified t) 10468 10469 (fontified t) 10469 10470 (face (rainbow-delimiters-depth-4-face) fontified t) 10470 10487 (fontified t) 10487 10495 (face font-lock-variable-name-face fontified t) 10495 10497 (fontified t) 10497 10503 (face font-lock-constant-face fontified t) 10503 10505 (fontified t) 10505 10512 (face font-lock-type-face fontified t) 10512 10518 (fontified t) 10518 10519 (face (rainbow-delimiters-depth-5-face) fontified t) 10519 10520 (face (rainbow-delimiters-depth-5-face) fontified t) 10520 10538 (fontified t) 10538 10546 (face font-lock-variable-name-face fontified t) 10546 10548 (fontified t) 10548 10554 (face font-lock-constant-face fontified t) 10554 10556 (fontified t) 10556 10566 (face font-lock-type-face fontified t) 10566 10580 (fontified t) 10580 10581 (face (rainbow-delimiters-depth-5-face) fontified t) 10581 10587 (face font-lock-constant-face fontified t) 10587 10589 (fontified t) 10589 10592 (face font-lock-type-face fontified t) 10592 10593 (face (rainbow-delimiters-depth-6-face) fontified t) 10593 10596 (fontified t) 10596 10597 (face (rainbow-delimiters-depth-6-face) fontified t) 10597 10598 (face (rainbow-delimiters-depth-5-face) fontified t) 10598 10616 (fontified t) 10616 10623 (face font-lock-variable-name-face fontified t) 10623 10625 (fontified t) 10625 10631 (face font-lock-constant-face fontified t) 10631 10633 (fontified t) 10633 10640 (face font-lock-type-face fontified t) 10640 10645 (fontified t) 10645 10646 (face (rainbow-delimiters-depth-5-face) fontified t) 10646 10659 (fontified t) 10659 10660 (face (rainbow-delimiters-depth-5-face) fontified t) 10660 10674 (fontified t) 10674 10675 (face (rainbow-delimiters-depth-4-face) fontified t) 10675 10685 (fontified t) 10685 10686 (face (rainbow-delimiters-depth-3-face) fontified t) 10686 10696 (fontified t) 10696 10699 (face font-lock-keyword-face fontified t) 10699 10700 (fontified t) 10700 10713 (face font-lock-variable-name-face fontified t) 10713 10719 (fontified t) 10719 10730 (fontified t) 10730 10731 (fontified t face (rainbow-delimiters-depth-3-face)) 10731 10732 (fontified t face (rainbow-delimiters-depth-3-face)) 10732 10736 (fontified t) 10736 10737 (fontified t face (rainbow-delimiters-depth-3-face)) 10737 10745 (fontified t face font-lock-type-face) 10745 10753 (fontified t) 10753 10754 (fontified t face (rainbow-delimiters-depth-3-face)) 10754 10764 (fontified t) 10764 10765 (fontified t face (rainbow-delimiters-depth-3-face)) 10765 10768 (fontified t face font-lock-type-face) 10768 10769 (fontified t face (rainbow-delimiters-depth-4-face)) 10769 10770 (fontified t) 10770 10771 (fontified t face (rainbow-delimiters-depth-4-face)) 10771 10772 (fontified t face (rainbow-delimiters-depth-3-face)) 10772 10773 (fontified t face (rainbow-delimiters-depth-3-face)) 10773 10774 (fontified t face (rainbow-delimiters-depth-3-face)) 10774 10776 (fontified t) 10776 10784 (fontified t) 10784 10787 (face font-lock-keyword-face fontified t) 10787 10788 (fontified t) 10788 10803 (face font-lock-variable-name-face fontified t) 10803 10806 (fontified t) 10806 10814 (face font-lock-constant-face fontified t) 10814 10839 (fontified t) 10839 10840 (face (rainbow-delimiters-depth-3-face) fontified t) 10840 10841 (face rust-ampersand-face fontified t) 10841 10849 (fontified t) 10849 10850 (face rust-ampersand-face fontified t) 10850 10863 (fontified t) 10863 10864 (face (rainbow-delimiters-depth-3-face) fontified t) 10864 10875 (fontified t) 10875 10878 (face font-lock-comment-delimiter-face fontified t) 10878 10885 (face font-lock-comment-face fontified t) 10885 10893 (fontified t) 10893 10896 (face font-lock-keyword-face fontified t) 10896 10897 (fontified t) 10897 10918 (face font-lock-variable-name-face fontified t) 10918 10921 (fontified t) 10921 10922 (face (rainbow-delimiters-depth-3-face) fontified t) 10922 10935 (fontified t) 10935 10938 (face font-lock-keyword-face fontified t) 10938 10939 (fontified t) 10939 10945 (face font-lock-variable-name-face fontified t) 10945 10977 (fontified t) 10977 10978 (face (rainbow-delimiters-depth-4-face) fontified t) 10978 10979 (face rust-ampersand-face fontified t) 10979 10983 (face font-lock-constant-face fontified t) 10983 10985 (fontified t) 10985 11009 (face font-lock-type-face fontified t) 11009 11010 (fontified t) 11010 11011 (face (rainbow-delimiters-depth-5-face) fontified t) 11011 11028 (fontified t) 11028 11033 (face font-lock-variable-name-face fontified t) 11033 11035 (fontified t) 11035 11039 (face font-lock-type-face fontified t) 11039 11040 (face (rainbow-delimiters-depth-6-face) fontified t) 11040 11063 (face font-lock-string-face fontified t) 11063 11064 (face (rainbow-delimiters-depth-6-face) fontified t) 11064 11082 (fontified t) 11082 11100 (face font-lock-variable-name-face fontified t) 11100 11102 (fontified t) 11102 11103 (face rust-ampersand-face fontified t) 11103 11104 (face (rainbow-delimiters-depth-6-face) fontified t) 11104 11125 (fontified t) 11125 11126 (face rust-ampersand-face fontified t) 11126 11172 (fontified t) 11172 11173 (face rust-ampersand-face fontified t) 11173 11213 (fontified t) 11213 11214 (face (rainbow-delimiters-depth-6-face) fontified t) 11214 11232 (fontified t) 11232 11252 (face font-lock-variable-name-face fontified t) 11252 11254 (fontified t) 11254 11255 (face rust-ampersand-face fontified t) 11255 11256 (face (rainbow-delimiters-depth-6-face) fontified t) 11256 11257 (face (rainbow-delimiters-depth-6-face) fontified t) 11257 11271 (fontified t) 11271 11272 (face (rainbow-delimiters-depth-5-face) fontified t) 11272 11273 (face (rainbow-delimiters-depth-4-face) fontified t) 11273 11287 (fontified t) 11287 11290 (face font-lock-keyword-face fontified t) 11290 11291 (fontified t) 11291 11297 (face font-lock-variable-name-face fontified t) 11297 11300 (fontified t) 11300 11304 (face font-lock-constant-face fontified t) 11304 11306 (fontified t) 11306 11319 (face font-lock-preprocessor-face fontified t) 11319 11320 (face (rainbow-delimiters-depth-4-face) fontified t) 11320 11332 (face font-lock-string-face fontified t) 11332 11333 (face (rainbow-delimiters-depth-4-face) fontified t) 11333 11370 (fontified t) 11370 11371 (face (rainbow-delimiters-depth-4-face) fontified t) 11371 11388 (fontified t) 11388 11389 (face rust-ampersand-face fontified t) 11389 11413 (fontified t) 11413 11414 (face rust-ampersand-face fontified t) 11414 11469 (fontified t) 11469 11473 (face font-lock-type-face fontified t) 11473 11474 (face (rainbow-delimiters-depth-5-face) fontified t) 11474 11481 (face font-lock-constant-face fontified t) 11481 11483 (fontified t) 11483 11490 (face font-lock-type-face fontified t) 11490 11492 (fontified t) 11492 11504 (face font-lock-type-face fontified t) 11504 11505 (face (rainbow-delimiters-depth-5-face) fontified t) 11505 11523 (fontified t) 11523 11524 (face rust-ampersand-face fontified t) 11524 11525 (face (rainbow-delimiters-depth-5-face) fontified t) 11525 11530 (face font-lock-constant-face fontified t) 11530 11532 (fontified t) 11532 11543 (face font-lock-type-face fontified t) 11543 11549 (fontified t) 11549 11550 (face (rainbow-delimiters-depth-6-face) fontified t) 11550 11551 (face (rainbow-delimiters-depth-6-face) fontified t) 11551 11552 (face (rainbow-delimiters-depth-5-face) fontified t) 11552 11590 (fontified t) 11590 11591 (face (rainbow-delimiters-depth-4-face) fontified t) 11591 11600 (fontified t) 11600 11601 (face (rainbow-delimiters-depth-3-face) fontified t) 11601 11613 (fontified t) 11613 11617 (face font-lock-type-face fontified t) 11617 11618 (fontified t) 11618 11619 (face (rainbow-delimiters-depth-3-face) fontified t) 11619 11979 (fontified t) 11979 11992 (face font-lock-variable-name-face fontified t) 11992 11994 (fontified t) 11994 11999 (face font-lock-keyword-face fontified t) 11999 12276 (fontified t) 12276 12284 (fontified t) 12284 12292 (fontified t) 12292 12293 (face (rainbow-delimiters-depth-3-face) fontified t) 12293 12299 (fontified t) 12299 12300 (face (rainbow-delimiters-depth-2-face) fontified t) 12300 12306 (fontified t) 12306 12309 (face font-lock-keyword-face fontified t) 12309 12310 (fontified t) 12310 12312 (face font-lock-keyword-face fontified t) 12312 12313 (fontified t) 12313 12319 (face font-lock-function-name-face fontified t) 12319 12320 (face (rainbow-delimiters-depth-2-face) fontified t) 12320 12321 (face rust-ampersand-face fontified t) 12321 12325 (face font-lock-keyword-face fontified t) 12325 12326 (face (rainbow-delimiters-depth-2-face) fontified t) 12326 12328 (fontified t) 12328 12329 (fontified t syntax-table (1)) 12329 12330 (fontified t) 12330 12331 (face rust-ampersand-face fontified t) 12331 12337 (face font-lock-type-face fontified t) 12337 12338 (fontified t) 12338 12339 (face (rainbow-delimiters-depth-2-face) fontified t) 12339 12348 (fontified t) 12348 12349 (face rust-ampersand-face fontified t) 12349 12353 (face font-lock-keyword-face fontified t) 12353 12365 (fontified t) 12365 12366 (face (rainbow-delimiters-depth-2-face) fontified t) 12366 12372 (fontified t) 12372 12374 (face font-lock-keyword-face fontified t) 12374 12375 (fontified t) 12375 12381 (face font-lock-function-name-face fontified t) 12381 12382 (face (rainbow-delimiters-depth-2-face) fontified t) 12382 12383 (face rust-ampersand-face fontified t) 12383 12386 (face font-lock-keyword-face fontified t) 12386 12387 (fontified t) 12387 12391 (face font-lock-keyword-face fontified t) 12391 12393 (fontified t) 12393 12401 (face font-lock-variable-name-face fontified t) 12401 12403 (fontified t) 12403 12408 (face font-lock-constant-face fontified t) 12408 12410 (fontified t) 12410 12413 (face font-lock-constant-face fontified t) 12413 12415 (fontified t) 12415 12427 (face font-lock-type-face fontified t) 12427 12428 (face (rainbow-delimiters-depth-3-face) fontified t) 12428 12431 (face font-lock-type-face fontified t) 12431 12432 (face (rainbow-delimiters-depth-3-face) fontified t) 12432 12433 (face (rainbow-delimiters-depth-2-face) fontified t) 12433 12434 (fontified t) 12434 12435 (face (rainbow-delimiters-depth-2-face) fontified t) 12435 12444 (fontified t) 12444 12446 (face font-lock-keyword-face fontified t) 12446 12462 (fontified t) 12462 12463 (fontified t syntax-table (1)) 12463 12485 (fontified t) 12485 12486 (fontified t syntax-table (1)) 12486 12489 (fontified t) 12489 12490 (face (rainbow-delimiters-depth-3-face) fontified t) 12490 12503 (fontified t) 12503 12507 (face font-lock-keyword-face fontified t) 12507 12537 (fontified t) 12537 12541 (face font-lock-keyword-face fontified t) 12541 12585 (fontified t) 12585 12589 (face font-lock-keyword-face fontified t) 12589 12635 (fontified t) 12635 12639 (face font-lock-keyword-face fontified t) 12639 12657 (fontified t) 12657 12658 (face (rainbow-delimiters-depth-4-face) fontified t) 12658 12659 (face rust-ampersand-face fontified t) 12659 12663 (face font-lock-keyword-face fontified t) 12663 12672 (fontified t) 12672 12673 (face rust-ampersand-face fontified t) 12673 12677 (face font-lock-keyword-face fontified t) 12677 12684 (fontified t) 12684 12685 (face (rainbow-delimiters-depth-4-face) fontified t) 12685 12699 (fontified t) 12699 12703 (face font-lock-keyword-face fontified t) 12703 12720 (fontified t) 12720 12727 (face font-lock-constant-face fontified t) 12727 12729 (fontified t) 12729 12736 (face font-lock-type-face fontified t) 12736 12758 (fontified t) 12758 12759 (face (rainbow-delimiters-depth-4-face) fontified t) 12759 12760 (face rust-ampersand-face fontified t) 12760 12764 (face font-lock-keyword-face fontified t) 12764 12773 (fontified t) 12773 12774 (face rust-ampersand-face fontified t) 12774 12778 (face font-lock-keyword-face fontified t) 12778 12787 (fontified t) 12787 12802 (face font-lock-string-face fontified t) 12802 12803 (face (rainbow-delimiters-depth-4-face) fontified t) 12803 12817 (fontified t) 12817 12821 (face font-lock-keyword-face fontified t) 12821 12839 (fontified t) 12839 12840 (face (rainbow-delimiters-depth-4-face) fontified t) 12840 12871 (fontified t) 12871 12872 (face (rainbow-delimiters-depth-4-face) fontified t) 12872 12896 (fontified t) 12896 12897 (face (rainbow-delimiters-depth-3-face) fontified t) 12897 12902 (fontified t) 12902 12903 (face (rainbow-delimiters-depth-2-face) fontified t) 12903 12909 (fontified t) 12909 12911 (face font-lock-keyword-face fontified t) 12911 12912 (fontified t) 12912 12917 (face font-lock-function-name-face fontified t) 12917 12918 (face (rainbow-delimiters-depth-2-face) fontified t) 12918 12919 (face rust-ampersand-face fontified t) 12919 12922 (face font-lock-keyword-face fontified t) 12922 12923 (fontified t) 12923 12927 (face font-lock-keyword-face fontified t) 12927 12929 (fontified t) 12929 12934 (face font-lock-variable-name-face fontified t) 12934 12936 (fontified t) 12936 12937 (face rust-ampersand-face fontified t) 12937 12948 (face font-lock-type-face fontified t) 12948 12949 (face (rainbow-delimiters-depth-2-face) fontified t) 12949 12951 (fontified t) 12951 12952 (syntax-table (1) fontified t) 12952 12953 (fontified t) 12953 12957 (face font-lock-type-face fontified t) 12957 12958 (fontified t) 12958 12959 (face (rainbow-delimiters-depth-2-face) fontified t) 12959 12968 (fontified t) 12968 12973 (face font-lock-keyword-face fontified t) 12973 12980 (fontified t) 12980 12981 (face (rainbow-delimiters-depth-3-face) fontified t) 12981 12994 (fontified t) 12994 13005 (face font-lock-type-face fontified t) 13005 13007 (fontified t) 13007 13020 (face font-lock-type-face fontified t) 13020 13021 (fontified t) 13021 13022 (face (rainbow-delimiters-depth-4-face) fontified t) 13022 13039 (fontified t) 13039 13044 (face font-lock-variable-name-face fontified t) 13044 13062 (fontified t) 13062 13070 (face font-lock-type-face fontified t) 13070 13071 (fontified t) 13071 13072 (face (rainbow-delimiters-depth-5-face) fontified t) 13072 13093 (fontified t) 13093 13105 (face font-lock-variable-name-face fontified t) 13105 13107 (fontified t) 13107 13118 (face font-lock-type-face fontified t) 13118 13120 (fontified t) 13120 13124 (face font-lock-type-face fontified t) 13124 13125 (face (rainbow-delimiters-depth-6-face) fontified t) 13125 13128 (fontified t) 13128 13129 (face (rainbow-delimiters-depth-6-face) fontified t) 13129 13197 (fontified t) 13197 13198 (face (rainbow-delimiters-depth-5-face) fontified t) 13198 13231 (fontified t) 13231 13232 (face (rainbow-delimiters-depth-4-face) fontified t) 13232 13234 (fontified t) 13234 13235 (syntax-table (1) fontified t) 13235 13236 (fontified t) 13236 13240 (face font-lock-keyword-face fontified t) 13240 13275 (fontified t) 13275 13276 (face (rainbow-delimiters-depth-4-face) fontified t) 13276 13288 (fontified t) 13288 13289 (face (rainbow-delimiters-depth-4-face) fontified t) 13289 13303 (fontified t) 13303 13314 (face font-lock-type-face fontified t) 13314 13316 (fontified t) 13316 13326 (face font-lock-type-face fontified t) 13326 13327 (fontified t) 13327 13328 (face (rainbow-delimiters-depth-4-face) fontified t) 13328 13339 (fontified t) 13339 13340 (face (rainbow-delimiters-depth-4-face) fontified t) 13340 13342 (fontified t) 13342 13343 (syntax-table (1) fontified t) 13343 13344 (fontified t) 13344 13345 (face (rainbow-delimiters-depth-4-face) fontified t) 13345 13362 (fontified t) 13362 13366 (face font-lock-keyword-face fontified t) 13366 13399 (fontified t) 13399 13400 (face (rainbow-delimiters-depth-5-face) fontified t) 13400 13405 (fontified t) 13405 13406 (face (rainbow-delimiters-depth-5-face) fontified t) 13406 13424 (fontified t) 13424 13428 (face font-lock-keyword-face fontified t) 13428 13441 (fontified t) 13441 13442 (face (rainbow-delimiters-depth-4-face) fontified t) 13442 13455 (fontified t) 13455 13466 (face font-lock-type-face fontified t) 13466 13468 (fontified t) 13468 13478 (face font-lock-type-face fontified t) 13478 13479 (fontified t) 13479 13480 (face (rainbow-delimiters-depth-4-face) fontified t) 13480 13497 (fontified t) 13497 13503 (face font-lock-variable-name-face fontified t) 13503 13505 (fontified t) 13505 13516 (face font-lock-type-face fontified t) 13516 13518 (fontified t) 13518 13522 (face font-lock-type-face fontified t) 13522 13578 (fontified t) 13578 13579 (face (rainbow-delimiters-depth-4-face) fontified t) 13579 13581 (fontified t) 13581 13582 (syntax-table (1) fontified t) 13582 13583 (fontified t) 13583 13584 (face (rainbow-delimiters-depth-4-face) fontified t) 13584 13601 (fontified t) 13601 13605 (face font-lock-keyword-face fontified t) 13605 13632 (fontified t) 13632 13644 (face font-lock-type-face fontified t) 13644 13646 (fontified t) 13646 13653 (face font-lock-type-face fontified t) 13653 13671 (fontified t) 13671 13675 (face font-lock-keyword-face fontified t) 13675 13688 (fontified t) 13688 13689 (face (rainbow-delimiters-depth-4-face) fontified t) 13689 13705 (fontified t) 13705 13706 (syntax-table (1) fontified t) 13706 13707 (fontified t) 13707 13712 (face font-lock-keyword-face fontified t) 13712 13722 (fontified t) 13722 13723 (face (rainbow-delimiters-depth-3-face) fontified t) 13723 13730 (fontified t) 13730 13731 (face (rainbow-delimiters-depth-2-face) fontified t) 13731 13737 (fontified t) 13737 13739 (face font-lock-keyword-face fontified t) 13739 13740 (fontified t) 13740 13746 (face font-lock-function-name-face fontified t) 13746 13747 (face (rainbow-delimiters-depth-2-face) fontified t) 13747 13748 (face rust-ampersand-face fontified t) 13748 13751 (face font-lock-keyword-face fontified t) 13751 13752 (fontified t) 13752 13756 (face font-lock-keyword-face fontified t) 13756 13758 (fontified t) 13758 13760 (face font-lock-variable-name-face fontified t) 13760 13762 (fontified t) 13762 13769 (face font-lock-constant-face fontified t) 13769 13771 (fontified t) 13771 13779 (face font-lock-type-face fontified t) 13779 13780 (face (rainbow-delimiters-depth-2-face) fontified t) 13780 13781 (fontified t) 13781 13782 (face (rainbow-delimiters-depth-2-face) fontified t) 13782 13784 (fontified t) 13784 13791 (fontified t) 13791 13795 (fontified t face font-lock-keyword-face) 13795 13827 (fontified t) 13827 13828 (fontified t face (rainbow-delimiters-depth-3-face)) 13828 13829 (fontified t face rust-ampersand-face) 13829 13832 (fontified t face font-lock-keyword-face) 13832 13833 (fontified t) 13833 13837 (fontified t face font-lock-keyword-face) 13837 13848 (fontified t) 13848 13849 (fontified t face (rainbow-delimiters-depth-3-face)) 13849 13851 (fontified t) 13851 13859 (fontified t) 13859 13863 (face font-lock-keyword-face fontified t) 13863 13895 (fontified t) 13895 13896 (face (rainbow-delimiters-depth-3-face) fontified t) 13896 13897 (face rust-ampersand-face fontified t) 13897 13901 (face font-lock-keyword-face fontified t) 13901 13910 (fontified t) 13910 13911 (face rust-ampersand-face fontified t) 13911 13915 (face font-lock-keyword-face fontified t) 13915 13926 (fontified t) 13926 13927 (face (rainbow-delimiters-depth-3-face) fontified t) 13927 13937 (fontified t) 13937 13941 (face font-lock-keyword-face fontified t) 13941 13960 (fontified t) 13960 13961 (face (rainbow-delimiters-depth-3-face) fontified t) 13961 13962 (face rust-ampersand-face fontified t) 13962 13966 (face font-lock-keyword-face fontified t) 13966 13985 (fontified t) 13985 13993 (face font-lock-constant-face fontified t) 13993 14005 (fontified t) 14005 14006 (face (rainbow-delimiters-depth-4-face) fontified t) 14006 14007 (face rust-ampersand-face fontified t) 14007 14008 (face (rainbow-delimiters-depth-5-face) fontified t) 14008 14012 (face font-lock-keyword-face fontified t) 14012 14027 (fontified t) 14027 14028 (face (rainbow-delimiters-depth-5-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-4-face) fontified t) 14029 14030 (face (rainbow-delimiters-depth-3-face) fontified t) 14030 14041 (fontified t) 14041 14044 (face font-lock-comment-delimiter-face fontified t) 14044 14061 (face font-lock-comment-face fontified t) 14061 14069 (fontified t) 14069 14072 (face font-lock-keyword-face fontified t) 14072 14073 (fontified t) 14073 14085 (face font-lock-variable-name-face fontified t) 14085 14088 (fontified t) 14088 14094 (face font-lock-constant-face fontified t) 14094 14096 (fontified t) 14096 14103 (face font-lock-type-face fontified t) 14103 14109 (fontified t) 14109 14110 (face (rainbow-delimiters-depth-3-face) fontified t) 14110 14114 (face font-lock-keyword-face fontified t) 14114 14137 (fontified t) 14137 14138 (face (rainbow-delimiters-depth-3-face) fontified t) 14138 14148 (fontified t) 14148 14151 (face font-lock-comment-delimiter-face fontified t) 14151 14181 (face font-lock-comment-face fontified t) 14181 14189 (fontified t) 14189 14196 (face font-lock-comment-delimiter-face fontified t) 14196 14272 (face font-lock-comment-face fontified t) 14272 14280 (fontified t) 14280 14288 (face font-lock-comment-delimiter-face fontified t) 14288 14304 (face font-lock-comment-face fontified t) 14304 14312 (fontified t) 14312 14319 (face font-lock-comment-delimiter-face fontified t) 14319 14328 (face font-lock-comment-face fontified t) 14328 14337 (fontified t) 14337 14341 (face font-lock-keyword-face fontified t) 14341 14379 (fontified t) 14379 14380 (face (rainbow-delimiters-depth-3-face) fontified t) 14380 14386 (face font-lock-constant-face fontified t) 14386 14388 (fontified t) 14388 14395 (face font-lock-type-face fontified t) 14395 14412 (fontified t) 14412 14413 (face (rainbow-delimiters-depth-4-face) fontified t) 14413 14414 (face (rainbow-delimiters-depth-5-face) fontified t) 14414 14427 (fontified t) 14427 14428 (face (rainbow-delimiters-depth-5-face) fontified t) 14428 14433 (fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14435 (face (rainbow-delimiters-depth-5-face) fontified t) 14435 14437 (fontified t) 14437 14443 (face font-lock-constant-face fontified t) 14443 14445 (fontified t) 14445 14448 (face font-lock-type-face fontified t) 14448 14449 (face (rainbow-delimiters-depth-5-face) fontified t) 14449 14470 (fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-6-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-5-face) fontified t) 14473 14474 (face (rainbow-delimiters-depth-4-face) fontified t) 14474 14502 (fontified t) 14502 14503 (face (rainbow-delimiters-depth-3-face) fontified t) 14503 14508 (fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14510 (face (rainbow-delimiters-depth-3-face) fontified t) 14510 14512 (fontified t) 14512 14515 (face font-lock-comment-delimiter-face fontified t) 14515 14524 (face font-lock-comment-face fontified t) 14524 14533 (fontified t) 14533 14537 (face font-lock-keyword-face fontified t) 14537 14556 (fontified t) 14556 14557 (face (rainbow-delimiters-depth-3-face) fontified t) 14557 14558 (face rust-ampersand-face fontified t) 14558 14562 (face font-lock-keyword-face fontified t) 14562 14580 (fontified t) 14580 14588 (face font-lock-constant-face fontified t) 14588 14600 (fontified t) 14600 14601 (face (rainbow-delimiters-depth-4-face) fontified t) 14601 14602 (face rust-ampersand-face fontified t) 14602 14603 (face (rainbow-delimiters-depth-5-face) fontified t) 14603 14607 (face font-lock-keyword-face fontified t) 14607 14621 (fontified t) 14621 14622 (face (rainbow-delimiters-depth-5-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-4-face) fontified t) 14623 14624 (face (rainbow-delimiters-depth-3-face) fontified t) 14624 14631 (fontified t) 14631 14632 (face (rainbow-delimiters-depth-2-face) fontified t) 14632 14638 (fontified t) 14638 14640 (face font-lock-keyword-face fontified t) 14640 14641 (fontified t) 14641 14647 (face font-lock-function-name-face fontified t) 14647 14648 (face (rainbow-delimiters-depth-2-face) fontified t) 14648 14649 (face rust-ampersand-face fontified t) 14649 14652 (face font-lock-keyword-face fontified t) 14652 14653 (fontified t) 14653 14657 (face font-lock-keyword-face fontified t) 14657 14659 (fontified t) 14659 14664 (face font-lock-variable-name-face fontified t) 14664 14666 (fontified t) 14666 14670 (face font-lock-constant-face fontified t) 14670 14672 (fontified t) 14672 14677 (face font-lock-type-face fontified t) 14677 14678 (face (rainbow-delimiters-depth-2-face) fontified t) 14678 14680 (fontified t) 14680 14681 (fontified t syntax-table (1)) 14681 14682 (fontified t) 14682 14688 (face font-lock-type-face fontified t) 14688 14689 (face (rainbow-delimiters-depth-2-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14691 (face (rainbow-delimiters-depth-3-face) fontified t) 14691 14693 (fontified t) 14693 14697 (face font-lock-constant-face fontified t) 14697 14699 (fontified t) 14699 14711 (face font-lock-type-face fontified t) 14711 14712 (face (rainbow-delimiters-depth-2-face) fontified t) 14712 14713 (fontified t) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified t) 14714 14723 (fontified t) 14723 14726 (face font-lock-keyword-face fontified t) 14726 14727 (fontified t) 14727 14733 (face font-lock-variable-name-face fontified t) 14733 14736 (fontified t) 14736 14740 (face font-lock-keyword-face fontified t) 14740 14768 (fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face (rainbow-delimiters-depth-3-face) fontified t) 14770 14771 (face rust-question-mark fontified t) 14771 14781 (fontified t) 14781 14784 (face font-lock-keyword-face fontified t) 14784 14785 (fontified t) 14785 14789 (face font-lock-variable-name-face fontified t) 14789 14818 (fontified t) 14818 14819 (face (rainbow-delimiters-depth-3-face) fontified t) 14819 14820 (face rust-ampersand-face fontified t) 14820 14824 (face font-lock-constant-face fontified t) 14824 14826 (fontified t) 14826 14847 (face font-lock-type-face fontified t) 14847 14856 (fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-4-face) fontified t) 14858 14859 (face (rainbow-delimiters-depth-3-face) fontified t) 14859 14869 (fontified t) 14869 14872 (face font-lock-keyword-face fontified t) 14872 14873 (fontified t) 14873 14876 (face font-lock-keyword-face fontified t) 14876 14877 (fontified t) 14877 14884 (face font-lock-variable-name-face fontified t) 14884 14887 (fontified t) 14887 14891 (face font-lock-keyword-face fontified t) 14891 14921 (fontified t) 14921 14922 (face (rainbow-delimiters-depth-3-face) fontified t) 14922 14923 (face rust-ampersand-face fontified t) 14923 14927 (face font-lock-constant-face fontified t) 14927 14929 (fontified t) 14929 14953 (face font-lock-type-face fontified t) 14953 14954 (fontified t) 14954 14955 (face (rainbow-delimiters-depth-4-face) fontified t) 14955 14968 (fontified t) 14968 14973 (face font-lock-variable-name-face fontified t) 14973 14975 (fontified t) 14975 14979 (face font-lock-type-face fontified t) 14979 14980 (face (rainbow-delimiters-depth-5-face) fontified t) 14980 14996 (face font-lock-string-face fontified t) 14996 14997 (face (rainbow-delimiters-depth-5-face) fontified t) 14997 15007 (fontified t) 15007 15008 (face (rainbow-delimiters-depth-4-face) fontified t) 15008 15009 (face (rainbow-delimiters-depth-3-face) fontified t) 15009 15028 (fontified t) 15028 15031 (face font-lock-keyword-face fontified t) 15031 15032 (fontified t) 15032 15035 (face font-lock-keyword-face fontified t) 15035 15036 (fontified t) 15036 15047 (face font-lock-variable-name-face fontified t) 15047 15075 (fontified t) 15075 15076 (face (rainbow-delimiters-depth-3-face) fontified t) 15076 15077 (face rust-ampersand-face fontified t) 15077 15081 (face font-lock-constant-face fontified t) 15081 15083 (fontified t) 15083 15103 (face font-lock-type-face fontified t) 15103 15104 (fontified t) 15104 15105 (face (rainbow-delimiters-depth-4-face) fontified t) 15105 15118 (fontified t) 15118 15123 (face font-lock-variable-name-face fontified t) 15123 15125 (fontified t) 15125 15129 (face font-lock-type-face fontified t) 15129 15130 (face (rainbow-delimiters-depth-5-face) fontified t) 15130 15143 (face font-lock-string-face fontified t) 15143 15144 (face (rainbow-delimiters-depth-5-face) fontified t) 15144 15158 (fontified t) 15158 15175 (face font-lock-variable-name-face fontified t) 15175 15177 (fontified t) 15177 15178 (face rust-ampersand-face fontified t) 15178 15179 (face (rainbow-delimiters-depth-5-face) fontified t) 15179 15183 (face font-lock-type-face fontified t) 15183 15184 (face (rainbow-delimiters-depth-6-face) fontified t) 15184 15188 (face font-lock-constant-face fontified t) 15188 15190 (fontified t) 15190 15215 (face font-lock-type-face fontified t) 15215 15216 (fontified t) 15216 15217 (face (rainbow-delimiters-depth-7-face) fontified t) 15217 15234 (fontified t) 15234 15238 (face font-lock-variable-name-face fontified t) 15238 15240 (fontified t) 15240 15241 (face rust-ampersand-face fontified t) 15241 15263 (fontified t) 15263 15277 (face font-lock-variable-name-face fontified t) 15277 15279 (fontified t) 15279 15283 (face font-lock-type-face fontified t) 15283 15301 (fontified t) 15301 15304 (face font-lock-variable-name-face fontified t) 15304 15306 (fontified t) 15306 15310 (face font-lock-constant-face fontified t) 15310 15312 (fontified t) 15312 15322 (face font-lock-type-face fontified t) 15322 15323 (fontified t) 15323 15324 (face (rainbow-delimiters-depth-8-face) fontified t) 15324 15345 (fontified t) 15345 15349 (face font-lock-variable-name-face fontified t) 15349 15351 (fontified t) 15351 15355 (fontified t face font-lock-constant-face) 15355 15357 (fontified t) 15357 15363 (fontified t face font-lock-type-face) 15363 15365 (fontified t) 15365 15370 (fontified t face font-lock-type-face) 15370 15371 (fontified t face (rainbow-delimiters-depth-9-face)) 15371 15376 (fontified t) 15376 15377 (fontified t face (rainbow-delimiters-depth-9-face)) 15377 15379 (fontified t) 15379 15399 (fontified t) 15399 15404 (face font-lock-variable-name-face fontified t) 15404 15406 (fontified t) 15406 15410 (face font-lock-constant-face fontified t) 15410 15412 (fontified t) 15412 15419 (face font-lock-type-face fontified t) 15419 15421 (fontified t) 15421 15426 (face font-lock-type-face fontified t) 15426 15444 (fontified t) 15444 15445 (face (rainbow-delimiters-depth-8-face) fontified t) 15445 15459 (fontified t) 15459 15460 (face (rainbow-delimiters-depth-7-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-6-face) fontified t) 15461 15462 (face (rainbow-delimiters-depth-5-face) fontified t) 15462 15476 (fontified t) 15476 15500 (face font-lock-variable-name-face fontified t) 15500 15502 (fontified t) 15502 15506 (face font-lock-type-face fontified t) 15506 15507 (face (rainbow-delimiters-depth-5-face) fontified t) 15507 15511 (face font-lock-constant-face fontified t) 15511 15513 (fontified t) 15513 15545 (face font-lock-type-face fontified t) 15545 15546 (fontified t) 15546 15547 (face (rainbow-delimiters-depth-6-face) fontified t) 15547 15564 (fontified t) 15564 15568 (face font-lock-variable-name-face fontified t) 15568 15570 (fontified t) 15570 15571 (face rust-ampersand-face fontified t) 15571 15575 (face font-lock-keyword-face fontified t) 15575 15612 (fontified t) 15612 15621 (face font-lock-variable-name-face fontified t) 15621 15623 (fontified t) 15623 15627 (face font-lock-type-face fontified t) 15627 15628 (face (rainbow-delimiters-depth-7-face) fontified t) 15628 15632 (face font-lock-constant-face fontified t) 15632 15634 (fontified t) 15634 15644 (face font-lock-type-face fontified t) 15644 15645 (fontified t) 15645 15646 (face (rainbow-delimiters-depth-8-face) fontified t) 15646 15667 (fontified t) 15667 15671 (face font-lock-variable-name-face fontified t) 15671 15673 (fontified t) 15673 15677 (face font-lock-constant-face fontified t) 15677 15679 (fontified t) 15679 15685 (face font-lock-type-face fontified t) 15685 15687 (fontified t) 15687 15692 (face font-lock-type-face fontified t) 15692 15693 (face (rainbow-delimiters-depth-9-face) fontified t) 15693 15696 (fontified t) 15696 15697 (face (rainbow-delimiters-depth-9-face) fontified t) 15697 15719 (fontified t) 15719 15724 (face font-lock-variable-name-face fontified t) 15724 15726 (fontified t) 15726 15730 (face font-lock-constant-face fontified t) 15730 15732 (fontified t) 15732 15739 (face font-lock-type-face fontified t) 15739 15741 (fontified t) 15741 15746 (face font-lock-type-face fontified t) 15746 15764 (fontified t) 15764 15765 (face (rainbow-delimiters-depth-8-face) fontified t) 15765 15766 (face (rainbow-delimiters-depth-7-face) fontified t) 15766 15784 (fontified t) 15784 15795 (face font-lock-variable-name-face fontified t) 15795 15797 (fontified t) 15797 15801 (face font-lock-type-face fontified t) 15801 15815 (fontified t) 15815 15816 (face (rainbow-delimiters-depth-6-face) fontified t) 15816 15817 (face (rainbow-delimiters-depth-5-face) fontified t) 15817 15831 (fontified t) 15831 15850 (face font-lock-variable-name-face fontified t) 15850 15852 (fontified t) 15852 15856 (face font-lock-type-face fontified t) 15856 15870 (fontified t) 15870 15886 (face font-lock-variable-name-face fontified t) 15886 15888 (fontified t) 15888 15892 (face font-lock-type-face fontified t) 15892 15902 (fontified t) 15902 15903 (face (rainbow-delimiters-depth-4-face) fontified t) 15903 15904 (face (rainbow-delimiters-depth-3-face) fontified t) 15904 15914 (fontified t) 15914 15917 (face font-lock-comment-delimiter-face fontified t) 15917 15922 (face font-lock-comment-face fontified t) 15922 15959 (fontified t) 15959 15960 (face (rainbow-delimiters-depth-3-face) fontified t) 15960 15963 (fontified t) 15963 15967 (face font-lock-keyword-face fontified t) 15967 15989 (fontified t) 15989 15990 (face (rainbow-delimiters-depth-4-face) fontified t) 15990 15992 (fontified t) 15992 15993 (face (rainbow-delimiters-depth-4-face) fontified t) 15993 15994 (face (rainbow-delimiters-depth-3-face) fontified t) 15994 16005 (fontified t) 16005 16010 (face font-lock-preprocessor-face fontified t) 16010 16011 (face (rainbow-delimiters-depth-3-face) fontified t) 16011 16040 (face font-lock-string-face fontified t) 16040 16041 (face (rainbow-delimiters-depth-3-face) fontified t) 16041 16051 (fontified t) 16051 16054 (face font-lock-keyword-face fontified t) 16054 16055 (fontified t) 16055 16060 (face font-lock-keyword-face fontified t) 16060 16062 (fontified t) 16062 16067 (face font-lock-constant-face fontified t) 16067 16069 (fontified t) 16069 16078 (face font-lock-type-face fontified t) 16078 16080 (fontified t) 16080 16083 (face font-lock-comment-delimiter-face fontified t) 16083 16088 (face font-lock-comment-face fontified t) 16088 16120 (fontified t) 16120 16121 (face (rainbow-delimiters-depth-3-face) fontified t) 16121 16122 (face rust-ampersand-face fontified t) 16122 16126 (face font-lock-keyword-face fontified t) 16126 16148 (fontified t) 16148 16149 (face (rainbow-delimiters-depth-3-face) fontified t) 16149 16151 (fontified t) 16151 16154 (face font-lock-comment-delimiter-face fontified t) 16154 16159 (face font-lock-comment-face fontified t) 16159 16195 (fontified t) 16195 16196 (face (rainbow-delimiters-depth-3-face) fontified t) 16196 16209 (fontified t) 16209 16210 (face rust-ampersand-face fontified t) 16210 16214 (face font-lock-keyword-face fontified t) 16214 16238 (fontified t) 16238 16239 (face rust-ampersand-face fontified t) 16239 16243 (face font-lock-keyword-face fontified t) 16243 16275 (fontified t) 16275 16276 (face rust-ampersand-face fontified t) 16276 16280 (face font-lock-keyword-face fontified t) 16280 16307 (fontified t) 16307 16308 (face (rainbow-delimiters-depth-3-face) fontified t) 16308 16310 (fontified t) 16310 16313 (face font-lock-comment-delimiter-face fontified t) 16313 16318 (face font-lock-comment-face fontified t) 16318 16327 (fontified t) 16327 16332 (face font-lock-preprocessor-face fontified t) 16332 16333 (face (rainbow-delimiters-depth-3-face) fontified t) 16333 16362 (face font-lock-string-face fontified t) 16362 16363 (face (rainbow-delimiters-depth-3-face) fontified t) 16363 16397 (fontified t) 16397 16398 (face (rainbow-delimiters-depth-3-face) fontified t) 16398 16399 (face rust-ampersand-face fontified t) 16399 16403 (face font-lock-keyword-face fontified t) 16403 16419 (fontified t) 16419 16420 (face (rainbow-delimiters-depth-3-face) fontified t) 16420 16422 (fontified t) 16422 16425 (face font-lock-comment-delimiter-face fontified t) 16425 16428 (face font-lock-comment-face fontified t) 16428 16468 (fontified t) 16468 16469 (face (rainbow-delimiters-depth-3-face) fontified t) 16469 16482 (fontified t) 16482 16483 (face rust-ampersand-face fontified t) 16483 16487 (face font-lock-keyword-face fontified t) 16487 16514 (fontified t) 16514 16518 (face font-lock-keyword-face fontified t) 16518 16532 (fontified t) 16532 16533 (face (rainbow-delimiters-depth-4-face) fontified t) 16533 16534 (face (rainbow-delimiters-depth-4-face) fontified t) 16534 16535 (fontified t) 16535 16537 (face font-lock-keyword-face fontified t) 16537 16538 (fontified t) 16538 16541 (face font-lock-type-face fontified t) 16541 16555 (fontified t) 16555 16556 (face rust-ampersand-face fontified t) 16556 16560 (face font-lock-keyword-face fontified t) 16560 16592 (fontified t) 16592 16593 (face rust-ampersand-face fontified t) 16593 16597 (face font-lock-keyword-face fontified t) 16597 16624 (fontified t) 16624 16625 (face (rainbow-delimiters-depth-3-face) fontified t) 16625 16640 (fontified t) 16640 16641 (face (rainbow-delimiters-depth-3-face) fontified t) 16641 16652 (fontified t) 16652 16653 (face (rainbow-delimiters-depth-3-face) fontified t) 16653 16665 (fontified t) 16665 16668 (face font-lock-comment-delimiter-face fontified t) 16668 16721 (face font-lock-comment-face fontified t) 16721 16729 (fontified t) 16729 16733 (face font-lock-keyword-face fontified t) 16733 16746 (fontified t) 16746 16747 (face (rainbow-delimiters-depth-3-face) fontified t) 16747 16750 (face font-lock-constant-face fontified t) 16750 16752 (fontified t) 16752 16756 (face font-lock-constant-face fontified t) 16756 16762 (fontified t) 16762 16763 (face (rainbow-delimiters-depth-4-face) fontified t) 16763 16777 (fontified t) 16777 16778 (face (rainbow-delimiters-depth-5-face) fontified t) 16778 16779 (face (rainbow-delimiters-depth-5-face) fontified t) 16779 16780 (face (rainbow-delimiters-depth-4-face) fontified t) 16780 16781 (face (rainbow-delimiters-depth-3-face) fontified t) 16781 16805 (fontified t) 16805 16806 (face (rainbow-delimiters-depth-3-face) fontified t) 16806 16807 (face (rainbow-delimiters-depth-3-face) fontified t) 16807 16818 (fontified t) 16818 16820 (face font-lock-type-face fontified t) 16820 16821 (face (rainbow-delimiters-depth-3-face) fontified t) 16821 16822 (face (rainbow-delimiters-depth-4-face) fontified t) 16822 16823 (face (rainbow-delimiters-depth-4-face) fontified t) 16823 16824 (face (rainbow-delimiters-depth-3-face) fontified t) 16824 16830 (fontified t) 16830 16831 (face (rainbow-delimiters-depth-2-face) fontified t) 16831 16832 (fontified t) 16832 16833 (face (rainbow-delimiters-depth-1-face) fontified t) 16833 16836 (fontified t) 16836 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16845 (face font-lock-keyword-face fontified t) 16845 16846 (fontified t) 16846 16848 (face font-lock-keyword-face fontified t) 16848 16849 (fontified t) 16849 16852 (face font-lock-function-name-face fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (face (rainbow-delimiters-depth-1-face) fontified t) 16854 16855 (fontified t) 16855 16856 (face (rainbow-delimiters-depth-1-face) fontified t) 16856 16866 (fontified t) 16866 16869 (face font-lock-keyword-face fontified t) 16869 16870 (fontified t) 16870 16879 (face font-lock-variable-name-face fontified t) 16879 16880 (fontified t face font-lock-variable-name-face) 16880 16883 (fontified t) 16883 16892 (fontified t face font-lock-type-face) 16892 16897 (fontified t) 16897 16898 (fontified t face (rainbow-delimiters-depth-2-face)) 16898 16899 (fontified t face (rainbow-delimiters-depth-2-face)) 16899 16906 (fontified t) 16906 16907 (fontified t face (rainbow-delimiters-depth-2-face)) 16907 16908 (fontified t face (rainbow-delimiters-depth-2-face)) 16908 16910 (fontified t) 16910 16914 (fontified t) 16914 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16924 (face font-lock-variable-name-face fontified t) 16924 16927 (fontified t) 16927 16940 (face font-lock-type-face fontified t) 16940 16945 (fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16947 (face (rainbow-delimiters-depth-2-face) fontified t) 16947 16953 (fontified t) 16953 16954 (face (rainbow-delimiters-depth-2-face) fontified t) 16954 16955 (face rust-ampersand-face fontified t) 16955 16965 (fontified t) 16965 16966 (face (rainbow-delimiters-depth-2-face) fontified t) 16966 16973 (fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16975 (face (rainbow-delimiters-depth-2-face) fontified t) 16975 16982 (fontified t) 16982 16985 (face font-lock-comment-delimiter-face fontified t) 16985 17059 (face font-lock-comment-face fontified t) 17059 17063 (fontified t) 17063 17066 (face font-lock-comment-delimiter-face fontified t) 17066 17139 (face font-lock-comment-face fontified t) 17139 17140 (fontified t) 17140 17144 (fontified t) 17144 17147 (face font-lock-keyword-face fontified t) 17147 17148 (fontified t) 17148 17151 (face font-lock-keyword-face fontified t) 17151 17152 (fontified t) 17152 17157 (face font-lock-variable-name-face fontified t) 17157 17160 (fontified t) 17160 17165 (face font-lock-type-face fontified t) 17165 17170 (fontified t) 17170 17171 (face (rainbow-delimiters-depth-2-face) fontified t) 17171 17177 (fontified t) 17177 17178 (face (rainbow-delimiters-depth-2-face) fontified t) 17178 17179 (fontified t) 17179 17184 (face font-lock-keyword-face fontified t) 17184 17190 (fontified t) 17190 17193 (face font-lock-keyword-face fontified t) 17193 17194 (fontified t) 17194 17197 (face font-lock-keyword-face fontified t) 17197 17198 (fontified t) 17198 17214 (face font-lock-variable-name-face fontified t) 17214 17217 (fontified t) 17217 17224 (face font-lock-constant-face fontified t) 17224 17226 (fontified t) 17226 17233 (face font-lock-type-face fontified t) 17233 17238 (fontified t) 17238 17239 (face (rainbow-delimiters-depth-2-face) fontified t) 17239 17240 (face (rainbow-delimiters-depth-2-face) fontified t) 17240 17243 (fontified t) 17243 17246 (face font-lock-comment-delimiter-face fontified t) 17246 17251 (face font-lock-comment-face fontified t) 17251 17252 (fontified t) 17252 17283 (fontified t) 17283 17284 (face (rainbow-delimiters-depth-2-face) fontified t) 17284 17295 (face font-lock-type-face fontified t) 17295 17297 (fontified t) 17297 17301 (face font-lock-type-face fontified t) 17301 17302 (face (rainbow-delimiters-depth-2-face) fontified t) 17302 17303 (fontified t) 17303 17304 (fontified t rear-nonsticky t) 17304 17305 (fontified t) 17305 17309 (fontified t) 17309 17312 (face font-lock-comment-delimiter-face fontified t) 17312 17318 (face font-lock-comment-face fontified t) 17318 17336 (fontified t) 17336 17337 (face (rainbow-delimiters-depth-2-face) fontified t) 17337 17341 (face font-lock-keyword-face fontified t) 17341 17356 (fontified t) 17356 17357 (face (rainbow-delimiters-depth-3-face) fontified t) 17357 17366 (fontified t) 17366 17371 (face font-lock-keyword-face fontified t) 17371 17378 (fontified t) 17378 17379 (face (rainbow-delimiters-depth-4-face) fontified t) 17379 17392 (fontified t) 17392 17397 (face font-lock-type-face fontified t) 17397 17399 (fontified t) 17399 17410 (face font-lock-type-face fontified t) 17410 17411 (fontified t) 17411 17412 (face (rainbow-delimiters-depth-5-face) fontified t) 17412 17429 (fontified t) 17429 17434 (face font-lock-variable-name-face fontified t) 17434 17436 (fontified t) 17436 17447 (face font-lock-type-face fontified t) 17447 17449 (fontified t) 17449 17460 (face font-lock-type-face fontified t) 17460 17461 (face (rainbow-delimiters-depth-6-face) fontified t) 17461 17469 (fontified t) 17469 17470 (face (rainbow-delimiters-depth-6-face) fontified t) 17470 17491 (fontified t) 17491 17494 (face font-lock-comment-delimiter-face fontified t) 17494 17530 (face font-lock-comment-face fontified t) 17530 17542 (fontified t) 17542 17543 (face (rainbow-delimiters-depth-5-face) fontified t) 17543 17545 (fontified t) 17545 17546 (fontified t syntax-table (1)) 17546 17547 (fontified t) 17547 17549 (face font-lock-keyword-face fontified t) 17549 17570 (fontified t) 17570 17571 (face (rainbow-delimiters-depth-5-face) fontified t) 17571 17625 (fontified t) 17625 17626 (face (rainbow-delimiters-depth-6-face) fontified t) 17626 17642 (fontified t) 17642 17643 (face (rainbow-delimiters-depth-6-face) fontified t) 17643 17656 (fontified t) 17656 17657 (face (rainbow-delimiters-depth-5-face) fontified t) 17657 17671 (fontified t) 17671 17676 (face font-lock-type-face fontified t) 17676 17678 (fontified t) 17678 17689 (face font-lock-type-face fontified t) 17689 17690 (fontified t) 17690 17691 (face (rainbow-delimiters-depth-5-face) fontified t) 17691 17708 (fontified t) 17708 17711 (face font-lock-keyword-face fontified t) 17711 17712 (fontified t) 17712 17717 (face font-lock-variable-name-face fontified t) 17717 17750 (fontified t) 17750 17751 (face (rainbow-delimiters-depth-5-face) fontified t) 17751 17753 (fontified t) 17753 17754 (fontified t syntax-table (1)) 17754 17755 (fontified t) 17755 17756 (face (rainbow-delimiters-depth-5-face) fontified t) 17756 17773 (fontified t) 17773 17775 (face font-lock-keyword-face fontified t) 17775 17788 (fontified t) 17788 17789 (face (rainbow-delimiters-depth-6-face) fontified t) 17789 17794 (fontified t) 17794 17795 (face (rainbow-delimiters-depth-6-face) fontified t) 17795 17796 (fontified t) 17796 17797 (face (rainbow-delimiters-depth-6-face) fontified t) 17797 17798 (fontified t) 17798 17801 (face font-lock-comment-delimiter-face fontified t) 17801 17810 (face font-lock-comment-face fontified t) 17810 17830 (fontified t) 17830 17835 (face font-lock-keyword-face fontified t) 17835 17842 (fontified t) 17842 17843 (face (rainbow-delimiters-depth-7-face) fontified t) 17843 17868 (fontified t) 17868 17879 (face font-lock-type-face fontified t) 17879 17881 (fontified t) 17881 17895 (face font-lock-type-face fontified t) 17895 17926 (fontified t) 17926 17937 (face font-lock-type-face fontified t) 17937 17939 (fontified t) 17939 17952 (face font-lock-type-face fontified t) 17952 17953 (fontified t) 17953 17954 (face (rainbow-delimiters-depth-8-face) fontified t) 17954 17987 (fontified t) 17987 17992 (face font-lock-variable-name-face fontified t) 17992 18026 (fontified t) 18026 18034 (face font-lock-type-face fontified t) 18034 18035 (fontified t) 18035 18036 (face (rainbow-delimiters-depth-9-face) fontified t) 18036 18073 (fontified t) 18073 18078 (face font-lock-variable-name-face fontified t) 18078 18080 (fontified t) 18080 18092 (face font-lock-type-face fontified t) 18092 18094 (fontified t) 18094 18101 (face font-lock-type-face fontified t) 18101 18139 (fontified t) 18139 18151 (face font-lock-variable-name-face fontified t) 18151 18153 (fontified t) 18153 18164 (face font-lock-type-face fontified t) 18164 18166 (fontified t) 18166 18170 (face font-lock-type-face fontified t) 18170 18171 (face (rainbow-delimiters-depth-1-face) fontified t) 18171 18178 (face font-lock-type-face fontified t) 18178 18180 (fontified t) 18180 18186 (face font-lock-type-face fontified t) 18186 18187 (face (rainbow-delimiters-depth-1-face) fontified t) 18187 18260 (fontified t) 18260 18261 (face (rainbow-delimiters-depth-9-face) fontified t) 18261 18326 (fontified t) 18326 18327 (face (rainbow-delimiters-depth-8-face) fontified t) 18327 18329 (fontified t) 18329 18330 (syntax-table (1) fontified t) 18330 18340 (fontified t) 18340 18341 (face (rainbow-delimiters-depth-8-face) fontified t) 18341 18342 (face (rainbow-delimiters-depth-8-face) fontified t) 18342 18368 (fontified t) 18368 18379 (face font-lock-type-face fontified t) 18379 18381 (fontified t) 18381 18388 (face font-lock-type-face fontified t) 18388 18389 (face (rainbow-delimiters-depth-8-face) fontified t) 18389 18402 (fontified t) 18402 18403 (face (rainbow-delimiters-depth-8-face) fontified t) 18403 18405 (fontified t) 18405 18406 (syntax-table (1) fontified t) 18406 18407 (fontified t) 18407 18408 (face (rainbow-delimiters-depth-8-face) fontified t) 18408 18410 (fontified t) 18410 18449 (fontified t) 18449 18450 (face (rainbow-delimiters-depth-9-face) fontified t) 18450 18464 (fontified t) 18464 18465 (face (rainbow-delimiters-depth-9-face) fontified t) 18465 18467 (fontified t) 18467 18522 (fontified t) 18522 18523 (face (rainbow-delimiters-depth-9-face) fontified t) 18523 18524 (face (rainbow-delimiters-depth-9-face) fontified t) 18524 18550 (fontified t) 18550 18551 (face (rainbow-delimiters-depth-8-face) fontified t) 18551 18580 (fontified t) 18580 18581 (syntax-table (1) fontified t) 18581 18582 (fontified t) 18582 18583 (face (rainbow-delimiters-depth-8-face) fontified t) 18583 18584 (face (rainbow-delimiters-depth-8-face) fontified t) 18584 18605 (fontified t) 18605 18606 (face (rainbow-delimiters-depth-7-face) fontified t) 18606 18623 (fontified t) 18623 18624 (face (rainbow-delimiters-depth-6-face) fontified t) 18624 18625 (fontified t) 18625 18629 (face font-lock-keyword-face fontified t) 18629 18630 (fontified t) 18630 18631 (face (rainbow-delimiters-depth-6-face) fontified t) 18631 18640 (fontified t) 18640 18679 (fontified t) 18679 18680 (fontified t face (rainbow-delimiters-depth-7-face)) 18680 18681 (fontified t face (rainbow-delimiters-depth-7-face)) 18681 18683 (fontified t) 18683 18699 (fontified t) 18699 18700 (face (rainbow-delimiters-depth-6-face) fontified t) 18700 18718 (fontified t) 18718 18720 (face font-lock-keyword-face fontified t) 18720 18731 (fontified t) 18731 18742 (face font-lock-type-face fontified t) 18742 18744 (fontified t) 18744 18759 (face font-lock-type-face fontified t) 18759 18760 (fontified t) 18760 18761 (face (rainbow-delimiters-depth-6-face) fontified t) 18761 18782 (fontified t) 18782 18785 (face font-lock-keyword-face fontified t) 18785 18786 (fontified t) 18786 18789 (face font-lock-variable-name-face fontified t) 18789 18792 (fontified t) 18792 18799 (face font-lock-constant-face fontified t) 18799 18801 (fontified t) 18801 18808 (face font-lock-type-face fontified t) 18808 18813 (fontified t) 18813 18814 (face (rainbow-delimiters-depth-7-face) fontified t) 18814 18815 (face (rainbow-delimiters-depth-7-face) fontified t) 18815 18837 (fontified t) 18837 18840 (face font-lock-keyword-face fontified t) 18840 18841 (fontified t) 18841 18843 (face font-lock-variable-name-face fontified t) 18843 18946 (fontified t) 18946 18947 (face (rainbow-delimiters-depth-7-face) fontified t) 18947 18949 (fontified t) 18949 18950 (face (rainbow-delimiters-depth-7-face) fontified t) 18950 18972 (fontified t) 18972 18977 (face font-lock-keyword-face fontified t) 18977 18990 (fontified t) 18990 18991 (face (rainbow-delimiters-depth-7-face) fontified t) 18991 18995 (face font-lock-constant-face fontified t) 18995 18997 (fontified t) 18997 19002 (face font-lock-type-face fontified t) 19002 19004 (fontified t) 19004 19009 (face font-lock-type-face fontified t) 19009 19010 (face (rainbow-delimiters-depth-7-face) fontified t) 19010 19011 (fontified t) 19011 19012 (face (rainbow-delimiters-depth-7-face) fontified t) 19012 19037 (fontified t) 19037 19039 (face font-lock-type-face fontified t) 19039 19040 (face (rainbow-delimiters-depth-8-face) fontified t) 19040 19041 (fontified t) 19041 19042 (face (rainbow-delimiters-depth-8-face) fontified t) 19042 19044 (fontified t) 19044 19045 (fontified t syntax-table (1)) 19045 19046 (fontified t) 19046 19047 (face (rainbow-delimiters-depth-8-face) fontified t) 19047 19048 (face (rainbow-delimiters-depth-8-face) fontified t) 19048 19073 (fontified t) 19073 19076 (face font-lock-comment-delimiter-face fontified t) 19076 19108 (face font-lock-comment-face fontified t) 19108 19132 (fontified t) 19132 19135 (face font-lock-type-face fontified t) 19135 19136 (face (rainbow-delimiters-depth-8-face) fontified t) 19136 19140 (face font-lock-constant-face fontified t) 19140 19142 (fontified t) 19142 19154 (face font-lock-type-face fontified t) 19154 19156 (fontified t) 19156 19160 (face font-lock-type-face fontified t) 19160 19161 (face (rainbow-delimiters-depth-8-face) fontified t) 19161 19163 (fontified t) 19163 19164 (fontified t syntax-table (1)) 19164 19177 (fontified t) 19177 19178 (face (rainbow-delimiters-depth-8-face) fontified t) 19178 19188 (fontified t) 19188 19189 (face (rainbow-delimiters-depth-8-face) fontified t) 19189 19215 (fontified t) 19215 19218 (face font-lock-comment-delimiter-face fontified t) 19218 19271 (face font-lock-comment-face fontified t) 19271 19295 (fontified t) 19295 19298 (face font-lock-type-face fontified t) 19298 19299 (face (rainbow-delimiters-depth-8-face) fontified t) 19299 19303 (face font-lock-constant-face fontified t) 19303 19305 (fontified t) 19305 19317 (face font-lock-type-face fontified t) 19317 19319 (fontified t) 19319 19330 (face font-lock-type-face fontified t) 19330 19331 (face (rainbow-delimiters-depth-8-face) fontified t) 19331 19333 (fontified t) 19333 19334 (fontified t syntax-table (1)) 19334 19344 (fontified t) 19344 19345 (face (rainbow-delimiters-depth-8-face) fontified t) 19345 19346 (face (rainbow-delimiters-depth-8-face) fontified t) 19346 19372 (fontified t) 19372 19375 (face font-lock-comment-delimiter-face fontified t) 19375 19449 (face font-lock-comment-face fontified t) 19449 19473 (fontified t) 19473 19476 (face font-lock-type-face fontified t) 19476 19477 (face (rainbow-delimiters-depth-8-face) fontified t) 19477 19478 (fontified t) 19478 19479 (face (rainbow-delimiters-depth-8-face) fontified t) 19479 19481 (fontified t) 19481 19482 (fontified t syntax-table (1)) 19482 19483 (fontified t) 19483 19490 (face font-lock-constant-face fontified t) 19490 19492 (fontified t) 19492 19498 (face font-lock-preprocessor-face fontified t) 19498 19499 (face (rainbow-delimiters-depth-8-face) fontified t) 19499 19505 (face font-lock-string-face fontified t) 19505 19508 (fontified t) 19508 19509 (face (rainbow-delimiters-depth-8-face) fontified t) 19509 19531 (fontified t) 19531 19532 (face (rainbow-delimiters-depth-7-face) fontified t) 19532 19549 (fontified t) 19549 19550 (face (rainbow-delimiters-depth-6-face) fontified t) 19550 19563 (fontified t) 19563 19564 (face (rainbow-delimiters-depth-5-face) fontified t) 19564 19582 (fontified t) 19582 19583 (fontified t syntax-table (1)) 19583 19584 (fontified t) 19584 19585 (face (rainbow-delimiters-depth-5-face) fontified t) 19585 19586 (face (rainbow-delimiters-depth-5-face) fontified t) 19586 19595 (fontified t) 19595 19596 (face (rainbow-delimiters-depth-4-face) fontified t) 19596 19601 (fontified t) 19601 19602 (face (rainbow-delimiters-depth-3-face) fontified t) 19602 19603 (face (rainbow-delimiters-depth-2-face) fontified t) 19603 19610 (fontified t) 19610 19611 (face (rainbow-delimiters-depth-2-face) fontified t)) . 137) (undo-tree-id2573 . -17252) (undo-tree-id2574 . -16862) (undo-tree-id2575 . -17281) (undo-tree-id2576 . -17352) (undo-tree-id2577 . -18668) (undo-tree-id2578 . -17169) (undo-tree-id2579 . -17217) (undo-tree-id2580 . -17718) (undo-tree-id2581 . -17139) (undo-tree-id2582 . -17281) (undo-tree-id2583 . -17281) (undo-tree-id2584 . -17281) (t 26015 51038 394011 219000)) nil (26015 51265 483920 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 19666 (fontified nil)) . 137) (undo-tree-id2572 . -17329) (t 26015 51164 210548 797000)) nil (26015 51265 483906 0) 0 nil])
([nil nil ((17516 . 17529) (t 26015 51181 933535 608000)) nil (26015 51265 483894 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17934 . 17935) (nil fontified nil 17529 . 17935) (17529 . 17935)) nil (26015 51265 483892 0) 0 nil])
([nil nil ((17953 . 17957) (17904 . 17920) (#("            " 0 12 (fontified t)) . 17904) (17860 . 17876) (#("            " 0 12 (fontified t)) . 17860) (17761 . 17777) (#("            " 0 12 (fontified t)) . 17761) (17667 . 17683) (#("            " 0 12 (fontified t)) . 17667) (17648 . 17664) (#("            " 0 12 (fontified t)) . 17648) (17598 . 17614) (#("            " 0 12 (fontified t)) . 17598) (17553 . 17569) (#("            " 0 12 (fontified t)) . 17553) (#("        " 0 8 (fontified t)) . -17529) 17507) nil (26015 51265 483885 0) 0 nil])
([nil nil ((#("window" 0 6 (fontified t)) . -17920) (undo-tree-id2593 . -6) (undo-tree-id2594 . -6) (undo-tree-id2595 . -6) (undo-tree-id2596 . -6) (undo-tree-id2597 . -6) (undo-tree-id2598 . -6) (undo-tree-id2599 . -6) (undo-tree-id2600 . -6) (undo-tree-id2601 . -6) (undo-tree-id2602 . -6) (undo-tree-id2603 . -6) (undo-tree-id2604 . -6) (undo-tree-id2605 . -6) (undo-tree-id2606 . -6) (undo-tree-id2607 . -6) (undo-tree-id2608 . -6) (undo-tree-id2609 . -6) (undo-tree-id2610 . -6) (undo-tree-id2611 . -6) (undo-tree-id2612 . -6) (undo-tree-id2613 . -6) (undo-tree-id2614 . -6) (undo-tree-id2615 . -6) (undo-tree-id2616 . -6) 17926 (t 26015 51265 517822 485000)) nil (26015 51297 489543 0) 0 nil])
([nil nil ((17920 . 17929)) nil (26015 51297 489518 0) 0 nil])
([nil nil ((17926 . 17932) (#("win" 0 3 (fontified nil)) . 17926) (17926 . 17929) (#("window" 0 6 (fontified nil)) . -17926) (17926 . 17932) (#("win" 0 3 (fontified t)) . -17926) (undo-tree-id2585 . -3) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -2) (undo-tree-id2590 . -2) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) 17929) nil (26015 51297 489510 0) 0 nil])
([nil nil ((17431 . 18012) (#("            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!" 0 12 (fontified t) 12 17 (face font-lock-type-face fontified t) 17 19 (fontified t) 19 36 (face font-lock-type-face fontified t) 36 38 (fontified t) 38 39 (syntax-table (1) fontified t) 39 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-5-face) fontified t) 53 54 (face (rainbow-delimiters-depth-5-face) fontified t) 54 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-5-face) fontified t) 70 71 (face (rainbow-delimiters-depth-5-face) fontified t) 71 85 (fontified t) 85 88 (face font-lock-comment-delimiter-face fontified t) 88 92 (face font-lock-comment-face fontified t)) . 17431) (t 26015 51383 462304 715000) (137 . 19803) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::AboutToWait => {
                // Application update code.

                // Queue a RedrawRequested event.
                //
                // You only need to call this if you've determined that you need to redraw in
                // applications which do not always need to. Applications that redraw continuously
                // can render here instead.
                state.window.request_redraw();
            },
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 746 747 (syntax-table (1)) 3800 3801 (syntax-table (1)) 3923 3924 (syntax-table (1)) 12328 12329 (syntax-table (1)) 12462 12463 (syntax-table (1)) 12485 12486 (syntax-table (1)) 12951 12952 (syntax-table (1)) 13234 13235 (syntax-table (1)) 13342 13343 (syntax-table (1)) 13581 13582 (syntax-table (1)) 13705 13706 (syntax-table (1)) 14680 14681 (syntax-table (1)) 16836 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16845 (face font-lock-keyword-face fontified t) 16845 16846 (fontified t) 16846 16848 (face font-lock-keyword-face fontified t) 16848 16849 (fontified t) 16849 16852 (face font-lock-function-name-face fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (face (rainbow-delimiters-depth-1-face) fontified t) 16854 16855 (fontified t) 16855 16856 (face (rainbow-delimiters-depth-1-face) fontified t) 16856 16857 (fontified t) 16857 16862 (fontified t) 16862 16866 (fontified t) 16866 16869 (face font-lock-keyword-face fontified t) 16869 16870 (fontified t) 16870 16880 (face font-lock-variable-name-face fontified t) 16880 16883 (fontified t) 16883 16892 (face font-lock-type-face fontified t) 16892 16897 (fontified t) 16897 16898 (face (rainbow-delimiters-depth-2-face) fontified t) 16898 16899 (face (rainbow-delimiters-depth-2-face) fontified t) 16899 16906 (fontified t) 16906 16907 (face (rainbow-delimiters-depth-2-face) fontified t) 16907 16908 (face (rainbow-delimiters-depth-2-face) fontified t) 16908 16914 (fontified t) 16914 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16924 (face font-lock-variable-name-face fontified t) 16924 16927 (fontified t) 16927 16940 (face font-lock-type-face fontified t) 16940 16945 (fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16947 (face (rainbow-delimiters-depth-2-face) fontified t) 16947 16953 (fontified t) 16953 16954 (face (rainbow-delimiters-depth-2-face) fontified t) 16954 16955 (face rust-ampersand-face fontified t) 16955 16965 (fontified t) 16965 16966 (face (rainbow-delimiters-depth-2-face) fontified t) 16966 16973 (fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16975 (face (rainbow-delimiters-depth-2-face) fontified t) 16975 16982 (fontified t) 16982 16985 (face font-lock-comment-delimiter-face fontified t) 16985 17059 (face font-lock-comment-face fontified t) 17059 17063 (fontified t) 17063 17066 (face font-lock-comment-delimiter-face fontified t) 17066 17139 (face font-lock-comment-face fontified t) 17139 17170 (fontified t) 17170 17171 (face (rainbow-delimiters-depth-2-face) fontified t) 17171 17182 (face font-lock-type-face fontified t) 17182 17184 (fontified t) 17184 17188 (face font-lock-type-face fontified t) 17188 17189 (face (rainbow-delimiters-depth-2-face) fontified t) 17189 17196 (fontified t) 17196 17199 (face font-lock-keyword-face fontified t) 17199 17200 (fontified t) 17200 17203 (face font-lock-keyword-face fontified t) 17203 17204 (fontified t) 17204 17209 (face font-lock-variable-name-face fontified t) 17209 17212 (fontified t) 17212 17217 (face font-lock-type-face fontified t) 17217 17222 (fontified t) 17222 17223 (face (rainbow-delimiters-depth-2-face) fontified t) 17223 17229 (fontified t) 17229 17230 (face (rainbow-delimiters-depth-2-face) fontified t) 17230 17231 (fontified t) 17231 17236 (face font-lock-keyword-face fontified t) 17236 17242 (fontified t) 17242 17245 (face font-lock-keyword-face fontified t) 17245 17246 (fontified t) 17246 17249 (face font-lock-keyword-face fontified t) 17249 17250 (fontified t) 17250 17266 (face font-lock-variable-name-face fontified t) 17266 17269 (fontified t) 17269 17276 (face font-lock-constant-face fontified t) 17276 17278 (fontified t) 17278 17285 (face font-lock-type-face fontified t) 17285 17290 (fontified t) 17290 17291 (face (rainbow-delimiters-depth-2-face) fontified t) 17291 17292 (face (rainbow-delimiters-depth-2-face) fontified t) 17292 17295 (fontified t) 17295 17298 (face font-lock-comment-delimiter-face fontified t) 17298 17303 (face font-lock-comment-face fontified t) 17303 17309 (fontified t) 17309 17312 (face font-lock-comment-delimiter-face fontified t) 17312 17318 (face font-lock-comment-face fontified t) 17318 17336 (fontified t) 17336 17337 (face (rainbow-delimiters-depth-2-face) fontified t) 17337 17341 (face font-lock-keyword-face fontified t) 17341 17356 (fontified t) 17356 17357 (face (rainbow-delimiters-depth-3-face) fontified t) 17357 17358 (fontified t) 17358 17366 (fontified t) 17366 17371 (face font-lock-keyword-face fontified t) 17371 17378 (fontified t) 17378 17379 (face (rainbow-delimiters-depth-4-face) fontified t) 17379 17380 (fontified t) 17380 17392 (fontified t) 17392 17397 (face font-lock-type-face fontified t) 17397 17399 (fontified t) 17399 17410 (face font-lock-type-face fontified t) 17410 17412 (fontified t) 17412 17413 (syntax-table (1) fontified t) 17413 17414 (fontified t) 17414 17415 (face (rainbow-delimiters-depth-5-face) fontified t) 17415 17432 (fontified t) 17432 17435 (face font-lock-comment-delimiter-face fontified t) 17435 17460 (face font-lock-comment-face fontified t) 17460 17461 (fontified t) 17461 17477 (fontified t) 17477 17480 (face font-lock-comment-delimiter-face fontified t) 17480 17511 (face font-lock-comment-face fontified t) 17511 17527 (fontified t) 17527 17529 (face font-lock-comment-delimiter-face fontified t) 17529 17530 (face font-lock-comment-face fontified t) 17530 17546 (fontified t) 17546 17549 (face font-lock-comment-delimiter-face fontified t) 17549 17624 (face font-lock-comment-face fontified t) 17624 17640 (fontified t) 17640 17643 (face font-lock-comment-delimiter-face fontified t) 17643 17723 (face font-lock-comment-face fontified t) 17723 17739 (fontified t) 17739 17742 (face font-lock-comment-delimiter-face fontified t) 17742 17767 (face font-lock-comment-face fontified t) 17767 17789 (fontified t) 17789 17795 (fontified t) 17795 17810 (fontified t) 17810 17811 (face (rainbow-delimiters-depth-6-face) fontified t) 17811 17812 (face (rainbow-delimiters-depth-6-face) fontified t) 17812 17814 (fontified t) 17814 17826 (fontified t) 17826 17827 (face (rainbow-delimiters-depth-5-face) fontified t) 17827 17828 (fontified t rear-nonsticky t) 17828 17829 (fontified t) 17829 17841 (fontified t) 17841 17846 (face font-lock-type-face fontified t) 17846 17848 (fontified t) 17848 17859 (face font-lock-type-face fontified t) 17859 17860 (fontified t) 17860 17861 (face (rainbow-delimiters-depth-5-face) fontified t) 17861 17878 (fontified t) 17878 17883 (face font-lock-variable-name-face fontified t) 17883 17885 (fontified t) 17885 17896 (face font-lock-type-face fontified t) 17896 17898 (fontified t) 17898 17909 (face font-lock-type-face fontified t) 17909 17910 (face (rainbow-delimiters-depth-6-face) fontified t) 17910 17918 (fontified t) 17918 17919 (face (rainbow-delimiters-depth-6-face) fontified t) 17919 17940 (fontified t) 17940 17943 (face font-lock-comment-delimiter-face fontified t) 17943 17979 (face font-lock-comment-face fontified t) 17979 17991 (fontified t) 17991 17992 (face (rainbow-delimiters-depth-5-face) fontified t) 17992 17994 (fontified t) 17994 17995 (fontified t syntax-table (1)) 17995 17996 (fontified t) 17996 17998 (face font-lock-keyword-face fontified t) 17998 18019 (fontified t) 18019 18020 (face (rainbow-delimiters-depth-5-face) fontified t) 18020 18074 (fontified t) 18074 18075 (face (rainbow-delimiters-depth-6-face) fontified t) 18075 18091 (fontified t) 18091 18092 (face (rainbow-delimiters-depth-6-face) fontified t) 18092 18105 (fontified t) 18105 18106 (face (rainbow-delimiters-depth-5-face) fontified t) 18106 18120 (fontified t) 18120 18125 (face font-lock-type-face fontified t) 18125 18127 (fontified t) 18127 18138 (face font-lock-type-face fontified t) 18138 18139 (fontified t) 18139 18140 (face (rainbow-delimiters-depth-5-face) fontified t) 18140 18157 (fontified t) 18157 18160 (face font-lock-keyword-face fontified t) 18160 18161 (fontified t) 18161 18166 (face font-lock-variable-name-face fontified t) 18166 18199 (fontified t) 18199 18200 (face (rainbow-delimiters-depth-5-face) fontified t) 18200 18202 (fontified t) 18202 18203 (fontified t syntax-table (1)) 18203 18204 (fontified t) 18204 18205 (face (rainbow-delimiters-depth-5-face) fontified t) 18205 18222 (fontified t) 18222 18224 (face font-lock-keyword-face fontified t) 18224 18237 (fontified t) 18237 18238 (face (rainbow-delimiters-depth-6-face) fontified t) 18238 18243 (fontified t) 18243 18244 (face (rainbow-delimiters-depth-6-face) fontified t) 18244 18245 (fontified t) 18245 18246 (face (rainbow-delimiters-depth-6-face) fontified t) 18246 18247 (fontified t) 18247 18250 (face font-lock-comment-delimiter-face fontified t) 18250 18259 (face font-lock-comment-face fontified t) 18259 18279 (fontified t) 18279 18284 (face font-lock-keyword-face fontified t) 18284 18291 (fontified t) 18291 18292 (face (rainbow-delimiters-depth-7-face) fontified t) 18292 18317 (fontified t) 18317 18328 (face font-lock-type-face fontified t) 18328 18330 (fontified t) 18330 18344 (face font-lock-type-face fontified t) 18344 18375 (fontified t) 18375 18386 (face font-lock-type-face fontified t) 18386 18388 (fontified t) 18388 18401 (face font-lock-type-face fontified t) 18401 18402 (fontified t) 18402 18403 (face (rainbow-delimiters-depth-8-face) fontified t) 18403 18436 (fontified t) 18436 18441 (face font-lock-variable-name-face fontified t) 18441 18475 (fontified t) 18475 18483 (face font-lock-type-face fontified t) 18483 18484 (fontified t) 18484 18485 (face (rainbow-delimiters-depth-9-face) fontified t) 18485 18522 (fontified t) 18522 18527 (face font-lock-variable-name-face fontified t) 18527 18529 (fontified t) 18529 18541 (face font-lock-type-face fontified t) 18541 18543 (fontified t) 18543 18550 (face font-lock-type-face fontified t) 18550 18588 (fontified t) 18588 18600 (face font-lock-variable-name-face fontified t) 18600 18602 (fontified t) 18602 18613 (face font-lock-type-face fontified t) 18613 18615 (fontified t) 18615 18619 (face font-lock-type-face fontified t) 18619 18620 (face (rainbow-delimiters-depth-1-face) fontified t) 18620 18627 (face font-lock-type-face fontified t) 18627 18629 (fontified t) 18629 18635 (face font-lock-type-face fontified t) 18635 18636 (face (rainbow-delimiters-depth-1-face) fontified t) 18636 18709 (fontified t) 18709 18710 (face (rainbow-delimiters-depth-9-face) fontified t) 18710 18775 (fontified t) 18775 18776 (face (rainbow-delimiters-depth-8-face) fontified t) 18776 18778 (fontified t) 18778 18779 (syntax-table (1) fontified t) 18779 18789 (fontified t) 18789 18790 (face (rainbow-delimiters-depth-8-face) fontified t) 18790 18791 (face (rainbow-delimiters-depth-8-face) fontified t) 18791 18811 (fontified t) 18811 18817 (fontified t) 18817 18828 (face font-lock-type-face fontified t) 18828 18830 (fontified t) 18830 18837 (face font-lock-type-face fontified t) 18837 18838 (face (rainbow-delimiters-depth-8-face) fontified t) 18838 18851 (fontified t) 18851 18852 (face (rainbow-delimiters-depth-8-face) fontified t) 18852 18854 (fontified t) 18854 18855 (syntax-table (1) fontified t) 18855 18856 (fontified t) 18856 18857 (face (rainbow-delimiters-depth-8-face) fontified t) 18857 18858 (fontified t) 18858 18898 (fontified t) 18898 18899 (face (rainbow-delimiters-depth-9-face) fontified t) 18899 18913 (fontified t) 18913 18914 (face (rainbow-delimiters-depth-9-face) fontified t) 18914 18966 (fontified t) 18966 18971 (fontified t) 18971 18972 (face (rainbow-delimiters-depth-9-face) fontified t) 18972 18973 (face (rainbow-delimiters-depth-9-face) fontified t) 18973 18975 (fontified t) 18975 18999 (fontified t) 18999 19000 (face (rainbow-delimiters-depth-8-face) fontified t) 19000 19029 (fontified t) 19029 19030 (syntax-table (1) fontified t) 19030 19031 (fontified t) 19031 19032 (face (rainbow-delimiters-depth-8-face) fontified t) 19032 19033 (face (rainbow-delimiters-depth-8-face) fontified t) 19033 19054 (fontified t) 19054 19055 (face (rainbow-delimiters-depth-7-face) fontified t) 19055 19072 (fontified t) 19072 19073 (face (rainbow-delimiters-depth-6-face) fontified t) 19073 19074 (fontified t) 19074 19078 (face font-lock-keyword-face fontified t) 19078 19079 (fontified t) 19079 19080 (face (rainbow-delimiters-depth-6-face) fontified t) 19080 19128 (fontified t) 19128 19129 (face (rainbow-delimiters-depth-7-face) fontified t) 19129 19130 (face (rainbow-delimiters-depth-7-face) fontified t) 19130 19148 (fontified t) 19148 19149 (face (rainbow-delimiters-depth-6-face) fontified t) 19149 19167 (fontified t) 19167 19169 (face font-lock-keyword-face fontified t) 19169 19180 (fontified t) 19180 19191 (face font-lock-type-face fontified t) 19191 19193 (fontified t) 19193 19208 (face font-lock-type-face fontified t) 19208 19209 (fontified t) 19209 19210 (face (rainbow-delimiters-depth-6-face) fontified t) 19210 19231 (fontified t) 19231 19234 (face font-lock-keyword-face fontified t) 19234 19235 (fontified t) 19235 19238 (face font-lock-variable-name-face fontified t) 19238 19241 (fontified t) 19241 19248 (face font-lock-constant-face fontified t) 19248 19250 (fontified t) 19250 19257 (face font-lock-type-face fontified t) 19257 19262 (fontified t) 19262 19263 (face (rainbow-delimiters-depth-7-face) fontified t) 19263 19264 (face (rainbow-delimiters-depth-7-face) fontified t) 19264 19286 (fontified t) 19286 19289 (face font-lock-keyword-face fontified t) 19289 19290 (fontified t) 19290 19292 (face font-lock-variable-name-face fontified t) 19292 19314 (fontified t) 19314 19319 (fontified t) 19319 19395 (fontified t) 19395 19396 (face (rainbow-delimiters-depth-7-face) fontified t) 19396 19398 (fontified t) 19398 19399 (face (rainbow-delimiters-depth-7-face) fontified t) 19399 19421 (fontified t) 19421 19426 (face font-lock-keyword-face fontified t) 19426 19439 (fontified t) 19439 19440 (face (rainbow-delimiters-depth-7-face) fontified t) 19440 19444 (face font-lock-constant-face fontified t) 19444 19446 (fontified t) 19446 19451 (face font-lock-type-face fontified t) 19451 19453 (fontified t) 19453 19458 (face font-lock-type-face fontified t) 19458 19459 (face (rainbow-delimiters-depth-7-face) fontified t) 19459 19460 (fontified t) 19460 19461 (face (rainbow-delimiters-depth-7-face) fontified t) 19461 19486 (fontified t) 19486 19488 (face font-lock-type-face fontified t) 19488 19489 (face (rainbow-delimiters-depth-8-face) fontified t) 19489 19490 (fontified t) 19490 19491 (face (rainbow-delimiters-depth-8-face) fontified t) 19491 19493 (fontified t) 19493 19494 (fontified t syntax-table (1)) 19494 19495 (fontified t) 19495 19496 (face (rainbow-delimiters-depth-8-face) fontified t) 19496 19497 (face (rainbow-delimiters-depth-8-face) fontified t) 19497 19522 (fontified t) 19522 19525 (face font-lock-comment-delimiter-face fontified t) 19525 19557 (face font-lock-comment-face fontified t) 19557 19581 (fontified t) 19581 19584 (face font-lock-type-face fontified t) 19584 19585 (face (rainbow-delimiters-depth-8-face) fontified t) 19585 19589 (face font-lock-constant-face fontified t) 19589 19591 (fontified t) 19591 19603 (face font-lock-type-face fontified t) 19603 19605 (fontified t) 19605 19609 (face font-lock-type-face fontified t) 19609 19610 (face (rainbow-delimiters-depth-8-face) fontified t) 19610 19612 (fontified t) 19612 19613 (fontified t syntax-table (1)) 19613 19626 (fontified t) 19626 19627 (face (rainbow-delimiters-depth-8-face) fontified t) 19627 19637 (fontified t) 19637 19638 (face (rainbow-delimiters-depth-8-face) fontified t) 19638 19664 (fontified t) 19664 19667 (face font-lock-comment-delimiter-face fontified t) 19667 19720 (face font-lock-comment-face fontified t) 19720 19744 (fontified t) 19744 19747 (face font-lock-type-face fontified t) 19747 19748 (face (rainbow-delimiters-depth-8-face) fontified t) 19748 19752 (face font-lock-constant-face fontified t) 19752 19754 (fontified t) 19754 19766 (face font-lock-type-face fontified t) 19766 19768 (fontified t) 19768 19779 (face font-lock-type-face fontified t) 19779 19780 (face (rainbow-delimiters-depth-8-face) fontified t) 19780 19782 (fontified t) 19782 19783 (fontified t syntax-table (1)) 19783 19793 (fontified t) 19793 19794 (face (rainbow-delimiters-depth-8-face) fontified t) 19794 19795 (face (rainbow-delimiters-depth-8-face) fontified t) 19795 19821 (fontified t) 19821 19824 (face font-lock-comment-delimiter-face fontified t) 19824 19898 (face font-lock-comment-face fontified t) 19898 19922 (fontified t) 19922 19925 (face font-lock-type-face fontified t) 19925 19926 (face (rainbow-delimiters-depth-8-face) fontified t) 19926 19927 (fontified t) 19927 19928 (face (rainbow-delimiters-depth-8-face) fontified t) 19928 19930 (fontified t) 19930 19931 (fontified t syntax-table (1)) 19931 19932 (fontified t) 19932 19939 (face font-lock-constant-face fontified t) 19939 19941 (fontified t) 19941 19947 (face font-lock-preprocessor-face fontified t) 19947 19948 (face (rainbow-delimiters-depth-8-face) fontified t) 19948 19954 (face font-lock-string-face fontified t) 19954 19957 (fontified t) 19957 19958 (face (rainbow-delimiters-depth-8-face) fontified t) 19958 19980 (fontified t) 19980 19981 (face (rainbow-delimiters-depth-7-face) fontified t) 19981 19998 (fontified t) 19998 19999 (face (rainbow-delimiters-depth-6-face) fontified t) 19999 20012 (fontified t) 20012 20013 (face (rainbow-delimiters-depth-5-face) fontified t) 20013 20031 (fontified t) 20031 20032 (fontified t syntax-table (1)) 20032 20033 (fontified t) 20033 20034 (face (rainbow-delimiters-depth-5-face) fontified t) 20034 20035 (face (rainbow-delimiters-depth-5-face) fontified t) 20035 20044 (fontified t) 20044 20045 (face (rainbow-delimiters-depth-4-face) fontified t) 20045 20050 (fontified t) 20050 20051 (face (rainbow-delimiters-depth-3-face) fontified t) 20051 20052 (face (rainbow-delimiters-depth-2-face) fontified t) 20052 20059 (fontified t) 20059 20060 (face (rainbow-delimiters-depth-2-face) fontified t)) . 137) (undo-tree-id2668 . -17828) (undo-tree-id2669 . -17795) (undo-tree-id2670 . -17795) (undo-tree-id2671 . -17139) (undo-tree-id2672 . -17303) (undo-tree-id2673 . -17379) (undo-tree-id2674 . -17392) (undo-tree-id2675 . -17783) (undo-tree-id2676 . -17783) (undo-tree-id2677 . -17767) 17932 (t 26015 51297 524992 147000)) nil (26015 51622 925052 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
<<<<<<< HEAD
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
=======
            Event::AboutToWait => {
                // Application update code.

                // Queue a RedrawRequested event.
                //
                // You only need to call this if you've determined that you need to redraw in
                // applications which do not always need to. Applications that redraw continuously
                // can render here instead.
                state.window.request_redraw();
            },
>>>>>>> winit_0_29
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 27 (face font-lock-constant-face fontified t) 27 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 39 (face font-lock-type-face fontified t) 39 41 (fontified t) 41 57 (face font-lock-type-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 60 (fontified t) 60 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 69 (face font-lock-constant-face fontified t) 69 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 77 (fontified t) 77 82 (face font-lock-constant-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 90 (face font-lock-type-face fontified t) 90 92 (fontified t) 92 103 (face font-lock-type-face fontified t) 103 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 131 (face font-lock-type-face fontified t) 131 133 (fontified t) 133 144 (face font-lock-type-face fontified t) 144 146 (fontified t) 146 159 (face font-lock-type-face fontified t) 159 161 (fontified t) 161 175 (face font-lock-type-face fontified t) 175 176 (face (rainbow-delimiters-depth-2-face) fontified t) 176 182 (fontified t) 182 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 206 (face font-lock-type-face fontified t) 206 208 (fontified t) 208 217 (face font-lock-type-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 224 (fontified t) 224 230 (face font-lock-constant-face fontified t) 230 232 (fontified t) 232 245 (face font-lock-type-face fontified t) 245 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 249 (fontified t) 249 252 (face font-lock-keyword-face fontified t) 252 253 (fontified t) 253 257 (face font-lock-constant-face fontified t) 257 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 265 (fontified t) 265 274 (face font-lock-type-face fontified t) 274 277 (fontified t) 277 280 (face font-lock-keyword-face fontified t) 280 281 (fontified t) 281 288 (face font-lock-constant-face fontified t) 288 290 (fontified t) 290 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 300 (face font-lock-constant-face fontified t) 300 302 (fontified t) 302 305 (face font-lock-keyword-face fontified t) 305 306 (fontified t) 306 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-constant-face fontified t) 329 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 340 (face font-lock-constant-face fontified t) 340 342 (fontified t) 342 345 (face font-lock-keyword-face fontified t) 345 346 (fontified t) 346 351 (face font-lock-constant-face fontified t) 351 353 (fontified t) 353 356 (face font-lock-comment-delimiter-face fontified t) 356 363 (face font-lock-comment-face fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 388 (face font-lock-type-face fontified t) 388 391 (fontified t) 391 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 406 (fontified t) 406 409 (face font-lock-keyword-face fontified t) 409 410 (fontified t) 410 418 (face font-lock-constant-face fontified t) 418 423 (fontified t) 423 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 432 (face font-lock-constant-face fontified t) 432 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 444 (face font-lock-type-face fontified t) 444 446 (fontified t) 446 452 (face font-lock-type-face fontified t) 452 453 (face (rainbow-delimiters-depth-1-face) fontified t) 453 456 (fontified t) 456 458 (face font-lock-keyword-face fontified t) 458 459 (fontified t) 459 481 (face font-lock-function-name-face fontified t) 481 482 (face (rainbow-delimiters-depth-1-face) fontified t) 482 487 (fontified t) 487 493 (face font-lock-variable-name-face fontified t) 493 495 (fontified t) 495 496 (face rust-ampersand-face fontified t) 496 500 (face font-lock-constant-face fontified t) 500 502 (fontified t) 502 508 (face font-lock-type-face fontified t) 508 514 (fontified t) 514 520 (face font-lock-variable-name-face fontified t) 520 522 (fontified t) 522 523 (face rust-ampersand-face fontified t) 523 527 (face font-lock-constant-face fontified t) 527 529 (fontified t) 529 543 (face font-lock-type-face fontified t) 543 549 (fontified t) 549 561 (face font-lock-variable-name-face fontified t) 561 563 (fontified t) 563 567 (face font-lock-constant-face fontified t) 567 569 (fontified t) 569 582 (face font-lock-type-face fontified t) 582 588 (fontified t) 588 600 (face font-lock-variable-name-face fontified t) 600 602 (fontified t) 602 608 (face font-lock-type-face fontified t) 608 609 (face (rainbow-delimiters-depth-2-face) fontified t) 609 613 (face font-lock-constant-face fontified t) 613 615 (fontified t) 615 628 (face font-lock-type-face fontified t) 628 629 (face (rainbow-delimiters-depth-2-face) fontified t) 629 635 (fontified t) 635 649 (face font-lock-variable-name-face fontified t) 649 651 (fontified t) 651 652 (face rust-ampersand-face fontified t) 652 653 (face (rainbow-delimiters-depth-2-face) fontified t) 653 657 (face font-lock-constant-face fontified t) 657 659 (fontified t) 659 677 (face font-lock-type-face fontified t) 677 678 (face (rainbow-delimiters-depth-2-face) fontified t) 678 684 (fontified t) 684 690 (face font-lock-variable-name-face fontified t) 690 692 (fontified t) 692 696 (face font-lock-constant-face fontified t) 696 698 (fontified t) 698 720 (face font-lock-type-face fontified t) 720 722 (fontified t) 722 723 (face (rainbow-delimiters-depth-1-face) fontified t) 723 725 (fontified t) 725 726 (syntax-table (1) fontified t) 726 727 (fontified t) 727 731 (face font-lock-constant-face fontified t) 731 733 (fontified t) 733 747 (face font-lock-type-face fontified t) 747 748 (fontified t) 748 749 (face (rainbow-delimiters-depth-1-face) fontified t) 749 754 (fontified t) 754 757 (face font-lock-keyword-face fontified t) 757 758 (fontified t) 758 764 (face font-lock-variable-name-face fontified t) 764 794 (fontified t) 794 795 (face (rainbow-delimiters-depth-2-face) fontified t) 795 801 (fontified t) 801 802 (face (rainbow-delimiters-depth-2-face) fontified t) 802 838 (fontified t) 838 839 (face (rainbow-delimiters-depth-2-face) fontified t) 839 840 (face rust-ampersand-face fontified t) 840 844 (face font-lock-constant-face fontified t) 844 846 (fontified t) 846 870 (face font-lock-type-face fontified t) 870 871 (fontified t) 871 872 (face (rainbow-delimiters-depth-3-face) fontified t) 872 881 (fontified t) 881 886 (face font-lock-variable-name-face fontified t) 886 888 (fontified t) 888 892 (face font-lock-type-face fontified t) 892 893 (face (rainbow-delimiters-depth-4-face) fontified t) 893 910 (face font-lock-string-face fontified t) 910 911 (face (rainbow-delimiters-depth-4-face) fontified t) 911 921 (fontified t) 921 927 (face font-lock-variable-name-face fontified t) 927 929 (fontified t) 929 933 (face font-lock-type-face fontified t) 933 934 (face (rainbow-delimiters-depth-4-face) fontified t) 934 940 (fontified t) 940 941 (face (rainbow-delimiters-depth-4-face) fontified t) 941 951 (fontified t) 951 957 (face font-lock-variable-name-face fontified t) 957 959 (fontified t) 959 963 (face font-lock-constant-face fontified t) 963 965 (fontified t) 965 976 (face font-lock-type-face fontified t) 976 977 (fontified t) 977 978 (face (rainbow-delimiters-depth-4-face) fontified t) 978 991 (fontified t) 991 997 (face font-lock-variable-name-face fontified t) 997 999 (fontified t) 999 1000 (face rust-ampersand-face fontified t) 1000 1020 (fontified t) 1020 1031 (face font-lock-variable-name-face fontified t) 1031 1033 (fontified t) 1033 1042 (face font-lock-string-face fontified t) 1042 1056 (fontified t) 1056 1063 (face font-lock-variable-name-face fontified t) 1063 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-4-face) fontified t) 1090 1100 (fontified t) 1100 1108 (face font-lock-variable-name-face fontified t) 1108 1110 (fontified t) 1110 1114 (face font-lock-type-face fontified t) 1114 1115 (face (rainbow-delimiters-depth-4-face) fontified t) 1115 1119 (face font-lock-constant-face fontified t) 1119 1121 (fontified t) 1121 1134 (face font-lock-type-face fontified t) 1134 1135 (fontified t) 1135 1136 (face (rainbow-delimiters-depth-5-face) fontified t) 1136 1149 (fontified t) 1149 1155 (face font-lock-variable-name-face fontified t) 1155 1157 (fontified t) 1157 1158 (face rust-ampersand-face fontified t) 1158 1178 (fontified t) 1178 1189 (face font-lock-variable-name-face fontified t) 1189 1191 (fontified t) 1191 1200 (face font-lock-string-face fontified t) 1200 1214 (fontified t) 1214 1221 (face font-lock-variable-name-face fontified t) 1221 1223 (fontified t) 1223 1224 (face rust-ampersand-face fontified t) 1224 1225 (face (rainbow-delimiters-depth-6-face) fontified t) 1225 1229 (face font-lock-type-face fontified t) 1229 1230 (face (rainbow-delimiters-depth-7-face) fontified t) 1230 1234 (face font-lock-constant-face fontified t) 1234 1236 (fontified t) 1236 1252 (face font-lock-type-face fontified t) 1252 1253 (fontified t) 1253 1254 (face (rainbow-delimiters-depth-8-face) fontified t) 1254 1271 (fontified t) 1271 1277 (face font-lock-variable-name-face fontified t) 1277 1309 (fontified t) 1309 1314 (face font-lock-variable-name-face fontified t) 1314 1316 (fontified t) 1316 1320 (face font-lock-type-face fontified t) 1320 1321 (face (rainbow-delimiters-depth-9-face) fontified t) 1321 1325 (face font-lock-constant-face fontified t) 1325 1327 (fontified t) 1327 1337 (face font-lock-type-face fontified t) 1337 1338 (fontified t) 1338 1339 (face (rainbow-delimiters-depth-1-face) fontified t) 1339 1360 (fontified t) 1360 1365 (face font-lock-variable-name-face fontified t) 1365 1367 (fontified t) 1367 1371 (face font-lock-constant-face fontified t) 1371 1373 (fontified t) 1373 1387 (face font-lock-type-face fontified t) 1387 1389 (fontified t) 1389 1396 (face font-lock-type-face fontified t) 1396 1418 (fontified t) 1418 1423 (face font-lock-variable-name-face fontified t) 1423 1425 (fontified t) 1425 1429 (face font-lock-constant-face fontified t) 1429 1431 (fontified t) 1431 1445 (face font-lock-type-face fontified t) 1445 1447 (fontified t) 1447 1454 (face font-lock-type-face fontified t) 1454 1472 (fontified t) 1472 1473 (face (rainbow-delimiters-depth-1-face) fontified t) 1473 1474 (face (rainbow-delimiters-depth-9-face) fontified t) 1474 1492 (fontified t) 1492 1500 (face font-lock-variable-name-face fontified t) 1500 1502 (face font-lock-variable-name-face fontified t) 1502 1504 (fontified t) 1504 1508 (face font-lock-constant-face fontified t) 1508 1510 (fontified t) 1510 1521 (face font-lock-type-face fontified t) 1521 1523 (fontified t) 1523 1526 (face font-lock-type-face fontified t) 1526 1528 (fontified t) 1528 1540 (fontified t) 1540 1541 (face (rainbow-delimiters-depth-8-face) fontified t) 1541 1542 (face (rainbow-delimiters-depth-7-face) fontified t) 1542 1543 (face (rainbow-delimiters-depth-6-face) fontified t) 1543 1553 (fontified t) 1553 1554 (face (rainbow-delimiters-depth-5-face) fontified t) 1554 1555 (face (rainbow-delimiters-depth-4-face) fontified t) 1555 1565 (fontified t) 1565 1574 (face font-lock-variable-name-face fontified t) 1574 1576 (fontified t) 1576 1580 (face font-lock-constant-face fontified t) 1580 1582 (fontified t) 1582 1596 (face font-lock-type-face fontified t) 1596 1597 (fontified t) 1597 1598 (face (rainbow-delimiters-depth-4-face) fontified t) 1598 1611 (fontified t) 1611 1619 (face font-lock-variable-name-face fontified t) 1619 1621 (fontified t) 1621 1625 (face font-lock-constant-face fontified t) 1625 1627 (fontified t) 1627 1644 (face font-lock-type-face fontified t) 1644 1646 (fontified t) 1646 1658 (face font-lock-type-face fontified t) 1658 1672 (fontified t) 1672 1690 (face font-lock-variable-name-face fontified t) 1690 1692 (fontified t) 1692 1696 (face font-lock-type-face fontified t) 1696 1710 (fontified t) 1710 1720 (face font-lock-variable-name-face fontified t) 1720 1722 (fontified t) 1722 1726 (face font-lock-constant-face fontified t) 1726 1728 (fontified t) 1728 1737 (face font-lock-type-face fontified t) 1737 1739 (fontified t) 1739 1742 (face font-lock-type-face fontified t) 1742 1756 (fontified t) 1756 1765 (face font-lock-variable-name-face fontified t) 1765 1767 (fontified t) 1767 1771 (face font-lock-type-face fontified t) 1771 1772 (face (rainbow-delimiters-depth-5-face) fontified t) 1772 1776 (face font-lock-constant-face fontified t) 1776 1778 (fontified t) 1778 1782 (face font-lock-type-face fontified t) 1782 1784 (fontified t) 1784 1788 (face font-lock-type-face fontified t) 1788 1789 (face (rainbow-delimiters-depth-5-face) fontified t) 1789 1803 (fontified t) 1803 1806 (face font-lock-comment-delimiter-face fontified t) 1806 1888 (face font-lock-comment-face fontified t) 1888 1900 (fontified t) 1900 1912 (face font-lock-variable-name-face fontified t) 1912 1914 (fontified t) 1914 1918 (face font-lock-constant-face fontified t) 1918 1920 (fontified t) 1920 1931 (face font-lock-type-face fontified t) 1931 1933 (fontified t) 1933 1937 (face font-lock-type-face fontified t) 1937 1951 (fontified t) 1951 1954 (face font-lock-comment-delimiter-face fontified t) 1954 1992 (face font-lock-comment-face fontified t) 1992 2004 (fontified t) 2004 2019 (face font-lock-variable-name-face fontified t) 2019 2021 (fontified t) 2021 2026 (face font-lock-keyword-face fontified t) 2026 2040 (fontified t) 2040 2043 (face font-lock-comment-delimiter-face fontified t) 2043 2089 (face font-lock-comment-face fontified t) 2089 2101 (fontified t) 2101 2113 (face font-lock-variable-name-face fontified t) 2113 2115 (fontified t) 2115 2120 (face font-lock-keyword-face fontified t) 2120 2130 (fontified t) 2130 2131 (face (rainbow-delimiters-depth-4-face) fontified t) 2131 2141 (fontified t) 2141 2154 (face font-lock-variable-name-face fontified t) 2154 2172 (fontified t) 2172 2173 (face (rainbow-delimiters-depth-4-face) fontified t) 2173 2182 (fontified t) 2182 2186 (face font-lock-constant-face fontified t) 2186 2188 (fontified t) 2188 2205 (face font-lock-type-face fontified t) 2205 2206 (fontified t) 2206 2207 (face (rainbow-delimiters-depth-5-face) fontified t) 2207 2240 (fontified t) 2240 2259 (face font-lock-variable-name-face fontified t) 2259 2261 (fontified t) 2261 2265 (face font-lock-keyword-face fontified t) 2265 2279 (fontified t) 2279 2292 (face font-lock-variable-name-face fontified t) 2292 2294 (fontified t) 2294 2298 (face font-lock-constant-face fontified t) 2298 2300 (fontified t) 2300 2315 (face font-lock-type-face fontified t) 2315 2317 (fontified t) 2317 2321 (face font-lock-type-face fontified t) 2321 2335 (fontified t) 2335 2342 (face font-lock-variable-name-face fontified t) 2342 2344 (fontified t) 2344 2348 (face font-lock-constant-face fontified t) 2348 2350 (fontified t) 2350 2362 (face font-lock-type-face fontified t) 2362 2371 (fontified t) 2371 2372 (face (rainbow-delimiters-depth-6-face) fontified t) 2372 2373 (face (rainbow-delimiters-depth-6-face) fontified t) 2373 2387 (fontified t) 2387 2391 (face font-lock-variable-name-face fontified t) 2391 2393 (fontified t) 2393 2397 (face font-lock-constant-face fontified t) 2397 2399 (fontified t) 2399 2413 (face font-lock-type-face fontified t) 2413 2422 (fontified t) 2422 2423 (face (rainbow-delimiters-depth-6-face) fontified t) 2423 2424 (face (rainbow-delimiters-depth-6-face) fontified t) 2424 2434 (fontified t) 2434 2435 (face (rainbow-delimiters-depth-5-face) fontified t) 2435 2436 (face (rainbow-delimiters-depth-4-face) fontified t) 2436 2446 (fontified t) 2446 2457 (face font-lock-variable-name-face fontified t) 2457 2459 (fontified t) 2459 2463 (face font-lock-constant-face fontified t) 2463 2465 (fontified t) 2465 2481 (face font-lock-type-face fontified t) 2481 2482 (fontified t) 2482 2483 (face (rainbow-delimiters-depth-4-face) fontified t) 2483 2496 (fontified t) 2496 2501 (face font-lock-variable-name-face fontified t) 2501 2518 (fontified t) 2518 2522 (face font-lock-variable-name-face fontified t) 2522 2540 (fontified t) 2540 2565 (face font-lock-variable-name-face fontified t) 2565 2567 (fontified t) 2567 2572 (face font-lock-keyword-face fontified t) 2572 2582 (fontified t) 2582 2583 (face (rainbow-delimiters-depth-4-face) fontified t) 2583 2593 (fontified t) 2593 2602 (face font-lock-variable-name-face fontified t) 2602 2604 (fontified t) 2604 2608 (face font-lock-type-face fontified t) 2608 2614 (fontified t) 2614 2615 (face (rainbow-delimiters-depth-3-face) fontified t) 2615 2616 (face (rainbow-delimiters-depth-2-face) fontified t) 2616 2617 (fontified t) 2617 2618 (face (rainbow-delimiters-depth-1-face) fontified t) 2618 2620 (fontified t) 2620 2626 (face font-lock-keyword-face fontified t) 2626 2627 (fontified t) 2627 2632 (face font-lock-type-face fontified t) 2632 2633 (fontified t) 2633 2634 (face (rainbow-delimiters-depth-1-face) fontified t) 2634 2639 (fontified t) 2639 2646 (face font-lock-variable-name-face fontified t) 2646 2648 (fontified t) 2648 2652 (face font-lock-constant-face fontified t) 2652 2654 (fontified t) 2654 2661 (face font-lock-type-face fontified t) 2661 2667 (fontified t) 2667 2673 (face font-lock-variable-name-face fontified t) 2673 2675 (fontified t) 2675 2679 (face font-lock-constant-face fontified t) 2679 2681 (fontified t) 2681 2687 (face font-lock-type-face fontified t) 2687 2693 (fontified t) 2693 2698 (face font-lock-variable-name-face fontified t) 2698 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2706 (fontified t) 2706 2711 (face font-lock-type-face fontified t) 2711 2717 (fontified t) 2717 2723 (face font-lock-variable-name-face fontified t) 2723 2725 (fontified t) 2725 2729 (face font-lock-constant-face fontified t) 2729 2731 (fontified t) 2731 2751 (face font-lock-type-face fontified t) 2751 2757 (fontified t) 2757 2761 (face font-lock-variable-name-face fontified t) 2761 2763 (fontified t) 2763 2768 (face font-lock-constant-face fontified t) 2768 2770 (fontified t) 2770 2773 (face font-lock-constant-face fontified t) 2773 2775 (fontified t) 2775 2787 (face font-lock-type-face fontified t) 2787 2788 (face (rainbow-delimiters-depth-2-face) fontified t) 2788 2791 (face font-lock-type-face fontified t) 2791 2792 (face (rainbow-delimiters-depth-2-face) fontified t) 2792 2798 (fontified t) 2798 2801 (face font-lock-comment-delimiter-face fontified t) 2801 2850 (face font-lock-comment-face fontified t) 2850 2854 (fontified t) 2854 2857 (face font-lock-comment-delimiter-face fontified t) 2857 2906 (face font-lock-comment-face fontified t) 2906 2910 (fontified t) 2910 2913 (face font-lock-comment-delimiter-face fontified t) 2913 2958 (face font-lock-comment-face fontified t) 2958 2962 (fontified t) 2962 2968 (face font-lock-variable-name-face fontified t) 2968 2970 (fontified t) 2970 2976 (face font-lock-type-face fontified t) 2976 2982 (fontified t) 2982 2997 (face font-lock-variable-name-face fontified t) 2997 2999 (fontified t) 2999 3003 (face font-lock-constant-face fontified t) 3003 3005 (fontified t) 3005 3019 (face font-lock-type-face fontified t) 3019 3025 (fontified t) 3025 3028 (face font-lock-variable-name-face fontified t) 3028 3034 (face font-lock-variable-name-face fontified t) 3034 3036 (fontified t) 3036 3041 (face font-lock-constant-face fontified t) 3041 3043 (fontified t) 3043 3048 (face font-lock-type-face fontified t) 3048 3050 (fontified t) 3050 3779 (fontified nil) 3779 3780 (syntax-table (1) fontified nil) 3780 3902 (fontified nil) 3902 3903 (syntax-table (1) fontified nil) 3903 12307 (fontified nil) 12307 12308 (syntax-table (1) fontified nil) 12308 12441 (fontified nil) 12441 12442 (syntax-table (1) fontified nil) 12442 12464 (fontified nil) 12464 12465 (syntax-table (1) fontified nil) 12465 12930 (fontified nil) 12930 12931 (syntax-table (1) fontified nil) 12931 13230 (fontified nil) 13230 13231 (syntax-table (1) fontified nil) 13231 13338 (fontified nil) 13338 13339 (syntax-table (1) fontified nil) 13339 13577 (fontified nil) 13577 13578 (syntax-table (1) fontified nil) 13578 13701 (fontified nil) 13701 13702 (syntax-table (1) fontified nil) 13702 14656 (fontified nil) 14656 14657 (syntax-table (1) fontified nil) 14657 16651 (fontified nil) 16651 16659 (fontified t) 16659 16662 (face font-lock-comment-delimiter-face fontified t) 16662 16715 (face font-lock-comment-face fontified t) 16715 16723 (fontified t) 16723 16727 (face font-lock-keyword-face fontified t) 16727 16740 (fontified t) 16740 16741 (face (rainbow-delimiters-depth-3-face) fontified t) 16741 16744 (face font-lock-constant-face fontified t) 16744 16746 (fontified t) 16746 16750 (face font-lock-constant-face fontified t) 16750 16756 (fontified t) 16756 16757 (face (rainbow-delimiters-depth-4-face) fontified t) 16757 16771 (fontified t) 16771 16772 (face (rainbow-delimiters-depth-5-face) fontified t) 16772 16773 (face (rainbow-delimiters-depth-5-face) fontified t) 16773 16774 (face (rainbow-delimiters-depth-4-face) fontified t) 16774 16775 (face (rainbow-delimiters-depth-3-face) fontified t) 16775 16799 (fontified t) 16799 16800 (face (rainbow-delimiters-depth-3-face) fontified t) 16800 16801 (face (rainbow-delimiters-depth-3-face) fontified t) 16801 16812 (fontified t) 16812 16814 (face font-lock-type-face fontified t) 16814 16815 (face (rainbow-delimiters-depth-3-face) fontified t) 16815 16816 (face (rainbow-delimiters-depth-4-face) fontified t) 16816 16817 (face (rainbow-delimiters-depth-4-face) fontified t) 16817 16818 (face (rainbow-delimiters-depth-3-face) fontified t) 16818 16824 (fontified t) 16824 16825 (face (rainbow-delimiters-depth-2-face) fontified t) 16825 16826 (fontified t) 16826 16827 (face (rainbow-delimiters-depth-1-face) fontified t) 16827 16830 (fontified t) 16830 16833 (face font-lock-keyword-face fontified t) 16833 16834 (fontified t) 16834 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16842 (face font-lock-keyword-face fontified t) 16842 16843 (fontified t) 16843 16846 (face font-lock-function-name-face fontified t) 16846 16847 (face (rainbow-delimiters-depth-1-face) fontified t) 16847 16848 (face (rainbow-delimiters-depth-1-face) fontified t) 16848 16849 (fontified t) 16849 16850 (face (rainbow-delimiters-depth-1-face) fontified t) 16850 16860 (fontified t) 16860 16863 (face font-lock-keyword-face fontified t) 16863 16864 (fontified t) 16864 16874 (face font-lock-variable-name-face fontified t) 16874 16877 (fontified t) 16877 16886 (face font-lock-type-face fontified t) 16886 16891 (fontified t) 16891 16892 (face (rainbow-delimiters-depth-2-face) fontified t) 16892 16893 (face (rainbow-delimiters-depth-2-face) fontified t) 16893 16899 (fontified t) 16899 16902 (face font-lock-keyword-face fontified t) 16902 16903 (fontified t) 16903 16908 (face font-lock-variable-name-face fontified t) 16908 16911 (fontified t) 16911 16915 (face font-lock-preprocessor-face fontified t) 16915 16916 (face (rainbow-delimiters-depth-2-face) fontified t) 16916 16932 (face font-lock-string-face fontified t) 16932 16933 (face (rainbow-delimiters-depth-2-face) fontified t) 16933 16939 (fontified t) 16939 16942 (face font-lock-keyword-face fontified t) 16942 16943 (fontified t) 16943 16949 (face font-lock-variable-name-face fontified t) 16949 16952 (fontified t) 16952 16957 (face font-lock-constant-face fontified t) 16957 16959 (fontified t) 16959 16965 (face font-lock-constant-face fontified t) 16965 16967 (fontified t) 16967 16980 (face font-lock-type-face fontified t) 16980 16985 (fontified t) 16985 16986 (face (rainbow-delimiters-depth-2-face) fontified t) 16986 16987 (face (rainbow-delimiters-depth-2-face) fontified t) 16987 17007 (fontified t) 17007 17008 (face (rainbow-delimiters-depth-2-face) fontified t) 17008 17013 (fontified t) 17013 17014 (face (rainbow-delimiters-depth-2-face) fontified t) 17014 17029 (fontified t) 17029 17030 (face (rainbow-delimiters-depth-2-face) fontified t) 17030 17031 (face rust-ampersand-face fontified t) 17031 17041 (fontified t) 17041 17042 (face (rainbow-delimiters-depth-2-face) fontified t) 17042 17058 (fontified t) 17058 17059 (face (rainbow-delimiters-depth-2-face) fontified t) 17059 17060 (face (rainbow-delimiters-depth-2-face) fontified t) 17060 17072 (fontified t) 17072 17075 (face font-lock-keyword-face fontified t) 17075 17076 (fontified t) 17076 17079 (face font-lock-keyword-face fontified t) 17079 17080 (fontified t) 17080 17085 (face font-lock-variable-name-face fontified t) 17085 17088 (fontified t) 17088 17093 (face font-lock-type-face fontified t) 17093 17098 (fontified t) 17098 17099 (face (rainbow-delimiters-depth-2-face) fontified t) 17099 17105 (fontified t) 17105 17106 (face (rainbow-delimiters-depth-2-face) fontified t) 17106 17107 (fontified t) 17107 17112 (face font-lock-keyword-face fontified t) 17112 17114 (fontified t) 17114 17117 (face font-lock-comment-delimiter-face fontified t) 17117 17122 (face font-lock-comment-face fontified t) 17122 17126 (fontified t) 17126 17129 (face font-lock-keyword-face fontified t) 17129 17130 (fontified t) 17130 17133 (face font-lock-keyword-face fontified t) 17133 17134 (fontified t) 17134 17150 (face font-lock-variable-name-face fontified t) 17150 17153 (fontified t) 17153 17160 (face font-lock-constant-face fontified t) 17160 17162 (fontified t) 17162 17169 (face font-lock-type-face fontified t) 17169 17174 (fontified t) 17174 17175 (face (rainbow-delimiters-depth-2-face) fontified t) 17175 17176 (face (rainbow-delimiters-depth-2-face) fontified t) 17176 17196 (fontified t) 17196 17197 (face (rainbow-delimiters-depth-2-face) fontified t) 17197 17201 (face font-lock-keyword-face fontified t) 17201 17227 (fontified t) 17227 17228 (face (rainbow-delimiters-depth-3-face) fontified t) 17228 17253 (fontified t) 17253 17264 (face font-lock-type-face fontified t) 17264 17266 (fontified t) 17266 17270 (face font-lock-type-face fontified t) 17270 17280 (fontified t) 17280 17285 (face font-lock-keyword-face fontified t) 17285 17292 (fontified t) 17292 17293 (face (rainbow-delimiters-depth-4-face) fontified t) 17293 17294 (fontified t) 17294 17295 (face (rainbow-delimiters-depth-5-face) fontified t) 17295 17296 (face (rainbow-delimiters-depth-6-face) fontified t) 17296 17297 (face (rainbow-delimiters-depth-7-face) fontified t) 17297 17298 (face (rainbow-delimiters-depth-8-face) fontified t) 17298 17299 (face (rainbow-delimiters-depth-9-face) fontified t) 17299 17300 (face (rainbow-delimiters-depth-1-face) fontified t) 17300 17301 (face (rainbow-delimiters-depth-2-face) fontified t) 17301 17302 (face smerge-markers fontified t) 17302 17306 (face font-lock-type-face fontified t) 17306 17307 (face smerge-markers fontified t) 17307 17319 (face (smerge-upper) fontified t) 17319 17324 (face (smerge-upper font-lock-type-face) fontified t) 17324 17326 (face (smerge-upper) fontified t) 17326 17343 (face (smerge-upper font-lock-type-face) fontified t) 17343 17345 (face (smerge-upper) fontified t) 17345 17346 (face (smerge-upper) syntax-table (1) fontified t) 17346 17359 (face (smerge-upper) fontified t) 17359 17360 (face (smerge-upper rainbow-delimiters-depth-3-face) fontified t) 17360 17361 (face (smerge-upper rainbow-delimiters-depth-3-face) fontified t) 17361 17376 (face (smerge-upper) fontified t) 17376 17377 (face (smerge-upper rainbow-delimiters-depth-3-face) fontified t) 17377 17378 (face (smerge-upper rainbow-delimiters-depth-3-face) fontified t) 17378 17392 (face (smerge-upper) fontified t) 17392 17395 (face (smerge-upper font-lock-comment-delimiter-face) fontified t) 17395 17400 (face (smerge-upper font-lock-comment-face) fontified t) 17400 17407 (face smerge-markers fontified t) 17407 17408 (face nil fontified t) 17408 17420 (face (smerge-lower) fontified t) 17420 17425 (face (smerge-lower font-lock-type-face) fontified t) 17425 17427 (face (smerge-lower) fontified t) 17427 17438 (face (smerge-lower font-lock-type-face) fontified t) 17438 17440 (face (smerge-lower) fontified t) 17440 17441 (face (smerge-lower) syntax-table (1) fontified t) 17441 17442 (face (smerge-lower) fontified t) 17442 17443 (face (smerge-lower rainbow-delimiters-depth-3-face) fontified t) 17443 17460 (face (smerge-lower) fontified t) 17460 17463 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17463 17488 (face (smerge-lower font-lock-comment-face) fontified t) 17488 17505 (face (smerge-lower) fontified t) 17505 17508 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17508 17539 (face (smerge-lower font-lock-comment-face) fontified t) 17539 17555 (face (smerge-lower) fontified t) 17555 17557 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17557 17558 (face (smerge-lower font-lock-comment-face) fontified t) 17558 17574 (face (smerge-lower) fontified t) 17574 17577 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17577 17652 (face (smerge-lower font-lock-comment-face) fontified t) 17652 17668 (face (smerge-lower) fontified t) 17668 17671 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17671 17751 (face (smerge-lower font-lock-comment-face) fontified t) 17751 17767 (face (smerge-lower) fontified t) 17767 17770 (face (smerge-lower font-lock-comment-delimiter-face) fontified t) 17770 17795 (face (smerge-lower font-lock-comment-face) fontified t) 17795 17838 (face (smerge-lower) fontified t) 17838 17839 (face (smerge-lower rainbow-delimiters-depth-4-face) fontified t) 17839 17840 (face (smerge-lower rainbow-delimiters-depth-4-face) fontified t) 17840 17854 (face (smerge-lower) fontified t) 17854 17855 (face (smerge-lower rainbow-delimiters-depth-3-face) fontified t) 17855 17857 (face (smerge-lower) fontified t) 17857 17858 (face (rainbow-delimiters-depth-2-face) fontified t) 17858 17859 (face (rainbow-delimiters-depth-1-face) fontified t) 17859 17860 (face (rainbow-delimiters-depth-9-face) fontified t) 17860 17861 (face (rainbow-delimiters-depth-8-face) fontified t) 17861 17862 (face (rainbow-delimiters-depth-7-face) fontified t) 17862 17863 (face (rainbow-delimiters-depth-6-face) fontified t) 17863 17864 (face (rainbow-delimiters-depth-5-face) fontified t) 17864 17875 (face smerge-markers fontified t) 17875 17876 (face smerge-markers fontified t) 17876 17888 (fontified t) 17888 17893 (face font-lock-type-face fontified t) 17893 17895 (fontified t) 17895 17906 (face font-lock-type-face fontified t) 17906 17907 (fontified t) 17907 17908 (face (rainbow-delimiters-depth-5-face) fontified t) 17908 17909 (fontified t) 17909 17925 (fontified t) 17925 17930 (face font-lock-variable-name-face fontified t) 17930 17932 (fontified t) 17932 17934 (face font-lock-type-face fontified t) 17934 17943 (face font-lock-type-face fontified t) 17943 17945 (fontified t) 17945 17956 (face font-lock-type-face fontified t) 17956 17957 (face (rainbow-delimiters-depth-6-face) fontified t) 17957 17965 (fontified t) 17965 17966 (face (rainbow-delimiters-depth-6-face) fontified t) 17966 17987 (fontified t) 17987 17990 (face font-lock-comment-delimiter-face fontified t) 17990 18026 (face font-lock-comment-face fontified t) 18026 18038 (fontified t) 18038 18039 (face (rainbow-delimiters-depth-5-face) fontified t) 18039 18041 (fontified t) 18041 18042 (syntax-table (1) fontified t) 18042 18043 (fontified t) 18043 18045 (face font-lock-keyword-face fontified t) 18045 18066 (fontified t) 18066 18067 (face (rainbow-delimiters-depth-5-face) fontified t) 18067 18121 (fontified t) 18121 18122 (face (rainbow-delimiters-depth-6-face) fontified t) 18122 18138 (fontified t) 18138 18139 (face (rainbow-delimiters-depth-6-face) fontified t) 18139 18152 (fontified t) 18152 18153 (face (rainbow-delimiters-depth-5-face) fontified t) 18153 18166 (fontified t) 18166 18169 (face font-lock-comment-delimiter-face fontified t) 18169 18178 (face font-lock-comment-face fontified t) 18178 18190 (fontified t) 18190 18195 (face font-lock-type-face fontified t) 18195 18197 (fontified t) 18197 18208 (face font-lock-type-face fontified t) 18208 18209 (fontified t) 18209 18210 (face (rainbow-delimiters-depth-5-face) fontified t) 18210 18227 (fontified t) 18227 18230 (face font-lock-keyword-face fontified t) 18230 18231 (fontified t) 18231 18236 (face font-lock-variable-name-face fontified t) 18236 18277 (fontified t) 18277 18278 (face (rainbow-delimiters-depth-5-face) fontified t) 18278 18279 (fontified t) 18279 18281 (face font-lock-keyword-face fontified t) 18281 18307 (fontified t) 18307 18308 (face (rainbow-delimiters-depth-5-face) fontified t) 18308 18309 (face (rainbow-delimiters-depth-5-face) fontified t) 18309 18312 (fontified t) 18312 18313 (face (rainbow-delimiters-depth-5-face) fontified t) 18313 18314 (face (rainbow-delimiters-depth-5-face) fontified t) 18314 18330 (fontified t) 18330 18331 (face (rainbow-delimiters-depth-5-face) fontified t) 18331 18336 (fontified t) 18336 18337 (face (rainbow-delimiters-depth-5-face) fontified t) 18337 18339 (fontified t) 18339 18340 (syntax-table (1) fontified t) 18340 18341 (fontified t) 18341 18342 (face (rainbow-delimiters-depth-5-face) fontified t) 18342 18359 (fontified t) 18359 18364 (face font-lock-keyword-face fontified t) 18364 18371 (fontified t) 18371 18372 (face (rainbow-delimiters-depth-6-face) fontified t) 18372 18393 (fontified t) 18393 18394 (face font-lock-preprocessor-face fontified t) 18394 18395 (face (rainbow-delimiters-depth-7-face font-lock-preprocessor-face) fontified t) 18395 18398 (face font-lock-preprocessor-face fontified t) 18398 18399 (face (rainbow-delimiters-depth-8-face font-lock-preprocessor-face) fontified t) 18399 18402 (face font-lock-preprocessor-face fontified t) 18402 18403 (face (rainbow-delimiters-depth-9-face font-lock-preprocessor-face) fontified t) 18403 18415 (face font-lock-preprocessor-face fontified t) 18415 18423 (face font-lock-string-face fontified t) 18423 18424 (face (rainbow-delimiters-depth-9-face font-lock-preprocessor-face) fontified t) 18424 18425 (face (rainbow-delimiters-depth-8-face font-lock-preprocessor-face) fontified t) 18425 18426 (face (rainbow-delimiters-depth-7-face font-lock-preprocessor-face) fontified t) 18426 18447 (fontified t) 18447 18458 (face font-lock-type-face fontified t) 18458 18460 (fontified t) 18460 18474 (face font-lock-type-face fontified t) 18474 18497 (fontified t) 18497 18508 (face font-lock-type-face fontified t) 18508 18510 (fontified t) 18510 18523 (face font-lock-type-face fontified t) 18523 18524 (fontified t) 18524 18525 (face (rainbow-delimiters-depth-7-face) fontified t) 18525 18550 (fontified t) 18550 18555 (face font-lock-variable-name-face fontified t) 18555 18585 (fontified t) 18585 18598 (face font-lock-type-face fontified t) 18598 18599 (fontified t) 18599 18600 (face (rainbow-delimiters-depth-8-face) fontified t) 18600 18633 (fontified t) 18633 18638 (face font-lock-variable-name-face fontified t) 18638 18640 (fontified t) 18640 18652 (face font-lock-type-face fontified t) 18652 18654 (fontified t) 18654 18661 (face font-lock-type-face fontified t) 18661 18695 (fontified t) 18695 18710 (face font-lock-variable-name-face fontified t) 18710 18712 (fontified t) 18712 18716 (face font-lock-type-face fontified t) 18716 18717 (face (rainbow-delimiters-depth-9-face) fontified t) 18717 18731 (face font-lock-type-face fontified t) 18731 18733 (fontified t) 18733 18739 (face font-lock-type-face fontified t) 18739 18740 (face (rainbow-delimiters-depth-9-face) fontified t) 18740 18805 (fontified t) 18805 18806 (face (rainbow-delimiters-depth-8-face) fontified t) 18806 18855 (fontified t) 18855 18856 (face (rainbow-delimiters-depth-7-face) fontified t) 18856 18858 (fontified t) 18858 18859 (syntax-table (1) fontified t) 18859 18876 (fontified t) 18876 18887 (face font-lock-type-face fontified t) 18887 18889 (fontified t) 18889 18893 (face font-lock-type-face fontified t) 18893 18915 (fontified t) 18915 18926 (face font-lock-type-face fontified t) 18926 18928 (fontified t) 18928 18935 (face font-lock-type-face fontified t) 18935 18936 (face (rainbow-delimiters-depth-7-face) fontified t) 18936 18949 (fontified t) 18949 18950 (face (rainbow-delimiters-depth-7-face) fontified t) 18950 18952 (fontified t) 18952 18953 (syntax-table (1) fontified t) 18953 18954 (fontified t) 18954 18955 (face (rainbow-delimiters-depth-7-face) fontified t) 18955 18992 (fontified t) 18992 18993 (face (rainbow-delimiters-depth-8-face) fontified t) 18993 19007 (fontified t) 19007 19008 (face (rainbow-delimiters-depth-8-face) fontified t) 19008 19030 (fontified t) 19030 19031 (face (rainbow-delimiters-depth-7-face) fontified t) 19031 19052 (fontified t) 19052 19063 (face font-lock-type-face fontified t) 19063 19065 (fontified t) 19065 19083 (face font-lock-type-face fontified t) 19083 19084 (fontified t) 19084 19085 (face (rainbow-delimiters-depth-7-face) fontified t) 19085 19105 (fontified t) 19105 19106 (face (rainbow-delimiters-depth-7-face) fontified t) 19106 19108 (fontified t) 19108 19109 (syntax-table (1) fontified t) 19109 19110 (fontified t) 19110 19111 (face (rainbow-delimiters-depth-7-face) fontified t) 19111 19148 (fontified t) 19148 19149 (face (rainbow-delimiters-depth-8-face) fontified t) 19149 19165 (fontified t) 19165 19166 (face (rainbow-delimiters-depth-8-face) fontified t) 19166 19188 (fontified t) 19188 19189 (face (rainbow-delimiters-depth-7-face) fontified t) 19189 19213 (fontified t) 19213 19214 (syntax-table (1) fontified t) 19214 19215 (fontified t) 19215 19216 (face (rainbow-delimiters-depth-7-face) fontified t) 19216 19217 (face (rainbow-delimiters-depth-7-face) fontified t) 19217 19234 (fontified t) 19234 19235 (face (rainbow-delimiters-depth-6-face) fontified t) 19235 19248 (fontified t) 19248 19249 (face (rainbow-delimiters-depth-5-face) fontified t) 19249 19262 (fontified t) 19262 19265 (face font-lock-comment-delimiter-face fontified t) 19265 19274 (face font-lock-comment-face fontified t) 19274 19286 (fontified t) 19286 19291 (face font-lock-type-face fontified t) 19291 19293 (fontified t) 19293 19308 (face font-lock-type-face fontified t) 19308 19309 (face (rainbow-delimiters-depth-5-face) fontified t) 19309 19318 (fontified t) 19318 19319 (face (rainbow-delimiters-depth-5-face) fontified t) 19319 19320 (fontified t) 19320 19322 (face font-lock-keyword-face fontified t) 19322 19348 (fontified t) 19348 19349 (face (rainbow-delimiters-depth-5-face) fontified t) 19349 19350 (face (rainbow-delimiters-depth-5-face) fontified t) 19350 19353 (fontified t) 19353 19354 (face (rainbow-delimiters-depth-5-face) fontified t) 19354 19355 (face (rainbow-delimiters-depth-5-face) fontified t) 19355 19357 (fontified t) 19357 19358 (syntax-table (1) fontified t) 19358 19359 (fontified t) 19359 19360 (face (rainbow-delimiters-depth-5-face) fontified t) 19360 19377 (fontified t) 19377 19380 (face font-lock-keyword-face fontified t) 19380 19381 (fontified t) 19381 19384 (face font-lock-variable-name-face fontified t) 19384 19387 (fontified t) 19387 19394 (face font-lock-constant-face fontified t) 19394 19396 (fontified t) 19396 19403 (face font-lock-type-face fontified t) 19403 19408 (fontified t) 19408 19409 (face (rainbow-delimiters-depth-6-face) fontified t) 19409 19410 (face (rainbow-delimiters-depth-6-face) fontified t) 19410 19428 (fontified t) 19428 19431 (face font-lock-keyword-face fontified t) 19431 19432 (fontified t) 19432 19434 (face font-lock-variable-name-face fontified t) 19434 19461 (fontified t) 19461 19601 (fontified nil) 19601 19602 (syntax-table (1) fontified nil) 19602 19760 (fontified nil) 19760 19761 (syntax-table (1) fontified nil) 19761 19922 (fontified nil) 19922 19923 (syntax-table (1) fontified nil) 19923 20060 (fontified nil) 20060 20061 (syntax-table (1) fontified nil) 20061 20135 (fontified nil) 20135 20136 (syntax-table (1) fontified nil) 20136 20155 (fontified nil)) . 137) (undo-tree-id2665 . -17934) (undo-tree-id2666 . -16651) (undo-tree-id2667 . -17934) 18071 (t 26015 51394 304360 226000)) nil (26015 51622 925040 0) 0 nil])
([nil nil ((17536 . 17985) (t 26015 51432 309728 32000)) nil (26015 51622 925035 0) 0 nil])
([nil nil ((#("                            state.window.request_redraw();
" 0 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-9-face) fontified t) 56 57 (face (rainbow-delimiters-depth-9-face) fontified t) 57 59 (fontified t)) . -19053) (undo-tree-id2640 . -59) (undo-tree-id2641 . -59) (undo-tree-id2642 . -44) (undo-tree-id2643 . -44) (undo-tree-id2644 . -44) (undo-tree-id2645 . -44) (undo-tree-id2646 . -44) (undo-tree-id2647 . -44) (undo-tree-id2648 . -41) (undo-tree-id2649 . -48) (undo-tree-id2650 . -48) (undo-tree-id2651 . -41) (undo-tree-id2652 . -41) (undo-tree-id2653 . -48) (undo-tree-id2654 . -48) (undo-tree-id2655 . -59) (undo-tree-id2656 . -59) (undo-tree-id2657 . -41) (undo-tree-id2658 . -59) (undo-tree-id2659 . -59) (undo-tree-id2660 . -59) (undo-tree-id2661 . -59) (undo-tree-id2662 . -59) (undo-tree-id2663 . -59) (undo-tree-id2664 . -59) 19112 (t 26015 51444 178185 713000)) nil (26015 51622 925032 0) 0 nil])
([nil nil ((#("else {
                    state.window.request_redraw();
                }" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-6-face) fontified t) 6 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-7-face) fontified t) 55 56 (face (rainbow-delimiters-depth-7-face) fontified t) 56 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-6-face) fontified t)) . -19152) (undo-tree-id2632 . -75) (undo-tree-id2633 . -75) (undo-tree-id2634 . -75) (undo-tree-id2635 . -58) (undo-tree-id2636 . -75) (undo-tree-id2637 . -75) (undo-tree-id2638 . -75) (undo-tree-id2639 . -75) 19227) nil (26015 51622 925007 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -19151) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) 19152) nil (26015 51622 924995 0) 0 nil])
([nil nil ((#("        info!(\"start light render pipeline\");" 0 8 (fontified t) 8 13 (face font-lock-preprocessor-face fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t) 14 43 (face font-lock-string-face fontified t) 43 44 (face (rainbow-delimiters-depth-3-face) fontified t) 44 45 (fontified t)) . 16134) (undo-tree-id2681 . -20) (undo-tree-id2682 . -20) (undo-tree-id2683 . -20) (undo-tree-id2684 . -45) (t 26015 51622 964292 325000)) nil (26015 51702 463150 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16134) (undo-tree-id2680 . -1)) nil (26015 51702 463144 0) 0 nil])
([nil nil ((#("        info!(\"start model render pipeline\");" 0 8 (fontified t) 8 13 (face font-lock-preprocessor-face fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t) 14 43 (face font-lock-string-face fontified t) 43 44 (face (rainbow-delimiters-depth-3-face) fontified t) 44 45 (fontified t)) . 16410) (undo-tree-id2679 . -45)) nil (26015 51702 463142 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16410) (undo-tree-id2678 . -1)) nil (26015 51702 463137 0) 0 nil])
([nil nil ((17431 . 18012) (#("            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!" 0 92 (fontified nil)) . 17431) (t 26015 63773 227303 467000) (137 . 19803) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::AboutToWait => {
                // Application update code.

                // Queue a RedrawRequested event.
                //
                // You only need to call this if you've determined that you need to redraw in
                // applications which do not always need to. Applications that redraw continuously
                // can render here instead.
                state.window.request_redraw();
            },
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                        },
                        _ => {}
                    }
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 74 (face font-lock-constant-face fontified t) 74 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 82 (face font-lock-type-face fontified t) 82 84 (fontified t) 84 95 (face font-lock-type-face fontified t) 95 97 (fontified t) 97 105 (face font-lock-type-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 132 (face font-lock-type-face fontified t) 132 134 (fontified t) 134 145 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) fontified t) 146 152 (fontified t) 152 162 (face font-lock-constant-face fontified t) 162 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-2-face) fontified t) 165 176 (face font-lock-type-face fontified t) 176 178 (fontified t) 178 187 (face font-lock-type-face fontified t) 187 188 (face (rainbow-delimiters-depth-2-face) fontified t) 188 194 (fontified t) 194 200 (face font-lock-constant-face fontified t) 200 202 (fontified t) 202 215 (face font-lock-type-face fontified t) 215 217 (fontified t) 217 225 (face font-lock-constant-face fontified t) 225 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-2-face) fontified t) 228 239 (face font-lock-type-face fontified t) 239 241 (fontified t) 241 248 (face font-lock-type-face fontified t) 248 249 (face (rainbow-delimiters-depth-2-face) fontified t) 249 251 (fontified t) 251 252 (face (rainbow-delimiters-depth-1-face) fontified t) 252 254 (fontified t) 254 257 (face font-lock-keyword-face fontified t) 257 258 (fontified t) 258 262 (face font-lock-constant-face fontified t) 262 264 (fontified t) 264 268 (face font-lock-constant-face fontified t) 268 270 (fontified t) 270 279 (face font-lock-type-face fontified t) 279 282 (fontified t) 282 285 (face font-lock-keyword-face fontified t) 285 286 (fontified t) 286 293 (face font-lock-constant-face fontified t) 293 295 (fontified t) 295 298 (face font-lock-keyword-face fontified t) 298 299 (fontified t) 299 305 (face font-lock-constant-face fontified t) 305 307 (fontified t) 307 310 (face font-lock-keyword-face fontified t) 310 311 (fontified t) 311 320 (face font-lock-constant-face fontified t) 320 322 (fontified t) 322 325 (face font-lock-keyword-face fontified t) 325 326 (fontified t) 326 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 339 (face font-lock-keyword-face fontified t) 339 340 (fontified t) 340 350 (face font-lock-constant-face fontified t) 350 352 (fontified t) 352 355 (face font-lock-keyword-face fontified t) 355 356 (fontified t) 356 361 (face font-lock-constant-face fontified t) 361 363 (fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 377 (face font-lock-comment-delimiter-face fontified t) 377 384 (face font-lock-comment-face fontified t) 384 387 (face font-lock-keyword-face fontified t) 387 388 (fontified t) 388 393 (face font-lock-constant-face fontified t) 393 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 403 (fontified t) 403 409 (face font-lock-type-face fontified t) 409 412 (fontified t) 412 415 (face font-lock-keyword-face fontified t) 415 416 (fontified t) 416 422 (face font-lock-constant-face fontified t) 422 427 (fontified t) 427 430 (face font-lock-keyword-face fontified t) 430 431 (fontified t) 431 439 (face font-lock-constant-face fontified t) 439 444 (fontified t) 444 447 (face font-lock-keyword-face fontified t) 447 448 (fontified t) 448 453 (face font-lock-constant-face fontified t) 453 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-1-face) fontified t) 456 465 (face font-lock-type-face fontified t) 465 467 (fontified t) 467 473 (face font-lock-type-face fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 477 (fontified t) 477 479 (face font-lock-keyword-face fontified t) 479 480 (fontified t) 480 502 (face font-lock-function-name-face fontified t) 502 503 (face (rainbow-delimiters-depth-1-face) fontified t) 503 508 (fontified t) 508 514 (face font-lock-variable-name-face fontified t) 514 516 (fontified t) 516 517 (face rust-ampersand-face fontified t) 517 521 (face font-lock-constant-face fontified t) 521 523 (fontified t) 523 529 (face font-lock-type-face fontified t) 529 535 (fontified t) 535 541 (face font-lock-variable-name-face fontified t) 541 543 (fontified t) 543 544 (face rust-ampersand-face fontified t) 544 548 (face font-lock-constant-face fontified t) 548 550 (fontified t) 550 564 (face font-lock-type-face fontified t) 564 570 (fontified t) 570 582 (face font-lock-variable-name-face fontified t) 582 584 (fontified t) 584 588 (face font-lock-constant-face fontified t) 588 590 (fontified t) 590 603 (face font-lock-type-face fontified t) 603 609 (fontified t) 609 621 (face font-lock-variable-name-face fontified t) 621 623 (fontified t) 623 629 (face font-lock-type-face fontified t) 629 630 (face (rainbow-delimiters-depth-2-face) fontified t) 630 634 (face font-lock-constant-face fontified t) 634 636 (fontified t) 636 649 (face font-lock-type-face fontified t) 649 650 (face (rainbow-delimiters-depth-2-face) fontified t) 650 656 (fontified t) 656 670 (face font-lock-variable-name-face fontified t) 670 672 (fontified t) 672 673 (face rust-ampersand-face fontified t) 673 674 (face (rainbow-delimiters-depth-2-face) fontified t) 674 678 (face font-lock-constant-face fontified t) 678 680 (fontified t) 680 698 (face font-lock-type-face fontified t) 698 699 (face (rainbow-delimiters-depth-2-face) fontified t) 699 705 (fontified t) 705 711 (face font-lock-variable-name-face fontified t) 711 713 (fontified t) 713 717 (face font-lock-constant-face fontified t) 717 719 (fontified t) 719 741 (face font-lock-type-face fontified t) 741 743 (fontified t) 743 744 (face (rainbow-delimiters-depth-1-face) fontified t) 744 746 (fontified t) 746 747 (syntax-table (1) fontified t) 747 748 (fontified t) 748 752 (face font-lock-constant-face fontified t) 752 754 (fontified t) 754 768 (face font-lock-type-face fontified t) 768 769 (fontified t) 769 770 (face (rainbow-delimiters-depth-1-face) fontified t) 770 775 (fontified t) 775 778 (face font-lock-keyword-face fontified t) 778 779 (fontified t) 779 785 (face font-lock-variable-name-face fontified t) 785 815 (fontified t) 815 816 (face (rainbow-delimiters-depth-2-face) fontified t) 816 822 (fontified t) 822 823 (face (rainbow-delimiters-depth-2-face) fontified t) 823 859 (fontified t) 859 860 (face (rainbow-delimiters-depth-2-face) fontified t) 860 861 (face rust-ampersand-face fontified t) 861 865 (face font-lock-constant-face fontified t) 865 867 (fontified t) 867 891 (face font-lock-type-face fontified t) 891 892 (fontified t) 892 893 (face (rainbow-delimiters-depth-3-face) fontified t) 893 902 (fontified t) 902 907 (face font-lock-variable-name-face fontified t) 907 909 (fontified t) 909 913 (face font-lock-type-face fontified t) 913 914 (face (rainbow-delimiters-depth-4-face) fontified t) 914 931 (face font-lock-string-face fontified t) 931 932 (face (rainbow-delimiters-depth-4-face) fontified t) 932 942 (fontified t) 942 948 (face font-lock-variable-name-face fontified t) 948 950 (fontified t) 950 954 (face font-lock-type-face fontified t) 954 955 (face (rainbow-delimiters-depth-4-face) fontified t) 955 961 (fontified t) 961 962 (face (rainbow-delimiters-depth-4-face) fontified t) 962 972 (fontified t) 972 978 (face font-lock-variable-name-face fontified t) 978 980 (fontified t) 980 984 (face font-lock-constant-face fontified t) 984 986 (fontified t) 986 997 (face font-lock-type-face fontified t) 997 998 (fontified t) 998 999 (face (rainbow-delimiters-depth-4-face) fontified t) 999 1012 (fontified t) 1012 1018 (face font-lock-variable-name-face fontified t) 1018 1020 (fontified t) 1020 1021 (face rust-ampersand-face fontified t) 1021 1041 (fontified t) 1041 1052 (face font-lock-variable-name-face fontified t) 1052 1054 (fontified t) 1054 1063 (face font-lock-string-face fontified t) 1063 1077 (fontified t) 1077 1084 (face font-lock-variable-name-face fontified t) 1084 1110 (fontified t) 1110 1111 (face (rainbow-delimiters-depth-4-face) fontified t) 1111 1121 (fontified t) 1121 1129 (face font-lock-variable-name-face fontified t) 1129 1131 (fontified t) 1131 1135 (face font-lock-type-face fontified t) 1135 1136 (face (rainbow-delimiters-depth-4-face) fontified t) 1136 1140 (face font-lock-constant-face fontified t) 1140 1142 (fontified t) 1142 1155 (face font-lock-type-face fontified t) 1155 1156 (fontified t) 1156 1157 (face (rainbow-delimiters-depth-5-face) fontified t) 1157 1170 (fontified t) 1170 1176 (face font-lock-variable-name-face fontified t) 1176 1178 (fontified t) 1178 1179 (face rust-ampersand-face fontified t) 1179 1199 (fontified t) 1199 1210 (face font-lock-variable-name-face fontified t) 1210 1212 (fontified t) 1212 1221 (face font-lock-string-face fontified t) 1221 1235 (fontified t) 1235 1242 (face font-lock-variable-name-face fontified t) 1242 1244 (fontified t) 1244 1245 (face rust-ampersand-face fontified t) 1245 1246 (face (rainbow-delimiters-depth-6-face) fontified t) 1246 1250 (face font-lock-type-face fontified t) 1250 1251 (face (rainbow-delimiters-depth-7-face) fontified t) 1251 1255 (face font-lock-constant-face fontified t) 1255 1257 (fontified t) 1257 1273 (face font-lock-type-face fontified t) 1273 1274 (fontified t) 1274 1275 (face (rainbow-delimiters-depth-8-face) fontified t) 1275 1292 (fontified t) 1292 1298 (face font-lock-variable-name-face fontified t) 1298 1330 (fontified t) 1330 1335 (face font-lock-variable-name-face fontified t) 1335 1337 (fontified t) 1337 1341 (face font-lock-type-face fontified t) 1341 1342 (face (rainbow-delimiters-depth-9-face) fontified t) 1342 1346 (face font-lock-constant-face fontified t) 1346 1348 (fontified t) 1348 1358 (face font-lock-type-face fontified t) 1358 1359 (fontified t) 1359 1360 (face (rainbow-delimiters-depth-1-face) fontified t) 1360 1381 (fontified t) 1381 1386 (face font-lock-variable-name-face fontified t) 1386 1388 (fontified t) 1388 1392 (face font-lock-constant-face fontified t) 1392 1394 (fontified t) 1394 1408 (face font-lock-type-face fontified t) 1408 1410 (fontified t) 1410 1417 (face font-lock-type-face fontified t) 1417 1439 (fontified t) 1439 1444 (face font-lock-variable-name-face fontified t) 1444 1446 (fontified t) 1446 1450 (face font-lock-constant-face fontified t) 1450 1452 (fontified t) 1452 1466 (face font-lock-type-face fontified t) 1466 1468 (fontified t) 1468 1475 (face font-lock-type-face fontified t) 1475 1493 (fontified t) 1493 1494 (face (rainbow-delimiters-depth-1-face) fontified t) 1494 1495 (face (rainbow-delimiters-depth-9-face) fontified t) 1495 1500 (fontified t) 1500 1513 (fontified t) 1513 1523 (face font-lock-variable-name-face fontified t) 1523 1525 (fontified t) 1525 1529 (face font-lock-constant-face fontified t) 1529 1531 (fontified t) 1531 1542 (face font-lock-type-face fontified t) 1542 1544 (fontified t) 1544 1547 (face font-lock-type-face fontified t) 1547 1549 (fontified t) 1549 1561 (fontified t) 1561 1562 (face (rainbow-delimiters-depth-8-face) fontified t) 1562 1563 (face (rainbow-delimiters-depth-7-face) fontified t) 1563 1564 (face (rainbow-delimiters-depth-6-face) fontified t) 1564 1574 (fontified t) 1574 1575 (face (rainbow-delimiters-depth-5-face) fontified t) 1575 1576 (face (rainbow-delimiters-depth-4-face) fontified t) 1576 1586 (fontified t) 1586 1595 (face font-lock-variable-name-face fontified t) 1595 1597 (fontified t) 1597 1601 (face font-lock-constant-face fontified t) 1601 1603 (fontified t) 1603 1617 (face font-lock-type-face fontified t) 1617 1618 (fontified t) 1618 1619 (face (rainbow-delimiters-depth-4-face) fontified t) 1619 1632 (fontified t) 1632 1640 (face font-lock-variable-name-face fontified t) 1640 1642 (fontified t) 1642 1646 (face font-lock-constant-face fontified t) 1646 1648 (fontified t) 1648 1665 (face font-lock-type-face fontified t) 1665 1667 (fontified t) 1667 1679 (face font-lock-type-face fontified t) 1679 1693 (fontified t) 1693 1711 (face font-lock-variable-name-face fontified t) 1711 1713 (fontified t) 1713 1717 (face font-lock-type-face fontified t) 1717 1731 (fontified t) 1731 1741 (face font-lock-variable-name-face fontified t) 1741 1743 (fontified t) 1743 1747 (face font-lock-constant-face fontified t) 1747 1749 (fontified t) 1749 1758 (face font-lock-type-face fontified t) 1758 1760 (fontified t) 1760 1763 (face font-lock-type-face fontified t) 1763 1777 (fontified t) 1777 1786 (face font-lock-variable-name-face fontified t) 1786 1788 (fontified t) 1788 1792 (face font-lock-type-face fontified t) 1792 1793 (face (rainbow-delimiters-depth-5-face) fontified t) 1793 1797 (face font-lock-constant-face fontified t) 1797 1799 (fontified t) 1799 1803 (face font-lock-type-face fontified t) 1803 1805 (fontified t) 1805 1809 (face font-lock-type-face fontified t) 1809 1810 (face (rainbow-delimiters-depth-5-face) fontified t) 1810 1824 (fontified t) 1824 1827 (face font-lock-comment-delimiter-face fontified t) 1827 1909 (face font-lock-comment-face fontified t) 1909 1921 (fontified t) 1921 1933 (face font-lock-variable-name-face fontified t) 1933 1935 (fontified t) 1935 1939 (face font-lock-constant-face fontified t) 1939 1941 (fontified t) 1941 1952 (face font-lock-type-face fontified t) 1952 1954 (fontified t) 1954 1958 (face font-lock-type-face fontified t) 1958 1972 (fontified t) 1972 1975 (face font-lock-comment-delimiter-face fontified t) 1975 2013 (face font-lock-comment-face fontified t) 2013 2025 (fontified t) 2025 2040 (face font-lock-variable-name-face fontified t) 2040 2042 (fontified t) 2042 2047 (face font-lock-keyword-face fontified t) 2047 2061 (fontified t) 2061 2064 (face font-lock-comment-delimiter-face fontified t) 2064 2110 (face font-lock-comment-face fontified t) 2110 2122 (fontified t) 2122 2134 (face font-lock-variable-name-face fontified t) 2134 2136 (fontified t) 2136 2141 (face font-lock-keyword-face fontified t) 2141 2151 (fontified t) 2151 2152 (face (rainbow-delimiters-depth-4-face) fontified t) 2152 2162 (fontified t) 2162 2175 (face font-lock-variable-name-face fontified t) 2175 2193 (fontified t) 2193 2194 (face (rainbow-delimiters-depth-4-face) fontified t) 2194 2203 (fontified t) 2203 2207 (face font-lock-constant-face fontified t) 2207 2209 (fontified t) 2209 2226 (face font-lock-type-face fontified t) 2226 2227 (fontified t) 2227 2228 (face (rainbow-delimiters-depth-5-face) fontified t) 2228 2261 (fontified t) 2261 2280 (face font-lock-variable-name-face fontified t) 2280 2282 (fontified t) 2282 2286 (face font-lock-keyword-face fontified t) 2286 2300 (fontified t) 2300 2313 (face font-lock-variable-name-face fontified t) 2313 2315 (fontified t) 2315 2319 (face font-lock-constant-face fontified t) 2319 2321 (fontified t) 2321 2336 (face font-lock-type-face fontified t) 2336 2338 (fontified t) 2338 2342 (face font-lock-type-face fontified t) 2342 2356 (fontified t) 2356 2363 (face font-lock-variable-name-face fontified t) 2363 2365 (fontified t) 2365 2369 (face font-lock-constant-face fontified t) 2369 2371 (fontified t) 2371 2383 (face font-lock-type-face fontified t) 2383 2392 (fontified t) 2392 2393 (face (rainbow-delimiters-depth-6-face) fontified t) 2393 2394 (face (rainbow-delimiters-depth-6-face) fontified t) 2394 2408 (fontified t) 2408 2412 (face font-lock-variable-name-face fontified t) 2412 2414 (fontified t) 2414 2418 (face font-lock-constant-face fontified t) 2418 2420 (fontified t) 2420 2434 (face font-lock-type-face fontified t) 2434 2443 (fontified t) 2443 2444 (face (rainbow-delimiters-depth-6-face) fontified t) 2444 2445 (face (rainbow-delimiters-depth-6-face) fontified t) 2445 2455 (fontified t) 2455 2456 (face (rainbow-delimiters-depth-5-face) fontified t) 2456 2457 (face (rainbow-delimiters-depth-4-face) fontified t) 2457 2467 (fontified t) 2467 2478 (face font-lock-variable-name-face fontified t) 2478 2480 (fontified t) 2480 2484 (face font-lock-constant-face fontified t) 2484 2486 (fontified t) 2486 2502 (face font-lock-type-face fontified t) 2502 2503 (fontified t) 2503 2504 (face (rainbow-delimiters-depth-4-face) fontified t) 2504 2517 (fontified t) 2517 2522 (face font-lock-variable-name-face fontified t) 2522 2539 (fontified t) 2539 2543 (face font-lock-variable-name-face fontified t) 2543 2561 (fontified t) 2561 2586 (face font-lock-variable-name-face fontified t) 2586 2588 (fontified t) 2588 2593 (face font-lock-keyword-face fontified t) 2593 2603 (fontified t) 2603 2604 (face (rainbow-delimiters-depth-4-face) fontified t) 2604 2614 (fontified t) 2614 2623 (face font-lock-variable-name-face fontified t) 2623 2625 (fontified t) 2625 2629 (face font-lock-type-face fontified t) 2629 2635 (fontified t) 2635 2636 (face (rainbow-delimiters-depth-3-face) fontified t) 2636 2637 (face (rainbow-delimiters-depth-2-face) fontified t) 2637 2638 (fontified t) 2638 2639 (face (rainbow-delimiters-depth-1-face) fontified t) 2639 2642 (fontified t) 2642 2648 (face font-lock-keyword-face fontified t) 2648 2649 (fontified t) 2649 2654 (face font-lock-type-face fontified t) 2654 2655 (fontified t) 2655 2656 (face (rainbow-delimiters-depth-1-face) fontified t) 2656 2661 (fontified t) 2661 2668 (face font-lock-variable-name-face fontified t) 2668 2670 (fontified t) 2670 2674 (face font-lock-constant-face fontified t) 2674 2676 (fontified t) 2676 2683 (face font-lock-type-face fontified t) 2683 2689 (fontified t) 2689 2695 (face font-lock-variable-name-face fontified t) 2695 2697 (fontified t) 2697 2701 (face font-lock-constant-face fontified t) 2701 2703 (fontified t) 2703 2709 (face font-lock-type-face fontified t) 2709 2715 (fontified t) 2715 2720 (face font-lock-variable-name-face fontified t) 2720 2722 (fontified t) 2722 2726 (face font-lock-constant-face fontified t) 2726 2728 (fontified t) 2728 2733 (face font-lock-type-face fontified t) 2733 2739 (fontified t) 2739 2745 (face font-lock-variable-name-face fontified t) 2745 2747 (fontified t) 2747 2751 (face font-lock-constant-face fontified t) 2751 2753 (fontified t) 2753 2773 (face font-lock-type-face fontified t) 2773 2779 (fontified t) 2779 2783 (face font-lock-variable-name-face fontified t) 2783 2785 (fontified t) 2785 2790 (face font-lock-constant-face fontified t) 2790 2792 (fontified t) 2792 2795 (face font-lock-constant-face fontified t) 2795 2797 (fontified t) 2797 2809 (face font-lock-type-face fontified t) 2809 2810 (face (rainbow-delimiters-depth-2-face) fontified t) 2810 2813 (face font-lock-type-face fontified t) 2813 2814 (face (rainbow-delimiters-depth-2-face) fontified t) 2814 2820 (fontified t) 2820 2823 (face font-lock-comment-delimiter-face fontified t) 2823 2872 (face font-lock-comment-face fontified t) 2872 2876 (fontified t) 2876 2879 (face font-lock-comment-delimiter-face fontified t) 2879 2928 (face font-lock-comment-face fontified t) 2928 2932 (fontified t) 2932 2935 (face font-lock-comment-delimiter-face fontified t) 2935 2980 (face font-lock-comment-face fontified t) 2980 2984 (fontified t) 2984 2990 (face font-lock-variable-name-face fontified t) 2990 2992 (fontified t) 2992 2998 (face font-lock-type-face fontified t) 2998 3004 (fontified t) 3004 3019 (face font-lock-variable-name-face fontified t) 3019 3021 (fontified t) 3021 3025 (face font-lock-constant-face fontified t) 3025 3027 (fontified t) 3027 3041 (face font-lock-type-face fontified t) 3041 3047 (fontified t) 3047 3049 (face font-lock-variable-name-face fontified t) 3049 3056 (face font-lock-variable-name-face fontified t) 3056 3058 (fontified t) 3058 3063 (face font-lock-constant-face fontified t) 3063 3065 (fontified t) 3065 3070 (face font-lock-type-face fontified t) 3070 3072 (fontified t) 3072 3078 (fontified t) 3078 3103 (face font-lock-variable-name-face fontified t) 3103 3105 (fontified t) 3105 3109 (face font-lock-constant-face fontified t) 3109 3111 (fontified t) 3111 3126 (face font-lock-type-face fontified t) 3126 3132 (fontified t) 3132 3145 (face font-lock-variable-name-face fontified t) 3145 3147 (fontified t) 3147 3154 (face font-lock-type-face fontified t) 3154 3166 (fontified t) 3166 3172 (face font-lock-variable-name-face fontified t) 3172 3174 (fontified t) 3174 3180 (face font-lock-constant-face fontified t) 3180 3182 (fontified t) 3182 3188 (face font-lock-type-face fontified t) 3188 3190 (fontified t) 3190 3193 (face font-lock-comment-delimiter-face fontified t) 3193 3202 (face font-lock-comment-face fontified t) 3202 3206 (fontified t) 3206 3216 (face font-lock-variable-name-face fontified t) 3216 3218 (fontified t) 3218 3224 (face font-lock-constant-face fontified t) 3224 3226 (fontified t) 3226 3236 (face font-lock-type-face fontified t) 3236 3238 (fontified t) 3238 3241 (face font-lock-comment-delimiter-face fontified t) 3241 3246 (face font-lock-comment-face fontified t) 3246 3250 (fontified t) 3250 3267 (face font-lock-variable-name-face fontified t) 3267 3269 (fontified t) 3269 3275 (face font-lock-constant-face fontified t) 3275 3277 (fontified t) 3277 3293 (face font-lock-type-face fontified t) 3293 3295 (fontified t) 3295 3298 (face font-lock-comment-delimiter-face fontified t) 3298 3307 (face font-lock-comment-face fontified t) 3307 3311 (fontified t) 3311 3314 (face font-lock-comment-delimiter-face fontified t) 3314 3318 (face font-lock-comment-face fontified t) 3318 3322 (fontified t) 3322 3325 (face font-lock-comment-delimiter-face fontified t) 3325 3330 (face font-lock-comment-face fontified t) 3330 3334 (fontified t) 3334 3347 (face font-lock-variable-name-face fontified t) 3347 3349 (fontified t) 3349 3353 (face font-lock-type-face fontified t) 3353 3360 (fontified t) 3360 3374 (face font-lock-variable-name-face fontified t) 3374 3376 (fontified t) 3376 3389 (face font-lock-type-face fontified t) 3389 3395 (fontified t) 3395 3408 (face font-lock-variable-name-face fontified t) 3408 3410 (fontified t) 3410 3414 (face font-lock-constant-face fontified t) 3414 3416 (fontified t) 3416 3422 (face font-lock-type-face fontified t) 3422 3428 (fontified t) 3428 3445 (face font-lock-variable-name-face fontified t) 3445 3447 (fontified t) 3447 3451 (face font-lock-constant-face fontified t) 3451 3453 (fontified t) 3453 3462 (face font-lock-type-face fontified t) 3462 3469 (fontified t) 3469 3482 (face font-lock-variable-name-face fontified t) 3482 3484 (fontified t) 3484 3496 (face font-lock-type-face fontified t) 3496 3502 (fontified t) 3502 3514 (face font-lock-variable-name-face fontified t) 3514 3516 (fontified t) 3516 3520 (face font-lock-constant-face fontified t) 3520 3522 (fontified t) 3522 3528 (face font-lock-type-face fontified t) 3528 3534 (fontified t) 3534 3550 (face font-lock-variable-name-face fontified t) 3550 3552 (fontified t) 3552 3556 (face font-lock-constant-face fontified t) 3556 3558 (fontified t) 3558 3567 (face font-lock-type-face fontified t) 3567 3573 (fontified t) 3573 3594 (face font-lock-variable-name-face fontified t) 3594 3596 (fontified t) 3596 3600 (face font-lock-constant-face fontified t) 3600 3602 (fontified t) 3602 3616 (face font-lock-type-face fontified t) 3616 3623 (fontified t) 3623 3632 (face font-lock-variable-name-face fontified t) 3632 3634 (fontified t) 3634 3637 (face font-lock-type-face fontified t) 3637 3638 (face (rainbow-delimiters-depth-2-face) fontified t) 3638 3646 (face font-lock-type-face fontified t) 3646 3647 (face (rainbow-delimiters-depth-2-face) fontified t) 3647 3653 (fontified t) 3653 3668 (face font-lock-variable-name-face fontified t) 3668 3670 (fontified t) 3670 3674 (face font-lock-constant-face fontified t) 3674 3676 (fontified t) 3676 3682 (face font-lock-type-face fontified t) 3682 3691 (fontified t) 3691 3692 (face (rainbow-delimiters-depth-1-face) fontified t) 3692 3694 (fontified t) 3694 3698 (face font-lock-keyword-face fontified t) 3698 3699 (fontified t) 3699 3704 (face font-lock-type-face fontified t) 3704 3705 (fontified t) 3705 3706 (face (rainbow-delimiters-depth-1-face) fontified t) 3706 3711 (fontified t) 3711 3714 (face font-lock-comment-delimiter-face fontified t) 3714 3766 (face font-lock-comment-face fontified t) 3766 3770 (fontified t) 3770 3775 (face font-lock-keyword-face fontified t) 3775 3776 (fontified t) 3776 3778 (face font-lock-keyword-face fontified t) 3778 3779 (fontified t) 3779 3782 (face font-lock-function-name-face fontified t) 3782 3783 (face (rainbow-delimiters-depth-2-face) fontified t) 3783 3789 (face font-lock-variable-name-face fontified t) 3789 3791 (fontified t) 3791 3797 (face font-lock-type-face fontified t) 3797 3798 (face (rainbow-delimiters-depth-2-face) fontified t) 3798 3800 (fontified t) 3800 3801 (syntax-table (1) fontified t) 3801 3802 (fontified t) 3802 3806 (face font-lock-type-face fontified t) 3806 3807 (fontified t) 3807 3808 (face (rainbow-delimiters-depth-2-face) fontified t) 3808 3817 (fontified t) 3817 3820 (face font-lock-keyword-face fontified t) 3820 3821 (fontified t) 3821 3825 (face font-lock-variable-name-face fontified t) 3825 3845 (fontified t) 3845 3846 (face (rainbow-delimiters-depth-3-face) fontified t) 3846 3847 (face (rainbow-delimiters-depth-3-face) fontified t) 3847 3858 (fontified t) 3858 3861 (face font-lock-comment-delimiter-face fontified t) 3861 3897 (face font-lock-comment-face fontified t) 3897 3905 (fontified t) 3905 3908 (face font-lock-comment-delimiter-face fontified t) 3908 3923 (face font-lock-comment-face fontified t) 3923 3924 (face font-lock-comment-face syntax-table (1) fontified t) 3924 3964 (face font-lock-comment-face fontified t) 3964 3972 (fontified t) 3972 3975 (face font-lock-keyword-face fontified t) 3975 3976 (fontified t) 3976 3984 (face font-lock-variable-name-face fontified t) 3984 3987 (fontified t) 3987 3991 (face font-lock-constant-face fontified t) 3991 3993 (fontified t) 3993 4001 (face font-lock-type-face fontified t) 4001 4006 (fontified t) 4006 4007 (face (rainbow-delimiters-depth-3-face) fontified t) 4007 4011 (face font-lock-constant-face fontified t) 4011 4013 (fontified t) 4013 4031 (face font-lock-type-face fontified t) 4031 4032 (fontified t) 4032 4033 (face (rainbow-delimiters-depth-4-face) fontified t) 4033 4046 (fontified t) 4046 4054 (face font-lock-variable-name-face fontified t) 4054 4056 (fontified t) 4056 4060 (face font-lock-constant-face fontified t) 4060 4062 (fontified t) 4062 4070 (face font-lock-type-face fontified t) 4070 4075 (fontified t) 4075 4076 (face (rainbow-delimiters-depth-5-face) fontified t) 4076 4077 (face (rainbow-delimiters-depth-5-face) fontified t) 4077 4093 (fontified t) 4093 4100 (face font-lock-type-face fontified t) 4100 4109 (fontified t) 4109 4110 (face (rainbow-delimiters-depth-5-face) fontified t) 4110 4111 (face (rainbow-delimiters-depth-5-face) fontified t) 4111 4120 (fontified t) 4120 4121 (face (rainbow-delimiters-depth-4-face) fontified t) 4121 4122 (face (rainbow-delimiters-depth-3-face) fontified t) 4122 4141 (fontified t) 4141 4144 (face font-lock-comment-delimiter-face fontified t) 4144 4153 (face font-lock-comment-face fontified t) 4153 4161 (fontified t) 4161 4163 (face font-lock-comment-delimiter-face fontified t) 4163 4164 (face font-lock-comment-face fontified t) 4164 4172 (fontified t) 4172 4175 (face font-lock-comment-delimiter-face fontified t) 4175 4240 (face font-lock-comment-face fontified t) 4240 4248 (fontified t) 4248 4251 (face font-lock-comment-delimiter-face fontified t) 4251 4298 (face font-lock-comment-face fontified t) 4298 4306 (fontified t) 4306 4309 (face font-lock-keyword-face fontified t) 4309 4310 (fontified t) 4310 4317 (face font-lock-variable-name-face fontified t) 4317 4320 (fontified t) 4320 4326 (face rust-unsafe fontified t) 4326 4327 (fontified t) 4327 4328 (face (rainbow-delimiters-depth-3-face) fontified t) 4328 4352 (fontified t) 4352 4353 (face (rainbow-delimiters-depth-4-face) fontified t) 4353 4354 (face rust-ampersand-face fontified t) 4354 4360 (fontified t) 4360 4361 (face (rainbow-delimiters-depth-4-face) fontified t) 4361 4362 (fontified t) 4362 4363 (face (rainbow-delimiters-depth-3-face) fontified t) 4363 4370 (fontified t) 4370 4371 (face (rainbow-delimiters-depth-3-face) fontified t) 4371 4372 (face (rainbow-delimiters-depth-3-face) fontified t) 4372 4383 (fontified t) 4383 4386 (face font-lock-keyword-face fontified t) 4386 4387 (fontified t) 4387 4394 (face font-lock-variable-name-face fontified t) 4394 4421 (fontified t) 4421 4422 (face (rainbow-delimiters-depth-3-face) fontified t) 4422 4435 (fontified t) 4435 4436 (face rust-ampersand-face fontified t) 4436 4440 (face font-lock-constant-face fontified t) 4440 4442 (fontified t) 4442 4463 (face font-lock-type-face fontified t) 4463 4464 (fontified t) 4464 4465 (face (rainbow-delimiters-depth-4-face) fontified t) 4465 4482 (fontified t) 4482 4498 (face font-lock-variable-name-face fontified t) 4498 4500 (fontified t) 4500 4504 (face font-lock-constant-face fontified t) 4504 4506 (fontified t) 4506 4521 (face font-lock-type-face fontified t) 4521 4530 (fontified t) 4530 4531 (face (rainbow-delimiters-depth-5-face) fontified t) 4531 4532 (face (rainbow-delimiters-depth-5-face) fontified t) 4532 4550 (fontified t) 4550 4568 (face font-lock-variable-name-face fontified t) 4568 4570 (fontified t) 4570 4572 (face font-lock-type-face fontified t) 4572 4574 (face font-lock-type-face fontified t) 4574 4575 (face (rainbow-delimiters-depth-5-face) fontified t) 4575 4576 (face rust-ampersand-face fontified t) 4576 4583 (fontified t) 4583 4584 (face (rainbow-delimiters-depth-5-face) fontified t) 4584 4586 (fontified t) 4586 4602 (fontified t) 4602 4624 (face font-lock-variable-name-face fontified t) 4624 4626 (fontified t) 4626 4631 (face font-lock-keyword-face fontified t) 4631 4645 (fontified t) 4645 4646 (face (rainbow-delimiters-depth-4-face) fontified t) 4646 4656 (fontified t) 4656 4657 (face (rainbow-delimiters-depth-3-face) fontified t) 4657 4658 (fontified t) 4658 4663 (face font-lock-keyword-face fontified t) 4663 4670 (fontified t) 4670 4671 (face (rainbow-delimiters-depth-3-face) fontified t) 4671 4672 (face (rainbow-delimiters-depth-3-face) fontified t) 4672 4683 (fontified t) 4683 4686 (face font-lock-keyword-face fontified t) 4686 4687 (fontified t) 4687 4688 (face (rainbow-delimiters-depth-3-face) fontified t) 4688 4701 (fontified t) 4701 4702 (face (rainbow-delimiters-depth-3-face) fontified t) 4702 4727 (fontified t) 4727 4728 (face (rainbow-delimiters-depth-3-face) fontified t) 4728 4741 (fontified t) 4741 4742 (face rust-ampersand-face fontified t) 4742 4746 (face font-lock-constant-face fontified t) 4746 4748 (fontified t) 4748 4764 (face font-lock-type-face fontified t) 4764 4765 (fontified t) 4765 4766 (face (rainbow-delimiters-depth-4-face) fontified t) 4766 4783 (fontified t) 4783 4791 (face font-lock-variable-name-face fontified t) 4791 4793 (fontified t) 4793 4797 (face font-lock-constant-face fontified t) 4797 4799 (fontified t) 4799 4807 (face font-lock-type-face fontified t) 4807 4814 (fontified t) 4814 4815 (face (rainbow-delimiters-depth-5-face) fontified t) 4815 4816 (face (rainbow-delimiters-depth-5-face) fontified t) 4816 4834 (fontified t) 4834 4837 (face font-lock-comment-delimiter-face fontified t) 4837 4889 (face font-lock-comment-face fontified t) 4889 4905 (fontified t) 4905 4908 (face font-lock-comment-delimiter-face fontified t) 4908 4964 (face font-lock-comment-face fontified t) 4964 4980 (fontified t) 4980 4986 (face font-lock-variable-name-face fontified t) 4986 4988 (fontified t) 4988 4990 (face font-lock-keyword-face fontified t) 4990 4991 (fontified t) 4991 4995 (face font-lock-preprocessor-face fontified t) 4995 4996 (face (rainbow-delimiters-depth-5-face) fontified t) 4996 5010 (fontified t) 5010 5018 (face font-lock-string-face fontified t) 5018 5019 (face (rainbow-delimiters-depth-5-face) fontified t) 5019 5020 (fontified t) 5020 5021 (face (rainbow-delimiters-depth-5-face) fontified t) 5021 5042 (fontified t) 5042 5046 (face font-lock-constant-face fontified t) 5046 5048 (fontified t) 5048 5054 (face font-lock-type-face fontified t) 5054 5081 (fontified t) 5081 5082 (face (rainbow-delimiters-depth-6-face) fontified t) 5082 5083 (face (rainbow-delimiters-depth-6-face) fontified t) 5083 5100 (fontified t) 5100 5101 (face (rainbow-delimiters-depth-5-face) fontified t) 5101 5102 (fontified t) 5102 5106 (face font-lock-keyword-face fontified t) 5106 5107 (fontified t) 5107 5108 (face (rainbow-delimiters-depth-5-face) fontified t) 5108 5129 (fontified t) 5129 5133 (face font-lock-constant-face fontified t) 5133 5135 (fontified t) 5135 5141 (face font-lock-type-face fontified t) 5141 5150 (fontified t) 5150 5151 (face (rainbow-delimiters-depth-6-face) fontified t) 5151 5152 (face (rainbow-delimiters-depth-6-face) fontified t) 5152 5169 (fontified t) 5169 5170 (face (rainbow-delimiters-depth-5-face) fontified t) 5170 5188 (fontified t) 5188 5193 (face font-lock-variable-name-face fontified t) 5193 5195 (fontified t) 5195 5199 (face font-lock-type-face fontified t) 5199 5213 (fontified t) 5213 5214 (face (rainbow-delimiters-depth-4-face) fontified t) 5214 5228 (fontified t) 5228 5232 (face font-lock-type-face fontified t) 5232 5234 (fontified t) 5234 5237 (face font-lock-comment-delimiter-face fontified t) 5237 5248 (face font-lock-comment-face fontified t) 5248 5256 (fontified t) 5256 5257 (face (rainbow-delimiters-depth-3-face) fontified t) 5257 5258 (fontified t) 5258 5263 (face font-lock-keyword-face fontified t) 5263 5270 (fontified t) 5270 5271 (face (rainbow-delimiters-depth-3-face) fontified t) 5271 5272 (face (rainbow-delimiters-depth-3-face) fontified t) 5272 5284 (fontified t) 5284 5287 (face font-lock-keyword-face fontified t) 5287 5288 (fontified t) 5288 5300 (face font-lock-variable-name-face fontified t) 5300 5327 (fontified t) 5327 5328 (face (rainbow-delimiters-depth-3-face) fontified t) 5328 5329 (face rust-ampersand-face fontified t) 5329 5336 (fontified t) 5336 5337 (face (rainbow-delimiters-depth-3-face) fontified t) 5337 5347 (fontified t) 5347 5350 (face font-lock-comment-delimiter-face fontified t) 5350 5430 (face font-lock-comment-face fontified t) 5430 5438 (fontified t) 5438 5441 (face font-lock-comment-delimiter-face fontified t) 5441 5521 (face font-lock-comment-face fontified t) 5521 5529 (fontified t) 5529 5532 (face font-lock-comment-delimiter-face fontified t) 5532 5606 (face font-lock-comment-face fontified t) 5606 5614 (fontified t) 5614 5617 (face font-lock-keyword-face fontified t) 5617 5618 (fontified t) 5618 5632 (face font-lock-variable-name-face fontified t) 5632 5660 (fontified t) 5660 5661 (face (rainbow-delimiters-depth-3-face) fontified t) 5661 5662 (face (rainbow-delimiters-depth-3-face) fontified t) 5662 5682 (fontified t) 5682 5683 (face (rainbow-delimiters-depth-3-face) fontified t) 5683 5684 (face (rainbow-delimiters-depth-3-face) fontified t) 5684 5704 (fontified t) 5704 5705 (face (rainbow-delimiters-depth-3-face) fontified t) 5705 5718 (fontified t) 5718 5719 (face (rainbow-delimiters-depth-4-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-4-face) fontified t) 5720 5721 (face (rainbow-delimiters-depth-3-face) fontified t) 5721 5739 (fontified t) 5739 5740 (face (rainbow-delimiters-depth-3-face) fontified t) 5740 5741 (face (rainbow-delimiters-depth-3-face) fontified t) 5741 5764 (fontified t) 5764 5765 (face (rainbow-delimiters-depth-3-face) fontified t) 5765 5785 (fontified t) 5785 5786 (face (rainbow-delimiters-depth-4-face) fontified t) 5786 5787 (fontified t) 5787 5788 (face (rainbow-delimiters-depth-4-face) fontified t) 5788 5789 (face (rainbow-delimiters-depth-3-face) fontified t) 5789 5799 (fontified t) 5799 5802 (face font-lock-keyword-face fontified t) 5802 5803 (fontified t) 5803 5809 (face font-lock-variable-name-face fontified t) 5809 5812 (fontified t) 5812 5816 (face font-lock-constant-face fontified t) 5816 5818 (fontified t) 5818 5838 (face font-lock-type-face fontified t) 5838 5839 (fontified t) 5839 5840 (face (rainbow-delimiters-depth-3-face) fontified t) 5840 5853 (fontified t) 5853 5858 (face font-lock-variable-name-face fontified t) 5858 5860 (fontified t) 5860 5864 (face font-lock-constant-face fontified t) 5864 5866 (fontified t) 5866 5879 (face font-lock-type-face fontified t) 5879 5881 (fontified t) 5881 5898 (face font-lock-type-face fontified t) 5898 5912 (fontified t) 5912 5918 (face font-lock-variable-name-face fontified t) 5918 5948 (fontified t) 5948 5953 (face font-lock-variable-name-face fontified t) 5953 5979 (fontified t) 5979 5985 (face font-lock-variable-name-face fontified t) 5985 6012 (fontified t) 6012 6024 (face font-lock-variable-name-face fontified t) 6024 6052 (fontified t) 6052 6053 (face (rainbow-delimiters-depth-4-face) fontified t) 6053 6054 (fontified t) 6054 6055 (face (rainbow-delimiters-depth-4-face) fontified t) 6055 6069 (fontified t) 6069 6079 (face font-lock-variable-name-face fontified t) 6079 6086 (fontified t) 6086 6105 (fontified t) 6105 6106 (face (rainbow-delimiters-depth-4-face) fontified t) 6106 6107 (fontified t) 6107 6108 (face (rainbow-delimiters-depth-4-face) fontified t) 6108 6110 (fontified t) 6110 6122 (fontified t) 6122 6134 (face font-lock-variable-name-face fontified t) 6134 6136 (fontified t) 6136 6140 (face font-lock-preprocessor-face fontified t) 6140 6141 (face (rainbow-delimiters-depth-4-face) fontified t) 6141 6142 (face (rainbow-delimiters-depth-4-face) fontified t) 6142 6152 (fontified t) 6152 6153 (face (rainbow-delimiters-depth-3-face) fontified t) 6153 6180 (fontified t) 6180 6181 (face (rainbow-delimiters-depth-3-face) fontified t) 6181 6182 (face rust-ampersand-face fontified t) 6182 6190 (fontified t) 6190 6191 (face rust-ampersand-face fontified t) 6191 6197 (fontified t) 6197 6198 (face (rainbow-delimiters-depth-3-face) fontified t) 6198 6218 (fontified t) 6218 6221 (face font-lock-keyword-face fontified t) 6221 6222 (fontified t) 6222 6247 (face font-lock-variable-name-face fontified t) 6247 6293 (fontified t) 6293 6294 (face (rainbow-delimiters-depth-3-face) fontified t) 6294 6295 (face rust-ampersand-face fontified t) 6295 6299 (face font-lock-constant-face fontified t) 6299 6301 (fontified t) 6301 6326 (face font-lock-type-face fontified t) 6326 6327 (fontified t) 6327 6328 (face (rainbow-delimiters-depth-4-face) fontified t) 6328 6345 (fontified t) 6345 6352 (face font-lock-variable-name-face fontified t) 6352 6354 (fontified t) 6354 6355 (face rust-ampersand-face fontified t) 6355 6356 (face (rainbow-delimiters-depth-5-face) fontified t) 6356 6377 (fontified t) 6377 6381 (face font-lock-constant-face fontified t) 6381 6383 (fontified t) 6383 6403 (face font-lock-type-face fontified t) 6403 6404 (fontified t) 6404 6405 (face (rainbow-delimiters-depth-6-face) fontified t) 6405 6430 (fontified t) 6430 6437 (face font-lock-variable-name-face fontified t) 6437 6466 (fontified t) 6466 6476 (face font-lock-variable-name-face fontified t) 6476 6478 (fontified t) 6478 6482 (face font-lock-constant-face fontified t) 6482 6484 (fontified t) 6484 6496 (face font-lock-type-face fontified t) 6496 6498 (fontified t) 6498 6506 (face font-lock-type-face fontified t) 6506 6532 (fontified t) 6532 6534 (face font-lock-variable-name-face fontified t) 6534 6536 (fontified t) 6536 6540 (face font-lock-constant-face fontified t) 6540 6542 (fontified t) 6542 6553 (face font-lock-type-face fontified t) 6553 6555 (fontified t) 6555 6562 (face font-lock-type-face fontified t) 6562 6563 (fontified t) 6563 6564 (face (rainbow-delimiters-depth-7-face) fontified t) 6564 6593 (fontified t) 6593 6605 (face font-lock-variable-name-face fontified t) 6605 6607 (fontified t) 6607 6612 (face font-lock-keyword-face fontified t) 6612 6642 (fontified t) 6642 6656 (face font-lock-variable-name-face fontified t) 6656 6658 (fontified t) 6658 6662 (face font-lock-constant-face fontified t) 6662 6664 (fontified t) 6664 6684 (face font-lock-type-face fontified t) 6684 6686 (fontified t) 6686 6688 (face font-lock-type-face fontified t) 6688 6718 (fontified t) 6718 6729 (face font-lock-variable-name-face fontified t) 6729 6731 (fontified t) 6731 6735 (face font-lock-constant-face fontified t) 6735 6737 (fontified t) 6737 6754 (face font-lock-type-face fontified t) 6754 6756 (fontified t) 6756 6761 (face font-lock-type-face fontified t) 6761 6762 (fontified t) 6762 6763 (face (rainbow-delimiters-depth-8-face) fontified t) 6763 6764 (fontified t) 6764 6774 (face font-lock-variable-name-face fontified t) 6774 6776 (fontified t) 6776 6780 (face font-lock-keyword-face fontified t) 6780 6781 (fontified t) 6781 6782 (face (rainbow-delimiters-depth-8-face) fontified t) 6782 6808 (fontified t) 6808 6809 (face (rainbow-delimiters-depth-7-face) fontified t) 6809 6835 (fontified t) 6835 6840 (face font-lock-variable-name-face fontified t) 6840 6842 (fontified t) 6842 6846 (face font-lock-type-face fontified t) 6846 6868 (fontified t) 6868 6869 (face (rainbow-delimiters-depth-6-face) fontified t) 6869 6891 (fontified t) 6891 6895 (face font-lock-constant-face fontified t) 6895 6897 (fontified t) 6897 6917 (face font-lock-type-face fontified t) 6917 6918 (fontified t) 6918 6919 (face (rainbow-delimiters-depth-6-face) fontified t) 6919 6944 (fontified t) 6944 6951 (face font-lock-variable-name-face fontified t) 6951 6980 (fontified t) 6980 6990 (face font-lock-variable-name-face fontified t) 6990 6992 (fontified t) 6992 6996 (face font-lock-constant-face fontified t) 6996 6998 (fontified t) 6998 7010 (face font-lock-type-face fontified t) 7010 7012 (fontified t) 7012 7020 (face font-lock-type-face fontified t) 7020 7046 (fontified t) 7046 7049 (face font-lock-comment-delimiter-face fontified t) 7049 7095 (face font-lock-comment-face fontified t) 7095 7119 (fontified t) 7119 7122 (face font-lock-comment-delimiter-face fontified t) 7122 7157 (face font-lock-comment-face fontified t) 7157 7181 (fontified t) 7181 7183 (face font-lock-variable-name-face fontified t) 7183 7185 (fontified t) 7185 7189 (face font-lock-constant-face fontified t) 7189 7191 (fontified t) 7191 7202 (face font-lock-type-face fontified t) 7202 7204 (fontified t) 7204 7211 (face font-lock-type-face fontified t) 7211 7212 (face (rainbow-delimiters-depth-7-face) fontified t) 7212 7216 (face font-lock-constant-face fontified t) 7216 7218 (fontified t) 7218 7236 (face font-lock-type-face fontified t) 7236 7238 (fontified t) 7238 7247 (face font-lock-type-face fontified t) 7247 7248 (face (rainbow-delimiters-depth-7-face) fontified t) 7248 7274 (fontified t) 7274 7279 (face font-lock-variable-name-face fontified t) 7279 7281 (fontified t) 7281 7285 (face font-lock-type-face fontified t) 7285 7307 (fontified t) 7307 7308 (face (rainbow-delimiters-depth-6-face) fontified t) 7308 7326 (fontified t) 7326 7327 (face (rainbow-delimiters-depth-5-face) fontified t) 7327 7345 (fontified t) 7345 7350 (face font-lock-variable-name-face fontified t) 7350 7352 (fontified t) 7352 7356 (face font-lock-type-face fontified t) 7356 7357 (face (rainbow-delimiters-depth-5-face) fontified t) 7357 7384 (face font-lock-string-face fontified t) 7384 7385 (face (rainbow-delimiters-depth-5-face) fontified t) 7385 7399 (fontified t) 7399 7400 (face (rainbow-delimiters-depth-4-face) fontified t) 7400 7401 (face (rainbow-delimiters-depth-3-face) fontified t) 7401 7412 (fontified t) 7412 7417 (face font-lock-preprocessor-face fontified t) 7417 7418 (face (rainbow-delimiters-depth-3-face) fontified t) 7418 7430 (face font-lock-string-face fontified t) 7430 7431 (face (rainbow-delimiters-depth-3-face) fontified t) 7431 7441 (fontified t) 7441 7444 (face font-lock-keyword-face fontified t) 7444 7445 (fontified t) 7445 7454 (face font-lock-variable-name-face fontified t) 7454 7457 (fontified t) 7457 7462 (face font-lock-constant-face fontified t) 7462 7472 (fontified t) 7472 7473 (face (rainbow-delimiters-depth-3-face) fontified t) 7473 7526 (face font-lock-string-face fontified t) 7526 7528 (fontified t) 7528 7529 (face rust-ampersand-face fontified t) 7529 7537 (fontified t) 7537 7538 (face rust-ampersand-face fontified t) 7538 7545 (fontified t) 7545 7546 (face rust-ampersand-face fontified t) 7546 7571 (fontified t) 7571 7572 (face (rainbow-delimiters-depth-3-face) fontified t) 7572 7579 (fontified t) 7579 7580 (face (rainbow-delimiters-depth-3-face) fontified t) 7580 7581 (face (rainbow-delimiters-depth-3-face) fontified t) 7581 7592 (fontified t) 7592 7595 (face font-lock-keyword-face fontified t) 7595 7596 (fontified t) 7596 7609 (face font-lock-variable-name-face fontified t) 7609 7610 (fontified t) 7610 7612 (fontified t) 7612 7619 (face font-lock-constant-face fontified t) 7619 7621 (fontified t) 7621 7628 (face font-lock-type-face fontified t) 7628 7650 (fontified t) 7650 7651 (face (rainbow-delimiters-depth-3-face) fontified t) 7651 7652 (face rust-ampersand-face fontified t) 7652 7660 (fontified t) 7660 7661 (face rust-ampersand-face fontified t) 7661 7669 (fontified t) 7669 7684 (face font-lock-string-face fontified t) 7684 7685 (face (rainbow-delimiters-depth-3-face) fontified t) 7685 7687 (fontified t) 7687 7697 (fontified t) 7697 7700 (face font-lock-keyword-face fontified t) 7700 7701 (fontified t) 7701 7707 (face font-lock-variable-name-face fontified t) 7707 7710 (fontified t) 7710 7716 (face font-lock-constant-face fontified t) 7716 7718 (fontified t) 7718 7724 (face font-lock-type-face fontified t) 7724 7729 (fontified t) 7729 7730 (face (rainbow-delimiters-depth-3-face) fontified t) 7730 7731 (face (rainbow-delimiters-depth-4-face) fontified t) 7731 7745 (fontified t) 7745 7746 (face (rainbow-delimiters-depth-4-face) fontified t) 7746 7748 (fontified t) 7748 7754 (face font-lock-constant-face fontified t) 7754 7756 (fontified t) 7756 7759 (face font-lock-type-face fontified t) 7759 7760 (face (rainbow-delimiters-depth-4-face) fontified t) 7760 7765 (fontified t) 7765 7766 (face (rainbow-delimiters-depth-4-face) fontified t) 7766 7768 (fontified t) 7768 7774 (face font-lock-constant-face fontified t) 7774 7776 (fontified t) 7776 7779 (face font-lock-type-face fontified t) 7779 7780 (face (rainbow-delimiters-depth-4-face) fontified t) 7780 7785 (fontified t) 7785 7786 (face (rainbow-delimiters-depth-4-face) fontified t) 7786 7787 (face (rainbow-delimiters-depth-3-face) fontified t) 7787 7797 (fontified t) 7797 7800 (face font-lock-keyword-face fontified t) 7800 7801 (fontified t) 7801 7811 (face font-lock-variable-name-face fontified t) 7811 7814 (fontified t) 7814 7820 (face font-lock-constant-face fontified t) 7820 7822 (fontified t) 7822 7832 (face font-lock-type-face fontified t) 7832 7837 (fontified t) 7837 7838 (face (rainbow-delimiters-depth-3-face) fontified t) 7838 7867 (fontified t) 7867 7873 (face font-lock-constant-face fontified t) 7873 7875 (fontified t) 7875 7878 (face font-lock-type-face fontified t) 7878 7879 (face (rainbow-delimiters-depth-4-face) fontified t) 7879 7883 (fontified t) 7883 7884 (face (rainbow-delimiters-depth-4-face) fontified t) 7884 7896 (fontified t) 7896 7897 (face (rainbow-delimiters-depth-3-face) fontified t) 7897 7907 (fontified t) 7907 7910 (face font-lock-keyword-face fontified t) 7910 7911 (fontified t) 7911 7928 (face font-lock-variable-name-face fontified t) 7928 7931 (fontified t) 7931 7937 (face font-lock-constant-face fontified t) 7937 7939 (fontified t) 7939 7955 (face font-lock-type-face fontified t) 7955 7960 (fontified t) 7960 7961 (face (rainbow-delimiters-depth-3-face) fontified t) 7961 7969 (fontified t) 7969 7970 (face (rainbow-delimiters-depth-3-face) fontified t) 7970 7983 (fontified t) 7983 7986 (face font-lock-keyword-face fontified t) 7986 7987 (fontified t) 7987 7990 (face font-lock-keyword-face fontified t) 7990 7991 (fontified t) 7991 8005 (face font-lock-variable-name-face fontified t) 8005 8008 (fontified t) 8008 8021 (face font-lock-type-face fontified t) 8021 8026 (fontified t) 8026 8027 (face (rainbow-delimiters-depth-3-face) fontified t) 8027 8028 (face (rainbow-delimiters-depth-3-face) fontified t) 8028 8069 (fontified t) 8069 8070 (face (rainbow-delimiters-depth-3-face) fontified t) 8070 8071 (face rust-ampersand-face fontified t) 8071 8079 (fontified t) 8079 8080 (face rust-ampersand-face fontified t) 8080 8090 (fontified t) 8090 8091 (face (rainbow-delimiters-depth-3-face) fontified t) 8091 8093 (fontified t) 8093 8096 (face font-lock-comment-delimiter-face fontified t) 8096 8105 (face font-lock-comment-face fontified t) 8105 8113 (fontified t) 8113 8116 (face font-lock-keyword-face fontified t) 8116 8117 (fontified t) 8117 8130 (face font-lock-variable-name-face fontified t) 8130 8168 (fontified t) 8168 8169 (face (rainbow-delimiters-depth-3-face) fontified t) 8169 8170 (face rust-ampersand-face fontified t) 8170 8176 (fontified t) 8176 8177 (face (rainbow-delimiters-depth-3-face) fontified t) 8177 8189 (fontified t) 8189 8192 (face font-lock-keyword-face fontified t) 8192 8193 (fontified t) 8193 8217 (face font-lock-variable-name-face fontified t) 8217 8251 (fontified t) 8251 8252 (face (rainbow-delimiters-depth-3-face) fontified t) 8252 8253 (face rust-ampersand-face fontified t) 8253 8257 (face font-lock-constant-face fontified t) 8257 8259 (fontified t) 8259 8284 (face font-lock-type-face fontified t) 8284 8285 (fontified t) 8285 8286 (face (rainbow-delimiters-depth-4-face) fontified t) 8286 8299 (fontified t) 8299 8306 (face font-lock-variable-name-face fontified t) 8306 8308 (fontified t) 8308 8309 (face rust-ampersand-face fontified t) 8309 8310 (face (rainbow-delimiters-depth-5-face) fontified t) 8310 8327 (fontified t) 8327 8331 (face font-lock-constant-face fontified t) 8331 8333 (fontified t) 8333 8353 (face font-lock-type-face fontified t) 8353 8354 (fontified t) 8354 8355 (face (rainbow-delimiters-depth-6-face) fontified t) 8355 8376 (fontified t) 8376 8383 (face font-lock-variable-name-face fontified t) 8383 8408 (fontified t) 8408 8418 (face font-lock-variable-name-face fontified t) 8418 8420 (fontified t) 8420 8424 (face font-lock-constant-face fontified t) 8424 8426 (fontified t) 8426 8438 (face font-lock-type-face fontified t) 8438 8440 (fontified t) 8440 8446 (face font-lock-type-face fontified t) 8446 8449 (fontified t) 8449 8453 (face font-lock-constant-face fontified t) 8453 8455 (fontified t) 8455 8467 (face font-lock-type-face fontified t) 8467 8469 (fontified t) 8469 8477 (face font-lock-type-face fontified t) 8477 8499 (fontified t) 8499 8501 (face font-lock-variable-name-face fontified t) 8501 8503 (fontified t) 8503 8507 (face font-lock-constant-face fontified t) 8507 8509 (fontified t) 8509 8520 (face font-lock-type-face fontified t) 8520 8522 (fontified t) 8522 8528 (face font-lock-type-face fontified t) 8528 8529 (fontified t) 8529 8530 (face (rainbow-delimiters-depth-7-face) fontified t) 8530 8555 (fontified t) 8555 8557 (face font-lock-variable-name-face fontified t) 8557 8559 (fontified t) 8559 8563 (face font-lock-constant-face fontified t) 8563 8565 (fontified t) 8565 8582 (face font-lock-type-face fontified t) 8582 8584 (fontified t) 8584 8591 (face font-lock-type-face fontified t) 8591 8617 (fontified t) 8617 8635 (face font-lock-variable-name-face fontified t) 8635 8637 (fontified t) 8637 8642 (face font-lock-keyword-face fontified t) 8642 8668 (fontified t) 8668 8684 (face font-lock-variable-name-face fontified t) 8684 8686 (fontified t) 8686 8690 (face font-lock-type-face fontified t) 8690 8712 (fontified t) 8712 8713 (face (rainbow-delimiters-depth-7-face) fontified t) 8713 8735 (fontified t) 8735 8740 (face font-lock-variable-name-face fontified t) 8740 8742 (fontified t) 8742 8746 (face font-lock-type-face fontified t) 8746 8764 (fontified t) 8764 8765 (face (rainbow-delimiters-depth-6-face) fontified t) 8765 8778 (fontified t) 8778 8779 (face (rainbow-delimiters-depth-5-face) fontified t) 8779 8793 (fontified t) 8793 8798 (face font-lock-variable-name-face fontified t) 8798 8800 (fontified t) 8800 8804 (face font-lock-type-face fontified t) 8804 8805 (face (rainbow-delimiters-depth-5-face) fontified t) 8805 8831 (face font-lock-string-face fontified t) 8831 8832 (face (rainbow-delimiters-depth-5-face) fontified t) 8832 8842 (fontified t) 8842 8843 (face (rainbow-delimiters-depth-4-face) fontified t) 8843 8844 (face (rainbow-delimiters-depth-3-face) fontified t) 8844 8855 (fontified t) 8855 8858 (face font-lock-keyword-face fontified t) 8858 8859 (fontified t) 8859 8876 (face font-lock-variable-name-face fontified t) 8876 8903 (fontified t) 8903 8904 (face (rainbow-delimiters-depth-3-face) fontified t) 8904 8905 (face rust-ampersand-face fontified t) 8905 8909 (face font-lock-constant-face fontified t) 8909 8911 (fontified t) 8911 8930 (face font-lock-type-face fontified t) 8930 8931 (fontified t) 8931 8932 (face (rainbow-delimiters-depth-4-face) fontified t) 8932 8945 (fontified t) 8945 8951 (face font-lock-variable-name-face fontified t) 8951 8953 (fontified t) 8953 8954 (face rust-ampersand-face fontified t) 8954 8992 (fontified t) 8992 8999 (face font-lock-variable-name-face fontified t) 8999 9001 (fontified t) 9001 9002 (face rust-ampersand-face fontified t) 9002 9003 (face (rainbow-delimiters-depth-5-face) fontified t) 9003 9020 (fontified t) 9020 9024 (face font-lock-constant-face fontified t) 9024 9026 (fontified t) 9026 9040 (face font-lock-type-face fontified t) 9040 9041 (fontified t) 9041 9042 (face (rainbow-delimiters-depth-6-face) fontified t) 9042 9063 (fontified t) 9063 9070 (face font-lock-variable-name-face fontified t) 9070 9095 (fontified t) 9095 9103 (face font-lock-variable-name-face fontified t) 9103 9136 (fontified t) 9136 9137 (face (rainbow-delimiters-depth-7-face) fontified t) 9137 9138 (face (rainbow-delimiters-depth-7-face) fontified t) 9138 9156 (fontified t) 9156 9157 (face (rainbow-delimiters-depth-6-face) fontified t) 9157 9170 (fontified t) 9170 9171 (face (rainbow-delimiters-depth-5-face) fontified t) 9171 9185 (fontified t) 9185 9187 (face font-lock-variable-name-face fontified t) 9187 9190 (face font-lock-variable-name-face fontified t) 9190 9192 (fontified t) 9192 9196 (face font-lock-type-face fontified t) 9196 9197 (face (rainbow-delimiters-depth-5-face) fontified t) 9197 9216 (face font-lock-string-face fontified t) 9216 9217 (face (rainbow-delimiters-depth-5-face) fontified t) 9217 9219 (fontified t) 9219 9227 (fontified t) 9227 9228 (face (rainbow-delimiters-depth-4-face) fontified t) 9228 9229 (face (rainbow-delimiters-depth-3-face) fontified t) 9229 9240 (fontified t) 9240 9243 (face font-lock-keyword-face fontified t) 9243 9244 (fontified t) 9244 9257 (face font-lock-variable-name-face fontified t) 9257 9260 (fontified t) 9260 9265 (face font-lock-constant-face fontified t) 9265 9267 (fontified t) 9267 9279 (face font-lock-type-face fontified t) 9279 9280 (fontified t) 9280 9281 (face (rainbow-delimiters-depth-3-face) fontified t) 9281 9294 (fontified t) 9294 9302 (face font-lock-variable-name-face fontified t) 9302 9304 (fontified t) 9304 9305 (face (rainbow-delimiters-depth-4-face) fontified t) 9305 9323 (fontified t) 9323 9324 (face (rainbow-delimiters-depth-4-face) fontified t) 9324 9338 (fontified t) 9338 9343 (face font-lock-variable-name-face fontified t) 9343 9345 (fontified t) 9345 9346 (face (rainbow-delimiters-depth-4-face) fontified t) 9346 9364 (fontified t) 9364 9365 (face (rainbow-delimiters-depth-4-face) fontified t) 9365 9375 (fontified t) 9375 9376 (face (rainbow-delimiters-depth-3-face) fontified t) 9376 9386 (fontified t) 9386 9389 (face font-lock-keyword-face fontified t) 9389 9390 (fontified t) 9390 9391 (face (rainbow-delimiters-depth-3-face) fontified t) 9391 9446 (fontified t) 9446 9447 (face (rainbow-delimiters-depth-3-face) fontified t) 9447 9462 (fontified t) 9462 9467 (face font-lock-constant-face fontified t) 9467 9503 (fontified t) 9503 9504 (face (rainbow-delimiters-depth-3-face) fontified t) 9504 9505 (face rust-ampersand-face fontified t) 9505 9513 (fontified t) 9513 9514 (face rust-ampersand-face fontified t) 9514 9527 (fontified t) 9527 9528 (face (rainbow-delimiters-depth-3-face) fontified t) 9528 9540 (fontified t) 9540 9542 (face font-lock-comment-delimiter-face fontified t) 9542 9572 (face font-lock-comment-face fontified t) 9572 9580 (fontified t) 9580 9583 (face font-lock-keyword-face fontified t) 9583 9584 (fontified t) 9584 9606 (face font-lock-variable-name-face fontified t) 9606 9650 (fontified t) 9650 9651 (face (rainbow-delimiters-depth-3-face) fontified t) 9651 9652 (face rust-ampersand-face fontified t) 9652 9656 (face font-lock-constant-face fontified t) 9656 9658 (fontified t) 9658 9682 (face font-lock-type-face fontified t) 9682 9683 (fontified t) 9683 9684 (face (rainbow-delimiters-depth-4-face) fontified t) 9684 9701 (fontified t) 9701 9706 (face font-lock-variable-name-face fontified t) 9706 9708 (fontified t) 9708 9712 (face font-lock-type-face fontified t) 9712 9713 (face (rainbow-delimiters-depth-5-face) fontified t) 9713 9737 (face font-lock-string-face fontified t) 9737 9738 (face (rainbow-delimiters-depth-5-face) fontified t) 9738 9756 (fontified t) 9756 9774 (face font-lock-variable-name-face fontified t) 9774 9776 (fontified t) 9776 9777 (face rust-ampersand-face fontified t) 9777 9778 (face (rainbow-delimiters-depth-5-face) fontified t) 9778 9799 (fontified t) 9799 9800 (face rust-ampersand-face fontified t) 9800 9847 (fontified t) 9847 9848 (face rust-ampersand-face fontified t) 9848 9894 (fontified t) 9894 9895 (face rust-ampersand-face fontified t) 9895 9936 (fontified t) 9936 9937 (face (rainbow-delimiters-depth-5-face) fontified t) 9937 9955 (fontified t) 9955 9975 (face font-lock-variable-name-face fontified t) 9975 9977 (fontified t) 9977 9978 (face rust-ampersand-face fontified t) 9978 9979 (face (rainbow-delimiters-depth-5-face) fontified t) 9979 9980 (face (rainbow-delimiters-depth-5-face) fontified t) 9980 9994 (fontified t) 9994 9995 (face (rainbow-delimiters-depth-4-face) fontified t) 9995 9996 (face (rainbow-delimiters-depth-3-face) fontified t) 9996 10015 (fontified t) 10015 10018 (face font-lock-keyword-face fontified t) 10018 10019 (fontified t) 10019 10034 (face font-lock-variable-name-face fontified t) 10034 10037 (fontified t) 10037 10038 (face (rainbow-delimiters-depth-3-face) fontified t) 10038 10051 (fontified t) 10051 10054 (face font-lock-keyword-face fontified t) 10054 10055 (fontified t) 10055 10061 (face font-lock-variable-name-face fontified t) 10061 10064 (fontified t) 10064 10068 (face font-lock-constant-face fontified t) 10068 10070 (fontified t) 10070 10083 (face font-lock-preprocessor-face fontified t) 10083 10084 (face (rainbow-delimiters-depth-4-face) fontified t) 10084 10097 (face font-lock-string-face fontified t) 10097 10098 (face (rainbow-delimiters-depth-4-face) fontified t) 10098 10135 (fontified t) 10135 10136 (face (rainbow-delimiters-depth-4-face) fontified t) 10136 10153 (fontified t) 10153 10154 (face rust-ampersand-face fontified t) 10154 10178 (fontified t) 10178 10179 (face rust-ampersand-face fontified t) 10179 10250 (fontified t) 10250 10254 (face font-lock-type-face fontified t) 10254 10255 (face (rainbow-delimiters-depth-5-face) fontified t) 10255 10262 (face font-lock-constant-face fontified t) 10262 10264 (fontified t) 10264 10271 (face font-lock-type-face fontified t) 10271 10273 (fontified t) 10273 10285 (face font-lock-type-face fontified t) 10285 10286 (face (rainbow-delimiters-depth-5-face) fontified t) 10286 10304 (fontified t) 10304 10305 (face rust-ampersand-face fontified t) 10305 10306 (face (rainbow-delimiters-depth-5-face) fontified t) 10306 10311 (face font-lock-constant-face fontified t) 10311 10313 (fontified t) 10313 10324 (face font-lock-type-face fontified t) 10324 10330 (fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10332 (face (rainbow-delimiters-depth-6-face) fontified t) 10332 10334 (fontified t) 10334 10345 (face font-lock-type-face fontified t) 10345 10351 (fontified t) 10351 10352 (face (rainbow-delimiters-depth-6-face) fontified t) 10352 10353 (face (rainbow-delimiters-depth-6-face) fontified t) 10353 10354 (face (rainbow-delimiters-depth-5-face) fontified t) 10354 10392 (fontified t) 10392 10393 (face (rainbow-delimiters-depth-4-face) fontified t) 10393 10402 (fontified t) 10402 10403 (face (rainbow-delimiters-depth-3-face) fontified t) 10403 10426 (fontified t) 10426 10429 (face font-lock-keyword-face fontified t) 10429 10430 (fontified t) 10430 10439 (face font-lock-variable-name-face fontified t) 10439 10442 (fontified t) 10442 10446 (face font-lock-preprocessor-face fontified t) 10446 10447 (face (rainbow-delimiters-depth-3-face) fontified t) 10447 10460 (fontified t) 10460 10468 (face font-lock-type-face fontified t) 10468 10469 (fontified t) 10469 10470 (face (rainbow-delimiters-depth-4-face) fontified t) 10470 10487 (fontified t) 10487 10495 (face font-lock-variable-name-face fontified t) 10495 10497 (fontified t) 10497 10503 (face font-lock-constant-face fontified t) 10503 10505 (fontified t) 10505 10512 (face font-lock-type-face fontified t) 10512 10518 (fontified t) 10518 10519 (face (rainbow-delimiters-depth-5-face) fontified t) 10519 10520 (face (rainbow-delimiters-depth-5-face) fontified t) 10520 10538 (fontified t) 10538 10546 (face font-lock-variable-name-face fontified t) 10546 10548 (fontified t) 10548 10554 (face font-lock-constant-face fontified t) 10554 10556 (fontified t) 10556 10566 (face font-lock-type-face fontified t) 10566 10580 (fontified t) 10580 10581 (face (rainbow-delimiters-depth-5-face) fontified t) 10581 10587 (face font-lock-constant-face fontified t) 10587 10589 (fontified t) 10589 10592 (face font-lock-type-face fontified t) 10592 10593 (face (rainbow-delimiters-depth-6-face) fontified t) 10593 10596 (fontified t) 10596 10597 (face (rainbow-delimiters-depth-6-face) fontified t) 10597 10598 (face (rainbow-delimiters-depth-5-face) fontified t) 10598 10616 (fontified t) 10616 10623 (face font-lock-variable-name-face fontified t) 10623 10625 (fontified t) 10625 10631 (face font-lock-constant-face fontified t) 10631 10633 (fontified t) 10633 10640 (face font-lock-type-face fontified t) 10640 10645 (fontified t) 10645 10646 (face (rainbow-delimiters-depth-5-face) fontified t) 10646 10659 (fontified t) 10659 10660 (face (rainbow-delimiters-depth-5-face) fontified t) 10660 10674 (fontified t) 10674 10675 (face (rainbow-delimiters-depth-4-face) fontified t) 10675 10685 (fontified t) 10685 10686 (face (rainbow-delimiters-depth-3-face) fontified t) 10686 10696 (fontified t) 10696 10699 (face font-lock-keyword-face fontified t) 10699 10700 (fontified t) 10700 10713 (face font-lock-variable-name-face fontified t) 10713 10719 (fontified t) 10719 10730 (fontified t) 10730 10731 (face (rainbow-delimiters-depth-3-face) fontified t) 10731 10732 (face (rainbow-delimiters-depth-3-face) fontified t) 10732 10736 (fontified t) 10736 10737 (face (rainbow-delimiters-depth-3-face) fontified t) 10737 10745 (face font-lock-type-face fontified t) 10745 10753 (fontified t) 10753 10754 (face (rainbow-delimiters-depth-3-face) fontified t) 10754 10764 (fontified t) 10764 10765 (face (rainbow-delimiters-depth-3-face) fontified t) 10765 10768 (face font-lock-type-face fontified t) 10768 10769 (face (rainbow-delimiters-depth-4-face) fontified t) 10769 10770 (fontified t) 10770 10771 (face (rainbow-delimiters-depth-4-face) fontified t) 10771 10772 (face (rainbow-delimiters-depth-3-face) fontified t) 10772 10773 (face (rainbow-delimiters-depth-3-face) fontified t) 10773 10774 (face (rainbow-delimiters-depth-3-face) fontified t) 10774 10776 (fontified t) 10776 10784 (fontified t) 10784 10787 (face font-lock-keyword-face fontified t) 10787 10788 (fontified t) 10788 10803 (face font-lock-variable-name-face fontified t) 10803 10806 (fontified t) 10806 10814 (face font-lock-constant-face fontified t) 10814 10839 (fontified t) 10839 10840 (face (rainbow-delimiters-depth-3-face) fontified t) 10840 10841 (face rust-ampersand-face fontified t) 10841 10849 (fontified t) 10849 10850 (face rust-ampersand-face fontified t) 10850 10863 (fontified t) 10863 10864 (face (rainbow-delimiters-depth-3-face) fontified t) 10864 10875 (fontified t) 10875 10878 (face font-lock-comment-delimiter-face fontified t) 10878 10885 (face font-lock-comment-face fontified t) 10885 10893 (fontified t) 10893 10896 (face font-lock-keyword-face fontified t) 10896 10897 (fontified t) 10897 10918 (face font-lock-variable-name-face fontified t) 10918 10921 (fontified t) 10921 10922 (face (rainbow-delimiters-depth-3-face) fontified t) 10922 10935 (fontified t) 10935 10938 (face font-lock-keyword-face fontified t) 10938 10939 (fontified t) 10939 10945 (face font-lock-variable-name-face fontified t) 10945 10977 (fontified t) 10977 10978 (face (rainbow-delimiters-depth-4-face) fontified t) 10978 10979 (face rust-ampersand-face fontified t) 10979 10983 (face font-lock-constant-face fontified t) 10983 10985 (fontified t) 10985 11009 (face font-lock-type-face fontified t) 11009 11010 (fontified t) 11010 11011 (face (rainbow-delimiters-depth-5-face) fontified t) 11011 11028 (fontified t) 11028 11033 (face font-lock-variable-name-face fontified t) 11033 11035 (fontified t) 11035 11039 (face font-lock-type-face fontified t) 11039 11040 (face (rainbow-delimiters-depth-6-face) fontified t) 11040 11063 (face font-lock-string-face fontified t) 11063 11064 (face (rainbow-delimiters-depth-6-face) fontified t) 11064 11082 (fontified t) 11082 11100 (face font-lock-variable-name-face fontified t) 11100 11102 (fontified t) 11102 11103 (face rust-ampersand-face fontified t) 11103 11104 (face (rainbow-delimiters-depth-6-face) fontified t) 11104 11125 (fontified t) 11125 11126 (face rust-ampersand-face fontified t) 11126 11172 (fontified t) 11172 11173 (face rust-ampersand-face fontified t) 11173 11213 (fontified t) 11213 11214 (face (rainbow-delimiters-depth-6-face) fontified t) 11214 11232 (fontified t) 11232 11252 (face font-lock-variable-name-face fontified t) 11252 11254 (fontified t) 11254 11255 (face rust-ampersand-face fontified t) 11255 11256 (face (rainbow-delimiters-depth-6-face) fontified t) 11256 11257 (face (rainbow-delimiters-depth-6-face) fontified t) 11257 11271 (fontified t) 11271 11272 (face (rainbow-delimiters-depth-5-face) fontified t) 11272 11273 (face (rainbow-delimiters-depth-4-face) fontified t) 11273 11287 (fontified t) 11287 11290 (face font-lock-keyword-face fontified t) 11290 11291 (fontified t) 11291 11297 (face font-lock-variable-name-face fontified t) 11297 11300 (fontified t) 11300 11304 (face font-lock-constant-face fontified t) 11304 11306 (fontified t) 11306 11319 (face font-lock-preprocessor-face fontified t) 11319 11320 (face (rainbow-delimiters-depth-4-face) fontified t) 11320 11332 (face font-lock-string-face fontified t) 11332 11333 (face (rainbow-delimiters-depth-4-face) fontified t) 11333 11370 (fontified t) 11370 11371 (face (rainbow-delimiters-depth-4-face) fontified t) 11371 11388 (fontified t) 11388 11389 (face rust-ampersand-face fontified t) 11389 11413 (fontified t) 11413 11414 (face rust-ampersand-face fontified t) 11414 11469 (fontified t) 11469 11473 (face font-lock-type-face fontified t) 11473 11474 (face (rainbow-delimiters-depth-5-face) fontified t) 11474 11481 (face font-lock-constant-face fontified t) 11481 11483 (fontified t) 11483 11490 (face font-lock-type-face fontified t) 11490 11492 (fontified t) 11492 11504 (face font-lock-type-face fontified t) 11504 11505 (face (rainbow-delimiters-depth-5-face) fontified t) 11505 11523 (fontified t) 11523 11524 (face rust-ampersand-face fontified t) 11524 11525 (face (rainbow-delimiters-depth-5-face) fontified t) 11525 11530 (face font-lock-constant-face fontified t) 11530 11532 (fontified t) 11532 11543 (face font-lock-type-face fontified t) 11543 11549 (fontified t) 11549 11550 (face (rainbow-delimiters-depth-6-face) fontified t) 11550 11551 (face (rainbow-delimiters-depth-6-face) fontified t) 11551 11552 (face (rainbow-delimiters-depth-5-face) fontified t) 11552 11590 (fontified t) 11590 11591 (face (rainbow-delimiters-depth-4-face) fontified t) 11591 11600 (fontified t) 11600 11601 (face (rainbow-delimiters-depth-3-face) fontified t) 11601 11613 (fontified t) 11613 11617 (face font-lock-type-face fontified t) 11617 11618 (fontified t) 11618 11619 (face (rainbow-delimiters-depth-3-face) fontified t) 11619 11979 (fontified t) 11979 11992 (face font-lock-variable-name-face fontified t) 11992 11994 (fontified t) 11994 11999 (face font-lock-keyword-face fontified t) 11999 12276 (fontified t) 12276 12284 (fontified t) 12284 12292 (fontified t) 12292 12293 (face (rainbow-delimiters-depth-3-face) fontified t) 12293 12299 (fontified t) 12299 12300 (face (rainbow-delimiters-depth-2-face) fontified t) 12300 12306 (fontified t) 12306 12309 (face font-lock-keyword-face fontified t) 12309 12310 (fontified t) 12310 12312 (face font-lock-keyword-face fontified t) 12312 12313 (fontified t) 12313 12319 (face font-lock-function-name-face fontified t) 12319 12320 (face (rainbow-delimiters-depth-2-face) fontified t) 12320 12321 (face rust-ampersand-face fontified t) 12321 12325 (face font-lock-keyword-face fontified t) 12325 12326 (face (rainbow-delimiters-depth-2-face) fontified t) 12326 12328 (fontified t) 12328 12329 (syntax-table (1) fontified t) 12329 12330 (fontified t) 12330 12331 (face rust-ampersand-face fontified t) 12331 12337 (face font-lock-type-face fontified t) 12337 12338 (fontified t) 12338 12339 (face (rainbow-delimiters-depth-2-face) fontified t) 12339 12348 (fontified t) 12348 12349 (face rust-ampersand-face fontified t) 12349 12353 (face font-lock-keyword-face fontified t) 12353 12365 (fontified t) 12365 12366 (face (rainbow-delimiters-depth-2-face) fontified t) 12366 12372 (fontified t) 12372 12374 (face font-lock-keyword-face fontified t) 12374 12375 (fontified t) 12375 12381 (face font-lock-function-name-face fontified t) 12381 12382 (face (rainbow-delimiters-depth-2-face) fontified t) 12382 12383 (face rust-ampersand-face fontified t) 12383 12386 (face font-lock-keyword-face fontified t) 12386 12387 (fontified t) 12387 12391 (face font-lock-keyword-face fontified t) 12391 12393 (fontified t) 12393 12401 (face font-lock-variable-name-face fontified t) 12401 12403 (fontified t) 12403 12408 (face font-lock-constant-face fontified t) 12408 12410 (fontified t) 12410 12413 (face font-lock-constant-face fontified t) 12413 12415 (fontified t) 12415 12427 (face font-lock-type-face fontified t) 12427 12428 (face (rainbow-delimiters-depth-3-face) fontified t) 12428 12431 (face font-lock-type-face fontified t) 12431 12432 (face (rainbow-delimiters-depth-3-face) fontified t) 12432 12433 (face (rainbow-delimiters-depth-2-face) fontified t) 12433 12434 (fontified t) 12434 12435 (face (rainbow-delimiters-depth-2-face) fontified t) 12435 12444 (fontified t) 12444 12446 (face font-lock-keyword-face fontified t) 12446 12462 (fontified t) 12462 12463 (syntax-table (1) fontified t) 12463 12485 (fontified t) 12485 12486 (syntax-table (1) fontified t) 12486 12489 (fontified t) 12489 12490 (face (rainbow-delimiters-depth-3-face) fontified t) 12490 12503 (fontified t) 12503 12507 (face font-lock-keyword-face fontified t) 12507 12537 (fontified t) 12537 12541 (face font-lock-keyword-face fontified t) 12541 12585 (fontified t) 12585 12589 (face font-lock-keyword-face fontified t) 12589 12635 (fontified t) 12635 12639 (face font-lock-keyword-face fontified t) 12639 12657 (fontified t) 12657 12658 (face (rainbow-delimiters-depth-4-face) fontified t) 12658 12659 (face rust-ampersand-face fontified t) 12659 12663 (face font-lock-keyword-face fontified t) 12663 12672 (fontified t) 12672 12673 (face rust-ampersand-face fontified t) 12673 12677 (face font-lock-keyword-face fontified t) 12677 12684 (fontified t) 12684 12685 (face (rainbow-delimiters-depth-4-face) fontified t) 12685 12699 (fontified t) 12699 12703 (face font-lock-keyword-face fontified t) 12703 12720 (fontified t) 12720 12727 (face font-lock-constant-face fontified t) 12727 12729 (fontified t) 12729 12736 (face font-lock-type-face fontified t) 12736 12758 (fontified t) 12758 12759 (face (rainbow-delimiters-depth-4-face) fontified t) 12759 12760 (face rust-ampersand-face fontified t) 12760 12764 (face font-lock-keyword-face fontified t) 12764 12773 (fontified t) 12773 12774 (face rust-ampersand-face fontified t) 12774 12778 (face font-lock-keyword-face fontified t) 12778 12787 (fontified t) 12787 12802 (face font-lock-string-face fontified t) 12802 12803 (face (rainbow-delimiters-depth-4-face) fontified t) 12803 12817 (fontified t) 12817 12821 (face font-lock-keyword-face fontified t) 12821 12839 (fontified t) 12839 12840 (face (rainbow-delimiters-depth-4-face) fontified t) 12840 12871 (fontified t) 12871 12872 (face (rainbow-delimiters-depth-4-face) fontified t) 12872 12896 (fontified t) 12896 12897 (face (rainbow-delimiters-depth-3-face) fontified t) 12897 12902 (fontified t) 12902 12903 (face (rainbow-delimiters-depth-2-face) fontified t) 12903 12909 (fontified t) 12909 12911 (face font-lock-keyword-face fontified t) 12911 12912 (fontified t) 12912 12917 (face font-lock-function-name-face fontified t) 12917 12918 (face (rainbow-delimiters-depth-2-face) fontified t) 12918 12919 (face rust-ampersand-face fontified t) 12919 12922 (face font-lock-keyword-face fontified t) 12922 12923 (fontified t) 12923 12927 (face font-lock-keyword-face fontified t) 12927 12929 (fontified t) 12929 12934 (face font-lock-variable-name-face fontified t) 12934 12936 (fontified t) 12936 12937 (face rust-ampersand-face fontified t) 12937 12948 (face font-lock-type-face fontified t) 12948 12949 (face (rainbow-delimiters-depth-2-face) fontified t) 12949 12951 (fontified t) 12951 12952 (syntax-table (1) fontified t) 12952 12953 (fontified t) 12953 12957 (face font-lock-type-face fontified t) 12957 12958 (fontified t) 12958 12959 (face (rainbow-delimiters-depth-2-face) fontified t) 12959 12968 (fontified t) 12968 12973 (face font-lock-keyword-face fontified t) 12973 12980 (fontified t) 12980 12981 (face (rainbow-delimiters-depth-3-face) fontified t) 12981 12994 (fontified t) 12994 13005 (face font-lock-type-face fontified t) 13005 13007 (fontified t) 13007 13020 (face font-lock-type-face fontified t) 13020 13021 (fontified t) 13021 13022 (face (rainbow-delimiters-depth-4-face) fontified t) 13022 13039 (fontified t) 13039 13044 (face font-lock-variable-name-face fontified t) 13044 13062 (fontified t) 13062 13070 (face font-lock-type-face fontified t) 13070 13071 (fontified t) 13071 13072 (face (rainbow-delimiters-depth-5-face) fontified t) 13072 13093 (fontified t) 13093 13105 (face font-lock-variable-name-face fontified t) 13105 13107 (fontified t) 13107 13118 (face font-lock-type-face fontified t) 13118 13120 (fontified t) 13120 13124 (face font-lock-type-face fontified t) 13124 13125 (face (rainbow-delimiters-depth-6-face) fontified t) 13125 13128 (fontified t) 13128 13129 (face (rainbow-delimiters-depth-6-face) fontified t) 13129 13197 (fontified t) 13197 13198 (face (rainbow-delimiters-depth-5-face) fontified t) 13198 13231 (fontified t) 13231 13232 (face (rainbow-delimiters-depth-4-face) fontified t) 13232 13234 (fontified t) 13234 13235 (syntax-table (1) fontified t) 13235 13236 (fontified t) 13236 13240 (face font-lock-keyword-face fontified t) 13240 13275 (fontified t) 13275 13276 (face (rainbow-delimiters-depth-4-face) fontified t) 13276 13288 (fontified t) 13288 13289 (face (rainbow-delimiters-depth-4-face) fontified t) 13289 13303 (fontified t) 13303 13314 (face font-lock-type-face fontified t) 13314 13316 (fontified t) 13316 13326 (face font-lock-type-face fontified t) 13326 13327 (fontified t) 13327 13328 (face (rainbow-delimiters-depth-4-face) fontified t) 13328 13339 (fontified t) 13339 13340 (face (rainbow-delimiters-depth-4-face) fontified t) 13340 13342 (fontified t) 13342 13343 (syntax-table (1) fontified t) 13343 13344 (fontified t) 13344 13345 (face (rainbow-delimiters-depth-4-face) fontified t) 13345 13362 (fontified t) 13362 13366 (face font-lock-keyword-face fontified t) 13366 13399 (fontified t) 13399 13400 (face (rainbow-delimiters-depth-5-face) fontified t) 13400 13405 (fontified t) 13405 13406 (face (rainbow-delimiters-depth-5-face) fontified t) 13406 13424 (fontified t) 13424 13428 (face font-lock-keyword-face fontified t) 13428 13441 (fontified t) 13441 13442 (face (rainbow-delimiters-depth-4-face) fontified t) 13442 13455 (fontified t) 13455 13466 (face font-lock-type-face fontified t) 13466 13468 (fontified t) 13468 13478 (face font-lock-type-face fontified t) 13478 13479 (fontified t) 13479 13480 (face (rainbow-delimiters-depth-4-face) fontified t) 13480 13497 (fontified t) 13497 13503 (face font-lock-variable-name-face fontified t) 13503 13505 (fontified t) 13505 13516 (face font-lock-type-face fontified t) 13516 13518 (fontified t) 13518 13522 (face font-lock-type-face fontified t) 13522 13578 (fontified t) 13578 13579 (face (rainbow-delimiters-depth-4-face) fontified t) 13579 13581 (fontified t) 13581 13582 (syntax-table (1) fontified t) 13582 13583 (fontified t) 13583 13584 (face (rainbow-delimiters-depth-4-face) fontified t) 13584 13601 (fontified t) 13601 13605 (face font-lock-keyword-face fontified t) 13605 13632 (fontified t) 13632 13644 (face font-lock-type-face fontified t) 13644 13646 (fontified t) 13646 13653 (face font-lock-type-face fontified t) 13653 13671 (fontified t) 13671 13675 (face font-lock-keyword-face fontified t) 13675 13688 (fontified t) 13688 13689 (face (rainbow-delimiters-depth-4-face) fontified t) 13689 13705 (fontified t) 13705 13706 (syntax-table (1) fontified t) 13706 13707 (fontified t) 13707 13712 (face font-lock-keyword-face fontified t) 13712 13722 (fontified t) 13722 13723 (face (rainbow-delimiters-depth-3-face) fontified t) 13723 13730 (fontified t) 13730 13731 (face (rainbow-delimiters-depth-2-face) fontified t) 13731 13737 (fontified t) 13737 13739 (face font-lock-keyword-face fontified t) 13739 13740 (fontified t) 13740 13746 (face font-lock-function-name-face fontified t) 13746 13747 (face (rainbow-delimiters-depth-2-face) fontified t) 13747 13748 (face rust-ampersand-face fontified t) 13748 13751 (face font-lock-keyword-face fontified t) 13751 13752 (fontified t) 13752 13756 (face font-lock-keyword-face fontified t) 13756 13758 (fontified t) 13758 13760 (face font-lock-variable-name-face fontified t) 13760 13762 (fontified t) 13762 13769 (face font-lock-constant-face fontified t) 13769 13771 (fontified t) 13771 13779 (face font-lock-type-face fontified t) 13779 13780 (face (rainbow-delimiters-depth-2-face) fontified t) 13780 13781 (fontified t) 13781 13782 (face (rainbow-delimiters-depth-2-face) fontified t) 13782 13784 (fontified t) 13784 13791 (fontified t) 13791 13795 (face font-lock-keyword-face fontified t) 13795 13827 (fontified t) 13827 13828 (face (rainbow-delimiters-depth-3-face) fontified t) 13828 13829 (face rust-ampersand-face fontified t) 13829 13832 (face font-lock-keyword-face fontified t) 13832 13833 (fontified t) 13833 13837 (face font-lock-keyword-face fontified t) 13837 13848 (fontified t) 13848 13849 (face (rainbow-delimiters-depth-3-face) fontified t) 13849 13851 (fontified t) 13851 13859 (fontified t) 13859 13863 (face font-lock-keyword-face fontified t) 13863 13895 (fontified t) 13895 13896 (face (rainbow-delimiters-depth-3-face) fontified t) 13896 13897 (face rust-ampersand-face fontified t) 13897 13901 (face font-lock-keyword-face fontified t) 13901 13910 (fontified t) 13910 13911 (face rust-ampersand-face fontified t) 13911 13915 (face font-lock-keyword-face fontified t) 13915 13926 (fontified t) 13926 13927 (face (rainbow-delimiters-depth-3-face) fontified t) 13927 13937 (fontified t) 13937 13941 (face font-lock-keyword-face fontified t) 13941 13960 (fontified t) 13960 13961 (face (rainbow-delimiters-depth-3-face) fontified t) 13961 13962 (face rust-ampersand-face fontified t) 13962 13966 (face font-lock-keyword-face fontified t) 13966 13985 (fontified t) 13985 13993 (face font-lock-constant-face fontified t) 13993 14005 (fontified t) 14005 14006 (face (rainbow-delimiters-depth-4-face) fontified t) 14006 14007 (face rust-ampersand-face fontified t) 14007 14008 (face (rainbow-delimiters-depth-5-face) fontified t) 14008 14012 (face font-lock-keyword-face fontified t) 14012 14027 (fontified t) 14027 14028 (face (rainbow-delimiters-depth-5-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-4-face) fontified t) 14029 14030 (face (rainbow-delimiters-depth-3-face) fontified t) 14030 14041 (fontified t) 14041 14044 (face font-lock-comment-delimiter-face fontified t) 14044 14061 (face font-lock-comment-face fontified t) 14061 14069 (fontified t) 14069 14072 (face font-lock-keyword-face fontified t) 14072 14073 (fontified t) 14073 14085 (face font-lock-variable-name-face fontified t) 14085 14088 (fontified t) 14088 14094 (face font-lock-constant-face fontified t) 14094 14096 (fontified t) 14096 14103 (face font-lock-type-face fontified t) 14103 14109 (fontified t) 14109 14110 (face (rainbow-delimiters-depth-3-face) fontified t) 14110 14114 (face font-lock-keyword-face fontified t) 14114 14137 (fontified t) 14137 14138 (face (rainbow-delimiters-depth-3-face) fontified t) 14138 14148 (fontified t) 14148 14151 (face font-lock-comment-delimiter-face fontified t) 14151 14181 (face font-lock-comment-face fontified t) 14181 14189 (fontified t) 14189 14196 (face font-lock-comment-delimiter-face fontified t) 14196 14272 (face font-lock-comment-face fontified t) 14272 14280 (fontified t) 14280 14288 (face font-lock-comment-delimiter-face fontified t) 14288 14304 (face font-lock-comment-face fontified t) 14304 14312 (fontified t) 14312 14319 (face font-lock-comment-delimiter-face fontified t) 14319 14328 (face font-lock-comment-face fontified t) 14328 14337 (fontified t) 14337 14341 (face font-lock-keyword-face fontified t) 14341 14379 (fontified t) 14379 14380 (face (rainbow-delimiters-depth-3-face) fontified t) 14380 14386 (face font-lock-constant-face fontified t) 14386 14388 (fontified t) 14388 14395 (face font-lock-type-face fontified t) 14395 14412 (fontified t) 14412 14413 (face (rainbow-delimiters-depth-4-face) fontified t) 14413 14414 (face (rainbow-delimiters-depth-5-face) fontified t) 14414 14427 (fontified t) 14427 14428 (face (rainbow-delimiters-depth-5-face) fontified t) 14428 14433 (fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14435 (face (rainbow-delimiters-depth-5-face) fontified t) 14435 14437 (fontified t) 14437 14443 (face font-lock-constant-face fontified t) 14443 14445 (fontified t) 14445 14448 (face font-lock-type-face fontified t) 14448 14449 (face (rainbow-delimiters-depth-5-face) fontified t) 14449 14470 (fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-6-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-5-face) fontified t) 14473 14474 (face (rainbow-delimiters-depth-4-face) fontified t) 14474 14502 (fontified t) 14502 14503 (face (rainbow-delimiters-depth-3-face) fontified t) 14503 14508 (fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14510 (face (rainbow-delimiters-depth-3-face) fontified t) 14510 14512 (fontified t) 14512 14515 (face font-lock-comment-delimiter-face fontified t) 14515 14524 (face font-lock-comment-face fontified t) 14524 14533 (fontified t) 14533 14537 (face font-lock-keyword-face fontified t) 14537 14556 (fontified t) 14556 14557 (face (rainbow-delimiters-depth-3-face) fontified t) 14557 14558 (face rust-ampersand-face fontified t) 14558 14562 (face font-lock-keyword-face fontified t) 14562 14580 (fontified t) 14580 14588 (face font-lock-constant-face fontified t) 14588 14600 (fontified t) 14600 14601 (face (rainbow-delimiters-depth-4-face) fontified t) 14601 14602 (face rust-ampersand-face fontified t) 14602 14603 (face (rainbow-delimiters-depth-5-face) fontified t) 14603 14607 (face font-lock-keyword-face fontified t) 14607 14621 (fontified t) 14621 14622 (face (rainbow-delimiters-depth-5-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-4-face) fontified t) 14623 14624 (face (rainbow-delimiters-depth-3-face) fontified t) 14624 14631 (fontified t) 14631 14632 (face (rainbow-delimiters-depth-2-face) fontified t) 14632 14638 (fontified t) 14638 14640 (face font-lock-keyword-face fontified t) 14640 14641 (fontified t) 14641 14647 (face font-lock-function-name-face fontified t) 14647 14648 (face (rainbow-delimiters-depth-2-face) fontified t) 14648 14649 (face rust-ampersand-face fontified t) 14649 14652 (face font-lock-keyword-face fontified t) 14652 14653 (fontified t) 14653 14657 (face font-lock-keyword-face fontified t) 14657 14659 (fontified t) 14659 14664 (face font-lock-variable-name-face fontified t) 14664 14666 (fontified t) 14666 14670 (face font-lock-constant-face fontified t) 14670 14672 (fontified t) 14672 14677 (face font-lock-type-face fontified t) 14677 14678 (face (rainbow-delimiters-depth-2-face) fontified t) 14678 14680 (fontified t) 14680 14681 (syntax-table (1) fontified t) 14681 14682 (fontified t) 14682 14688 (face font-lock-type-face fontified t) 14688 14689 (face (rainbow-delimiters-depth-2-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14691 (face (rainbow-delimiters-depth-3-face) fontified t) 14691 14693 (fontified t) 14693 14697 (face font-lock-constant-face fontified t) 14697 14699 (fontified t) 14699 14711 (face font-lock-type-face fontified t) 14711 14712 (face (rainbow-delimiters-depth-2-face) fontified t) 14712 14713 (fontified t) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified t) 14714 14723 (fontified t) 14723 14726 (face font-lock-keyword-face fontified t) 14726 14727 (fontified t) 14727 14733 (face font-lock-variable-name-face fontified t) 14733 14736 (fontified t) 14736 14740 (face font-lock-keyword-face fontified t) 14740 14768 (fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face (rainbow-delimiters-depth-3-face) fontified t) 14770 14771 (face rust-question-mark fontified t) 14771 14781 (fontified t) 14781 14784 (face font-lock-keyword-face fontified t) 14784 14785 (fontified t) 14785 14789 (face font-lock-variable-name-face fontified t) 14789 14818 (fontified t) 14818 14819 (face (rainbow-delimiters-depth-3-face) fontified t) 14819 14820 (face rust-ampersand-face fontified t) 14820 14824 (face font-lock-constant-face fontified t) 14824 14826 (fontified t) 14826 14847 (face font-lock-type-face fontified t) 14847 14856 (fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-4-face) fontified t) 14858 14859 (face (rainbow-delimiters-depth-3-face) fontified t) 14859 14869 (fontified t) 14869 14872 (face font-lock-keyword-face fontified t) 14872 14873 (fontified t) 14873 14876 (face font-lock-keyword-face fontified t) 14876 14877 (fontified t) 14877 14884 (face font-lock-variable-name-face fontified t) 14884 14887 (fontified t) 14887 14891 (face font-lock-keyword-face fontified t) 14891 14921 (fontified t) 14921 14922 (face (rainbow-delimiters-depth-3-face) fontified t) 14922 14923 (face rust-ampersand-face fontified t) 14923 14927 (face font-lock-constant-face fontified t) 14927 14929 (fontified t) 14929 14953 (face font-lock-type-face fontified t) 14953 14954 (fontified t) 14954 14955 (face (rainbow-delimiters-depth-4-face) fontified t) 14955 14968 (fontified t) 14968 14973 (face font-lock-variable-name-face fontified t) 14973 14975 (fontified t) 14975 14979 (face font-lock-type-face fontified t) 14979 14980 (face (rainbow-delimiters-depth-5-face) fontified t) 14980 14996 (face font-lock-string-face fontified t) 14996 14997 (face (rainbow-delimiters-depth-5-face) fontified t) 14997 15007 (fontified t) 15007 15008 (face (rainbow-delimiters-depth-4-face) fontified t) 15008 15009 (face (rainbow-delimiters-depth-3-face) fontified t) 15009 15028 (fontified t) 15028 15031 (face font-lock-keyword-face fontified t) 15031 15032 (fontified t) 15032 15035 (face font-lock-keyword-face fontified t) 15035 15036 (fontified t) 15036 15047 (face font-lock-variable-name-face fontified t) 15047 15075 (fontified t) 15075 15076 (face (rainbow-delimiters-depth-3-face) fontified t) 15076 15077 (face rust-ampersand-face fontified t) 15077 15081 (face font-lock-constant-face fontified t) 15081 15083 (fontified t) 15083 15103 (face font-lock-type-face fontified t) 15103 15104 (fontified t) 15104 15105 (face (rainbow-delimiters-depth-4-face) fontified t) 15105 15118 (fontified t) 15118 15123 (face font-lock-variable-name-face fontified t) 15123 15125 (fontified t) 15125 15129 (face font-lock-type-face fontified t) 15129 15130 (face (rainbow-delimiters-depth-5-face) fontified t) 15130 15143 (face font-lock-string-face fontified t) 15143 15144 (face (rainbow-delimiters-depth-5-face) fontified t) 15144 15158 (fontified t) 15158 15175 (face font-lock-variable-name-face fontified t) 15175 15177 (fontified t) 15177 15178 (face rust-ampersand-face fontified t) 15178 15179 (face (rainbow-delimiters-depth-5-face) fontified t) 15179 15183 (face font-lock-type-face fontified t) 15183 15184 (face (rainbow-delimiters-depth-6-face) fontified t) 15184 15188 (face font-lock-constant-face fontified t) 15188 15190 (fontified t) 15190 15215 (face font-lock-type-face fontified t) 15215 15216 (fontified t) 15216 15217 (face (rainbow-delimiters-depth-7-face) fontified t) 15217 15234 (fontified t) 15234 15238 (face font-lock-variable-name-face fontified t) 15238 15240 (fontified t) 15240 15241 (face rust-ampersand-face fontified t) 15241 15263 (fontified t) 15263 15277 (face font-lock-variable-name-face fontified t) 15277 15279 (fontified t) 15279 15283 (face font-lock-type-face fontified t) 15283 15301 (fontified t) 15301 15304 (face font-lock-variable-name-face fontified t) 15304 15306 (fontified t) 15306 15310 (face font-lock-constant-face fontified t) 15310 15312 (fontified t) 15312 15322 (face font-lock-type-face fontified t) 15322 15323 (fontified t) 15323 15324 (face (rainbow-delimiters-depth-8-face) fontified t) 15324 15345 (fontified t) 15345 15349 (face font-lock-variable-name-face fontified t) 15349 15351 (fontified t) 15351 15355 (face font-lock-constant-face fontified t) 15355 15357 (fontified t) 15357 15363 (face font-lock-type-face fontified t) 15363 15365 (fontified t) 15365 15370 (face font-lock-type-face fontified t) 15370 15371 (face (rainbow-delimiters-depth-9-face) fontified t) 15371 15376 (fontified t) 15376 15377 (face (rainbow-delimiters-depth-9-face) fontified t) 15377 15379 (fontified t) 15379 15399 (fontified t) 15399 15404 (face font-lock-variable-name-face fontified t) 15404 15406 (fontified t) 15406 15410 (face font-lock-constant-face fontified t) 15410 15412 (fontified t) 15412 15419 (face font-lock-type-face fontified t) 15419 15421 (fontified t) 15421 15426 (face font-lock-type-face fontified t) 15426 15444 (fontified t) 15444 15445 (face (rainbow-delimiters-depth-8-face) fontified t) 15445 15459 (fontified t) 15459 15460 (face (rainbow-delimiters-depth-7-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-6-face) fontified t) 15461 15462 (face (rainbow-delimiters-depth-5-face) fontified t) 15462 15476 (fontified t) 15476 15500 (face font-lock-variable-name-face fontified t) 15500 15502 (fontified t) 15502 15506 (face font-lock-type-face fontified t) 15506 15507 (face (rainbow-delimiters-depth-5-face) fontified t) 15507 15511 (face font-lock-constant-face fontified t) 15511 15513 (fontified t) 15513 15545 (face font-lock-type-face fontified t) 15545 15546 (fontified t) 15546 15547 (face (rainbow-delimiters-depth-6-face) fontified t) 15547 15564 (fontified t) 15564 15568 (face font-lock-variable-name-face fontified t) 15568 15570 (fontified t) 15570 15571 (face rust-ampersand-face fontified t) 15571 15575 (face font-lock-keyword-face fontified t) 15575 15612 (fontified t) 15612 15621 (face font-lock-variable-name-face fontified t) 15621 15623 (fontified t) 15623 15627 (face font-lock-type-face fontified t) 15627 15628 (face (rainbow-delimiters-depth-7-face) fontified t) 15628 15632 (face font-lock-constant-face fontified t) 15632 15634 (fontified t) 15634 15644 (face font-lock-type-face fontified t) 15644 15645 (fontified t) 15645 15646 (face (rainbow-delimiters-depth-8-face) fontified t) 15646 15667 (fontified t) 15667 15671 (face font-lock-variable-name-face fontified t) 15671 15673 (fontified t) 15673 15677 (face font-lock-constant-face fontified t) 15677 15679 (fontified t) 15679 15685 (face font-lock-type-face fontified t) 15685 15687 (fontified t) 15687 15692 (face font-lock-type-face fontified t) 15692 15693 (face (rainbow-delimiters-depth-9-face) fontified t) 15693 15696 (fontified t) 15696 15697 (face (rainbow-delimiters-depth-9-face) fontified t) 15697 15719 (fontified t) 15719 15724 (face font-lock-variable-name-face fontified t) 15724 15726 (fontified t) 15726 15730 (face font-lock-constant-face fontified t) 15730 15732 (fontified t) 15732 15739 (face font-lock-type-face fontified t) 15739 15741 (fontified t) 15741 15746 (face font-lock-type-face fontified t) 15746 15764 (fontified t) 15764 15765 (face (rainbow-delimiters-depth-8-face) fontified t) 15765 15766 (face (rainbow-delimiters-depth-7-face) fontified t) 15766 15784 (fontified t) 15784 15795 (face font-lock-variable-name-face fontified t) 15795 15797 (fontified t) 15797 15801 (face font-lock-type-face fontified t) 15801 15815 (fontified t) 15815 15816 (face (rainbow-delimiters-depth-6-face) fontified t) 15816 15817 (face (rainbow-delimiters-depth-5-face) fontified t) 15817 15831 (fontified t) 15831 15850 (face font-lock-variable-name-face fontified t) 15850 15852 (fontified t) 15852 15856 (face font-lock-type-face fontified t) 15856 15870 (fontified t) 15870 15886 (face font-lock-variable-name-face fontified t) 15886 15888 (fontified t) 15888 15892 (face font-lock-type-face fontified t) 15892 15902 (fontified t) 15902 15903 (face (rainbow-delimiters-depth-4-face) fontified t) 15903 15904 (face (rainbow-delimiters-depth-3-face) fontified t) 15904 15914 (fontified t) 15914 15917 (face font-lock-comment-delimiter-face fontified t) 15917 15922 (face font-lock-comment-face fontified t) 15922 15959 (fontified t) 15959 15960 (face (rainbow-delimiters-depth-3-face) fontified t) 15960 15963 (fontified t) 15963 15967 (face font-lock-keyword-face fontified t) 15967 15989 (fontified t) 15989 15990 (face (rainbow-delimiters-depth-4-face) fontified t) 15990 15992 (fontified t) 15992 15993 (face (rainbow-delimiters-depth-4-face) fontified t) 15993 15994 (face (rainbow-delimiters-depth-3-face) fontified t) 15994 15997 (fontified t) 15997 16005 (fontified t) 16005 16008 (face font-lock-keyword-face fontified t) 16008 16009 (fontified t) 16009 16014 (face font-lock-keyword-face fontified t) 16014 16016 (fontified t) 16016 16021 (face font-lock-constant-face fontified t) 16021 16023 (fontified t) 16023 16032 (face font-lock-type-face fontified t) 16032 16034 (fontified t) 16034 16037 (face font-lock-comment-delimiter-face fontified t) 16037 16042 (face font-lock-comment-face fontified t) 16042 16074 (fontified t) 16074 16075 (face (rainbow-delimiters-depth-3-face) fontified t) 16075 16076 (face rust-ampersand-face fontified t) 16076 16080 (face font-lock-keyword-face fontified t) 16080 16102 (fontified t) 16102 16103 (face (rainbow-delimiters-depth-3-face) fontified t) 16103 16105 (fontified t) 16105 16108 (face font-lock-comment-delimiter-face fontified t) 16108 16113 (face font-lock-comment-face fontified t) 16113 16149 (fontified t) 16149 16150 (face (rainbow-delimiters-depth-3-face) fontified t) 16150 16163 (fontified t) 16163 16164 (face rust-ampersand-face fontified t) 16164 16168 (face font-lock-keyword-face fontified t) 16168 16192 (fontified t) 16192 16193 (face rust-ampersand-face fontified t) 16193 16197 (face font-lock-keyword-face fontified t) 16197 16229 (fontified t) 16229 16230 (face rust-ampersand-face fontified t) 16230 16234 (face font-lock-keyword-face fontified t) 16234 16261 (fontified t) 16261 16262 (face (rainbow-delimiters-depth-3-face) fontified t) 16262 16264 (fontified t) 16264 16267 (face font-lock-comment-delimiter-face fontified t) 16267 16272 (face font-lock-comment-face fontified t) 16272 16273 (fontified t) 16273 16305 (fontified t) 16305 16306 (face (rainbow-delimiters-depth-3-face) fontified t) 16306 16307 (face rust-ampersand-face fontified t) 16307 16311 (face font-lock-keyword-face fontified t) 16311 16327 (fontified t) 16327 16328 (face (rainbow-delimiters-depth-3-face) fontified t) 16328 16330 (fontified t) 16330 16333 (face font-lock-comment-delimiter-face fontified t) 16333 16336 (face font-lock-comment-face fontified t) 16336 16376 (fontified t) 16376 16377 (face (rainbow-delimiters-depth-3-face) fontified t) 16377 16390 (fontified t) 16390 16391 (face rust-ampersand-face fontified t) 16391 16395 (face font-lock-keyword-face fontified t) 16395 16422 (fontified t) 16422 16426 (face font-lock-keyword-face fontified t) 16426 16440 (fontified t) 16440 16441 (face (rainbow-delimiters-depth-4-face) fontified t) 16441 16442 (face (rainbow-delimiters-depth-4-face) fontified t) 16442 16443 (fontified t) 16443 16445 (face font-lock-keyword-face fontified t) 16445 16446 (fontified t) 16446 16449 (face font-lock-type-face fontified t) 16449 16463 (fontified t) 16463 16464 (face rust-ampersand-face fontified t) 16464 16468 (face font-lock-keyword-face fontified t) 16468 16500 (fontified t) 16500 16501 (face rust-ampersand-face fontified t) 16501 16505 (face font-lock-keyword-face fontified t) 16505 16532 (fontified t) 16532 16533 (face (rainbow-delimiters-depth-3-face) fontified t) 16533 16548 (fontified t) 16548 16549 (face (rainbow-delimiters-depth-3-face) fontified t) 16549 16560 (fontified t) 16560 16561 (face (rainbow-delimiters-depth-3-face) fontified t) 16561 16573 (fontified t) 16573 16576 (face font-lock-comment-delimiter-face fontified t) 16576 16629 (face font-lock-comment-face fontified t) 16629 16637 (fontified t) 16637 16641 (face font-lock-keyword-face fontified t) 16641 16654 (fontified t) 16654 16655 (face (rainbow-delimiters-depth-3-face) fontified t) 16655 16658 (face font-lock-constant-face fontified t) 16658 16660 (fontified t) 16660 16664 (face font-lock-constant-face fontified t) 16664 16670 (fontified t) 16670 16671 (face (rainbow-delimiters-depth-4-face) fontified t) 16671 16685 (fontified t) 16685 16686 (face (rainbow-delimiters-depth-5-face) fontified t) 16686 16687 (face (rainbow-delimiters-depth-5-face) fontified t) 16687 16688 (face (rainbow-delimiters-depth-4-face) fontified t) 16688 16689 (face (rainbow-delimiters-depth-3-face) fontified t) 16689 16713 (fontified t) 16713 16714 (face (rainbow-delimiters-depth-3-face) fontified t) 16714 16715 (face (rainbow-delimiters-depth-3-face) fontified t) 16715 16726 (fontified t) 16726 16728 (face font-lock-type-face fontified t) 16728 16729 (face (rainbow-delimiters-depth-3-face) fontified t) 16729 16730 (face (rainbow-delimiters-depth-4-face) fontified t) 16730 16731 (face (rainbow-delimiters-depth-4-face) fontified t) 16731 16732 (face (rainbow-delimiters-depth-3-face) fontified t) 16732 16738 (fontified t) 16738 16739 (face (rainbow-delimiters-depth-2-face) fontified t) 16739 16740 (fontified t) 16740 16741 (face (rainbow-delimiters-depth-1-face) fontified t) 16741 16744 (fontified t) 16744 16747 (face font-lock-keyword-face fontified t) 16747 16748 (fontified t) 16748 16753 (face font-lock-keyword-face fontified t) 16753 16754 (fontified t) 16754 16756 (face font-lock-keyword-face fontified t) 16756 16757 (fontified t) 16757 16760 (face font-lock-function-name-face fontified t) 16760 16761 (face (rainbow-delimiters-depth-1-face) fontified t) 16761 16762 (face (rainbow-delimiters-depth-1-face) fontified t) 16762 16763 (fontified t) 16763 16764 (face (rainbow-delimiters-depth-1-face) fontified t) 16764 16774 (fontified t) 16774 16777 (face font-lock-keyword-face fontified t) 16777 16778 (fontified t) 16778 16787 (face font-lock-variable-name-face fontified t) 16787 16788 (face font-lock-variable-name-face fontified t) 16788 16791 (fontified t) 16791 16800 (face font-lock-type-face fontified t) 16800 16805 (fontified t) 16805 16806 (face (rainbow-delimiters-depth-2-face) fontified t) 16806 16807 (face (rainbow-delimiters-depth-2-face) fontified t) 16807 16814 (fontified t) 16814 16815 (face (rainbow-delimiters-depth-2-face) fontified t) 16815 16816 (face (rainbow-delimiters-depth-2-face) fontified t) 16816 16818 (fontified t) 16818 16822 (fontified t) 16822 16825 (face font-lock-keyword-face fontified t) 16825 16826 (fontified t) 16826 16832 (face font-lock-variable-name-face fontified t) 16832 16835 (fontified t) 16835 16848 (face font-lock-type-face fontified t) 16848 16853 (fontified t) 16853 16854 (face (rainbow-delimiters-depth-2-face) fontified t) 16854 16855 (face (rainbow-delimiters-depth-2-face) fontified t) 16855 16861 (fontified t) 16861 16862 (face (rainbow-delimiters-depth-2-face) fontified t) 16862 16863 (face rust-ampersand-face fontified t) 16863 16873 (fontified t) 16873 16874 (face (rainbow-delimiters-depth-2-face) fontified t) 16874 16881 (fontified t) 16881 16882 (face (rainbow-delimiters-depth-2-face) fontified t) 16882 16883 (face (rainbow-delimiters-depth-2-face) fontified t) 16883 16890 (fontified t) 16890 16893 (face font-lock-comment-delimiter-face fontified t) 16893 16967 (face font-lock-comment-face fontified t) 16967 16971 (fontified t) 16971 16974 (face font-lock-comment-delimiter-face fontified t) 16974 17047 (face font-lock-comment-face fontified t) 17047 17078 (fontified t) 17078 17079 (face (rainbow-delimiters-depth-2-face) fontified t) 17079 17090 (face font-lock-type-face fontified t) 17090 17092 (fontified t) 17092 17096 (face font-lock-type-face fontified t) 17096 17097 (face (rainbow-delimiters-depth-2-face) fontified t) 17097 17104 (fontified t) 17104 17107 (face font-lock-keyword-face fontified t) 17107 17108 (fontified t) 17108 17111 (face font-lock-keyword-face fontified t) 17111 17112 (fontified t) 17112 17117 (face font-lock-variable-name-face fontified t) 17117 17120 (fontified t) 17120 17125 (face font-lock-type-face fontified t) 17125 17130 (fontified t) 17130 17131 (face (rainbow-delimiters-depth-2-face) fontified t) 17131 17137 (fontified t) 17137 17138 (face (rainbow-delimiters-depth-2-face) fontified t) 17138 17139 (fontified t) 17139 17144 (face font-lock-keyword-face fontified t) 17144 17150 (fontified t) 17150 17153 (face font-lock-keyword-face fontified t) 17153 17154 (fontified t) 17154 17157 (face font-lock-keyword-face fontified t) 17157 17158 (fontified t) 17158 17174 (face font-lock-variable-name-face fontified t) 17174 17177 (fontified t) 17177 17184 (face font-lock-constant-face fontified t) 17184 17186 (fontified t) 17186 17193 (face font-lock-type-face fontified t) 17193 17198 (fontified t) 17198 17199 (face (rainbow-delimiters-depth-2-face) fontified t) 17199 17200 (face (rainbow-delimiters-depth-2-face) fontified t) 17200 17203 (fontified t) 17203 17206 (face font-lock-comment-delimiter-face fontified t) 17206 17211 (face font-lock-comment-face fontified t) 17211 17217 (fontified t) 17217 17220 (face font-lock-comment-delimiter-face fontified t) 17220 17226 (face font-lock-comment-face fontified t) 17226 17244 (fontified t) 17244 17245 (face (rainbow-delimiters-depth-2-face) fontified t) 17245 17249 (face font-lock-keyword-face fontified t) 17249 17264 (fontified t) 17264 17265 (face (rainbow-delimiters-depth-3-face) fontified t) 17265 17274 (fontified t) 17274 17279 (face font-lock-keyword-face fontified t) 17279 17286 (fontified t) 17286 17287 (face (rainbow-delimiters-depth-4-face) fontified t) 17287 17300 (fontified t) 17300 17305 (face font-lock-type-face fontified t) 17305 17307 (fontified t) 17307 17318 (face font-lock-type-face fontified t) 17318 17320 (fontified t) 17320 17321 (syntax-table (1) fontified t) 17321 17322 (fontified t) 17322 17323 (face (rainbow-delimiters-depth-5-face) fontified t) 17323 17340 (fontified t) 17340 17343 (face font-lock-comment-delimiter-face fontified t) 17343 17368 (face font-lock-comment-face fontified t) 17368 17385 (fontified t) 17385 17388 (face font-lock-comment-delimiter-face fontified t) 17388 17419 (face font-lock-comment-face fontified t) 17419 17435 (fontified t) 17435 17437 (face font-lock-comment-delimiter-face fontified t) 17437 17438 (face font-lock-comment-face fontified t) 17438 17454 (fontified t) 17454 17457 (face font-lock-comment-delimiter-face fontified t) 17457 17532 (face font-lock-comment-face fontified t) 17532 17542 (fontified t) 17542 17548 (fontified t) 17548 17551 (fontified t face font-lock-comment-delimiter-face) 17551 17631 (fontified t face font-lock-comment-face) 17647 17650 (face font-lock-comment-delimiter-face) 17650 17675 (face font-lock-comment-face) 17718 17719 (face (rainbow-delimiters-depth-6-face)) 17719 17720 (face (rainbow-delimiters-depth-6-face)) 17734 17735 (face (rainbow-delimiters-depth-5-face)) 17749 17754 (face font-lock-type-face) 17756 17767 (face font-lock-type-face) 17768 17769 (face (rainbow-delimiters-depth-5-face)) 17786 17791 (face font-lock-variable-name-face) 17793 17804 (face font-lock-type-face) 17806 17817 (face font-lock-type-face) 17817 17818 (face (rainbow-delimiters-depth-6-face)) 17826 17827 (face (rainbow-delimiters-depth-6-face)) 17848 17851 (face font-lock-comment-delimiter-face) 17851 17887 (face font-lock-comment-face) 17899 17900 (face (rainbow-delimiters-depth-5-face)) 17902 17903 (syntax-table (1)) 17904 17906 (face font-lock-keyword-face) 17927 17928 (face (rainbow-delimiters-depth-5-face)) 17982 17983 (face (rainbow-delimiters-depth-6-face)) 17999 18000 (face (rainbow-delimiters-depth-6-face)) 18013 18014 (face (rainbow-delimiters-depth-5-face)) 18028 18033 (face font-lock-type-face) 18035 18046 (face font-lock-type-face) 18047 18048 (face (rainbow-delimiters-depth-5-face)) 18065 18068 (face font-lock-keyword-face) 18069 18074 (face font-lock-variable-name-face) 18107 18108 (face (rainbow-delimiters-depth-5-face)) 18110 18111 (syntax-table (1)) 18112 18113 (face (rainbow-delimiters-depth-5-face)) 18130 18132 (face font-lock-keyword-face) 18145 18146 (face (rainbow-delimiters-depth-6-face)) 18151 18152 (face (rainbow-delimiters-depth-6-face)) 18153 18154 (face (rainbow-delimiters-depth-6-face)) 18155 18158 (face font-lock-comment-delimiter-face) 18158 18167 (face font-lock-comment-face) 18187 18192 (face font-lock-keyword-face) 18199 18200 (face (rainbow-delimiters-depth-7-face)) 18225 18236 (face font-lock-type-face) 18238 18252 (face font-lock-type-face) 18283 18294 (face font-lock-type-face) 18296 18309 (face font-lock-type-face) 18310 18311 (face (rainbow-delimiters-depth-8-face)) 18344 18349 (face font-lock-variable-name-face) 18383 18391 (face font-lock-type-face) 18392 18393 (face (rainbow-delimiters-depth-9-face)) 18430 18435 (face font-lock-variable-name-face) 18437 18449 (face font-lock-type-face) 18451 18458 (face font-lock-type-face) 18496 18508 (face font-lock-variable-name-face) 18510 18521 (face font-lock-type-face) 18523 18527 (face font-lock-type-face) 18527 18528 (face (rainbow-delimiters-depth-1-face)) 18528 18535 (face font-lock-type-face) 18537 18543 (face font-lock-type-face) 18543 18544 (face (rainbow-delimiters-depth-1-face)) 18617 18618 (face (rainbow-delimiters-depth-9-face)) 18683 18684 (face (rainbow-delimiters-depth-8-face)) 18686 18687 (syntax-table (1)) 18697 18698 (face (rainbow-delimiters-depth-8-face)) 18698 18699 (face (rainbow-delimiters-depth-8-face)) 18725 18736 (face font-lock-type-face) 18738 18745 (face font-lock-type-face) 18745 18746 (face (rainbow-delimiters-depth-8-face)) 18759 18760 (face (rainbow-delimiters-depth-8-face)) 18762 18763 (syntax-table (1)) 18764 18765 (face (rainbow-delimiters-depth-8-face)) 18806 18807 (face (rainbow-delimiters-depth-9-face)) 18821 18822 (face (rainbow-delimiters-depth-9-face)) 18848 18849 (face (rainbow-delimiters-depth-8-face)) 18878 18879 (syntax-table (1)) 18880 18881 (face (rainbow-delimiters-depth-8-face)) 18881 18882 (face (rainbow-delimiters-depth-8-face)) 18903 18904 (face (rainbow-delimiters-depth-7-face)) 18921 18922 (face (rainbow-delimiters-depth-6-face)) 18940 18942 (face font-lock-keyword-face) 18953 18964 (face font-lock-type-face) 18966 18981 (face font-lock-type-face) 18982 18983 (face (rainbow-delimiters-depth-6-face)) 19004 19007 (face font-lock-keyword-face) 19008 19011 (face font-lock-variable-name-face) 19014 19021 (face font-lock-constant-face) 19023 19030 (face font-lock-type-face) 19035 19036 (face (rainbow-delimiters-depth-7-face)) 19036 19037 (face (rainbow-delimiters-depth-7-face)) 19059 19062 (face font-lock-keyword-face) 19063 19065 (face font-lock-variable-name-face) 19168 19169 (face (rainbow-delimiters-depth-7-face)) 19171 19172 (face (rainbow-delimiters-depth-7-face)) 19194 19199 (face font-lock-keyword-face) 19212 19213 (face (rainbow-delimiters-depth-7-face)) 19213 19217 (face font-lock-constant-face) 19219 19224 (face font-lock-type-face) 19226 19231 (face font-lock-type-face) 19231 19232 (face (rainbow-delimiters-depth-7-face)) 19233 19234 (face (rainbow-delimiters-depth-7-face)) 19259 19261 (face font-lock-type-face) 19261 19262 (face (rainbow-delimiters-depth-8-face)) 19263 19264 (face (rainbow-delimiters-depth-8-face)) 19266 19267 (syntax-table (1)) 19268 19269 (face (rainbow-delimiters-depth-8-face)) 19269 19270 (face (rainbow-delimiters-depth-8-face)) 19295 19298 (face font-lock-comment-delimiter-face) 19298 19330 (face font-lock-comment-face) 19354 19357 (face font-lock-type-face) 19357 19358 (face (rainbow-delimiters-depth-8-face)) 19358 19362 (face font-lock-constant-face) 19364 19376 (face font-lock-type-face) 19378 19382 (face font-lock-type-face) 19382 19383 (face (rainbow-delimiters-depth-8-face)) 19385 19386 (syntax-table (1)) 19399 19400 (face (rainbow-delimiters-depth-8-face)) 19410 19411 (face (rainbow-delimiters-depth-8-face)) 19437 19440 (face font-lock-comment-delimiter-face) 19440 19493 (face font-lock-comment-face) 19517 19520 (face font-lock-type-face) 19520 19521 (face (rainbow-delimiters-depth-8-face)) 19521 19525 (face font-lock-constant-face) 19527 19539 (face font-lock-type-face) 19541 19552 (face font-lock-type-face) 19552 19553 (face (rainbow-delimiters-depth-8-face)) 19555 19556 (syntax-table (1)) 19566 19567 (face (rainbow-delimiters-depth-8-face)) 19567 19568 (face (rainbow-delimiters-depth-8-face)) 19594 19597 (face font-lock-comment-delimiter-face) 19597 19671 (face font-lock-comment-face) 19695 19698 (face font-lock-type-face) 19698 19699 (face (rainbow-delimiters-depth-8-face)) 19700 19701 (face (rainbow-delimiters-depth-8-face)) 19703 19704 (syntax-table (1)) 19705 19712 (face font-lock-constant-face) 19714 19716 (face font-lock-preprocessor-face) 19716 19720 (face font-lock-preprocessor-face) 19720 19721 (face (rainbow-delimiters-depth-8-face)) 19721 19727 (face font-lock-string-face) 19730 19731 (face (rainbow-delimiters-depth-8-face)) 19753 19754 (face (rainbow-delimiters-depth-7-face)) 19771 19772 (face (rainbow-delimiters-depth-6-face)) 19785 19786 (face (rainbow-delimiters-depth-5-face)) 19804 19805 (syntax-table (1)) 19806 19807 (face (rainbow-delimiters-depth-5-face)) 19807 19808 (face (rainbow-delimiters-depth-5-face)) 19817 19818 (face (rainbow-delimiters-depth-4-face)) 19823 19824 (face (rainbow-delimiters-depth-3-face)) 19824 19825 (face (rainbow-delimiters-depth-2-face)) 19832 19833 (face (rainbow-delimiters-depth-2-face))) . 137) (undo-tree-id2693 . -18923) (undo-tree-id2694 . -17409) (undo-tree-id2695 . -17396) (undo-tree-id2696 . -17574) (undo-tree-id2697 . -17475) (undo-tree-id2698 . -17369) (undo-tree-id2699 . -17474) (undo-tree-id2700 . -17674) (undo-tree-id2701 . -17438) (undo-tree-id2702 . -18824) (undo-tree-id2703 . -18923) (undo-tree-id2704 . -14956) (undo-tree-id2705 . -16273) (undo-tree-id2706 . -16273) (undo-tree-id2707 . -18922) (undo-tree-id2708 . -18923) (undo-tree-id2709 . -16273) 16410 (t 26015 51702 501770 33000)) nil (26015 65408 713641 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
<<<<<<< HEAD
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
=======
            Event::AboutToWait => {
                // Application update code.

                // Queue a RedrawRequested event.
                //
                // You only need to call this if you've determined that you need to redraw in
                // applications which do not always need to. Applications that redraw continuously
                // can render here instead.
                state.window.request_redraw();
            },
>>>>>>> winit_0_29
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 27 (face font-lock-constant-face fontified t) 27 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 39 (face font-lock-type-face fontified t) 39 41 (fontified t) 41 57 (face font-lock-type-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 60 (fontified t) 60 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 69 (face font-lock-constant-face fontified t) 69 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 77 (fontified t) 77 82 (face font-lock-constant-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 90 (face font-lock-type-face fontified t) 90 92 (fontified t) 92 103 (face font-lock-type-face fontified t) 103 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 131 (face font-lock-type-face fontified t) 131 133 (fontified t) 133 144 (face font-lock-type-face fontified t) 144 146 (fontified t) 146 159 (face font-lock-type-face fontified t) 159 161 (fontified t) 161 175 (face font-lock-type-face fontified t) 175 176 (face (rainbow-delimiters-depth-2-face) fontified t) 176 182 (fontified t) 182 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 206 (face font-lock-type-face fontified t) 206 208 (fontified t) 208 217 (face font-lock-type-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 224 (fontified t) 224 230 (face font-lock-constant-face fontified t) 230 232 (fontified t) 232 245 (face font-lock-type-face fontified t) 245 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 249 (fontified t) 249 252 (face font-lock-keyword-face fontified t) 252 253 (fontified t) 253 257 (face font-lock-constant-face fontified t) 257 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 265 (fontified t) 265 274 (face font-lock-type-face fontified t) 274 277 (fontified t) 277 280 (face font-lock-keyword-face fontified t) 280 281 (fontified t) 281 288 (face font-lock-constant-face fontified t) 288 290 (fontified t) 290 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 300 (face font-lock-constant-face fontified t) 300 302 (fontified t) 302 305 (face font-lock-keyword-face fontified t) 305 306 (fontified t) 306 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-constant-face fontified t) 329 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 340 (face font-lock-constant-face fontified t) 340 342 (fontified t) 342 345 (face font-lock-keyword-face fontified t) 345 346 (fontified t) 346 351 (face font-lock-constant-face fontified t) 351 353 (fontified t) 353 356 (face font-lock-comment-delimiter-face fontified t) 356 363 (face font-lock-comment-face fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 388 (face font-lock-type-face fontified t) 388 391 (fontified t) 391 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 406 (fontified t) 406 409 (face font-lock-keyword-face fontified t) 409 410 (fontified t) 410 418 (face font-lock-constant-face fontified t) 418 423 (fontified t) 423 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 432 (face font-lock-constant-face fontified t) 432 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 444 (face font-lock-type-face fontified t) 444 446 (fontified t) 446 452 (face font-lock-type-face fontified t) 452 453 (face (rainbow-delimiters-depth-1-face) fontified t) 453 456 (fontified t) 456 458 (face font-lock-keyword-face fontified t) 458 459 (fontified t) 459 481 (face font-lock-function-name-face fontified t) 481 482 (face (rainbow-delimiters-depth-1-face) fontified t) 482 487 (fontified t) 487 493 (face font-lock-variable-name-face fontified t) 493 495 (fontified t) 495 496 (face rust-ampersand-face fontified t) 496 500 (face font-lock-constant-face fontified t) 500 502 (fontified t) 502 508 (face font-lock-type-face fontified t) 508 514 (fontified t) 514 520 (face font-lock-variable-name-face fontified t) 520 522 (fontified t) 522 523 (face rust-ampersand-face fontified t) 523 527 (face font-lock-constant-face fontified t) 527 529 (fontified t) 529 543 (face font-lock-type-face fontified t) 543 549 (fontified t) 549 561 (face font-lock-variable-name-face fontified t) 561 563 (fontified t) 563 567 (face font-lock-constant-face fontified t) 567 569 (fontified t) 569 582 (face font-lock-type-face fontified t) 582 588 (fontified t) 588 600 (face font-lock-variable-name-face fontified t) 600 602 (fontified t) 602 608 (face font-lock-type-face fontified t) 608 609 (face (rainbow-delimiters-depth-2-face) fontified t) 609 613 (face font-lock-constant-face fontified t) 613 615 (fontified t) 615 628 (face font-lock-type-face fontified t) 628 629 (face (rainbow-delimiters-depth-2-face) fontified t) 629 635 (fontified t) 635 649 (face font-lock-variable-name-face fontified t) 649 651 (fontified t) 651 652 (face rust-ampersand-face fontified t) 652 653 (face (rainbow-delimiters-depth-2-face) fontified t) 653 657 (face font-lock-constant-face fontified t) 657 659 (fontified t) 659 677 (face font-lock-type-face fontified t) 677 678 (face (rainbow-delimiters-depth-2-face) fontified t) 678 684 (fontified t) 684 690 (face font-lock-variable-name-face fontified t) 690 692 (fontified t) 692 696 (face font-lock-constant-face fontified t) 696 698 (fontified t) 698 720 (face font-lock-type-face fontified t) 720 722 (fontified t) 722 723 (face (rainbow-delimiters-depth-1-face) fontified t) 723 725 (fontified t) 725 726 (syntax-table (1) fontified t) 726 727 (fontified t) 727 731 (face font-lock-constant-face fontified t) 731 733 (fontified t) 733 747 (face font-lock-type-face fontified t) 747 748 (fontified t) 748 749 (face (rainbow-delimiters-depth-1-face) fontified t) 749 754 (fontified t) 754 757 (face font-lock-keyword-face fontified t) 757 758 (fontified t) 758 764 (face font-lock-variable-name-face fontified t) 764 794 (fontified t) 794 795 (face (rainbow-delimiters-depth-2-face) fontified t) 795 801 (fontified t) 801 802 (face (rainbow-delimiters-depth-2-face) fontified t) 802 838 (fontified t) 838 839 (face (rainbow-delimiters-depth-2-face) fontified t) 839 840 (face rust-ampersand-face fontified t) 840 844 (face font-lock-constant-face fontified t) 844 846 (fontified t) 846 870 (face font-lock-type-face fontified t) 870 871 (fontified t) 871 872 (face (rainbow-delimiters-depth-3-face) fontified t) 872 881 (fontified t) 881 886 (face font-lock-variable-name-face fontified t) 886 888 (fontified t) 888 892 (face font-lock-type-face fontified t) 892 893 (face (rainbow-delimiters-depth-4-face) fontified t) 893 910 (face font-lock-string-face fontified t) 910 911 (face (rainbow-delimiters-depth-4-face) fontified t) 911 921 (fontified t) 921 927 (face font-lock-variable-name-face fontified t) 927 929 (fontified t) 929 933 (face font-lock-type-face fontified t) 933 934 (face (rainbow-delimiters-depth-4-face) fontified t) 934 940 (fontified t) 940 941 (face (rainbow-delimiters-depth-4-face) fontified t) 941 951 (fontified t) 951 957 (face font-lock-variable-name-face fontified t) 957 959 (fontified t) 959 963 (face font-lock-constant-face fontified t) 963 965 (fontified t) 965 976 (face font-lock-type-face fontified t) 976 977 (fontified t) 977 978 (face (rainbow-delimiters-depth-4-face) fontified t) 978 991 (fontified t) 991 997 (face font-lock-variable-name-face fontified t) 997 999 (fontified t) 999 1000 (face rust-ampersand-face fontified t) 1000 1020 (fontified t) 1020 1031 (face font-lock-variable-name-face fontified t) 1031 1033 (fontified t) 1033 1042 (face font-lock-string-face fontified t) 1042 1056 (fontified t) 1056 1063 (face font-lock-variable-name-face fontified t) 1063 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-4-face) fontified t) 1090 1100 (fontified t) 1100 1108 (face font-lock-variable-name-face fontified t) 1108 1110 (fontified t) 1110 1114 (face font-lock-type-face fontified t) 1114 1115 (face (rainbow-delimiters-depth-4-face) fontified t) 1115 1119 (face font-lock-constant-face fontified t) 1119 1121 (fontified t) 1121 1134 (face font-lock-type-face fontified t) 1134 1135 (fontified t) 1135 1136 (face (rainbow-delimiters-depth-5-face) fontified t) 1136 1149 (fontified t) 1149 1155 (face font-lock-variable-name-face fontified t) 1155 1157 (fontified t) 1157 1158 (face rust-ampersand-face fontified t) 1158 1178 (fontified t) 1178 1189 (face font-lock-variable-name-face fontified t) 1189 1191 (fontified t) 1191 1200 (face font-lock-string-face fontified t) 1200 1214 (fontified t) 1214 1221 (face font-lock-variable-name-face fontified t) 1221 1223 (fontified t) 1223 1224 (face rust-ampersand-face fontified t) 1224 1225 (face (rainbow-delimiters-depth-6-face) fontified t) 1225 1229 (face font-lock-type-face fontified t) 1229 1230 (face (rainbow-delimiters-depth-7-face) fontified t) 1230 1234 (face font-lock-constant-face fontified t) 1234 1236 (fontified t) 1236 1252 (face font-lock-type-face fontified t) 1252 1253 (fontified t) 1253 1254 (face (rainbow-delimiters-depth-8-face) fontified t) 1254 1271 (fontified t) 1271 1277 (face font-lock-variable-name-face fontified t) 1277 1309 (fontified t) 1309 1314 (face font-lock-variable-name-face fontified t) 1314 1316 (fontified t) 1316 1320 (face font-lock-type-face fontified t) 1320 1321 (face (rainbow-delimiters-depth-9-face) fontified t) 1321 1325 (face font-lock-constant-face fontified t) 1325 1327 (fontified t) 1327 1337 (face font-lock-type-face fontified t) 1337 1338 (fontified t) 1338 1339 (face (rainbow-delimiters-depth-1-face) fontified t) 1339 1360 (fontified t) 1360 1365 (face font-lock-variable-name-face fontified t) 1365 1367 (fontified t) 1367 1371 (face font-lock-constant-face fontified t) 1371 1373 (fontified t) 1373 1387 (face font-lock-type-face fontified t) 1387 1389 (fontified t) 1389 1396 (face font-lock-type-face fontified t) 1396 1418 (fontified t) 1418 1423 (face font-lock-variable-name-face fontified t) 1423 1425 (fontified t) 1425 1429 (face font-lock-constant-face fontified t) 1429 1431 (fontified t) 1431 1445 (face font-lock-type-face fontified t) 1445 1447 (fontified t) 1447 1454 (face font-lock-type-face fontified t) 1454 1472 (fontified t) 1472 1473 (face (rainbow-delimiters-depth-1-face) fontified t) 1473 1474 (face (rainbow-delimiters-depth-9-face) fontified t) 1474 1492 (fontified t) 1492 1500 (face font-lock-variable-name-face fontified t) 1500 1502 (face font-lock-variable-name-face fontified t) 1502 1504 (fontified t) 1504 1508 (face font-lock-constant-face fontified t) 1508 1510 (fontified t) 1510 1521 (face font-lock-type-face fontified t) 1521 1523 (fontified t) 1523 1526 (face font-lock-type-face fontified t) 1526 1528 (fontified t) 1528 1540 (fontified t) 1540 1541 (face (rainbow-delimiters-depth-8-face) fontified t) 1541 1542 (face (rainbow-delimiters-depth-7-face) fontified t) 1542 1543 (face (rainbow-delimiters-depth-6-face) fontified t) 1543 1553 (fontified t) 1553 1554 (face (rainbow-delimiters-depth-5-face) fontified t) 1554 1555 (face (rainbow-delimiters-depth-4-face) fontified t) 1555 1565 (fontified t) 1565 1574 (face font-lock-variable-name-face fontified t) 1574 1576 (fontified t) 1576 1580 (face font-lock-constant-face fontified t) 1580 1582 (fontified t) 1582 1596 (face font-lock-type-face fontified t) 1596 1597 (fontified t) 1597 1598 (face (rainbow-delimiters-depth-4-face) fontified t) 1598 1611 (fontified t) 1611 1619 (face font-lock-variable-name-face fontified t) 1619 1621 (fontified t) 1621 1625 (face font-lock-constant-face fontified t) 1625 1627 (fontified t) 1627 1644 (face font-lock-type-face fontified t) 1644 1646 (fontified t) 1646 1658 (face font-lock-type-face fontified t) 1658 1672 (fontified t) 1672 1690 (face font-lock-variable-name-face fontified t) 1690 1692 (fontified t) 1692 1696 (face font-lock-type-face fontified t) 1696 1710 (fontified t) 1710 1720 (face font-lock-variable-name-face fontified t) 1720 1722 (fontified t) 1722 1726 (face font-lock-constant-face fontified t) 1726 1728 (fontified t) 1728 1737 (face font-lock-type-face fontified t) 1737 1739 (fontified t) 1739 1742 (face font-lock-type-face fontified t) 1742 1756 (fontified t) 1756 1765 (face font-lock-variable-name-face fontified t) 1765 1767 (fontified t) 1767 1771 (face font-lock-type-face fontified t) 1771 1772 (face (rainbow-delimiters-depth-5-face) fontified t) 1772 1776 (face font-lock-constant-face fontified t) 1776 1778 (fontified t) 1778 1782 (face font-lock-type-face fontified t) 1782 1784 (fontified t) 1784 1788 (face font-lock-type-face fontified t) 1788 1789 (face (rainbow-delimiters-depth-5-face) fontified t) 1789 1803 (fontified t) 1803 1806 (face font-lock-comment-delimiter-face fontified t) 1806 1888 (face font-lock-comment-face fontified t) 1888 1900 (fontified t) 1900 1912 (face font-lock-variable-name-face fontified t) 1912 1914 (fontified t) 1914 1918 (face font-lock-constant-face fontified t) 1918 1920 (fontified t) 1920 1931 (face font-lock-type-face fontified t) 1931 1933 (fontified t) 1933 1937 (face font-lock-type-face fontified t) 1937 1951 (fontified t) 1951 1954 (face font-lock-comment-delimiter-face fontified t) 1954 1992 (face font-lock-comment-face fontified t) 1992 2004 (fontified t) 2004 2019 (face font-lock-variable-name-face fontified t) 2019 2021 (fontified t) 2021 2026 (face font-lock-keyword-face fontified t) 2026 2040 (fontified t) 2040 2043 (face font-lock-comment-delimiter-face fontified t) 2043 2089 (face font-lock-comment-face fontified t) 2089 2101 (fontified t) 2101 2113 (face font-lock-variable-name-face fontified t) 2113 2115 (fontified t) 2115 2120 (face font-lock-keyword-face fontified t) 2120 2130 (fontified t) 2130 2131 (face (rainbow-delimiters-depth-4-face) fontified t) 2131 2141 (fontified t) 2141 2154 (face font-lock-variable-name-face fontified t) 2154 2172 (fontified t) 2172 2173 (face (rainbow-delimiters-depth-4-face) fontified t) 2173 2182 (fontified t) 2182 2186 (face font-lock-constant-face fontified t) 2186 2188 (fontified t) 2188 2205 (face font-lock-type-face fontified t) 2205 2206 (fontified t) 2206 2207 (face (rainbow-delimiters-depth-5-face) fontified t) 2207 2240 (fontified t) 2240 2259 (face font-lock-variable-name-face fontified t) 2259 2261 (fontified t) 2261 2265 (face font-lock-keyword-face fontified t) 2265 2279 (fontified t) 2279 2292 (face font-lock-variable-name-face fontified t) 2292 2294 (fontified t) 2294 2298 (face font-lock-constant-face fontified t) 2298 2300 (fontified t) 2300 2315 (face font-lock-type-face fontified t) 2315 2317 (fontified t) 2317 2321 (face font-lock-type-face fontified t) 2321 2335 (fontified t) 2335 2342 (face font-lock-variable-name-face fontified t) 2342 2344 (fontified t) 2344 2348 (face font-lock-constant-face fontified t) 2348 2350 (fontified t) 2350 2362 (face font-lock-type-face fontified t) 2362 2371 (fontified t) 2371 2372 (face (rainbow-delimiters-depth-6-face) fontified t) 2372 2373 (face (rainbow-delimiters-depth-6-face) fontified t) 2373 2387 (fontified t) 2387 2391 (face font-lock-variable-name-face fontified t) 2391 2393 (fontified t) 2393 2397 (face font-lock-constant-face fontified t) 2397 2399 (fontified t) 2399 2413 (face font-lock-type-face fontified t) 2413 2422 (fontified t) 2422 2423 (face (rainbow-delimiters-depth-6-face) fontified t) 2423 2424 (face (rainbow-delimiters-depth-6-face) fontified t) 2424 2434 (fontified t) 2434 2435 (face (rainbow-delimiters-depth-5-face) fontified t) 2435 2436 (face (rainbow-delimiters-depth-4-face) fontified t) 2436 2446 (fontified t) 2446 2457 (face font-lock-variable-name-face fontified t) 2457 2459 (fontified t) 2459 2463 (face font-lock-constant-face fontified t) 2463 2465 (fontified t) 2465 2481 (face font-lock-type-face fontified t) 2481 2482 (fontified t) 2482 2483 (face (rainbow-delimiters-depth-4-face) fontified t) 2483 2496 (fontified t) 2496 2501 (face font-lock-variable-name-face fontified t) 2501 2518 (fontified t) 2518 2522 (face font-lock-variable-name-face fontified t) 2522 2540 (fontified t) 2540 2565 (face font-lock-variable-name-face fontified t) 2565 2567 (fontified t) 2567 2572 (face font-lock-keyword-face fontified t) 2572 2582 (fontified t) 2582 2583 (face (rainbow-delimiters-depth-4-face) fontified t) 2583 2593 (fontified t) 2593 2602 (face font-lock-variable-name-face fontified t) 2602 2604 (fontified t) 2604 2608 (face font-lock-type-face fontified t) 2608 2614 (fontified t) 2614 2615 (face (rainbow-delimiters-depth-3-face) fontified t) 2615 2616 (face (rainbow-delimiters-depth-2-face) fontified t) 2616 2617 (fontified t) 2617 2618 (face (rainbow-delimiters-depth-1-face) fontified t) 2618 2620 (fontified t) 2620 2626 (face font-lock-keyword-face fontified t) 2626 2627 (fontified t) 2627 2632 (face font-lock-type-face fontified t) 2632 2633 (fontified t) 2633 2634 (face (rainbow-delimiters-depth-1-face) fontified t) 2634 2639 (fontified t) 2639 2646 (face font-lock-variable-name-face fontified t) 2646 2648 (fontified t) 2648 2652 (face font-lock-constant-face fontified t) 2652 2654 (fontified t) 2654 2661 (face font-lock-type-face fontified t) 2661 2667 (fontified t) 2667 2673 (face font-lock-variable-name-face fontified t) 2673 2675 (fontified t) 2675 2679 (face font-lock-constant-face fontified t) 2679 2681 (fontified t) 2681 2687 (face font-lock-type-face fontified t) 2687 2693 (fontified t) 2693 2698 (face font-lock-variable-name-face fontified t) 2698 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2706 (fontified t) 2706 2711 (face font-lock-type-face fontified t) 2711 2717 (fontified t) 2717 2723 (face font-lock-variable-name-face fontified t) 2723 2725 (fontified t) 2725 2729 (face font-lock-constant-face fontified t) 2729 2731 (fontified t) 2731 2751 (face font-lock-type-face fontified t) 2751 2757 (fontified t) 2757 2761 (face font-lock-variable-name-face fontified t) 2761 2763 (fontified t) 2763 2768 (face font-lock-constant-face fontified t) 2768 2770 (fontified t) 2770 2773 (face font-lock-constant-face fontified t) 2773 2775 (fontified t) 2775 2787 (face font-lock-type-face fontified t) 2787 2788 (face (rainbow-delimiters-depth-2-face) fontified t) 2788 2791 (face font-lock-type-face fontified t) 2791 2792 (face (rainbow-delimiters-depth-2-face) fontified t) 2792 2798 (fontified t) 2798 2801 (face font-lock-comment-delimiter-face fontified t) 2801 2850 (face font-lock-comment-face fontified t) 2850 2854 (fontified t) 2854 2857 (face font-lock-comment-delimiter-face fontified t) 2857 2906 (face font-lock-comment-face fontified t) 2906 2910 (fontified t) 2910 2913 (face font-lock-comment-delimiter-face fontified t) 2913 2958 (face font-lock-comment-face fontified t) 2958 2962 (fontified t) 2962 2968 (face font-lock-variable-name-face fontified t) 2968 2970 (fontified t) 2970 2976 (face font-lock-type-face fontified t) 2976 2982 (fontified t) 2982 2997 (face font-lock-variable-name-face fontified t) 2997 2999 (fontified t) 2999 3003 (face font-lock-constant-face fontified t) 3003 3005 (fontified t) 3005 3019 (face font-lock-type-face fontified t) 3019 3025 (fontified t) 3025 3028 (face font-lock-variable-name-face fontified t) 3028 3034 (face font-lock-variable-name-face fontified t) 3034 3036 (fontified t) 3036 3041 (face font-lock-constant-face fontified t) 3041 3043 (fontified t) 3043 3048 (face font-lock-type-face fontified t) 3048 3050 (fontified t) 3050 17294 (fontified nil) 17294 17875 (fontified nil) 17875 20155 (fontified nil)) . 137) (t 26015 63786 716593 137000)) nil (26015 65408 713622 0) 0 nil])
([nil nil ((17536 . 17985) (t 26015 63803 165623 305000)) nil (26015 65442 783765 0) 0 nil])
([nil nil ((#("mod depth_pass;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-constant-face fontified t) 14 15 (fontified t) 15 16 (fontified t)) . -473) (undo-tree-id2763 . -16) (undo-tree-id2764 . -16) (undo-tree-id2765 . -15) (undo-tree-id2766 . -8) (undo-tree-id2767 . -8) (undo-tree-id2768 . -8) (undo-tree-id2769 . -8) (undo-tree-id2770 . -8) (undo-tree-id2771 . -8) (undo-tree-id2772 . -8) (undo-tree-id2773 . -8) (undo-tree-id2774 . -12) (undo-tree-id2775 . -12) (undo-tree-id2776 . -12) (undo-tree-id2777 . -12) (undo-tree-id2778 . -12) (undo-tree-id2779 . -12) (undo-tree-id2780 . -10) (undo-tree-id2781 . -14) (undo-tree-id2782 . -14) (undo-tree-id2783 . -10) (undo-tree-id2784 . -10) (undo-tree-id2785 . -14) (undo-tree-id2786 . -14) (undo-tree-id2787 . -16) (undo-tree-id2788 . -16) (undo-tree-id2789 . -10) (undo-tree-id2790 . -16) (undo-tree-id2791 . -16) (undo-tree-id2792 . -16) (undo-tree-id2793 . -16) (undo-tree-id2794 . -16) 489) nil (26015 65447 597783 0) 0 nil] [nil nil ((#("mod depth_pass;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-constant-face fontified t) 14 15 (fontified t)) . 473) (undo-tree-id2687 . -15) (undo-tree-id2689 . -15) (undo-tree-id2691 . -15) (t 26015 63818 900230 954000)) ((473 . 488)) (26015 65441 785202 0) 0 nil])
([nil nil ((#("mod transform;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 13 (face font-lock-constant-face fontified t) 13 15 (fontified t)) . -444) (undo-tree-id2795 . -15) (undo-tree-id2796 . -15) (undo-tree-id2797 . -8) (undo-tree-id2798 . -8) (undo-tree-id2799 . -8) (undo-tree-id2800 . -8) (undo-tree-id2801 . -8) (undo-tree-id2802 . -8) (undo-tree-id2803 . -4) (undo-tree-id2804 . -13) (undo-tree-id2805 . -13) (undo-tree-id2806 . -4) (undo-tree-id2807 . -4) (undo-tree-id2808 . -13) (undo-tree-id2809 . -13) (undo-tree-id2810 . -15) (undo-tree-id2811 . -15) (undo-tree-id2812 . -4) (undo-tree-id2813 . -15) (undo-tree-id2814 . -15) (undo-tree-id2815 . -15) (undo-tree-id2816 . -15) (undo-tree-id2817 . -15) 459 (t 26015 65447 646340 976000)) nil (26015 65477 513192 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 473)) ((473 . 474)) (26015 65437 914029 0) 0 nil])
([nil nil ((#("use transform::{Transform, TransformUniform};
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 25 (face font-lock-type-face fontified t) 25 27 (fontified t) 27 43 (face font-lock-type-face fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 46 (fontified t)) . -143) (undo-tree-id2818 . -46) (undo-tree-id2819 . -46) (undo-tree-id2820 . -16) (undo-tree-id2821 . -16) (undo-tree-id2822 . -16) (undo-tree-id2823 . -16) (undo-tree-id2824 . -16) (undo-tree-id2825 . -16) (undo-tree-id2826 . -16) (undo-tree-id2827 . -25) (undo-tree-id2828 . -25) (undo-tree-id2829 . -16) (undo-tree-id2830 . -16) (undo-tree-id2831 . -25) (undo-tree-id2832 . -25) (undo-tree-id2833 . -46) (undo-tree-id2834 . -46) (undo-tree-id2835 . -16) (undo-tree-id2836 . -46) (undo-tree-id2837 . -46) (undo-tree-id2838 . -46) 189 (t 26015 65477 561233 608000)) nil (26015 65483 275379 0) 0 nil])
([nil nil ((#("    depth_texture: Texture,
" 0 4 (fontified t) 4 17 (face font-lock-variable-name-face fontified t) 17 19 (fontified t) 19 26 (face font-lock-type-face fontified t) 26 28 (fontified t)) . -3249) (undo-tree-id2740 . -28) (undo-tree-id2741 . -28) (undo-tree-id2742 . -16) (undo-tree-id2743 . -16) (undo-tree-id2744 . -16) (undo-tree-id2745 . -16) (undo-tree-id2746 . -16) (undo-tree-id2747 . -16) (undo-tree-id2748 . -10) (undo-tree-id2749 . -17) (undo-tree-id2750 . -17) (undo-tree-id2751 . -10) (undo-tree-id2752 . -10) (undo-tree-id2753 . -17) (undo-tree-id2754 . -17) (undo-tree-id2755 . -28) (undo-tree-id2756 . -28) (undo-tree-id2757 . -10) (undo-tree-id2758 . -28) (undo-tree-id2759 . -28) (undo-tree-id2760 . -28) (undo-tree-id2761 . -28) (undo-tree-id2762 . -28) 3277 (t 26015 65408 762583 188000)) ((3249 . 3277)) (26015 65437 199837 0) 0 nil])
([nil nil ((433 . 434) (t 26015 65483 323163 792000)) nil (26016 146 133392 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3248) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) 3249) ((3248 . 3249) (t 26015 65427 753709 974000)) (26015 65427 705794 0) 0 nil])
([nil nil ((434 . 440)) nil (26016 146 133390 0) 0 nil])
nil
([nil nil ((438 . 449) (#("gp" 0 2 (fontified nil)) . 438) (438 . 440) (#("gpu_buffer;" 0 11 (fontified nil)) . -438) (438 . 449) (#("gp" 0 2 (face font-lock-constant-face fontified t)) . -438) (undo-tree-id2839 . -2) (undo-tree-id2840 . -1) (undo-tree-id2841 . -2) (undo-tree-id2842 . -2) 440) nil (26016 146 133386 0) 0 nil])
([nil nil ((#("mod gpu_buffer;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-constant-face fontified t) 14 15 (fontified t) 15 16 (fontified t)) . -434) (undo-tree-id2843 . -16) (undo-tree-id2844 . -16) (undo-tree-id2845 . -12) (undo-tree-id2846 . -12) (undo-tree-id2847 . -12) (undo-tree-id2848 . -12) (undo-tree-id2849 . -12) (undo-tree-id2850 . -8) (undo-tree-id2851 . -14) (undo-tree-id2852 . -14) (undo-tree-id2853 . -8) (undo-tree-id2854 . -14) (undo-tree-id2855 . -14) (undo-tree-id2856 . -16) (undo-tree-id2857 . -16) (undo-tree-id2858 . -8) (undo-tree-id2859 . -16) (undo-tree-id2860 . -16) (undo-tree-id2861 . -16) 450 (t 26016 146 181965 359000)) nil (26016 3667 870698 0) 0 nil])
([nil nil ((10470 . 10478) (#("        " 0 8 (fontified nil)) . 10469) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (10477 . 10478) (t 26016 3667 919541 749000)) nil (26017 25324 956138 0) 0 nil])
([nil nil ((10469 . 10477)) nil (26017 25324 956125 0) 0 nil])
([nil nil ((10477 . 10481)) nil (26017 25324 956124 0) 0 nil])
([nil nil ((10477 . 10492) (#("pipe" 0 4 (fontified nil)) . 10477) (10477 . 10481) (#("render_pipeline" 0 15 (fontified nil)) . -10477) (10477 . 10492) (#("pipe" 0 4 (fontified t)) . -10477) (undo-tree-id107 . -4) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) 10481) nil (26017 25324 956122 0) 0 nil])
([nil nil ((10492 . 10496)) nil (26017 25324 956105 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10515 10520 nil nil nil nil #s(yas--exit 10521 nil))) #s(yas--exit 10521 nil) 0 nil #s(yas--field 1 10515 10520 nil nil nil nil #s(yas--exit 10521 nil)) nil nil)) (10493 . 10521) (#("get_bind_group_layout(${1:index})$0" 0 35 (fontified nil)) . 10493) (10493 . 10528) (#("get" 0 3 (fontified nil)) . 10493) (10493 . 10496) (#("get_bind_group_layout(…)" 0 24 (fontified nil)) . -10493) (10493 . 10517) (#("get" 0 3 (fontified t)) . -10493) (undo-tree-id97 . -3) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) 10496) nil (26017 25324 956102 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10493 10521 #s(yas--snippet nil (#s(yas--field 1 10515 10520 nil nil nil nil #s(yas--exit 10521 nil))) #s(yas--exit 10521 nil) 0 nil #s(yas--field 1 10515 10520 nil nil nil nil #s(yas--exit 10521 nil)) nil nil))) nil (26017 25324 956083 0) 0 nil])
([nil nil ((#("        render_pipeline.get_bind_group_layout(index)
" 0 8 (fontified t) 8 24 (fontified t) 24 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-3-face) fontified t) 52 53 (fontified t)) . -10469) (undo-tree-id0 . -39) (undo-tree-id1 . 1) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -23) (undo-tree-id19 . -23) (undo-tree-id20 . -24) (undo-tree-id21 . -24) (undo-tree-id22 . -24) (undo-tree-id23 . -24) (undo-tree-id24 . -24) (undo-tree-id25 . -24) (undo-tree-id26 . -24) (undo-tree-id27 . -24) (undo-tree-id28 . -24) (undo-tree-id29 . -24) (undo-tree-id30 . -24) (undo-tree-id31 . -52) (undo-tree-id32 . -52) (undo-tree-id33 . -46) (undo-tree-id34 . -46) (undo-tree-id35 . -46) (undo-tree-id36 . -46) (undo-tree-id37 . -46) (undo-tree-id38 . -46) (undo-tree-id39 . -46) (undo-tree-id40 . -46) (undo-tree-id41 . -46) (undo-tree-id42 . -46) (undo-tree-id43 . -46) (undo-tree-id44 . -39) (undo-tree-id45 . -53) (undo-tree-id46 . -53) (undo-tree-id47 . -39) (undo-tree-id48 . -39) (undo-tree-id49 . -39) (undo-tree-id50 . -39) (undo-tree-id51 . -39) (undo-tree-id52 . -39) (undo-tree-id53 . -39) (undo-tree-id54 . -39) (undo-tree-id55 . -39) (undo-tree-id56 . -39) (undo-tree-id57 . -39) (undo-tree-id58 . -39) (undo-tree-id59 . -39) (undo-tree-id60 . -39) (undo-tree-id61 . -39) (undo-tree-id62 . -39) (undo-tree-id63 . -39) (undo-tree-id64 . -39) (undo-tree-id65 . -39) (undo-tree-id66 . -39) (undo-tree-id67 . -39) (undo-tree-id68 . -39) (undo-tree-id69 . -39) (undo-tree-id70 . -39) (undo-tree-id71 . -39) (undo-tree-id72 . -39) (undo-tree-id73 . -39) (undo-tree-id74 . -39) (undo-tree-id75 . -39) (undo-tree-id76 . -39) (undo-tree-id77 . -49) (undo-tree-id78 . -49) (undo-tree-id79 . -49) (undo-tree-id80 . -49) (undo-tree-id81 . -49) (undo-tree-id82 . -49) (undo-tree-id83 . -46) (undo-tree-id84 . -51) (undo-tree-id85 . -51) (undo-tree-id86 . -46) (undo-tree-id87 . -39) (undo-tree-id88 . -46) (undo-tree-id89 . -51) (undo-tree-id90 . -51) (undo-tree-id91 . -53) (undo-tree-id92 . -53) (undo-tree-id93 . -46) (undo-tree-id94 . -53) (undo-tree-id95 . -53) (undo-tree-id96 . -53) 10522) nil (26017 25324 956075 0) 0 nil])
([nil nil ((61 . 20251) (#(", Zero, Angle};
use light::LightUniform;
use texture::Texture;
use tracing::info;
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::AboutToWait => {
                // Application update code.

                // Queue a RedrawRequested event.
                //
                // You only need to call this if you've determined that you need to redraw in
                // applications which do not always need to. Applications that redraw continuously
                // can render here instead.
                state.window.request_redraw();
            },
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt" 0 2 (fontified t) 2 6 (face font-lock-type-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-type-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 16 (fontified t) 16 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 25 (face font-lock-constant-face fontified t) 25 27 (fontified t) 27 39 (face font-lock-type-face fontified t) 39 41 (fontified t) 41 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 52 (face font-lock-constant-face fontified t) 52 54 (fontified t) 54 61 (face font-lock-type-face fontified t) 61 63 (fontified t) 63 66 (face font-lock-keyword-face fontified t) 66 67 (fontified t) 67 74 (face font-lock-constant-face fontified t) 74 82 (fontified t) 82 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 91 (face font-lock-constant-face fontified t) 91 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 99 (fontified t) 99 104 (face font-lock-constant-face fontified t) 104 106 (fontified t) 106 107 (face (rainbow-delimiters-depth-2-face) fontified t) 107 112 (face font-lock-type-face fontified t) 112 114 (fontified t) 114 125 (face font-lock-type-face fontified t) 125 127 (fontified t) 127 135 (face font-lock-type-face fontified t) 135 137 (fontified t) 137 149 (face font-lock-type-face fontified t) 149 151 (fontified t) 151 162 (face font-lock-type-face fontified t) 162 164 (fontified t) 164 175 (face font-lock-type-face fontified t) 175 176 (face (rainbow-delimiters-depth-2-face) fontified t) 176 182 (fontified t) 182 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 206 (face font-lock-type-face fontified t) 206 208 (fontified t) 208 217 (face font-lock-type-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 224 (fontified t) 224 230 (face font-lock-constant-face fontified t) 230 232 (fontified t) 232 245 (face font-lock-type-face fontified t) 245 247 (fontified t) 247 255 (face font-lock-constant-face fontified t) 255 257 (fontified t) 257 258 (face (rainbow-delimiters-depth-2-face) fontified t) 258 269 (face font-lock-type-face fontified t) 269 271 (fontified t) 271 278 (face font-lock-type-face fontified t) 278 279 (face (rainbow-delimiters-depth-2-face) fontified t) 279 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-1-face) fontified t) 282 284 (fontified t) 284 287 (face font-lock-keyword-face fontified t) 287 288 (fontified t) 288 292 (face font-lock-constant-face fontified t) 292 294 (fontified t) 294 298 (face font-lock-constant-face fontified t) 298 300 (fontified t) 300 309 (face font-lock-type-face fontified t) 309 312 (fontified t) 312 315 (face font-lock-keyword-face fontified t) 315 316 (fontified t) 316 323 (face font-lock-constant-face fontified t) 323 325 (fontified t) 325 328 (face font-lock-keyword-face fontified t) 328 329 (fontified t) 329 335 (face font-lock-constant-face fontified t) 335 337 (fontified t) 337 340 (face font-lock-keyword-face fontified t) 340 341 (fontified t) 341 349 (face font-lock-constant-face fontified t) 349 351 (fontified t) 351 354 (face font-lock-keyword-face fontified t) 354 355 (fontified t) 355 360 (face font-lock-constant-face fontified t) 360 362 (fontified t) 362 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 371 (face font-lock-constant-face fontified t) 371 373 (fontified t) 373 376 (face font-lock-comment-delimiter-face fontified t) 376 383 (face font-lock-comment-face fontified t) 383 386 (face font-lock-keyword-face fontified t) 386 387 (fontified t) 387 392 (face font-lock-constant-face fontified t) 392 394 (fontified t) 394 400 (face font-lock-constant-face fontified t) 400 402 (fontified t) 402 408 (face font-lock-type-face fontified t) 408 411 (fontified t) 411 414 (face font-lock-keyword-face fontified t) 414 415 (fontified t) 415 421 (face font-lock-constant-face fontified t) 421 426 (fontified t) 426 429 (face font-lock-keyword-face fontified t) 429 430 (fontified t) 430 438 (face font-lock-constant-face fontified t) 438 443 (fontified t) 443 446 (face font-lock-keyword-face fontified t) 446 447 (fontified t) 447 452 (face font-lock-constant-face fontified t) 452 454 (fontified t) 454 455 (face (rainbow-delimiters-depth-1-face) fontified t) 455 464 (face font-lock-type-face fontified t) 464 466 (fontified t) 466 472 (face font-lock-type-face fontified t) 472 473 (face (rainbow-delimiters-depth-1-face) fontified t) 473 476 (fontified t) 476 478 (face font-lock-keyword-face fontified t) 478 479 (fontified t) 479 501 (face font-lock-function-name-face fontified t) 501 502 (face (rainbow-delimiters-depth-1-face) fontified t) 502 507 (fontified t) 507 513 (face font-lock-variable-name-face fontified t) 513 515 (fontified t) 515 516 (face rust-ampersand-face fontified t) 516 520 (face font-lock-constant-face fontified t) 520 522 (fontified t) 522 528 (face font-lock-type-face fontified t) 528 534 (fontified t) 534 540 (face font-lock-variable-name-face fontified t) 540 542 (fontified t) 542 543 (face rust-ampersand-face fontified t) 543 547 (face font-lock-constant-face fontified t) 547 549 (fontified t) 549 563 (face font-lock-type-face fontified t) 563 569 (fontified t) 569 581 (face font-lock-variable-name-face fontified t) 581 583 (fontified t) 583 587 (face font-lock-constant-face fontified t) 587 589 (fontified t) 589 602 (face font-lock-type-face fontified t) 602 608 (fontified t) 608 620 (face font-lock-variable-name-face fontified t) 620 622 (fontified t) 622 628 (face font-lock-type-face fontified t) 628 629 (face (rainbow-delimiters-depth-2-face) fontified t) 629 633 (face font-lock-constant-face fontified t) 633 635 (fontified t) 635 648 (face font-lock-type-face fontified t) 648 649 (face (rainbow-delimiters-depth-2-face) fontified t) 649 655 (fontified t) 655 669 (face font-lock-variable-name-face fontified t) 669 671 (fontified t) 671 672 (face rust-ampersand-face fontified t) 672 673 (face (rainbow-delimiters-depth-2-face) fontified t) 673 677 (face font-lock-constant-face fontified t) 677 679 (fontified t) 679 697 (face font-lock-type-face fontified t) 697 698 (face (rainbow-delimiters-depth-2-face) fontified t) 698 704 (fontified t) 704 710 (face font-lock-variable-name-face fontified t) 710 712 (fontified t) 712 716 (face font-lock-constant-face fontified t) 716 718 (fontified t) 718 740 (face font-lock-type-face fontified t) 740 742 (fontified t) 742 743 (face (rainbow-delimiters-depth-1-face) fontified t) 743 745 (fontified t) 745 746 (syntax-table (1) fontified t) 746 747 (fontified t) 747 751 (face font-lock-constant-face fontified t) 751 753 (fontified t) 753 767 (face font-lock-type-face fontified t) 767 768 (fontified t) 768 769 (face (rainbow-delimiters-depth-1-face) fontified t) 769 774 (fontified t) 774 777 (face font-lock-keyword-face fontified t) 777 778 (fontified t) 778 784 (face font-lock-variable-name-face fontified t) 784 814 (fontified t) 814 815 (face (rainbow-delimiters-depth-2-face) fontified t) 815 821 (fontified t) 821 822 (face (rainbow-delimiters-depth-2-face) fontified t) 822 858 (fontified t) 858 859 (face (rainbow-delimiters-depth-2-face) fontified t) 859 860 (face rust-ampersand-face fontified t) 860 864 (face font-lock-constant-face fontified t) 864 866 (fontified t) 866 890 (face font-lock-type-face fontified t) 890 891 (fontified t) 891 892 (face (rainbow-delimiters-depth-3-face) fontified t) 892 901 (fontified t) 901 906 (face font-lock-variable-name-face fontified t) 906 908 (fontified t) 908 912 (face font-lock-type-face fontified t) 912 913 (face (rainbow-delimiters-depth-4-face) fontified t) 913 930 (face font-lock-string-face fontified t) 930 931 (face (rainbow-delimiters-depth-4-face) fontified t) 931 941 (fontified t) 941 947 (face font-lock-variable-name-face fontified t) 947 949 (fontified t) 949 953 (face font-lock-type-face fontified t) 953 954 (face (rainbow-delimiters-depth-4-face) fontified t) 954 960 (fontified t) 960 961 (face (rainbow-delimiters-depth-4-face) fontified t) 961 971 (fontified t) 971 977 (face font-lock-variable-name-face fontified t) 977 979 (fontified t) 979 983 (face font-lock-constant-face fontified t) 983 985 (fontified t) 985 996 (face font-lock-type-face fontified t) 996 997 (fontified t) 997 998 (face (rainbow-delimiters-depth-4-face) fontified t) 998 1011 (fontified t) 1011 1017 (face font-lock-variable-name-face fontified t) 1017 1019 (fontified t) 1019 1020 (face rust-ampersand-face fontified t) 1020 1040 (fontified t) 1040 1051 (face font-lock-variable-name-face fontified t) 1051 1053 (fontified t) 1053 1062 (face font-lock-string-face fontified t) 1062 1076 (fontified t) 1076 1083 (face font-lock-variable-name-face fontified t) 1083 1109 (fontified t) 1109 1110 (face (rainbow-delimiters-depth-4-face) fontified t) 1110 1120 (fontified t) 1120 1128 (face font-lock-variable-name-face fontified t) 1128 1130 (fontified t) 1130 1134 (face font-lock-type-face fontified t) 1134 1135 (face (rainbow-delimiters-depth-4-face) fontified t) 1135 1139 (face font-lock-constant-face fontified t) 1139 1141 (fontified t) 1141 1154 (face font-lock-type-face fontified t) 1154 1155 (fontified t) 1155 1156 (face (rainbow-delimiters-depth-5-face) fontified t) 1156 1169 (fontified t) 1169 1175 (face font-lock-variable-name-face fontified t) 1175 1177 (fontified t) 1177 1178 (face rust-ampersand-face fontified t) 1178 1198 (fontified t) 1198 1209 (face font-lock-variable-name-face fontified t) 1209 1211 (fontified t) 1211 1220 (face font-lock-string-face fontified t) 1220 1234 (fontified t) 1234 1241 (face font-lock-variable-name-face fontified t) 1241 1243 (fontified t) 1243 1244 (face rust-ampersand-face fontified t) 1244 1245 (face (rainbow-delimiters-depth-6-face) fontified t) 1245 1249 (face font-lock-type-face fontified t) 1249 1250 (face (rainbow-delimiters-depth-7-face) fontified t) 1250 1254 (face font-lock-constant-face fontified t) 1254 1256 (fontified t) 1256 1272 (face font-lock-type-face fontified t) 1272 1273 (fontified t) 1273 1274 (face (rainbow-delimiters-depth-8-face) fontified t) 1274 1291 (fontified t) 1291 1297 (face font-lock-variable-name-face fontified t) 1297 1329 (fontified t) 1329 1334 (face font-lock-variable-name-face fontified t) 1334 1336 (fontified t) 1336 1340 (face font-lock-type-face fontified t) 1340 1341 (face (rainbow-delimiters-depth-9-face) fontified t) 1341 1345 (face font-lock-constant-face fontified t) 1345 1347 (fontified t) 1347 1357 (face font-lock-type-face fontified t) 1357 1358 (fontified t) 1358 1359 (face (rainbow-delimiters-depth-1-face) fontified t) 1359 1380 (fontified t) 1380 1385 (face font-lock-variable-name-face fontified t) 1385 1387 (fontified t) 1387 1391 (face font-lock-constant-face fontified t) 1391 1393 (fontified t) 1393 1407 (face font-lock-type-face fontified t) 1407 1409 (fontified t) 1409 1416 (face font-lock-type-face fontified t) 1416 1438 (fontified t) 1438 1440 (face font-lock-variable-name-face fontified t) 1440 1443 (face font-lock-variable-name-face fontified t) 1443 1445 (fontified t) 1445 1449 (face font-lock-constant-face fontified t) 1449 1451 (fontified t) 1451 1465 (face font-lock-type-face fontified t) 1465 1467 (fontified t) 1467 1474 (face font-lock-type-face fontified t) 1474 1476 (fontified t) 1476 1492 (fontified t) 1492 1493 (face (rainbow-delimiters-depth-1-face) fontified t) 1493 1494 (face (rainbow-delimiters-depth-9-face) fontified t) 1494 1512 (fontified t) 1512 1522 (face font-lock-variable-name-face fontified t) 1522 1524 (fontified t) 1524 1528 (face font-lock-constant-face fontified t) 1528 1530 (fontified t) 1530 1541 (face font-lock-type-face fontified t) 1541 1543 (fontified t) 1543 1546 (face font-lock-type-face fontified t) 1546 1560 (fontified t) 1560 1561 (face (rainbow-delimiters-depth-8-face) fontified t) 1561 1562 (face (rainbow-delimiters-depth-7-face) fontified t) 1562 1563 (face (rainbow-delimiters-depth-6-face) fontified t) 1563 1573 (fontified t) 1573 1574 (face (rainbow-delimiters-depth-5-face) fontified t) 1574 1575 (face (rainbow-delimiters-depth-4-face) fontified t) 1575 1585 (fontified t) 1585 1594 (face font-lock-variable-name-face fontified t) 1594 1596 (fontified t) 1596 1600 (face font-lock-constant-face fontified t) 1600 1602 (fontified t) 1602 1616 (face font-lock-type-face fontified t) 1616 1617 (fontified t) 1617 1618 (face (rainbow-delimiters-depth-4-face) fontified t) 1618 1631 (fontified t) 1631 1639 (face font-lock-variable-name-face fontified t) 1639 1641 (fontified t) 1641 1645 (face font-lock-constant-face fontified t) 1645 1647 (fontified t) 1647 1664 (face font-lock-type-face fontified t) 1664 1666 (fontified t) 1666 1678 (face font-lock-type-face fontified t) 1678 1692 (fontified t) 1692 1710 (face font-lock-variable-name-face fontified t) 1710 1712 (fontified t) 1712 1716 (face font-lock-type-face fontified t) 1716 1730 (fontified t) 1730 1740 (face font-lock-variable-name-face fontified t) 1740 1742 (fontified t) 1742 1746 (face font-lock-constant-face fontified t) 1746 1748 (fontified t) 1748 1757 (face font-lock-type-face fontified t) 1757 1759 (fontified t) 1759 1762 (face font-lock-type-face fontified t) 1762 1776 (fontified t) 1776 1785 (face font-lock-variable-name-face fontified t) 1785 1787 (fontified t) 1787 1791 (face font-lock-type-face fontified t) 1791 1792 (face (rainbow-delimiters-depth-5-face) fontified t) 1792 1796 (face font-lock-constant-face fontified t) 1796 1798 (fontified t) 1798 1802 (face font-lock-type-face fontified t) 1802 1804 (fontified t) 1804 1808 (face font-lock-type-face fontified t) 1808 1809 (face (rainbow-delimiters-depth-5-face) fontified t) 1809 1823 (fontified t) 1823 1826 (face font-lock-comment-delimiter-face fontified t) 1826 1908 (face font-lock-comment-face fontified t) 1908 1920 (fontified t) 1920 1932 (face font-lock-variable-name-face fontified t) 1932 1934 (fontified t) 1934 1938 (face font-lock-constant-face fontified t) 1938 1940 (fontified t) 1940 1951 (face font-lock-type-face fontified t) 1951 1953 (fontified t) 1953 1957 (face font-lock-type-face fontified t) 1957 1971 (fontified t) 1971 1974 (face font-lock-comment-delimiter-face fontified t) 1974 2012 (face font-lock-comment-face fontified t) 2012 2024 (fontified t) 2024 2039 (face font-lock-variable-name-face fontified t) 2039 2041 (fontified t) 2041 2046 (face font-lock-keyword-face fontified t) 2046 2060 (fontified t) 2060 2063 (face font-lock-comment-delimiter-face fontified t) 2063 2109 (face font-lock-comment-face fontified t) 2109 2121 (fontified t) 2121 2133 (face font-lock-variable-name-face fontified t) 2133 2135 (fontified t) 2135 2140 (face font-lock-keyword-face fontified t) 2140 2150 (fontified t) 2150 2151 (face (rainbow-delimiters-depth-4-face) fontified t) 2151 2161 (fontified t) 2161 2174 (face font-lock-variable-name-face fontified t) 2174 2192 (fontified t) 2192 2193 (face (rainbow-delimiters-depth-4-face) fontified t) 2193 2202 (fontified t) 2202 2206 (face font-lock-constant-face fontified t) 2206 2208 (fontified t) 2208 2225 (face font-lock-type-face fontified t) 2225 2226 (fontified t) 2226 2227 (face (rainbow-delimiters-depth-5-face) fontified t) 2227 2260 (fontified t) 2260 2279 (face font-lock-variable-name-face fontified t) 2279 2281 (fontified t) 2281 2285 (face font-lock-keyword-face fontified t) 2285 2299 (fontified t) 2299 2312 (face font-lock-variable-name-face fontified t) 2312 2314 (fontified t) 2314 2318 (face font-lock-constant-face fontified t) 2318 2320 (fontified t) 2320 2335 (face font-lock-type-face fontified t) 2335 2337 (fontified t) 2337 2341 (face font-lock-type-face fontified t) 2341 2355 (fontified t) 2355 2362 (face font-lock-variable-name-face fontified t) 2362 2364 (fontified t) 2364 2368 (face font-lock-constant-face fontified t) 2368 2370 (fontified t) 2370 2382 (face font-lock-type-face fontified t) 2382 2391 (fontified t) 2391 2392 (face (rainbow-delimiters-depth-6-face) fontified t) 2392 2393 (face (rainbow-delimiters-depth-6-face) fontified t) 2393 2407 (fontified t) 2407 2411 (face font-lock-variable-name-face fontified t) 2411 2413 (fontified t) 2413 2417 (face font-lock-constant-face fontified t) 2417 2419 (fontified t) 2419 2433 (face font-lock-type-face fontified t) 2433 2442 (fontified t) 2442 2443 (face (rainbow-delimiters-depth-6-face) fontified t) 2443 2444 (face (rainbow-delimiters-depth-6-face) fontified t) 2444 2454 (fontified t) 2454 2455 (face (rainbow-delimiters-depth-5-face) fontified t) 2455 2456 (face (rainbow-delimiters-depth-4-face) fontified t) 2456 2466 (fontified t) 2466 2477 (face font-lock-variable-name-face fontified t) 2477 2479 (fontified t) 2479 2483 (face font-lock-constant-face fontified t) 2483 2485 (fontified t) 2485 2501 (face font-lock-type-face fontified t) 2501 2502 (fontified t) 2502 2503 (face (rainbow-delimiters-depth-4-face) fontified t) 2503 2516 (fontified t) 2516 2521 (face font-lock-variable-name-face fontified t) 2521 2538 (fontified t) 2538 2542 (face font-lock-variable-name-face fontified t) 2542 2560 (fontified t) 2560 2585 (face font-lock-variable-name-face fontified t) 2585 2587 (fontified t) 2587 2592 (face font-lock-keyword-face fontified t) 2592 2602 (fontified t) 2602 2603 (face (rainbow-delimiters-depth-4-face) fontified t) 2603 2613 (fontified t) 2613 2622 (face font-lock-variable-name-face fontified t) 2622 2624 (fontified t) 2624 2628 (face font-lock-type-face fontified t) 2628 2634 (fontified t) 2634 2635 (face (rainbow-delimiters-depth-3-face) fontified t) 2635 2636 (face (rainbow-delimiters-depth-2-face) fontified t) 2636 2637 (fontified t) 2637 2638 (face (rainbow-delimiters-depth-1-face) fontified t) 2638 2641 (fontified t) 2641 2647 (face font-lock-keyword-face fontified t) 2647 2648 (fontified t) 2648 2653 (face font-lock-type-face fontified t) 2653 2654 (fontified t) 2654 2655 (face (rainbow-delimiters-depth-1-face) fontified t) 2655 2660 (fontified t) 2660 2667 (face font-lock-variable-name-face fontified t) 2667 2669 (fontified t) 2669 2673 (face font-lock-constant-face fontified t) 2673 2675 (fontified t) 2675 2682 (face font-lock-type-face fontified t) 2682 2688 (fontified t) 2688 2694 (face font-lock-variable-name-face fontified t) 2694 2696 (fontified t) 2696 2700 (face font-lock-constant-face fontified t) 2700 2702 (fontified t) 2702 2708 (face font-lock-type-face fontified t) 2708 2714 (fontified t) 2714 2719 (face font-lock-variable-name-face fontified t) 2719 2721 (fontified t) 2721 2725 (face font-lock-constant-face fontified t) 2725 2727 (fontified t) 2727 2732 (face font-lock-type-face fontified t) 2732 2738 (fontified t) 2738 2744 (face font-lock-variable-name-face fontified t) 2744 2746 (fontified t) 2746 2750 (face font-lock-constant-face fontified t) 2750 2752 (fontified t) 2752 2772 (face font-lock-type-face fontified t) 2772 2778 (fontified t) 2778 2782 (face font-lock-variable-name-face fontified t) 2782 2784 (fontified t) 2784 2789 (face font-lock-constant-face fontified t) 2789 2791 (fontified t) 2791 2794 (face font-lock-constant-face fontified t) 2794 2796 (fontified t) 2796 2808 (face font-lock-type-face fontified t) 2808 2809 (face (rainbow-delimiters-depth-2-face) fontified t) 2809 2812 (face font-lock-type-face fontified t) 2812 2813 (face (rainbow-delimiters-depth-2-face) fontified t) 2813 2819 (fontified t) 2819 2822 (face font-lock-comment-delimiter-face fontified t) 2822 2871 (face font-lock-comment-face fontified t) 2871 2875 (fontified t) 2875 2878 (face font-lock-comment-delimiter-face fontified t) 2878 2927 (face font-lock-comment-face fontified t) 2927 2931 (fontified t) 2931 2934 (face font-lock-comment-delimiter-face fontified t) 2934 2976 (face font-lock-comment-face fontified t) 2976 2979 (face font-lock-comment-face fontified t) 2979 2983 (fontified t) 2983 2989 (face font-lock-variable-name-face fontified t) 2989 2991 (fontified t) 2991 2997 (face font-lock-type-face fontified t) 2997 3003 (fontified t) 3003 3018 (face font-lock-variable-name-face fontified t) 3018 3020 (fontified t) 3020 3024 (face font-lock-constant-face fontified t) 3024 3026 (fontified t) 3026 3040 (face font-lock-type-face fontified t) 3040 3046 (fontified t) 3046 3055 (face font-lock-variable-name-face fontified t) 3055 3057 (fontified t) 3057 3062 (face font-lock-constant-face fontified t) 3062 3064 (fontified t) 3064 3069 (face font-lock-type-face fontified t) 3069 3077 (fontified t) 3077 3102 (face font-lock-variable-name-face fontified t) 3102 3104 (fontified t) 3104 3108 (face font-lock-constant-face fontified t) 3108 3110 (fontified t) 3110 3125 (face font-lock-type-face fontified t) 3125 3131 (fontified t) 3131 3144 (face font-lock-variable-name-face fontified t) 3144 3146 (fontified t) 3146 3153 (face font-lock-type-face fontified t) 3153 3165 (fontified t) 3165 3171 (face font-lock-variable-name-face fontified t) 3171 3173 (fontified t) 3173 3179 (face font-lock-constant-face fontified t) 3179 3181 (fontified t) 3181 3187 (face font-lock-type-face fontified t) 3187 3189 (fontified t) 3189 3192 (face font-lock-comment-delimiter-face fontified t) 3192 3201 (face font-lock-comment-face fontified t) 3201 3205 (fontified t) 3205 3215 (face font-lock-variable-name-face fontified t) 3215 3217 (fontified t) 3217 3223 (face font-lock-constant-face fontified t) 3223 3225 (fontified t) 3225 3235 (face font-lock-type-face fontified t) 3235 3237 (fontified t) 3237 3240 (face font-lock-comment-delimiter-face fontified t) 3240 3245 (face font-lock-comment-face fontified t) 3245 3249 (fontified t) 3249 3266 (face font-lock-variable-name-face fontified t) 3266 3268 (fontified t) 3268 3274 (face font-lock-constant-face fontified t) 3274 3276 (fontified t) 3276 3292 (face font-lock-type-face fontified t) 3292 3294 (fontified t) 3294 3297 (face font-lock-comment-delimiter-face fontified t) 3297 3306 (face font-lock-comment-face fontified t) 3306 3310 (fontified t) 3310 3313 (face font-lock-comment-delimiter-face fontified t) 3313 3317 (face font-lock-comment-face fontified t) 3317 3321 (fontified t) 3321 3324 (face font-lock-comment-delimiter-face fontified t) 3324 3329 (face font-lock-comment-face fontified t) 3329 3333 (fontified t) 3333 3346 (face font-lock-variable-name-face fontified t) 3346 3348 (fontified t) 3348 3352 (face font-lock-type-face fontified t) 3352 3359 (fontified t) 3359 3373 (face font-lock-variable-name-face fontified t) 3373 3375 (fontified t) 3375 3388 (face font-lock-type-face fontified t) 3388 3394 (fontified t) 3394 3407 (face font-lock-variable-name-face fontified t) 3407 3409 (fontified t) 3409 3413 (face font-lock-constant-face fontified t) 3413 3415 (fontified t) 3415 3421 (face font-lock-type-face fontified t) 3421 3427 (fontified t) 3427 3444 (face font-lock-variable-name-face fontified t) 3444 3446 (fontified t) 3446 3450 (face font-lock-constant-face fontified t) 3450 3452 (fontified t) 3452 3461 (face font-lock-type-face fontified t) 3461 3468 (fontified t) 3468 3481 (face font-lock-variable-name-face fontified t) 3481 3483 (fontified t) 3483 3495 (face font-lock-type-face fontified t) 3495 3501 (fontified t) 3501 3513 (face font-lock-variable-name-face fontified t) 3513 3515 (fontified t) 3515 3519 (face font-lock-constant-face fontified t) 3519 3521 (fontified t) 3521 3527 (face font-lock-type-face fontified t) 3527 3533 (fontified t) 3533 3549 (face font-lock-variable-name-face fontified t) 3549 3551 (fontified t) 3551 3555 (face font-lock-constant-face fontified t) 3555 3557 (fontified t) 3557 3566 (face font-lock-type-face fontified t) 3566 3572 (fontified t) 3572 3593 (face font-lock-variable-name-face fontified t) 3593 3595 (fontified t) 3595 3599 (face font-lock-constant-face fontified t) 3599 3601 (fontified t) 3601 3615 (face font-lock-type-face fontified t) 3615 3622 (fontified t) 3622 3631 (face font-lock-variable-name-face fontified t) 3631 3633 (fontified t) 3633 3636 (face font-lock-type-face fontified t) 3636 3637 (face (rainbow-delimiters-depth-2-face) fontified t) 3637 3645 (face font-lock-type-face fontified t) 3645 3646 (face (rainbow-delimiters-depth-2-face) fontified t) 3646 3652 (fontified t) 3652 3667 (face font-lock-variable-name-face fontified t) 3667 3669 (fontified t) 3669 3673 (face font-lock-constant-face fontified t) 3673 3675 (fontified t) 3675 3681 (face font-lock-type-face fontified t) 3681 3690 (fontified t) 3690 3691 (face (rainbow-delimiters-depth-1-face) fontified t) 3691 3693 (fontified t) 3693 3697 (face font-lock-keyword-face fontified t) 3697 3698 (fontified t) 3698 3703 (face font-lock-type-face fontified t) 3703 3704 (fontified t) 3704 3705 (face (rainbow-delimiters-depth-1-face) fontified t) 3705 3706 (fontified t) 3706 3710 (fontified t) 3710 3713 (face font-lock-comment-delimiter-face fontified t) 3713 3765 (face font-lock-comment-face fontified t) 3765 3769 (fontified t) 3769 3774 (face font-lock-keyword-face fontified t) 3774 3775 (fontified t) 3775 3777 (face font-lock-keyword-face fontified t) 3777 3778 (fontified t) 3778 3781 (face font-lock-function-name-face fontified t) 3781 3782 (face (rainbow-delimiters-depth-2-face) fontified t) 3782 3788 (face font-lock-variable-name-face fontified t) 3788 3790 (fontified t) 3790 3796 (face font-lock-type-face fontified t) 3796 3797 (face (rainbow-delimiters-depth-2-face) fontified t) 3797 3799 (fontified t) 3799 3800 (syntax-table (1) fontified t) 3800 3801 (fontified t) 3801 3805 (face font-lock-type-face fontified t) 3805 3806 (fontified t) 3806 3807 (face (rainbow-delimiters-depth-2-face) fontified t) 3807 3816 (fontified t) 3816 3819 (face font-lock-keyword-face fontified t) 3819 3820 (fontified t) 3820 3824 (face font-lock-variable-name-face fontified t) 3824 3844 (fontified t) 3844 3845 (face (rainbow-delimiters-depth-3-face) fontified t) 3845 3846 (face (rainbow-delimiters-depth-3-face) fontified t) 3846 3849 (fontified t) 3849 3857 (fontified t) 3857 3860 (face font-lock-comment-delimiter-face fontified t) 3860 3896 (face font-lock-comment-face fontified t) 3896 3904 (fontified t) 3904 3907 (face font-lock-comment-delimiter-face fontified t) 3907 3922 (face font-lock-comment-face fontified t) 3922 3923 (face font-lock-comment-face syntax-table (1) fontified t) 3923 3963 (face font-lock-comment-face fontified t) 3963 3971 (fontified t) 3971 3974 (face font-lock-keyword-face fontified t) 3974 3975 (fontified t) 3975 3983 (face font-lock-variable-name-face fontified t) 3983 3986 (fontified t) 3986 3990 (face font-lock-constant-face fontified t) 3990 3992 (fontified t) 3992 4000 (face font-lock-type-face fontified t) 4000 4005 (fontified t) 4005 4006 (face (rainbow-delimiters-depth-3-face) fontified t) 4006 4010 (face font-lock-constant-face fontified t) 4010 4012 (fontified t) 4012 4030 (face font-lock-type-face fontified t) 4030 4031 (fontified t) 4031 4032 (face (rainbow-delimiters-depth-4-face) fontified t) 4032 4045 (fontified t) 4045 4053 (face font-lock-variable-name-face fontified t) 4053 4055 (fontified t) 4055 4059 (face font-lock-constant-face fontified t) 4059 4061 (fontified t) 4061 4069 (face font-lock-type-face fontified t) 4069 4074 (fontified t) 4074 4075 (face (rainbow-delimiters-depth-5-face) fontified t) 4075 4076 (face (rainbow-delimiters-depth-5-face) fontified t) 4076 4078 (fontified t) 4078 4092 (fontified t) 4092 4099 (face font-lock-type-face fontified t) 4099 4108 (fontified t) 4108 4109 (face (rainbow-delimiters-depth-5-face) fontified t) 4109 4110 (face (rainbow-delimiters-depth-5-face) fontified t) 4110 4111 (fontified t) 4111 4119 (fontified t) 4119 4120 (face (rainbow-delimiters-depth-4-face) fontified t) 4120 4121 (face (rainbow-delimiters-depth-3-face) fontified t) 4121 4123 (fontified t) 4123 4132 (fontified t) 4132 4140 (fontified t) 4140 4143 (face font-lock-comment-delimiter-face fontified t) 4143 4152 (face font-lock-comment-face fontified t) 4152 4160 (fontified t) 4160 4162 (face font-lock-comment-delimiter-face fontified t) 4162 4163 (face font-lock-comment-face fontified t) 4163 4171 (fontified t) 4171 4174 (face font-lock-comment-delimiter-face fontified t) 4174 4239 (face font-lock-comment-face fontified t) 4239 4247 (fontified t) 4247 4250 (face font-lock-comment-delimiter-face fontified t) 4250 4297 (face font-lock-comment-face fontified t) 4297 4305 (fontified t) 4305 4308 (face font-lock-keyword-face fontified t) 4308 4309 (fontified t) 4309 4316 (face font-lock-variable-name-face fontified t) 4316 4319 (fontified t) 4319 4325 (face rust-unsafe fontified t) 4325 4326 (fontified t) 4326 4327 (face (rainbow-delimiters-depth-3-face) fontified t) 4327 4351 (fontified t) 4351 4352 (face (rainbow-delimiters-depth-4-face) fontified t) 4352 4353 (face rust-ampersand-face fontified t) 4353 4359 (fontified t) 4359 4360 (face (rainbow-delimiters-depth-4-face) fontified t) 4360 4361 (fontified t) 4361 4362 (face (rainbow-delimiters-depth-3-face) fontified t) 4362 4369 (fontified t) 4369 4370 (face (rainbow-delimiters-depth-3-face) fontified t) 4370 4371 (face (rainbow-delimiters-depth-3-face) fontified t) 4371 4382 (fontified t) 4382 4385 (face font-lock-keyword-face fontified t) 4385 4386 (fontified t) 4386 4393 (face font-lock-variable-name-face fontified t) 4393 4420 (fontified t) 4420 4421 (face (rainbow-delimiters-depth-3-face) fontified t) 4421 4434 (fontified t) 4434 4435 (face rust-ampersand-face fontified t) 4435 4439 (face font-lock-constant-face fontified t) 4439 4441 (fontified t) 4441 4462 (face font-lock-type-face fontified t) 4462 4463 (fontified t) 4463 4464 (face (rainbow-delimiters-depth-4-face) fontified t) 4464 4481 (fontified t) 4481 4497 (face font-lock-variable-name-face fontified t) 4497 4499 (fontified t) 4499 4503 (face font-lock-constant-face fontified t) 4503 4505 (fontified t) 4505 4520 (face font-lock-type-face fontified t) 4520 4529 (fontified t) 4529 4530 (face (rainbow-delimiters-depth-5-face) fontified t) 4530 4531 (face (rainbow-delimiters-depth-5-face) fontified t) 4531 4533 (fontified t) 4533 4549 (fontified t) 4549 4567 (face font-lock-variable-name-face fontified t) 4567 4569 (fontified t) 4569 4573 (face font-lock-type-face fontified t) 4573 4574 (face (rainbow-delimiters-depth-5-face) fontified t) 4574 4575 (face rust-ampersand-face fontified t) 4575 4582 (fontified t) 4582 4583 (face (rainbow-delimiters-depth-5-face) fontified t) 4583 4585 (fontified t) 4585 4601 (fontified t) 4601 4623 (face font-lock-variable-name-face fontified t) 4623 4625 (fontified t) 4625 4630 (face font-lock-keyword-face fontified t) 4630 4644 (fontified t) 4644 4645 (face (rainbow-delimiters-depth-4-face) fontified t) 4645 4655 (fontified t) 4655 4656 (face (rainbow-delimiters-depth-3-face) fontified t) 4656 4657 (fontified t) 4657 4662 (face font-lock-keyword-face fontified t) 4662 4669 (fontified t) 4669 4670 (face (rainbow-delimiters-depth-3-face) fontified t) 4670 4671 (face (rainbow-delimiters-depth-3-face) fontified t) 4671 4682 (fontified t) 4682 4685 (face font-lock-keyword-face fontified t) 4685 4686 (fontified t) 4686 4687 (face (rainbow-delimiters-depth-3-face) fontified t) 4687 4700 (fontified t) 4700 4701 (face (rainbow-delimiters-depth-3-face) fontified t) 4701 4726 (fontified t) 4726 4727 (face (rainbow-delimiters-depth-3-face) fontified t) 4727 4740 (fontified t) 4740 4741 (face rust-ampersand-face fontified t) 4741 4745 (face font-lock-constant-face fontified t) 4745 4747 (fontified t) 4747 4763 (face font-lock-type-face fontified t) 4763 4764 (fontified t) 4764 4765 (face (rainbow-delimiters-depth-4-face) fontified t) 4765 4782 (fontified t) 4782 4790 (face font-lock-variable-name-face fontified t) 4790 4792 (fontified t) 4792 4796 (face font-lock-constant-face fontified t) 4796 4798 (fontified t) 4798 4806 (face font-lock-type-face fontified t) 4806 4813 (fontified t) 4813 4814 (face (rainbow-delimiters-depth-5-face) fontified t) 4814 4815 (face (rainbow-delimiters-depth-5-face) fontified t) 4815 4833 (fontified t) 4833 4836 (face font-lock-comment-delimiter-face fontified t) 4836 4888 (face font-lock-comment-face fontified t) 4888 4904 (fontified t) 4904 4907 (face font-lock-comment-delimiter-face fontified t) 4907 4963 (face font-lock-comment-face fontified t) 4963 4979 (fontified t) 4979 4985 (face font-lock-variable-name-face fontified t) 4985 4987 (fontified t) 4987 4989 (face font-lock-keyword-face fontified t) 4989 4990 (fontified t) 4990 4994 (face font-lock-preprocessor-face fontified t) 4994 4995 (face (rainbow-delimiters-depth-5-face) fontified t) 4995 5009 (fontified t) 5009 5017 (face font-lock-string-face fontified t) 5017 5018 (face (rainbow-delimiters-depth-5-face) fontified t) 5018 5019 (fontified t) 5019 5020 (face (rainbow-delimiters-depth-5-face) fontified t) 5020 5021 (fontified t) 5021 5041 (fontified t) 5041 5045 (face font-lock-constant-face fontified t) 5045 5047 (fontified t) 5047 5053 (face font-lock-type-face fontified t) 5053 5080 (fontified t) 5080 5081 (face (rainbow-delimiters-depth-6-face) fontified t) 5081 5082 (face (rainbow-delimiters-depth-6-face) fontified t) 5082 5083 (fontified t) 5083 5099 (fontified t) 5099 5100 (face (rainbow-delimiters-depth-5-face) fontified t) 5100 5101 (fontified t) 5101 5105 (face font-lock-keyword-face fontified t) 5105 5106 (fontified t) 5106 5107 (face (rainbow-delimiters-depth-5-face) fontified t) 5107 5128 (fontified t) 5128 5132 (face font-lock-constant-face fontified t) 5132 5134 (fontified t) 5134 5140 (face font-lock-type-face fontified t) 5140 5149 (fontified t) 5149 5150 (face (rainbow-delimiters-depth-6-face) fontified t) 5150 5151 (face (rainbow-delimiters-depth-6-face) fontified t) 5151 5168 (fontified t) 5168 5169 (face (rainbow-delimiters-depth-5-face) fontified t) 5169 5171 (fontified t) 5171 5187 (fontified t) 5187 5192 (face font-lock-variable-name-face fontified t) 5192 5194 (fontified t) 5194 5198 (face font-lock-type-face fontified t) 5198 5200 (fontified t) 5200 5212 (fontified t) 5212 5213 (face (rainbow-delimiters-depth-4-face) fontified t) 5213 5215 (fontified t) 5215 5227 (fontified t) 5227 5231 (face font-lock-type-face fontified t) 5231 5233 (fontified t) 5233 5236 (face font-lock-comment-delimiter-face fontified t) 5236 5247 (face font-lock-comment-face fontified t) 5247 5255 (fontified t) 5255 5256 (face (rainbow-delimiters-depth-3-face) fontified t) 5256 5257 (fontified t) 5257 5262 (face font-lock-keyword-face fontified t) 5262 5269 (fontified t) 5269 5270 (face (rainbow-delimiters-depth-3-face) fontified t) 5270 5271 (face (rainbow-delimiters-depth-3-face) fontified t) 5271 5283 (fontified t) 5283 5286 (face font-lock-keyword-face fontified t) 5286 5287 (fontified t) 5287 5299 (face font-lock-variable-name-face fontified t) 5299 5326 (fontified t) 5326 5327 (face (rainbow-delimiters-depth-3-face) fontified t) 5327 5328 (face rust-ampersand-face fontified t) 5328 5335 (fontified t) 5335 5336 (face (rainbow-delimiters-depth-3-face) fontified t) 5336 5346 (fontified t) 5346 5349 (face font-lock-comment-delimiter-face fontified t) 5349 5429 (face font-lock-comment-face fontified t) 5429 5437 (fontified t) 5437 5440 (face font-lock-comment-delimiter-face fontified t) 5440 5520 (face font-lock-comment-face fontified t) 5520 5528 (fontified t) 5528 5531 (face font-lock-comment-delimiter-face fontified t) 5531 5605 (face font-lock-comment-face fontified t) 5605 5613 (fontified t) 5613 5616 (face font-lock-keyword-face fontified t) 5616 5617 (fontified t) 5617 5631 (face font-lock-variable-name-face fontified t) 5631 5659 (fontified t) 5659 5660 (face (rainbow-delimiters-depth-3-face) fontified t) 5660 5661 (face (rainbow-delimiters-depth-3-face) fontified t) 5661 5681 (fontified t) 5681 5682 (face (rainbow-delimiters-depth-3-face) fontified t) 5682 5683 (face (rainbow-delimiters-depth-3-face) fontified t) 5683 5703 (fontified t) 5703 5704 (face (rainbow-delimiters-depth-3-face) fontified t) 5704 5717 (fontified t) 5717 5718 (face (rainbow-delimiters-depth-4-face) fontified t) 5718 5719 (face (rainbow-delimiters-depth-4-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-3-face) fontified t) 5720 5721 (fontified t) 5721 5738 (fontified t) 5738 5739 (face (rainbow-delimiters-depth-3-face) fontified t) 5739 5740 (face (rainbow-delimiters-depth-3-face) fontified t) 5740 5741 (fontified t) 5741 5763 (fontified t) 5763 5764 (face (rainbow-delimiters-depth-3-face) fontified t) 5764 5784 (fontified t) 5784 5785 (face (rainbow-delimiters-depth-4-face) fontified t) 5785 5786 (fontified t) 5786 5787 (face (rainbow-delimiters-depth-4-face) fontified t) 5787 5788 (face (rainbow-delimiters-depth-3-face) fontified t) 5788 5798 (fontified t) 5798 5801 (face font-lock-keyword-face fontified t) 5801 5802 (fontified t) 5802 5808 (face font-lock-variable-name-face fontified t) 5808 5811 (fontified t) 5811 5815 (face font-lock-constant-face fontified t) 5815 5817 (fontified t) 5817 5837 (face font-lock-type-face fontified t) 5837 5838 (fontified t) 5838 5839 (face (rainbow-delimiters-depth-3-face) fontified t) 5839 5852 (fontified t) 5852 5857 (face font-lock-variable-name-face fontified t) 5857 5859 (fontified t) 5859 5863 (face font-lock-constant-face fontified t) 5863 5865 (fontified t) 5865 5878 (face font-lock-type-face fontified t) 5878 5880 (fontified t) 5880 5897 (face font-lock-type-face fontified t) 5897 5911 (fontified t) 5911 5917 (face font-lock-variable-name-face fontified t) 5917 5947 (fontified t) 5947 5952 (face font-lock-variable-name-face fontified t) 5952 5978 (fontified t) 5978 5984 (face font-lock-variable-name-face fontified t) 5984 6011 (fontified t) 6011 6023 (face font-lock-variable-name-face fontified t) 6023 6051 (fontified t) 6051 6052 (face (rainbow-delimiters-depth-4-face) fontified t) 6052 6053 (fontified t) 6053 6054 (face (rainbow-delimiters-depth-4-face) fontified t) 6054 6068 (fontified t) 6068 6078 (face font-lock-variable-name-face fontified t) 6078 6104 (fontified t) 6104 6105 (face (rainbow-delimiters-depth-4-face) fontified t) 6105 6106 (fontified t) 6106 6107 (face (rainbow-delimiters-depth-4-face) fontified t) 6107 6121 (fontified t) 6121 6133 (face font-lock-variable-name-face fontified t) 6133 6135 (fontified t) 6135 6139 (face font-lock-preprocessor-face fontified t) 6139 6140 (face (rainbow-delimiters-depth-4-face) fontified t) 6140 6141 (face (rainbow-delimiters-depth-4-face) fontified t) 6141 6151 (fontified t) 6151 6152 (face (rainbow-delimiters-depth-3-face) fontified t) 6152 6179 (fontified t) 6179 6180 (face (rainbow-delimiters-depth-3-face) fontified t) 6180 6181 (face rust-ampersand-face fontified t) 6181 6189 (fontified t) 6189 6190 (face rust-ampersand-face fontified t) 6190 6196 (fontified t) 6196 6197 (face (rainbow-delimiters-depth-3-face) fontified t) 6197 6217 (fontified t) 6217 6220 (face font-lock-keyword-face fontified t) 6220 6221 (fontified t) 6221 6246 (face font-lock-variable-name-face fontified t) 6246 6292 (fontified t) 6292 6293 (face (rainbow-delimiters-depth-3-face) fontified t) 6293 6294 (face rust-ampersand-face fontified t) 6294 6298 (face font-lock-constant-face fontified t) 6298 6300 (fontified t) 6300 6325 (face font-lock-type-face fontified t) 6325 6326 (fontified t) 6326 6327 (face (rainbow-delimiters-depth-4-face) fontified t) 6327 6344 (fontified t) 6344 6351 (face font-lock-variable-name-face fontified t) 6351 6353 (fontified t) 6353 6354 (face rust-ampersand-face fontified t) 6354 6355 (face (rainbow-delimiters-depth-5-face) fontified t) 6355 6376 (fontified t) 6376 6380 (face font-lock-constant-face fontified t) 6380 6382 (fontified t) 6382 6402 (face font-lock-type-face fontified t) 6402 6403 (fontified t) 6403 6404 (face (rainbow-delimiters-depth-6-face) fontified t) 6404 6429 (fontified t) 6429 6436 (face font-lock-variable-name-face fontified t) 6436 6465 (fontified t) 6465 6475 (face font-lock-variable-name-face fontified t) 6475 6477 (fontified t) 6477 6481 (face font-lock-constant-face fontified t) 6481 6483 (fontified t) 6483 6495 (face font-lock-type-face fontified t) 6495 6497 (fontified t) 6497 6505 (face font-lock-type-face fontified t) 6505 6531 (fontified t) 6531 6533 (face font-lock-variable-name-face fontified t) 6533 6535 (fontified t) 6535 6539 (face font-lock-constant-face fontified t) 6539 6541 (fontified t) 6541 6552 (face font-lock-type-face fontified t) 6552 6554 (fontified t) 6554 6561 (face font-lock-type-face fontified t) 6561 6562 (fontified t) 6562 6563 (face (rainbow-delimiters-depth-7-face) fontified t) 6563 6592 (fontified t) 6592 6604 (face font-lock-variable-name-face fontified t) 6604 6606 (fontified t) 6606 6611 (face font-lock-keyword-face fontified t) 6611 6641 (fontified t) 6641 6655 (face font-lock-variable-name-face fontified t) 6655 6657 (fontified t) 6657 6661 (face font-lock-constant-face fontified t) 6661 6663 (fontified t) 6663 6683 (face font-lock-type-face fontified t) 6683 6685 (fontified t) 6685 6687 (face font-lock-type-face fontified t) 6687 6717 (fontified t) 6717 6728 (face font-lock-variable-name-face fontified t) 6728 6730 (fontified t) 6730 6734 (face font-lock-constant-face fontified t) 6734 6736 (fontified t) 6736 6753 (face font-lock-type-face fontified t) 6753 6755 (fontified t) 6755 6760 (face font-lock-type-face fontified t) 6760 6761 (fontified t) 6761 6762 (face (rainbow-delimiters-depth-8-face) fontified t) 6762 6763 (fontified t) 6763 6773 (face font-lock-variable-name-face fontified t) 6773 6775 (fontified t) 6775 6779 (face font-lock-keyword-face fontified t) 6779 6780 (fontified t) 6780 6781 (face (rainbow-delimiters-depth-8-face) fontified t) 6781 6807 (fontified t) 6807 6808 (face (rainbow-delimiters-depth-7-face) fontified t) 6808 6834 (fontified t) 6834 6839 (face font-lock-variable-name-face fontified t) 6839 6841 (fontified t) 6841 6845 (face font-lock-type-face fontified t) 6845 6867 (fontified t) 6867 6868 (face (rainbow-delimiters-depth-6-face) fontified t) 6868 6890 (fontified t) 6890 6894 (face font-lock-constant-face fontified t) 6894 6896 (fontified t) 6896 6916 (face font-lock-type-face fontified t) 6916 6917 (fontified t) 6917 6918 (face (rainbow-delimiters-depth-6-face) fontified t) 6918 6943 (fontified t) 6943 6950 (face font-lock-variable-name-face fontified t) 6950 6979 (fontified t) 6979 6989 (face font-lock-variable-name-face fontified t) 6989 6991 (fontified t) 6991 6995 (face font-lock-constant-face fontified t) 6995 6997 (fontified t) 6997 7009 (face font-lock-type-face fontified t) 7009 7011 (fontified t) 7011 7019 (face font-lock-type-face fontified t) 7019 7045 (fontified t) 7045 7048 (face font-lock-comment-delimiter-face fontified t) 7048 7094 (face font-lock-comment-face fontified t) 7094 7118 (fontified t) 7118 7121 (face font-lock-comment-delimiter-face fontified t) 7121 7156 (face font-lock-comment-face fontified t) 7156 7180 (fontified t) 7180 7182 (face font-lock-variable-name-face fontified t) 7182 7184 (fontified t) 7184 7188 (face font-lock-constant-face fontified t) 7188 7190 (fontified t) 7190 7201 (face font-lock-type-face fontified t) 7201 7203 (fontified t) 7203 7210 (face font-lock-type-face fontified t) 7210 7211 (face (rainbow-delimiters-depth-7-face) fontified t) 7211 7215 (face font-lock-constant-face fontified t) 7215 7217 (fontified t) 7217 7235 (face font-lock-type-face fontified t) 7235 7237 (fontified t) 7237 7241 (face font-lock-type-face fontified t) 7241 7246 (face font-lock-type-face fontified t) 7246 7247 (face (rainbow-delimiters-depth-7-face) fontified t) 7247 7249 (fontified t) 7249 7273 (fontified t) 7273 7278 (face font-lock-variable-name-face fontified t) 7278 7280 (fontified t) 7280 7284 (face font-lock-type-face fontified t) 7284 7306 (fontified t) 7306 7307 (face (rainbow-delimiters-depth-6-face) fontified t) 7307 7325 (fontified t) 7325 7326 (face (rainbow-delimiters-depth-5-face) fontified t) 7326 7344 (fontified t) 7344 7349 (face font-lock-variable-name-face fontified t) 7349 7351 (fontified t) 7351 7355 (face font-lock-type-face fontified t) 7355 7356 (face (rainbow-delimiters-depth-5-face) fontified t) 7356 7383 (face font-lock-string-face fontified t) 7383 7384 (face (rainbow-delimiters-depth-5-face) fontified t) 7384 7398 (fontified t) 7398 7399 (face (rainbow-delimiters-depth-4-face) fontified t) 7399 7400 (face (rainbow-delimiters-depth-3-face) fontified t) 7400 7411 (fontified t) 7411 7416 (face font-lock-preprocessor-face fontified t) 7416 7417 (face (rainbow-delimiters-depth-3-face) fontified t) 7417 7429 (face font-lock-string-face fontified t) 7429 7430 (face (rainbow-delimiters-depth-3-face) fontified t) 7430 7440 (fontified t) 7440 7443 (face font-lock-keyword-face fontified t) 7443 7444 (fontified t) 7444 7453 (face font-lock-variable-name-face fontified t) 7453 7456 (fontified t) 7456 7461 (face font-lock-constant-face fontified t) 7461 7471 (fontified t) 7471 7472 (face (rainbow-delimiters-depth-3-face) fontified t) 7472 7525 (face font-lock-string-face fontified t) 7525 7527 (fontified t) 7527 7528 (face rust-ampersand-face fontified t) 7528 7536 (fontified t) 7536 7537 (face rust-ampersand-face fontified t) 7537 7544 (fontified t) 7544 7545 (face rust-ampersand-face fontified t) 7545 7570 (fontified t) 7570 7571 (face (rainbow-delimiters-depth-3-face) fontified t) 7571 7578 (fontified t) 7578 7579 (face (rainbow-delimiters-depth-3-face) fontified t) 7579 7580 (face (rainbow-delimiters-depth-3-face) fontified t) 7580 7583 (fontified t) 7583 7591 (fontified t) 7591 7594 (face font-lock-keyword-face fontified t) 7594 7595 (fontified t) 7595 7608 (face font-lock-variable-name-face fontified t) 7608 7611 (fontified t) 7611 7618 (face font-lock-constant-face fontified t) 7618 7620 (fontified t) 7620 7627 (face font-lock-type-face fontified t) 7627 7649 (fontified t) 7649 7650 (face (rainbow-delimiters-depth-3-face) fontified t) 7650 7651 (face rust-ampersand-face fontified t) 7651 7659 (fontified t) 7659 7660 (face rust-ampersand-face fontified t) 7660 7668 (fontified t) 7668 7683 (face font-lock-string-face fontified t) 7683 7684 (face (rainbow-delimiters-depth-3-face) fontified t) 7684 7686 (fontified t) 7686 7696 (fontified t) 7696 7699 (face font-lock-keyword-face fontified t) 7699 7700 (fontified t) 7700 7706 (face font-lock-variable-name-face fontified t) 7706 7709 (fontified t) 7709 7715 (face font-lock-constant-face fontified t) 7715 7717 (fontified t) 7717 7723 (face font-lock-type-face fontified t) 7723 7728 (fontified t) 7728 7729 (face (rainbow-delimiters-depth-3-face) fontified t) 7729 7730 (face (rainbow-delimiters-depth-4-face) fontified t) 7730 7744 (fontified t) 7744 7745 (face (rainbow-delimiters-depth-4-face) fontified t) 7745 7747 (fontified t) 7747 7753 (face font-lock-constant-face fontified t) 7753 7755 (fontified t) 7755 7758 (face font-lock-type-face fontified t) 7758 7759 (face (rainbow-delimiters-depth-4-face) fontified t) 7759 7764 (fontified t) 7764 7765 (face (rainbow-delimiters-depth-4-face) fontified t) 7765 7767 (fontified t) 7767 7773 (face font-lock-constant-face fontified t) 7773 7775 (fontified t) 7775 7778 (face font-lock-type-face fontified t) 7778 7779 (face (rainbow-delimiters-depth-4-face) fontified t) 7779 7784 (fontified t) 7784 7785 (face (rainbow-delimiters-depth-4-face) fontified t) 7785 7786 (face (rainbow-delimiters-depth-3-face) fontified t) 7786 7796 (fontified t) 7796 7799 (face font-lock-keyword-face fontified t) 7799 7800 (fontified t) 7800 7810 (face font-lock-variable-name-face fontified t) 7810 7813 (fontified t) 7813 7819 (face font-lock-constant-face fontified t) 7819 7821 (fontified t) 7821 7831 (face font-lock-type-face fontified t) 7831 7836 (fontified t) 7836 7837 (face (rainbow-delimiters-depth-3-face) fontified t) 7837 7866 (fontified t) 7866 7872 (face font-lock-constant-face fontified t) 7872 7874 (fontified t) 7874 7877 (face font-lock-type-face fontified t) 7877 7878 (face (rainbow-delimiters-depth-4-face) fontified t) 7878 7882 (fontified t) 7882 7883 (face (rainbow-delimiters-depth-4-face) fontified t) 7883 7895 (fontified t) 7895 7896 (face (rainbow-delimiters-depth-3-face) fontified t) 7896 7906 (fontified t) 7906 7909 (face font-lock-keyword-face fontified t) 7909 7910 (fontified t) 7910 7927 (face font-lock-variable-name-face fontified t) 7927 7930 (fontified t) 7930 7936 (face font-lock-constant-face fontified t) 7936 7938 (fontified t) 7938 7954 (face font-lock-type-face fontified t) 7954 7959 (fontified t) 7959 7960 (face (rainbow-delimiters-depth-3-face) fontified t) 7960 7968 (fontified t) 7968 7969 (face (rainbow-delimiters-depth-3-face) fontified t) 7969 7974 (fontified t) 7974 7982 (fontified t) 7982 7985 (face font-lock-keyword-face fontified t) 7985 7986 (fontified t) 7986 7989 (face font-lock-keyword-face fontified t) 7989 7990 (fontified t) 7990 8004 (face font-lock-variable-name-face fontified t) 8004 8007 (fontified t) 8007 8020 (face font-lock-type-face fontified t) 8020 8025 (fontified t) 8025 8026 (face (rainbow-delimiters-depth-3-face) fontified t) 8026 8027 (face (rainbow-delimiters-depth-3-face) fontified t) 8027 8068 (fontified t) 8068 8069 (face (rainbow-delimiters-depth-3-face) fontified t) 8069 8070 (face rust-ampersand-face fontified t) 8070 8078 (fontified t) 8078 8079 (face rust-ampersand-face fontified t) 8079 8089 (fontified t) 8089 8090 (face (rainbow-delimiters-depth-3-face) fontified t) 8090 8092 (fontified t) 8092 8095 (face font-lock-comment-delimiter-face fontified t) 8095 8104 (face font-lock-comment-face fontified t) 8104 8112 (fontified t) 8112 8115 (face font-lock-keyword-face fontified t) 8115 8116 (fontified t) 8116 8129 (face font-lock-variable-name-face fontified t) 8129 8167 (fontified t) 8167 8168 (face (rainbow-delimiters-depth-3-face) fontified t) 8168 8169 (face rust-ampersand-face fontified t) 8169 8175 (fontified t) 8175 8176 (face (rainbow-delimiters-depth-3-face) fontified t) 8176 8179 (fontified t) 8179 8180 (fontified t) 8180 8188 (fontified t) 8188 8191 (face font-lock-keyword-face fontified t) 8191 8192 (fontified t) 8192 8216 (face font-lock-variable-name-face fontified t) 8216 8250 (fontified t) 8250 8251 (face (rainbow-delimiters-depth-3-face) fontified t) 8251 8252 (face rust-ampersand-face fontified t) 8252 8256 (face font-lock-constant-face fontified t) 8256 8258 (fontified t) 8258 8283 (face font-lock-type-face fontified t) 8283 8284 (fontified t) 8284 8285 (face (rainbow-delimiters-depth-4-face) fontified t) 8285 8298 (fontified t) 8298 8305 (face font-lock-variable-name-face fontified t) 8305 8307 (fontified t) 8307 8308 (face rust-ampersand-face fontified t) 8308 8309 (face (rainbow-delimiters-depth-5-face) fontified t) 8309 8326 (fontified t) 8326 8330 (face font-lock-constant-face fontified t) 8330 8332 (fontified t) 8332 8352 (face font-lock-type-face fontified t) 8352 8353 (fontified t) 8353 8354 (face (rainbow-delimiters-depth-6-face) fontified t) 8354 8375 (fontified t) 8375 8382 (face font-lock-variable-name-face fontified t) 8382 8407 (fontified t) 8407 8417 (face font-lock-variable-name-face fontified t) 8417 8419 (fontified t) 8419 8423 (face font-lock-constant-face fontified t) 8423 8425 (fontified t) 8425 8437 (face font-lock-type-face fontified t) 8437 8439 (fontified t) 8439 8445 (face font-lock-type-face fontified t) 8445 8448 (fontified t) 8448 8452 (face font-lock-constant-face fontified t) 8452 8454 (fontified t) 8454 8466 (face font-lock-type-face fontified t) 8466 8468 (fontified t) 8468 8476 (face font-lock-type-face fontified t) 8476 8478 (fontified t) 8478 8498 (fontified t) 8498 8500 (face font-lock-variable-name-face fontified t) 8500 8502 (fontified t) 8502 8506 (face font-lock-constant-face fontified t) 8506 8508 (fontified t) 8508 8519 (face font-lock-type-face fontified t) 8519 8521 (fontified t) 8521 8527 (face font-lock-type-face fontified t) 8527 8528 (fontified t) 8528 8529 (face (rainbow-delimiters-depth-7-face) fontified t) 8529 8530 (fontified t) 8530 8554 (fontified t) 8554 8556 (face font-lock-variable-name-face fontified t) 8556 8558 (fontified t) 8558 8562 (face font-lock-constant-face fontified t) 8562 8564 (fontified t) 8564 8581 (face font-lock-type-face fontified t) 8581 8583 (fontified t) 8583 8590 (face font-lock-type-face fontified t) 8590 8616 (fontified t) 8616 8634 (face font-lock-variable-name-face fontified t) 8634 8636 (fontified t) 8636 8641 (face font-lock-keyword-face fontified t) 8641 8667 (fontified t) 8667 8683 (face font-lock-variable-name-face fontified t) 8683 8685 (fontified t) 8685 8689 (face font-lock-type-face fontified t) 8689 8711 (fontified t) 8711 8712 (face (rainbow-delimiters-depth-7-face) fontified t) 8712 8734 (fontified t) 8734 8739 (face font-lock-variable-name-face fontified t) 8739 8741 (fontified t) 8741 8745 (face font-lock-type-face fontified t) 8745 8747 (fontified t) 8747 8763 (fontified t) 8763 8764 (face (rainbow-delimiters-depth-6-face) fontified t) 8764 8765 (fontified t) 8765 8777 (fontified t) 8777 8778 (face (rainbow-delimiters-depth-5-face) fontified t) 8778 8792 (fontified t) 8792 8797 (face font-lock-variable-name-face fontified t) 8797 8799 (fontified t) 8799 8803 (face font-lock-type-face fontified t) 8803 8804 (face (rainbow-delimiters-depth-5-face) fontified t) 8804 8830 (face font-lock-string-face fontified t) 8830 8831 (face (rainbow-delimiters-depth-5-face) fontified t) 8831 8841 (fontified t) 8841 8842 (face (rainbow-delimiters-depth-4-face) fontified t) 8842 8843 (face (rainbow-delimiters-depth-3-face) fontified t) 8843 8854 (fontified t) 8854 8857 (face font-lock-keyword-face fontified t) 8857 8858 (fontified t) 8858 8875 (face font-lock-variable-name-face fontified t) 8875 8902 (fontified t) 8902 8903 (face (rainbow-delimiters-depth-3-face) fontified t) 8903 8904 (face rust-ampersand-face fontified t) 8904 8908 (face font-lock-constant-face fontified t) 8908 8910 (fontified t) 8910 8929 (face font-lock-type-face fontified t) 8929 8930 (fontified t) 8930 8931 (face (rainbow-delimiters-depth-4-face) fontified t) 8931 8944 (fontified t) 8944 8950 (face font-lock-variable-name-face fontified t) 8950 8952 (fontified t) 8952 8953 (face rust-ampersand-face fontified t) 8953 8991 (fontified t) 8991 8998 (face font-lock-variable-name-face fontified t) 8998 9000 (fontified t) 9000 9001 (face rust-ampersand-face fontified t) 9001 9002 (face (rainbow-delimiters-depth-5-face) fontified t) 9002 9019 (fontified t) 9019 9023 (face font-lock-constant-face fontified t) 9023 9025 (fontified t) 9025 9039 (face font-lock-type-face fontified t) 9039 9040 (fontified t) 9040 9041 (face (rainbow-delimiters-depth-6-face) fontified t) 9041 9062 (fontified t) 9062 9069 (face font-lock-variable-name-face fontified t) 9069 9074 (fontified t) 9074 9094 (fontified t) 9094 9102 (face font-lock-variable-name-face fontified t) 9102 9135 (fontified t) 9135 9136 (face (rainbow-delimiters-depth-7-face) fontified t) 9136 9137 (face (rainbow-delimiters-depth-7-face) fontified t) 9137 9139 (fontified t) 9139 9155 (fontified t) 9155 9156 (face (rainbow-delimiters-depth-6-face) fontified t) 9156 9169 (fontified t) 9169 9170 (face (rainbow-delimiters-depth-5-face) fontified t) 9170 9184 (fontified t) 9184 9189 (face font-lock-variable-name-face fontified t) 9189 9191 (fontified t) 9191 9195 (face font-lock-type-face fontified t) 9195 9196 (face (rainbow-delimiters-depth-5-face) fontified t) 9196 9215 (face font-lock-string-face fontified t) 9215 9216 (face (rainbow-delimiters-depth-5-face) fontified t) 9216 9226 (fontified t) 9226 9227 (face (rainbow-delimiters-depth-4-face) fontified t) 9227 9228 (face (rainbow-delimiters-depth-3-face) fontified t) 9228 9239 (fontified t) 9239 9242 (face font-lock-keyword-face fontified t) 9242 9243 (fontified t) 9243 9256 (face font-lock-variable-name-face fontified t) 9256 9259 (fontified t) 9259 9264 (face font-lock-constant-face fontified t) 9264 9266 (fontified t) 9266 9278 (face font-lock-type-face fontified t) 9278 9279 (fontified t) 9279 9280 (face (rainbow-delimiters-depth-3-face) fontified t) 9280 9293 (fontified t) 9293 9301 (face font-lock-variable-name-face fontified t) 9301 9303 (fontified t) 9303 9304 (face (rainbow-delimiters-depth-4-face) fontified t) 9304 9322 (fontified t) 9322 9323 (face (rainbow-delimiters-depth-4-face) fontified t) 9323 9325 (fontified t) 9325 9337 (fontified t) 9337 9342 (face font-lock-variable-name-face fontified t) 9342 9344 (fontified t) 9344 9345 (face (rainbow-delimiters-depth-4-face) fontified t) 9345 9363 (fontified t) 9363 9364 (face (rainbow-delimiters-depth-4-face) fontified t) 9364 9366 (fontified t) 9366 9374 (fontified t) 9374 9375 (face (rainbow-delimiters-depth-3-face) fontified t) 9375 9385 (fontified t) 9385 9388 (face font-lock-keyword-face fontified t) 9388 9389 (fontified t) 9389 9390 (face (rainbow-delimiters-depth-3-face) fontified t) 9390 9445 (fontified t) 9445 9446 (face (rainbow-delimiters-depth-3-face) fontified t) 9446 9461 (fontified t) 9461 9466 (face font-lock-constant-face fontified t) 9466 9502 (fontified t) 9502 9503 (face (rainbow-delimiters-depth-3-face) fontified t) 9503 9504 (face rust-ampersand-face fontified t) 9504 9512 (fontified t) 9512 9513 (face rust-ampersand-face fontified t) 9513 9526 (fontified t) 9526 9527 (face (rainbow-delimiters-depth-3-face) fontified t) 9527 9539 (fontified t) 9539 9541 (face font-lock-comment-delimiter-face fontified t) 9541 9571 (face font-lock-comment-face fontified t) 9571 9579 (fontified t) 9579 9582 (face font-lock-keyword-face fontified t) 9582 9583 (fontified t) 9583 9605 (face font-lock-variable-name-face fontified t) 9605 9649 (fontified t) 9649 9650 (face (rainbow-delimiters-depth-3-face) fontified t) 9650 9651 (face rust-ampersand-face fontified t) 9651 9655 (face font-lock-constant-face fontified t) 9655 9657 (fontified t) 9657 9681 (face font-lock-type-face fontified t) 9681 9682 (fontified t) 9682 9683 (face (rainbow-delimiters-depth-4-face) fontified t) 9683 9684 (fontified t) 9684 9700 (fontified t) 9700 9705 (face font-lock-variable-name-face fontified t) 9705 9707 (fontified t) 9707 9711 (face font-lock-type-face fontified t) 9711 9712 (face (rainbow-delimiters-depth-5-face) fontified t) 9712 9736 (face font-lock-string-face fontified t) 9736 9737 (face (rainbow-delimiters-depth-5-face) fontified t) 9737 9739 (fontified t) 9739 9755 (fontified t) 9755 9773 (face font-lock-variable-name-face fontified t) 9773 9775 (fontified t) 9775 9776 (face rust-ampersand-face fontified t) 9776 9777 (face (rainbow-delimiters-depth-5-face) fontified t) 9777 9798 (fontified t) 9798 9799 (face rust-ampersand-face fontified t) 9799 9846 (fontified t) 9846 9847 (face rust-ampersand-face fontified t) 9847 9893 (fontified t) 9893 9894 (face rust-ampersand-face fontified t) 9894 9935 (fontified t) 9935 9936 (face (rainbow-delimiters-depth-5-face) fontified t) 9936 9954 (fontified t) 9954 9974 (face font-lock-variable-name-face fontified t) 9974 9976 (fontified t) 9976 9977 (face rust-ampersand-face fontified t) 9977 9978 (face (rainbow-delimiters-depth-5-face) fontified t) 9978 9979 (face (rainbow-delimiters-depth-5-face) fontified t) 9979 9993 (fontified t) 9993 9994 (face (rainbow-delimiters-depth-4-face) fontified t) 9994 9995 (face (rainbow-delimiters-depth-3-face) fontified t) 9995 10014 (fontified t) 10014 10017 (face font-lock-keyword-face fontified t) 10017 10018 (fontified t) 10018 10033 (face font-lock-variable-name-face fontified t) 10033 10036 (fontified t) 10036 10037 (face (rainbow-delimiters-depth-3-face) fontified t) 10037 10038 (fontified t) 10038 10050 (fontified t) 10050 10053 (face font-lock-keyword-face fontified t) 10053 10054 (fontified t) 10054 10060 (face font-lock-variable-name-face fontified t) 10060 10063 (fontified t) 10063 10067 (face font-lock-constant-face fontified t) 10067 10069 (fontified t) 10069 10082 (face font-lock-preprocessor-face fontified t) 10082 10083 (face (rainbow-delimiters-depth-4-face) fontified t) 10083 10096 (face font-lock-string-face fontified t) 10096 10097 (face (rainbow-delimiters-depth-4-face) fontified t) 10097 10099 (fontified t) 10099 10134 (fontified t) 10134 10135 (face (rainbow-delimiters-depth-4-face) fontified t) 10135 10152 (fontified t) 10152 10153 (face rust-ampersand-face fontified t) 10153 10177 (fontified t) 10177 10178 (face rust-ampersand-face fontified t) 10178 10249 (fontified t) 10249 10253 (face font-lock-type-face fontified t) 10253 10254 (face (rainbow-delimiters-depth-5-face) fontified t) 10254 10261 (face font-lock-constant-face fontified t) 10261 10263 (fontified t) 10263 10270 (face font-lock-type-face fontified t) 10270 10272 (fontified t) 10272 10284 (face font-lock-type-face fontified t) 10284 10285 (face (rainbow-delimiters-depth-5-face) fontified t) 10285 10303 (fontified t) 10303 10304 (face rust-ampersand-face fontified t) 10304 10305 (face (rainbow-delimiters-depth-5-face) fontified t) 10305 10310 (face font-lock-constant-face fontified t) 10310 10312 (fontified t) 10312 10323 (face font-lock-type-face fontified t) 10323 10329 (fontified t) 10329 10330 (face (rainbow-delimiters-depth-6-face) fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10333 (fontified t) 10333 10344 (face font-lock-type-face fontified t) 10344 10350 (fontified t) 10350 10351 (face (rainbow-delimiters-depth-6-face) fontified t) 10351 10352 (face (rainbow-delimiters-depth-6-face) fontified t) 10352 10353 (face (rainbow-delimiters-depth-5-face) fontified t) 10353 10391 (fontified t) 10391 10392 (face (rainbow-delimiters-depth-4-face) fontified t) 10392 10393 (fontified t) 10393 10401 (fontified t) 10401 10402 (face (rainbow-delimiters-depth-3-face) fontified t) 10402 10404 (fontified t) 10404 10408 (fontified t) 10408 10417 (fontified t) 10417 10425 (fontified t) 10425 10428 (face font-lock-keyword-face fontified t) 10428 10429 (fontified t) 10429 10438 (face font-lock-variable-name-face fontified t) 10438 10441 (fontified t) 10441 10445 (face font-lock-preprocessor-face fontified t) 10445 10446 (face (rainbow-delimiters-depth-3-face) fontified t) 10446 10459 (fontified t) 10459 10467 (face font-lock-type-face fontified t) 10467 10468 (fontified t) 10468 10469 (face (rainbow-delimiters-depth-4-face) fontified t) 10469 10486 (fontified t) 10486 10494 (face font-lock-variable-name-face fontified t) 10494 10496 (fontified t) 10496 10502 (face font-lock-constant-face fontified t) 10502 10504 (fontified t) 10504 10511 (face font-lock-type-face fontified t) 10511 10517 (fontified t) 10517 10518 (face (rainbow-delimiters-depth-5-face) fontified t) 10518 10519 (face (rainbow-delimiters-depth-5-face) fontified t) 10519 10537 (fontified t) 10537 10545 (face font-lock-variable-name-face fontified t) 10545 10547 (fontified t) 10547 10553 (face font-lock-constant-face fontified t) 10553 10555 (fontified t) 10555 10565 (face font-lock-type-face fontified t) 10565 10579 (fontified t) 10579 10580 (face (rainbow-delimiters-depth-5-face) fontified t) 10580 10586 (face font-lock-constant-face fontified t) 10586 10588 (fontified t) 10588 10591 (face font-lock-type-face fontified t) 10591 10592 (face (rainbow-delimiters-depth-6-face) fontified t) 10592 10595 (fontified t) 10595 10596 (face (rainbow-delimiters-depth-6-face) fontified t) 10596 10597 (face (rainbow-delimiters-depth-5-face) fontified t) 10597 10615 (fontified t) 10615 10622 (face font-lock-variable-name-face fontified t) 10622 10624 (fontified t) 10624 10630 (face font-lock-constant-face fontified t) 10630 10632 (fontified t) 10632 10639 (face font-lock-type-face fontified t) 10639 10644 (fontified t) 10644 10645 (face (rainbow-delimiters-depth-5-face) fontified t) 10645 10658 (fontified t) 10658 10659 (face (rainbow-delimiters-depth-5-face) fontified t) 10659 10673 (fontified t) 10673 10674 (face (rainbow-delimiters-depth-4-face) fontified t) 10674 10676 (fontified t) 10676 10684 (fontified t) 10684 10685 (face (rainbow-delimiters-depth-3-face) fontified t) 10685 10687 (fontified t) 10687 10695 (fontified t) 10695 10698 (face font-lock-keyword-face fontified t) 10698 10699 (fontified t) 10699 10712 (face font-lock-variable-name-face fontified t) 10712 10729 (fontified t) 10729 10730 (face (rainbow-delimiters-depth-3-face) fontified t) 10730 10731 (face (rainbow-delimiters-depth-3-face) fontified t) 10731 10735 (fontified t) 10735 10736 (face (rainbow-delimiters-depth-3-face) fontified t) 10736 10744 (face font-lock-type-face fontified t) 10744 10752 (fontified t) 10752 10753 (face (rainbow-delimiters-depth-3-face) fontified t) 10753 10763 (fontified t) 10763 10764 (face (rainbow-delimiters-depth-3-face) fontified t) 10764 10767 (face font-lock-type-face fontified t) 10767 10768 (face (rainbow-delimiters-depth-4-face) fontified t) 10768 10769 (fontified t) 10769 10770 (face (rainbow-delimiters-depth-4-face) fontified t) 10770 10771 (face (rainbow-delimiters-depth-3-face) fontified t) 10771 10772 (face (rainbow-delimiters-depth-3-face) fontified t) 10772 10773 (face (rainbow-delimiters-depth-3-face) fontified t) 10773 10783 (fontified t) 10783 10786 (face font-lock-keyword-face fontified t) 10786 10787 (fontified t) 10787 10802 (face font-lock-variable-name-face fontified t) 10802 10805 (fontified t) 10805 10813 (face font-lock-constant-face fontified t) 10813 10838 (fontified t) 10838 10839 (face (rainbow-delimiters-depth-3-face) fontified t) 10839 10840 (face rust-ampersand-face fontified t) 10840 10848 (fontified t) 10848 10849 (face rust-ampersand-face fontified t) 10849 10862 (fontified t) 10862 10863 (face (rainbow-delimiters-depth-3-face) fontified t) 10863 10865 (fontified t) 10865 10866 (fontified t) 10866 10874 (fontified t) 10874 10877 (face font-lock-comment-delimiter-face fontified t) 10877 10884 (face font-lock-comment-face fontified t) 10884 10892 (fontified t) 10892 10895 (face font-lock-keyword-face fontified t) 10895 10896 (fontified t) 10896 10917 (face font-lock-variable-name-face fontified t) 10917 10920 (fontified t) 10920 10921 (face (rainbow-delimiters-depth-3-face) fontified t) 10921 10934 (fontified t) 10934 10937 (face font-lock-keyword-face fontified t) 10937 10938 (fontified t) 10938 10944 (face font-lock-variable-name-face fontified t) 10944 10976 (fontified t) 10976 10977 (face (rainbow-delimiters-depth-4-face) fontified t) 10977 10978 (face rust-ampersand-face fontified t) 10978 10982 (face font-lock-constant-face fontified t) 10982 10984 (fontified t) 10984 11008 (face font-lock-type-face fontified t) 11008 11009 (fontified t) 11009 11010 (face (rainbow-delimiters-depth-5-face) fontified t) 11010 11011 (fontified t) 11011 11027 (fontified t) 11027 11032 (face font-lock-variable-name-face fontified t) 11032 11034 (fontified t) 11034 11038 (face font-lock-type-face fontified t) 11038 11039 (face (rainbow-delimiters-depth-6-face) fontified t) 11039 11062 (face font-lock-string-face fontified t) 11062 11063 (face (rainbow-delimiters-depth-6-face) fontified t) 11063 11065 (fontified t) 11065 11081 (fontified t) 11081 11099 (face font-lock-variable-name-face fontified t) 11099 11101 (fontified t) 11101 11102 (face rust-ampersand-face fontified t) 11102 11103 (face (rainbow-delimiters-depth-6-face) fontified t) 11103 11124 (fontified t) 11124 11125 (face rust-ampersand-face fontified t) 11125 11171 (fontified t) 11171 11172 (face rust-ampersand-face fontified t) 11172 11212 (fontified t) 11212 11213 (face (rainbow-delimiters-depth-6-face) fontified t) 11213 11231 (fontified t) 11231 11251 (face font-lock-variable-name-face fontified t) 11251 11253 (fontified t) 11253 11254 (face rust-ampersand-face fontified t) 11254 11255 (face (rainbow-delimiters-depth-6-face) fontified t) 11255 11256 (face (rainbow-delimiters-depth-6-face) fontified t) 11256 11270 (fontified t) 11270 11271 (face (rainbow-delimiters-depth-5-face) fontified t) 11271 11272 (face (rainbow-delimiters-depth-4-face) fontified t) 11272 11274 (fontified t) 11274 11286 (fontified t) 11286 11289 (face font-lock-keyword-face fontified t) 11289 11290 (fontified t) 11290 11296 (face font-lock-variable-name-face fontified t) 11296 11299 (fontified t) 11299 11303 (face font-lock-constant-face fontified t) 11303 11305 (fontified t) 11305 11318 (face font-lock-preprocessor-face fontified t) 11318 11319 (face (rainbow-delimiters-depth-4-face) fontified t) 11319 11331 (face font-lock-string-face fontified t) 11331 11332 (face (rainbow-delimiters-depth-4-face) fontified t) 11332 11334 (fontified t) 11334 11369 (fontified t) 11369 11370 (face (rainbow-delimiters-depth-4-face) fontified t) 11370 11371 (fontified t) 11371 11387 (fontified t) 11387 11388 (face rust-ampersand-face fontified t) 11388 11396 (fontified t) 11396 11412 (fontified t) 11412 11413 (face rust-ampersand-face fontified t) 11413 11421 (fontified t) 11421 11452 (fontified t) 11452 11468 (fontified t) 11468 11472 (face font-lock-type-face fontified t) 11472 11473 (face (rainbow-delimiters-depth-5-face) fontified t) 11473 11480 (face font-lock-constant-face fontified t) 11480 11482 (fontified t) 11482 11489 (face font-lock-type-face fontified t) 11489 11491 (fontified t) 11491 11503 (face font-lock-type-face fontified t) 11503 11504 (face (rainbow-delimiters-depth-5-face) fontified t) 11504 11506 (fontified t) 11506 11522 (fontified t) 11522 11523 (face rust-ampersand-face fontified t) 11523 11524 (face (rainbow-delimiters-depth-5-face) fontified t) 11524 11529 (face font-lock-constant-face fontified t) 11529 11531 (fontified t) 11531 11542 (face font-lock-type-face fontified t) 11542 11548 (fontified t) 11548 11549 (face (rainbow-delimiters-depth-6-face) fontified t) 11549 11550 (face (rainbow-delimiters-depth-6-face) fontified t) 11550 11551 (face (rainbow-delimiters-depth-5-face) fontified t) 11551 11553 (fontified t) 11553 11577 (fontified t) 11577 11589 (fontified t) 11589 11590 (face (rainbow-delimiters-depth-4-face) fontified t) 11590 11591 (fontified t) 11591 11599 (fontified t) 11599 11600 (face (rainbow-delimiters-depth-3-face) fontified t) 11600 11602 (fontified t) 11602 11603 (fontified t) 11603 11604 (fontified t) 11604 11612 (fontified t) 11612 11616 (face font-lock-type-face fontified t) 11616 11617 (fontified t) 11617 11618 (face (rainbow-delimiters-depth-3-face) fontified t) 11618 11619 (fontified t) 11619 11639 (fontified t) 11639 11660 (fontified t) 11660 11680 (fontified t) 11680 11699 (fontified t) 11699 11719 (fontified t) 11719 11766 (fontified t) 11766 11775 (fontified t) 11775 11851 (fontified t) 11851 11878 (fontified t) 11878 11891 (fontified t) 11891 11908 (fontified t) 11908 11911 (fontified t) 11911 11917 (fontified t) 11917 11935 (fontified t) 11935 11978 (fontified t) 11978 11991 (face font-lock-variable-name-face fontified t) 11991 11993 (fontified t) 11993 11998 (face font-lock-keyword-face fontified t) 11998 12013 (fontified t) 12013 12041 (fontified t) 12041 12068 (fontified t) 12068 12099 (fontified t) 12099 12183 (fontified t) 12183 12218 (fontified t) 12218 12291 (fontified t) 12291 12292 (face (rainbow-delimiters-depth-3-face) fontified t) 12292 12298 (fontified t) 12298 12299 (face (rainbow-delimiters-depth-2-face) fontified t) 12299 12300 (fontified t) 12300 12301 (fontified t) 12301 12305 (fontified t) 12305 12308 (face font-lock-keyword-face fontified t) 12308 12309 (fontified t) 12309 12311 (face font-lock-keyword-face fontified t) 12311 12312 (fontified t) 12312 12318 (face font-lock-function-name-face fontified t) 12318 12319 (face (rainbow-delimiters-depth-2-face) fontified t) 12319 12320 (face rust-ampersand-face fontified t) 12320 12324 (face font-lock-keyword-face fontified t) 12324 12325 (face (rainbow-delimiters-depth-2-face) fontified t) 12325 12327 (fontified t) 12327 12328 (fontified t syntax-table (1)) 12328 12329 (fontified t) 12329 12330 (face rust-ampersand-face fontified t) 12330 12336 (face font-lock-type-face fontified t) 12336 12337 (fontified t) 12337 12338 (face (rainbow-delimiters-depth-2-face) fontified t) 12338 12347 (fontified t) 12347 12348 (face rust-ampersand-face fontified t) 12348 12352 (face font-lock-keyword-face fontified t) 12352 12364 (fontified t) 12364 12365 (face (rainbow-delimiters-depth-2-face) fontified t) 12365 12371 (fontified t) 12371 12373 (face font-lock-keyword-face fontified t) 12373 12374 (fontified t) 12374 12380 (face font-lock-function-name-face fontified t) 12380 12381 (face (rainbow-delimiters-depth-2-face) fontified t) 12381 12382 (face rust-ampersand-face fontified t) 12382 12385 (face font-lock-keyword-face fontified t) 12385 12386 (fontified t) 12386 12390 (face font-lock-keyword-face fontified t) 12390 12392 (fontified t) 12392 12400 (face font-lock-variable-name-face fontified t) 12400 12402 (fontified t) 12402 12407 (face font-lock-constant-face fontified t) 12407 12409 (fontified t) 12409 12412 (face font-lock-constant-face fontified t) 12412 12414 (fontified t) 12414 12426 (face font-lock-type-face fontified t) 12426 12427 (face (rainbow-delimiters-depth-3-face) fontified t) 12427 12430 (face font-lock-type-face fontified t) 12430 12431 (face (rainbow-delimiters-depth-3-face) fontified t) 12431 12432 (face (rainbow-delimiters-depth-2-face) fontified t) 12432 12433 (fontified t) 12433 12434 (face (rainbow-delimiters-depth-2-face) fontified t) 12434 12443 (fontified t) 12443 12445 (face font-lock-keyword-face fontified t) 12445 12461 (fontified t) 12461 12462 (fontified t syntax-table (1)) 12462 12484 (fontified t) 12484 12485 (fontified t syntax-table (1)) 12485 12488 (fontified t) 12488 12489 (face (rainbow-delimiters-depth-3-face) fontified t) 12489 12502 (fontified t) 12502 12506 (face font-lock-keyword-face fontified t) 12506 12536 (fontified t) 12536 12540 (face font-lock-keyword-face fontified t) 12540 12584 (fontified t) 12584 12588 (face font-lock-keyword-face fontified t) 12588 12622 (fontified t) 12622 12634 (fontified t) 12634 12638 (face font-lock-keyword-face fontified t) 12638 12656 (fontified t) 12656 12657 (face (rainbow-delimiters-depth-4-face) fontified t) 12657 12658 (face rust-ampersand-face fontified t) 12658 12662 (face font-lock-keyword-face fontified t) 12662 12671 (fontified t) 12671 12672 (face rust-ampersand-face fontified t) 12672 12676 (face font-lock-keyword-face fontified t) 12676 12683 (fontified t) 12683 12684 (face (rainbow-delimiters-depth-4-face) fontified t) 12684 12686 (fontified t) 12686 12698 (fontified t) 12698 12702 (face font-lock-keyword-face fontified t) 12702 12719 (fontified t) 12719 12726 (face font-lock-constant-face fontified t) 12726 12728 (fontified t) 12728 12735 (face font-lock-type-face fontified t) 12735 12757 (fontified t) 12757 12758 (face (rainbow-delimiters-depth-4-face) fontified t) 12758 12759 (face rust-ampersand-face fontified t) 12759 12763 (face font-lock-keyword-face fontified t) 12763 12772 (fontified t) 12772 12773 (face rust-ampersand-face fontified t) 12773 12777 (face font-lock-keyword-face fontified t) 12777 12786 (fontified t) 12786 12801 (face font-lock-string-face fontified t) 12801 12802 (face (rainbow-delimiters-depth-4-face) fontified t) 12802 12816 (fontified t) 12816 12820 (face font-lock-keyword-face fontified t) 12820 12838 (fontified t) 12838 12839 (face (rainbow-delimiters-depth-4-face) fontified t) 12839 12870 (fontified t) 12870 12871 (face (rainbow-delimiters-depth-4-face) fontified t) 12871 12895 (fontified t) 12895 12896 (face (rainbow-delimiters-depth-3-face) fontified t) 12896 12901 (fontified t) 12901 12902 (face (rainbow-delimiters-depth-2-face) fontified t) 12902 12908 (fontified t) 12908 12910 (face font-lock-keyword-face fontified t) 12910 12911 (fontified t) 12911 12916 (face font-lock-function-name-face fontified t) 12916 12917 (face (rainbow-delimiters-depth-2-face) fontified t) 12917 12918 (face rust-ampersand-face fontified t) 12918 12921 (face font-lock-keyword-face fontified t) 12921 12922 (fontified t) 12922 12926 (face font-lock-keyword-face fontified t) 12926 12928 (fontified t) 12928 12933 (face font-lock-variable-name-face fontified t) 12933 12935 (fontified t) 12935 12936 (face rust-ampersand-face fontified t) 12936 12947 (face font-lock-type-face fontified t) 12947 12948 (face (rainbow-delimiters-depth-2-face) fontified t) 12948 12950 (fontified t) 12950 12951 (fontified t syntax-table (1)) 12951 12952 (fontified t) 12952 12956 (face font-lock-type-face fontified t) 12956 12957 (fontified t) 12957 12958 (face (rainbow-delimiters-depth-2-face) fontified t) 12958 12967 (fontified t) 12967 12972 (face font-lock-keyword-face fontified t) 12972 12979 (fontified t) 12979 12980 (face (rainbow-delimiters-depth-3-face) fontified t) 12980 12981 (fontified t) 12981 12993 (fontified t) 12993 13004 (face font-lock-type-face fontified t) 13004 13006 (fontified t) 13006 13019 (face font-lock-type-face fontified t) 13019 13020 (fontified t) 13020 13021 (face (rainbow-delimiters-depth-4-face) fontified t) 13021 13022 (fontified t) 13022 13038 (fontified t) 13038 13043 (face font-lock-variable-name-face fontified t) 13043 13061 (fontified t) 13061 13069 (face font-lock-type-face fontified t) 13069 13070 (fontified t) 13070 13071 (face (rainbow-delimiters-depth-5-face) fontified t) 13071 13092 (fontified t) 13092 13104 (face font-lock-variable-name-face fontified t) 13104 13106 (fontified t) 13106 13117 (face font-lock-type-face fontified t) 13117 13119 (fontified t) 13119 13123 (face font-lock-type-face fontified t) 13123 13124 (face (rainbow-delimiters-depth-6-face) fontified t) 13124 13127 (fontified t) 13127 13128 (face (rainbow-delimiters-depth-6-face) fontified t) 13128 13196 (fontified t) 13196 13197 (face (rainbow-delimiters-depth-5-face) fontified t) 13197 13230 (fontified t) 13230 13231 (face (rainbow-delimiters-depth-4-face) fontified t) 13231 13233 (fontified t) 13233 13234 (fontified t syntax-table (1)) 13234 13235 (fontified t) 13235 13239 (face font-lock-keyword-face fontified t) 13239 13274 (fontified t) 13274 13275 (face (rainbow-delimiters-depth-4-face) fontified t) 13275 13287 (fontified t) 13287 13288 (face (rainbow-delimiters-depth-4-face) fontified t) 13288 13302 (fontified t) 13302 13313 (face font-lock-type-face fontified t) 13313 13315 (fontified t) 13315 13325 (face font-lock-type-face fontified t) 13325 13326 (fontified t) 13326 13327 (face (rainbow-delimiters-depth-4-face) fontified t) 13327 13338 (fontified t) 13338 13339 (face (rainbow-delimiters-depth-4-face) fontified t) 13339 13341 (fontified t) 13341 13342 (fontified t syntax-table (1)) 13342 13343 (fontified t) 13343 13344 (face (rainbow-delimiters-depth-4-face) fontified t) 13344 13361 (fontified t) 13361 13365 (face font-lock-keyword-face fontified t) 13365 13398 (fontified t) 13398 13399 (face (rainbow-delimiters-depth-5-face) fontified t) 13399 13404 (fontified t) 13404 13405 (face (rainbow-delimiters-depth-5-face) fontified t) 13405 13423 (fontified t) 13423 13427 (face font-lock-keyword-face fontified t) 13427 13435 (fontified t) 13435 13440 (fontified t) 13440 13441 (fontified t face (rainbow-delimiters-depth-4-face)) 13441 13442 (fontified t) 13442 13454 (fontified t) 13454 13465 (face font-lock-type-face fontified t) 13465 13467 (fontified t) 13467 13477 (face font-lock-type-face fontified t) 13477 13478 (fontified t) 13478 13479 (face (rainbow-delimiters-depth-4-face) fontified t) 13479 13496 (fontified t) 13496 13502 (face font-lock-variable-name-face fontified t) 13502 13504 (fontified t) 13504 13515 (face font-lock-type-face fontified t) 13515 13517 (fontified t) 13517 13521 (face font-lock-type-face fontified t) 13521 13523 (fontified t) 13523 13546 (fontified t) 13546 13577 (fontified t) 13577 13578 (face (rainbow-delimiters-depth-4-face) fontified t) 13578 13580 (fontified t) 13580 13581 (fontified t syntax-table (1)) 13581 13582 (fontified t) 13582 13583 (face (rainbow-delimiters-depth-4-face) fontified t) 13583 13600 (fontified t) 13600 13604 (face font-lock-keyword-face fontified t) 13604 13631 (fontified t) 13631 13643 (face font-lock-type-face fontified t) 13643 13645 (fontified t) 13645 13652 (face font-lock-type-face fontified t) 13652 13670 (fontified t) 13670 13674 (face font-lock-keyword-face fontified t) 13674 13687 (fontified t) 13687 13688 (face (rainbow-delimiters-depth-4-face) fontified t) 13688 13704 (fontified t) 13704 13705 (fontified t syntax-table (1)) 13705 13706 (fontified t) 13706 13711 (face font-lock-keyword-face fontified t) 13711 13721 (fontified t) 13721 13722 (face (rainbow-delimiters-depth-3-face) fontified t) 13722 13729 (fontified t) 13729 13730 (face (rainbow-delimiters-depth-2-face) fontified t) 13730 13736 (fontified t) 13736 13738 (face font-lock-keyword-face fontified t) 13738 13739 (fontified t) 13739 13745 (face font-lock-function-name-face fontified t) 13745 13746 (face (rainbow-delimiters-depth-2-face) fontified t) 13746 13747 (face rust-ampersand-face fontified t) 13747 13750 (face font-lock-keyword-face fontified t) 13750 13751 (fontified t) 13751 13755 (face font-lock-keyword-face fontified t) 13755 13757 (fontified t) 13757 13759 (face font-lock-variable-name-face fontified t) 13759 13761 (fontified t) 13761 13768 (face font-lock-constant-face fontified t) 13768 13770 (fontified t) 13770 13778 (face font-lock-type-face fontified t) 13778 13779 (face (rainbow-delimiters-depth-2-face) fontified t) 13779 13780 (fontified t) 13780 13781 (face (rainbow-delimiters-depth-2-face) fontified t) 13781 13790 (fontified t) 13790 13794 (face font-lock-keyword-face fontified t) 13794 13826 (fontified t) 13826 13827 (face (rainbow-delimiters-depth-3-face) fontified t) 13827 13828 (face rust-ampersand-face fontified t) 13828 13831 (face font-lock-keyword-face fontified t) 13831 13832 (fontified t) 13832 13836 (face font-lock-keyword-face fontified t) 13836 13847 (fontified t) 13847 13848 (face (rainbow-delimiters-depth-3-face) fontified t) 13848 13858 (fontified t) 13858 13862 (face font-lock-keyword-face fontified t) 13862 13894 (fontified t) 13894 13895 (face (rainbow-delimiters-depth-3-face) fontified t) 13895 13896 (face rust-ampersand-face fontified t) 13896 13900 (face font-lock-keyword-face fontified t) 13900 13909 (fontified t) 13909 13910 (face rust-ampersand-face fontified t) 13910 13914 (face font-lock-keyword-face fontified t) 13914 13925 (fontified t) 13925 13926 (face (rainbow-delimiters-depth-3-face) fontified t) 13926 13936 (fontified t) 13936 13940 (face font-lock-keyword-face fontified t) 13940 13959 (fontified t) 13959 13960 (face (rainbow-delimiters-depth-3-face) fontified t) 13960 13961 (face rust-ampersand-face fontified t) 13961 13965 (face font-lock-keyword-face fontified t) 13965 13984 (fontified t) 13984 13992 (face font-lock-constant-face fontified t) 13992 14004 (fontified t) 14004 14005 (face (rainbow-delimiters-depth-4-face) fontified t) 14005 14006 (face rust-ampersand-face fontified t) 14006 14007 (face (rainbow-delimiters-depth-5-face) fontified t) 14007 14011 (face font-lock-keyword-face fontified t) 14011 14026 (fontified t) 14026 14027 (face (rainbow-delimiters-depth-5-face) fontified t) 14027 14028 (face (rainbow-delimiters-depth-4-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-3-face) fontified t) 14029 14040 (fontified t) 14040 14043 (face font-lock-comment-delimiter-face fontified t) 14043 14060 (face font-lock-comment-face fontified t) 14060 14068 (fontified t) 14068 14071 (face font-lock-keyword-face fontified t) 14071 14072 (fontified t) 14072 14084 (face font-lock-variable-name-face fontified t) 14084 14087 (fontified t) 14087 14093 (face font-lock-constant-face fontified t) 14093 14095 (fontified t) 14095 14102 (face font-lock-type-face fontified t) 14102 14108 (fontified t) 14108 14109 (face (rainbow-delimiters-depth-3-face) fontified t) 14109 14113 (face font-lock-keyword-face fontified t) 14113 14136 (fontified t) 14136 14137 (face (rainbow-delimiters-depth-3-face) fontified t) 14137 14147 (fontified t) 14147 14150 (face font-lock-comment-delimiter-face fontified t) 14150 14180 (face font-lock-comment-face fontified t) 14180 14188 (fontified t) 14188 14195 (face font-lock-comment-delimiter-face fontified t) 14195 14271 (face font-lock-comment-face fontified t) 14271 14279 (fontified t) 14279 14287 (face font-lock-comment-delimiter-face fontified t) 14287 14303 (face font-lock-comment-face fontified t) 14303 14311 (fontified t) 14311 14318 (face font-lock-comment-delimiter-face fontified t) 14318 14327 (face font-lock-comment-face fontified t) 14327 14336 (fontified t) 14336 14340 (face font-lock-keyword-face fontified t) 14340 14378 (fontified t) 14378 14379 (face (rainbow-delimiters-depth-3-face) fontified t) 14379 14385 (face font-lock-constant-face fontified t) 14385 14387 (fontified t) 14387 14394 (face font-lock-type-face fontified t) 14394 14411 (fontified t) 14411 14412 (face (rainbow-delimiters-depth-4-face) fontified t) 14412 14413 (face (rainbow-delimiters-depth-5-face) fontified t) 14413 14426 (fontified t) 14426 14427 (face (rainbow-delimiters-depth-5-face) fontified t) 14427 14432 (fontified t) 14432 14433 (face (rainbow-delimiters-depth-5-face) fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14436 (fontified t) 14436 14442 (face font-lock-constant-face fontified t) 14442 14444 (fontified t) 14444 14447 (face font-lock-type-face fontified t) 14447 14448 (face (rainbow-delimiters-depth-5-face) fontified t) 14448 14469 (fontified t) 14469 14470 (face (rainbow-delimiters-depth-6-face) fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-5-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-4-face) fontified t) 14473 14501 (fontified t) 14501 14502 (face (rainbow-delimiters-depth-3-face) fontified t) 14502 14507 (fontified t) 14507 14508 (face (rainbow-delimiters-depth-3-face) fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14511 (fontified t) 14511 14514 (face font-lock-comment-delimiter-face fontified t) 14514 14523 (face font-lock-comment-face fontified t) 14523 14532 (fontified t) 14532 14536 (face font-lock-keyword-face fontified t) 14536 14555 (fontified t) 14555 14556 (face (rainbow-delimiters-depth-3-face) fontified t) 14556 14557 (face rust-ampersand-face fontified t) 14557 14561 (face font-lock-keyword-face fontified t) 14561 14579 (fontified t) 14579 14587 (face font-lock-constant-face fontified t) 14587 14599 (fontified t) 14599 14600 (face (rainbow-delimiters-depth-4-face) fontified t) 14600 14601 (face rust-ampersand-face fontified t) 14601 14602 (face (rainbow-delimiters-depth-5-face) fontified t) 14602 14606 (face font-lock-keyword-face fontified t) 14606 14620 (fontified t) 14620 14621 (face (rainbow-delimiters-depth-5-face) fontified t) 14621 14622 (face (rainbow-delimiters-depth-4-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-3-face) fontified t) 14623 14630 (fontified t) 14630 14631 (face (rainbow-delimiters-depth-2-face) fontified t) 14631 14633 (fontified t) 14633 14637 (fontified t) 14637 14639 (face font-lock-keyword-face fontified t) 14639 14640 (fontified t) 14640 14646 (face font-lock-function-name-face fontified t) 14646 14647 (face (rainbow-delimiters-depth-2-face) fontified t) 14647 14648 (face rust-ampersand-face fontified t) 14648 14651 (face font-lock-keyword-face fontified t) 14651 14652 (fontified t) 14652 14656 (face font-lock-keyword-face fontified t) 14656 14658 (fontified t) 14658 14663 (face font-lock-variable-name-face fontified t) 14663 14665 (fontified t) 14665 14669 (face font-lock-constant-face fontified t) 14669 14671 (fontified t) 14671 14676 (face font-lock-type-face fontified t) 14676 14677 (face (rainbow-delimiters-depth-2-face) fontified t) 14677 14679 (fontified t) 14679 14680 (syntax-table (1) fontified t) 14680 14681 (fontified t) 14681 14687 (face font-lock-type-face fontified t) 14687 14688 (face (rainbow-delimiters-depth-2-face) fontified t) 14688 14689 (face (rainbow-delimiters-depth-3-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14692 (fontified t) 14692 14696 (face font-lock-constant-face fontified t) 14696 14698 (fontified t) 14698 14710 (face font-lock-type-face fontified t) 14710 14711 (face (rainbow-delimiters-depth-2-face) fontified t) 14711 14712 (fontified t) 14712 14713 (face (rainbow-delimiters-depth-2-face) fontified t) 14713 14714 (fontified t) 14714 14722 (fontified t) 14722 14725 (face font-lock-keyword-face fontified t) 14725 14726 (fontified t) 14726 14732 (face font-lock-variable-name-face fontified t) 14732 14735 (fontified t) 14735 14739 (face font-lock-keyword-face fontified t) 14739 14767 (fontified t) 14767 14768 (face (rainbow-delimiters-depth-3-face) fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face rust-question-mark fontified t) 14770 14780 (fontified t) 14780 14783 (face font-lock-keyword-face fontified t) 14783 14784 (fontified t) 14784 14788 (face font-lock-variable-name-face fontified t) 14788 14817 (fontified t) 14817 14818 (face (rainbow-delimiters-depth-3-face) fontified t) 14818 14819 (face rust-ampersand-face fontified t) 14819 14823 (face font-lock-constant-face fontified t) 14823 14825 (fontified t) 14825 14846 (face font-lock-type-face fontified t) 14846 14855 (fontified t) 14855 14856 (face (rainbow-delimiters-depth-4-face) fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-3-face) fontified t) 14858 14868 (fontified t) 14868 14871 (face font-lock-keyword-face fontified t) 14871 14872 (fontified t) 14872 14875 (face font-lock-keyword-face fontified t) 14875 14876 (fontified t) 14876 14883 (face font-lock-variable-name-face fontified t) 14883 14886 (fontified t) 14886 14890 (face font-lock-keyword-face fontified t) 14890 14920 (fontified t) 14920 14921 (face (rainbow-delimiters-depth-3-face) fontified t) 14921 14922 (face rust-ampersand-face fontified t) 14922 14926 (face font-lock-constant-face fontified t) 14926 14928 (fontified t) 14928 14942 (face font-lock-type-face fontified t) 14942 14952 (fontified t face font-lock-type-face) 14952 14953 (fontified t) 14953 14954 (fontified t face (rainbow-delimiters-depth-4-face)) 14954 14955 (fontified t) 14955 14967 (fontified t) 14967 14972 (face font-lock-variable-name-face fontified t) 14972 14974 (fontified t) 14974 14978 (face font-lock-type-face fontified t) 14978 14979 (face (rainbow-delimiters-depth-5-face) fontified t) 14979 14995 (face font-lock-string-face fontified t) 14995 14996 (face (rainbow-delimiters-depth-5-face) fontified t) 14996 15006 (fontified t) 15006 15007 (face (rainbow-delimiters-depth-4-face) fontified t) 15007 15008 (face (rainbow-delimiters-depth-3-face) fontified t) 15008 15027 (fontified t) 15027 15030 (face font-lock-keyword-face fontified t) 15030 15031 (fontified t) 15031 15034 (face font-lock-keyword-face fontified t) 15034 15035 (fontified t) 15035 15046 (face font-lock-variable-name-face fontified t) 15046 15074 (fontified t) 15074 15075 (face (rainbow-delimiters-depth-3-face) fontified t) 15075 15076 (face rust-ampersand-face fontified t) 15076 15080 (face font-lock-constant-face fontified t) 15080 15082 (fontified t) 15082 15102 (face font-lock-type-face fontified t) 15102 15103 (fontified t) 15103 15104 (face (rainbow-delimiters-depth-4-face) fontified t) 15104 15105 (fontified t) 15105 15117 (fontified t) 15117 15122 (face font-lock-variable-name-face fontified t) 15122 15124 (fontified t) 15124 15128 (face font-lock-type-face fontified t) 15128 15129 (face (rainbow-delimiters-depth-5-face) fontified t) 15129 15142 (face font-lock-string-face fontified t) 15142 15143 (face (rainbow-delimiters-depth-5-face) fontified t) 15143 15145 (fontified t) 15145 15157 (fontified t) 15157 15174 (face font-lock-variable-name-face fontified t) 15174 15176 (fontified t) 15176 15177 (face rust-ampersand-face fontified t) 15177 15178 (face (rainbow-delimiters-depth-5-face) fontified t) 15178 15182 (face font-lock-type-face fontified t) 15182 15183 (face (rainbow-delimiters-depth-6-face) fontified t) 15183 15187 (face font-lock-constant-face fontified t) 15187 15189 (fontified t) 15189 15214 (face font-lock-type-face fontified t) 15214 15215 (fontified t) 15215 15216 (face (rainbow-delimiters-depth-7-face) fontified t) 15216 15233 (fontified t) 15233 15237 (face font-lock-variable-name-face fontified t) 15237 15239 (fontified t) 15239 15240 (face rust-ampersand-face fontified t) 15240 15246 (fontified t) 15246 15262 (fontified t) 15262 15276 (face font-lock-variable-name-face fontified t) 15276 15278 (fontified t) 15278 15282 (face font-lock-type-face fontified t) 15282 15284 (fontified t) 15284 15300 (fontified t) 15300 15303 (face font-lock-variable-name-face fontified t) 15303 15305 (fontified t) 15305 15309 (face font-lock-constant-face fontified t) 15309 15311 (fontified t) 15311 15321 (face font-lock-type-face fontified t) 15321 15322 (fontified t) 15322 15323 (face (rainbow-delimiters-depth-8-face) fontified t) 15323 15324 (fontified t) 15324 15344 (fontified t) 15344 15348 (face font-lock-variable-name-face fontified t) 15348 15350 (fontified t) 15350 15354 (face font-lock-constant-face fontified t) 15354 15356 (fontified t) 15356 15362 (face font-lock-type-face fontified t) 15362 15364 (fontified t) 15364 15369 (face font-lock-type-face fontified t) 15369 15370 (face (rainbow-delimiters-depth-9-face) fontified t) 15370 15375 (fontified t) 15375 15376 (face (rainbow-delimiters-depth-9-face) fontified t) 15376 15378 (fontified t) 15378 15398 (fontified t) 15398 15403 (face font-lock-variable-name-face fontified t) 15403 15405 (fontified t) 15405 15409 (face font-lock-constant-face fontified t) 15409 15411 (fontified t) 15411 15418 (face font-lock-type-face fontified t) 15418 15420 (fontified t) 15420 15425 (face font-lock-type-face fontified t) 15425 15443 (fontified t) 15443 15444 (face (rainbow-delimiters-depth-8-face) fontified t) 15444 15458 (fontified t) 15458 15459 (face (rainbow-delimiters-depth-7-face) fontified t) 15459 15460 (face (rainbow-delimiters-depth-6-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-5-face) fontified t) 15461 15475 (fontified t) 15475 15499 (face font-lock-variable-name-face fontified t) 15499 15501 (fontified t) 15501 15505 (face font-lock-type-face fontified t) 15505 15506 (face (rainbow-delimiters-depth-5-face) fontified t) 15506 15510 (face font-lock-constant-face fontified t) 15510 15512 (fontified t) 15512 15544 (face font-lock-type-face fontified t) 15544 15545 (fontified t) 15545 15546 (face (rainbow-delimiters-depth-6-face) fontified t) 15546 15563 (fontified t) 15563 15567 (face font-lock-variable-name-face fontified t) 15567 15569 (fontified t) 15569 15570 (face rust-ampersand-face fontified t) 15570 15574 (face font-lock-keyword-face fontified t) 15574 15595 (fontified t) 15595 15611 (fontified t) 15611 15620 (face font-lock-variable-name-face fontified t) 15620 15622 (fontified t) 15622 15626 (face font-lock-type-face fontified t) 15626 15627 (face (rainbow-delimiters-depth-7-face) fontified t) 15627 15631 (face font-lock-constant-face fontified t) 15631 15633 (fontified t) 15633 15643 (face font-lock-type-face fontified t) 15643 15644 (fontified t) 15644 15645 (face (rainbow-delimiters-depth-8-face) fontified t) 15645 15646 (fontified t) 15646 15666 (fontified t) 15666 15670 (face font-lock-variable-name-face fontified t) 15670 15672 (fontified t) 15672 15676 (face font-lock-constant-face fontified t) 15676 15678 (fontified t) 15678 15684 (face font-lock-type-face fontified t) 15684 15686 (fontified t) 15686 15691 (face font-lock-type-face fontified t) 15691 15692 (face (rainbow-delimiters-depth-9-face) fontified t) 15692 15695 (fontified t) 15695 15696 (face (rainbow-delimiters-depth-9-face) fontified t) 15696 15718 (fontified t) 15718 15723 (face font-lock-variable-name-face fontified t) 15723 15725 (fontified t) 15725 15729 (face font-lock-constant-face fontified t) 15729 15731 (fontified t) 15731 15738 (face font-lock-type-face fontified t) 15738 15740 (fontified t) 15740 15745 (face font-lock-type-face fontified t) 15745 15763 (fontified t) 15763 15764 (face (rainbow-delimiters-depth-8-face) fontified t) 15764 15765 (face (rainbow-delimiters-depth-7-face) fontified t) 15765 15767 (fontified t) 15767 15783 (fontified t) 15783 15794 (face font-lock-variable-name-face fontified t) 15794 15796 (fontified t) 15796 15800 (face font-lock-type-face fontified t) 15800 15802 (fontified t) 15802 15814 (fontified t) 15814 15815 (face (rainbow-delimiters-depth-6-face) fontified t) 15815 15816 (face (rainbow-delimiters-depth-5-face) fontified t) 15816 15818 (fontified t) 15818 15830 (fontified t) 15830 15849 (face font-lock-variable-name-face fontified t) 15849 15851 (fontified t) 15851 15855 (face font-lock-type-face fontified t) 15855 15857 (fontified t) 15857 15869 (fontified t) 15869 15885 (face font-lock-variable-name-face fontified t) 15885 15887 (fontified t) 15887 15891 (face font-lock-type-face fontified t) 15891 15893 (fontified t) 15893 15901 (fontified t) 15901 15902 (face (rainbow-delimiters-depth-4-face) fontified t) 15902 15903 (face (rainbow-delimiters-depth-3-face) fontified t) 15903 15913 (fontified t) 15913 15916 (face font-lock-comment-delimiter-face fontified t) 15916 15921 (face font-lock-comment-face fontified t) 15921 15958 (fontified t) 15958 15959 (face (rainbow-delimiters-depth-3-face) fontified t) 15959 15962 (fontified t) 15962 15966 (face font-lock-keyword-face fontified t) 15966 15988 (fontified t) 15988 15989 (face (rainbow-delimiters-depth-4-face) fontified t) 15989 15991 (fontified t) 15991 15992 (face (rainbow-delimiters-depth-4-face) fontified t) 15992 15993 (face (rainbow-delimiters-depth-3-face) fontified t) 15993 16004 (fontified t) 16004 16009 (face font-lock-preprocessor-face fontified t) 16009 16010 (face (rainbow-delimiters-depth-3-face) fontified t) 16010 16039 (face font-lock-string-face fontified t) 16039 16040 (face (rainbow-delimiters-depth-3-face) fontified t) 16040 16050 (fontified t) 16050 16053 (face font-lock-keyword-face fontified t) 16053 16054 (fontified t) 16054 16059 (face font-lock-keyword-face fontified t) 16059 16061 (fontified t) 16061 16066 (face font-lock-constant-face fontified t) 16066 16068 (fontified t) 16068 16077 (face font-lock-type-face fontified t) 16077 16079 (fontified t) 16079 16082 (face font-lock-comment-delimiter-face fontified t) 16082 16087 (face font-lock-comment-face fontified t) 16087 16119 (fontified t) 16119 16120 (face (rainbow-delimiters-depth-3-face) fontified t) 16120 16121 (face rust-ampersand-face fontified t) 16121 16125 (face font-lock-keyword-face fontified t) 16125 16147 (fontified t) 16147 16148 (face (rainbow-delimiters-depth-3-face) fontified t) 16148 16150 (fontified t) 16150 16153 (face font-lock-comment-delimiter-face fontified t) 16153 16158 (face font-lock-comment-face fontified t) 16158 16194 (fontified t) 16194 16195 (face (rainbow-delimiters-depth-3-face) fontified t) 16195 16208 (fontified t) 16208 16209 (face rust-ampersand-face fontified t) 16209 16213 (face font-lock-keyword-face fontified t) 16213 16237 (fontified t) 16237 16238 (face rust-ampersand-face fontified t) 16238 16242 (face font-lock-keyword-face fontified t) 16242 16274 (fontified t) 16274 16275 (face rust-ampersand-face fontified t) 16275 16279 (face font-lock-keyword-face fontified t) 16279 16306 (fontified t) 16306 16307 (face (rainbow-delimiters-depth-3-face) fontified t) 16307 16309 (fontified t) 16309 16312 (face font-lock-comment-delimiter-face fontified t) 16312 16317 (face font-lock-comment-face fontified t) 16317 16326 (fontified t) 16326 16331 (face font-lock-preprocessor-face fontified t) 16331 16332 (face (rainbow-delimiters-depth-3-face) fontified t) 16332 16361 (face font-lock-string-face fontified t) 16361 16362 (face (rainbow-delimiters-depth-3-face) fontified t) 16362 16396 (fontified t) 16396 16397 (face (rainbow-delimiters-depth-3-face) fontified t) 16397 16398 (face rust-ampersand-face fontified t) 16398 16402 (face font-lock-keyword-face fontified t) 16402 16418 (fontified t) 16418 16419 (face (rainbow-delimiters-depth-3-face) fontified t) 16419 16421 (fontified t) 16421 16424 (face font-lock-comment-delimiter-face fontified t) 16424 16427 (face font-lock-comment-face fontified t) 16427 16455 (fontified t) 16455 16467 (fontified t) 16467 16468 (fontified t face (rainbow-delimiters-depth-3-face)) 16468 16469 (fontified t) 16469 16481 (fontified t) 16481 16482 (face rust-ampersand-face fontified t) 16482 16486 (face font-lock-keyword-face fontified t) 16486 16513 (fontified t) 16513 16517 (face font-lock-keyword-face fontified t) 16517 16531 (fontified t) 16531 16532 (face (rainbow-delimiters-depth-4-face) fontified t) 16532 16533 (face (rainbow-delimiters-depth-4-face) fontified t) 16533 16534 (fontified t) 16534 16536 (face font-lock-keyword-face fontified t) 16536 16537 (fontified t) 16537 16540 (face font-lock-type-face fontified t) 16540 16554 (fontified t) 16554 16555 (face rust-ampersand-face fontified t) 16555 16559 (face font-lock-keyword-face fontified t) 16559 16591 (fontified t) 16591 16592 (face rust-ampersand-face fontified t) 16592 16596 (face font-lock-keyword-face fontified t) 16596 16623 (fontified t) 16623 16624 (face (rainbow-delimiters-depth-3-face) fontified t) 16624 16639 (fontified t) 16639 16640 (face (rainbow-delimiters-depth-3-face) fontified t) 16640 16651 (fontified t) 16651 16652 (face (rainbow-delimiters-depth-3-face) fontified t) 16652 16664 (fontified t) 16664 16667 (face font-lock-comment-delimiter-face fontified t) 16667 16720 (face font-lock-comment-face fontified t) 16720 16728 (fontified t) 16728 16732 (face font-lock-keyword-face fontified t) 16732 16745 (fontified t) 16745 16746 (face (rainbow-delimiters-depth-3-face) fontified t) 16746 16749 (face font-lock-constant-face fontified t) 16749 16751 (fontified t) 16751 16755 (face font-lock-constant-face fontified t) 16755 16761 (fontified t) 16761 16762 (face (rainbow-delimiters-depth-4-face) fontified t) 16762 16773 (fontified t) 16773 16776 (fontified t) 16776 16777 (face (rainbow-delimiters-depth-5-face) fontified t) 16777 16778 (face (rainbow-delimiters-depth-5-face) fontified t) 16778 16779 (face (rainbow-delimiters-depth-4-face) fontified t) 16779 16780 (face (rainbow-delimiters-depth-3-face) fontified t) 16780 16804 (fontified t) 16804 16805 (face (rainbow-delimiters-depth-3-face) fontified t) 16805 16806 (face (rainbow-delimiters-depth-3-face) fontified t) 16806 16817 (fontified t) 16817 16819 (face font-lock-type-face fontified t) 16819 16820 (face (rainbow-delimiters-depth-3-face) fontified t) 16820 16821 (face (rainbow-delimiters-depth-4-face) fontified t) 16821 16822 (face (rainbow-delimiters-depth-4-face) fontified t) 16822 16823 (face (rainbow-delimiters-depth-3-face) fontified t) 16823 16829 (fontified t) 16829 16830 (face (rainbow-delimiters-depth-2-face) fontified t) 16830 16831 (fontified t) 16831 16832 (face (rainbow-delimiters-depth-1-face) fontified t) 16832 16835 (fontified t) 16835 16838 (face font-lock-keyword-face fontified t) 16838 16839 (fontified t) 16839 16844 (face font-lock-keyword-face fontified t) 16844 16845 (fontified t) 16845 16847 (face font-lock-keyword-face fontified t) 16847 16848 (fontified t) 16848 16851 (face font-lock-function-name-face fontified t) 16851 16852 (face (rainbow-delimiters-depth-1-face) fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (fontified t) 16854 16855 (face (rainbow-delimiters-depth-1-face) fontified t) 16855 16865 (fontified t) 16865 16868 (face font-lock-keyword-face fontified t) 16868 16869 (fontified t) 16869 16879 (face font-lock-variable-name-face fontified t) 16879 16882 (fontified t) 16882 16891 (face font-lock-type-face fontified t) 16891 16896 (fontified t) 16896 16897 (face (rainbow-delimiters-depth-2-face) fontified t) 16897 16898 (face (rainbow-delimiters-depth-2-face) fontified t) 16898 16905 (fontified t) 16905 16906 (face (rainbow-delimiters-depth-2-face) fontified t) 16906 16907 (face (rainbow-delimiters-depth-2-face) fontified t) 16907 16913 (fontified t) 16913 16916 (face font-lock-keyword-face fontified t) 16916 16917 (fontified t) 16917 16923 (face font-lock-variable-name-face fontified t) 16923 16926 (fontified t) 16926 16939 (face font-lock-type-face fontified t) 16939 16944 (fontified t) 16944 16945 (face (rainbow-delimiters-depth-2-face) fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16952 (fontified t) 16952 16953 (face (rainbow-delimiters-depth-2-face) fontified t) 16953 16954 (face rust-ampersand-face fontified t) 16954 16964 (fontified t) 16964 16965 (face (rainbow-delimiters-depth-2-face) fontified t) 16965 16972 (fontified t) 16972 16973 (face (rainbow-delimiters-depth-2-face) fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16981 (fontified t) 16981 16984 (face font-lock-comment-delimiter-face fontified t) 16984 17058 (face font-lock-comment-face fontified t) 17058 17062 (fontified t) 17062 17065 (face font-lock-comment-delimiter-face fontified t) 17065 17138 (face font-lock-comment-face fontified t) 17138 17169 (fontified t) 17169 17170 (face (rainbow-delimiters-depth-2-face) fontified t) 17170 17181 (face font-lock-type-face fontified t) 17181 17183 (fontified t) 17183 17187 (face font-lock-type-face fontified t) 17187 17188 (face (rainbow-delimiters-depth-2-face) fontified t) 17188 17195 (fontified t) 17195 17198 (face font-lock-keyword-face fontified t) 17198 17199 (fontified t) 17199 17202 (face font-lock-keyword-face fontified t) 17202 17203 (fontified t) 17203 17208 (face font-lock-variable-name-face fontified t) 17208 17211 (fontified t) 17211 17216 (face font-lock-type-face fontified t) 17216 17221 (fontified t) 17221 17222 (face (rainbow-delimiters-depth-2-face) fontified t) 17222 17228 (fontified t) 17228 17229 (face (rainbow-delimiters-depth-2-face) fontified t) 17229 17230 (fontified t) 17230 17235 (face font-lock-keyword-face fontified t) 17235 17241 (fontified t) 17241 17244 (face font-lock-keyword-face fontified t) 17244 17245 (fontified t) 17245 17248 (face font-lock-keyword-face fontified t) 17248 17249 (fontified t) 17249 17265 (face font-lock-variable-name-face fontified t) 17265 17268 (fontified t) 17268 17275 (face font-lock-constant-face fontified t) 17275 17277 (fontified t) 17277 17284 (face font-lock-type-face fontified t) 17284 17289 (fontified t) 17289 17290 (face (rainbow-delimiters-depth-2-face) fontified t) 17290 17291 (face (rainbow-delimiters-depth-2-face) fontified t) 17291 17294 (fontified t) 17294 17297 (face font-lock-comment-delimiter-face fontified t) 17297 17302 (face font-lock-comment-face fontified t) 17302 17308 (fontified t) 17308 17311 (face font-lock-comment-delimiter-face fontified t) 17311 17317 (face font-lock-comment-face fontified t) 17317 17335 (fontified t) 17335 17336 (face (rainbow-delimiters-depth-2-face) fontified t) 17336 17340 (face font-lock-keyword-face fontified t) 17340 17355 (fontified t) 17355 17356 (face (rainbow-delimiters-depth-3-face) fontified t) 17356 17365 (fontified t) 17365 17370 (face font-lock-keyword-face fontified t) 17370 17377 (fontified t) 17377 17378 (face (rainbow-delimiters-depth-4-face) fontified t) 17378 17391 (fontified t) 17391 17396 (face font-lock-type-face fontified t) 17396 17398 (fontified t) 17398 17409 (face font-lock-type-face fontified t) 17409 17411 (fontified t) 17411 17412 (syntax-table (1) fontified t) 17412 17413 (fontified t) 17413 17414 (face (rainbow-delimiters-depth-5-face) fontified t) 17414 17431 (fontified t) 17431 17434 (face font-lock-comment-delimiter-face fontified t) 17434 17459 (face font-lock-comment-face fontified t) 17459 17476 (fontified t) 17476 17479 (face font-lock-comment-delimiter-face fontified t) 17479 17510 (face font-lock-comment-face fontified t) 17510 17526 (fontified t) 17526 17528 (face font-lock-comment-delimiter-face fontified t) 17528 17529 (face font-lock-comment-face fontified t) 17529 17545 (fontified t) 17545 17548 (face font-lock-comment-delimiter-face fontified t) 17548 17623 (face font-lock-comment-face fontified t) 17623 17639 (fontified t) 17639 17642 (face font-lock-comment-delimiter-face fontified t) 17642 17722 (face font-lock-comment-face fontified t) 17722 17738 (fontified t) 17738 17741 (face font-lock-comment-delimiter-face fontified t) 17741 17766 (face font-lock-comment-face fontified t) 17766 17809 (fontified t) 17809 17810 (face (rainbow-delimiters-depth-6-face) fontified t) 17810 17811 (face (rainbow-delimiters-depth-6-face) fontified t) 17811 17825 (fontified t) 17825 17826 (face (rainbow-delimiters-depth-5-face) fontified t) 17826 17840 (fontified t) 17840 17845 (face font-lock-type-face fontified t) 17845 17847 (fontified t) 17847 17858 (face font-lock-type-face fontified t) 17858 17859 (fontified t) 17859 17860 (face (rainbow-delimiters-depth-5-face) fontified t) 17860 17877 (fontified t) 17877 17882 (face font-lock-variable-name-face fontified t) 17882 17884 (fontified t) 17884 17895 (face font-lock-type-face fontified t) 17895 17897 (fontified t) 17897 17908 (face font-lock-type-face fontified t) 17908 17909 (face (rainbow-delimiters-depth-6-face) fontified t) 17909 17917 (fontified t) 17917 17918 (face (rainbow-delimiters-depth-6-face) fontified t) 17918 17939 (fontified t) 17939 17942 (face font-lock-comment-delimiter-face fontified t) 17942 17969 (face font-lock-comment-face fontified t) 17969 17978 (fontified t face font-lock-comment-face) 17978 17990 (fontified t) 17990 17991 (face (rainbow-delimiters-depth-5-face) fontified t) 17991 17993 (fontified t) 17993 17994 (fontified t syntax-table (1)) 17994 17995 (fontified t) 17995 17997 (face font-lock-keyword-face fontified t) 17997 18018 (fontified t) 18018 18019 (face (rainbow-delimiters-depth-5-face) fontified t) 18019 18073 (fontified t) 18073 18074 (face (rainbow-delimiters-depth-6-face) fontified t) 18074 18090 (fontified t) 18090 18091 (face (rainbow-delimiters-depth-6-face) fontified t) 18091 18104 (fontified t) 18104 18105 (face (rainbow-delimiters-depth-5-face) fontified t) 18105 18119 (fontified t) 18119 18124 (face font-lock-type-face fontified t) 18124 18126 (fontified t) 18126 18137 (face font-lock-type-face fontified t) 18137 18138 (fontified t) 18138 18139 (face (rainbow-delimiters-depth-5-face) fontified t) 18139 18156 (fontified t) 18156 18159 (face font-lock-keyword-face fontified t) 18159 18160 (fontified t) 18160 18165 (face font-lock-variable-name-face fontified t) 18165 18198 (fontified t) 18198 18199 (face (rainbow-delimiters-depth-5-face) fontified t) 18199 18201 (fontified t) 18201 18202 (fontified t syntax-table (1)) 18202 18203 (fontified t) 18203 18204 (face (rainbow-delimiters-depth-5-face) fontified t) 18204 18221 (fontified t) 18221 18223 (face font-lock-keyword-face fontified t) 18223 18236 (fontified t) 18236 18237 (face (rainbow-delimiters-depth-6-face) fontified t) 18237 18242 (fontified t) 18242 18243 (face (rainbow-delimiters-depth-6-face) fontified t) 18243 18244 (fontified t) 18244 18245 (face (rainbow-delimiters-depth-6-face) fontified t) 18245 18246 (fontified t) 18246 18249 (face font-lock-comment-delimiter-face fontified t) 18249 18258 (face font-lock-comment-face fontified t) 18258 18273 (fontified t) 18273 18278 (fontified t) 18278 18283 (face font-lock-keyword-face fontified t) 18283 18290 (fontified t) 18290 18291 (face (rainbow-delimiters-depth-7-face) fontified t) 18291 18292 (fontified t) 18292 18316 (fontified t) 18316 18327 (face font-lock-type-face fontified t) 18327 18329 (fontified t) 18329 18343 (face font-lock-type-face fontified t) 18343 18374 (fontified t) 18374 18385 (face font-lock-type-face fontified t) 18385 18387 (fontified t) 18387 18400 (face font-lock-type-face fontified t) 18400 18401 (fontified t) 18401 18402 (face (rainbow-delimiters-depth-8-face) fontified t) 18402 18435 (fontified t) 18435 18440 (face font-lock-variable-name-face fontified t) 18440 18474 (fontified t) 18474 18482 (face font-lock-type-face fontified t) 18482 18483 (fontified t) 18483 18484 (face (rainbow-delimiters-depth-9-face) fontified t) 18484 18521 (fontified t) 18521 18526 (face font-lock-variable-name-face fontified t) 18526 18528 (fontified t) 18528 18540 (face font-lock-type-face fontified t) 18540 18542 (fontified t) 18542 18549 (face font-lock-type-face fontified t) 18549 18587 (fontified t) 18587 18599 (face font-lock-variable-name-face fontified t) 18599 18601 (fontified t) 18601 18612 (face font-lock-type-face fontified t) 18612 18614 (fontified t) 18614 18618 (face font-lock-type-face fontified t) 18618 18619 (face (rainbow-delimiters-depth-1-face) fontified t) 18619 18626 (face font-lock-type-face fontified t) 18626 18628 (fontified t) 18628 18634 (face font-lock-type-face fontified t) 18634 18635 (face (rainbow-delimiters-depth-1-face) fontified t) 18635 18708 (fontified t) 18708 18709 (face (rainbow-delimiters-depth-9-face) fontified t) 18709 18774 (fontified t) 18774 18775 (face (rainbow-delimiters-depth-8-face) fontified t) 18775 18777 (fontified t) 18777 18778 (fontified t syntax-table (1)) 18778 18788 (fontified t) 18788 18789 (face (rainbow-delimiters-depth-8-face) fontified t) 18789 18790 (face (rainbow-delimiters-depth-8-face) fontified t) 18790 18816 (fontified t) 18816 18827 (face font-lock-type-face fontified t) 18827 18829 (fontified t) 18829 18836 (face font-lock-type-face fontified t) 18836 18837 (face (rainbow-delimiters-depth-8-face) fontified t) 18837 18850 (fontified t) 18850 18851 (face (rainbow-delimiters-depth-8-face) fontified t) 18851 18853 (fontified t) 18853 18854 (fontified t syntax-table (1)) 18854 18855 (fontified t) 18855 18856 (face (rainbow-delimiters-depth-8-face) fontified t) 18856 18897 (fontified t) 18897 18898 (face (rainbow-delimiters-depth-9-face) fontified t) 18898 18912 (fontified t) 18912 18913 (face (rainbow-delimiters-depth-9-face) fontified t) 18913 18970 (fontified t) 18970 18971 (face (rainbow-delimiters-depth-9-face) fontified t) 18971 18972 (face (rainbow-delimiters-depth-9-face) fontified t) 18972 18998 (fontified t) 18998 18999 (face (rainbow-delimiters-depth-8-face) fontified t) 18999 19028 (fontified t) 19028 19029 (fontified t syntax-table (1)) 19029 19030 (fontified t) 19030 19031 (face (rainbow-delimiters-depth-8-face) fontified t) 19031 19032 (face (rainbow-delimiters-depth-8-face) fontified t) 19032 19053 (fontified t) 19053 19054 (face (rainbow-delimiters-depth-7-face) fontified t) 19054 19071 (fontified t) 19071 19072 (face (rainbow-delimiters-depth-6-face) fontified t) 19072 19073 (fontified t) 19073 19077 (face font-lock-keyword-face fontified t) 19077 19078 (fontified t) 19078 19079 (face (rainbow-delimiters-depth-6-face) fontified t) 19079 19127 (fontified t) 19127 19128 (face (rainbow-delimiters-depth-7-face) fontified t) 19128 19129 (face (rainbow-delimiters-depth-7-face) fontified t) 19129 19147 (fontified t) 19147 19148 (face (rainbow-delimiters-depth-6-face) fontified t) 19148 19166 (fontified t) 19166 19168 (face font-lock-keyword-face fontified t) 19168 19179 (fontified t) 19179 19190 (face font-lock-type-face fontified t) 19190 19192 (fontified t) 19192 19207 (face font-lock-type-face fontified t) 19207 19208 (fontified t) 19208 19209 (face (rainbow-delimiters-depth-6-face) fontified t) 19209 19230 (fontified t) 19230 19233 (face font-lock-keyword-face fontified t) 19233 19234 (fontified t) 19234 19237 (face font-lock-variable-name-face fontified t) 19237 19240 (fontified t) 19240 19247 (face font-lock-constant-face fontified t) 19247 19249 (fontified t) 19249 19256 (face font-lock-type-face fontified t) 19256 19261 (fontified t) 19261 19262 (face (rainbow-delimiters-depth-7-face) fontified t) 19262 19263 (face (rainbow-delimiters-depth-7-face) fontified t) 19263 19285 (fontified t) 19285 19288 (face font-lock-keyword-face fontified t) 19288 19289 (fontified t) 19289 19291 (face font-lock-variable-name-face fontified t) 19291 19394 (fontified t) 19394 19395 (face (rainbow-delimiters-depth-7-face) fontified t) 19395 19397 (fontified t)) . 61) (undo-tree-id199 . -15324) (undo-tree-id200 . -16976) (undo-tree-id201 . -16185) (undo-tree-id202 . -10408) (undo-tree-id203 . -944) (undo-tree-id204 . -956) (undo-tree-id205 . -956) (undo-tree-id206 . -555) (undo-tree-id207 . -9641) (undo-tree-id208 . -9641) (undo-tree-id209 . -10129) (undo-tree-id210 . -10129) (undo-tree-id211 . -1238) (undo-tree-id212 . -1095) (undo-tree-id213 . -1095) (undo-tree-id214 . -10325) (undo-tree-id215 . -15970) (undo-tree-id216 . -10347) (undo-tree-id217 . -16185) (undo-tree-id218 . -16976) (t 26017 25325 14667 321000)) nil (26018 21736 384613 0) 0 nil])
([nil nil ((20868 . 20880) (t 26018 21663 797628 643000)) nil (26018 21736 384593 0) 0 nil])
([nil nil ((20880 . 20882)) nil (26018 21736 384592 0) 0 nil])
([nil nil ((apply yas--snippet-revive 20880 20898 #s(yas--snippet nil nil #s(yas--exit 20898 nil) 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 20898 nil) 5 nil nil nil nil)) (20880 . 20898) (#("Event::AboutToWait$0" 0 20 (fontified nil)) . 20880) (20880 . 20900) (#("Ev" 0 2 (fontified nil)) . 20880) (20880 . 20882) (#("Event::AboutToWait" 0 18 (fontified nil)) . -20880) (20880 . 20898) (#("Ev" 0 2 (face font-lock-type-face fontified t)) . -20880) (undo-tree-id194 . -2) (undo-tree-id195 . -1) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) 20882) nil (26018 21736 384590 0) 0 nil])
([nil nil ((20898 . 20905)) nil (26018 21736 384581 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20900) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#(">" 0 1 (syntax-table (1) fontified t)) . -20901) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#(" " 0 1 (fontified t)) . -20902) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -20903) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -20904) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 20905) nil (26018 21736 384578 0) 0 nil])
([nil nil ((20900 . 20903)) nil (26018 21736 384546 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -20902) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 20903) nil (26018 21736 384545 0) 0 nil])
([nil nil ((20902 . 20905)) nil (26018 21736 384542 0) 0 nil])
([nil nil ((20902 . 20907) (#("sta" 0 3 (fontified nil)) . 20902) (20902 . 20905) (#("state" 0 5 (fontified nil)) . -20902) (20902 . 20907) (#("sta" 0 3 (fontified t)) . -20902) (undo-tree-id155 . -3) (undo-tree-id156 . -1) (undo-tree-id157 . -2) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) 20905) nil (26018 21736 384540 0) 0 nil])
([nil nil ((20907 . 20909)) nil (26018 21736 384532 0) 0 nil])
([nil nil ((20909 . 20911)) nil (26018 21736 384531 0) 0 nil])
([nil nil ((20908 . 20914) (#("win" 0 3 (fontified nil)) . 20908) (20908 . 20911) (#("window" 0 6 (fontified nil)) . -20908) (20908 . 20914) (#("win" 0 3 (fontified t)) . -20908) (undo-tree-id146 . -3) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) 20911) nil (26018 21736 384529 0) 0 nil])
([nil nil ((20914 . 20917)) nil (26018 21736 384518 0) 0 nil])
([nil nil ((apply yas--snippet-revive 20915 20931 #s(yas--snippet nil nil #s(yas--exit 20931 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 20931 nil) 6 nil nil nil nil)) (20915 . 20931) (#("request_redraw()$0" 0 18 (fontified nil)) . 20915) (20915 . 20933) (#("re" 0 2 (fontified nil)) . 20915) (20915 . 20917) (#("request_redraw()" 0 16 (fontified nil)) . -20915) (20915 . 20931) (#("re" 0 2 (fontified t)) . -20915) (undo-tree-id139 . -2) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) 20917) nil (26018 21736 384516 0) 0 nil])
([nil nil ((20931 . 20932)) nil (26018 21736 384505 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -20931) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 20932) nil (26018 21736 384503 0) 0 nil])
([nil nil ((20931 . 20932)) nil (26018 21736 384483 0) 0 nil])
([nil nil ((20952 . 20953) (t 26018 21736 441125 364000)) nil (26018 21738 148266 0) 0 nil])
([nil nil ((61 . 20095) (#("};
use texture::Texture;
use tracing::info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use depth_pass::*;


// lib.rs
#[repr(C)]
#[derive(Copy, Clone, Debug, bytemuck::Pod, bytemuck::Zeroable)]
struct Vertex {
    position: [f32; 3],
    tex_coords: [f32; 2], // NEW!

}



// lib.rs
// Changed
const VERTICES: &[Vertex] = &[
    Vertex { position: [-0.0868241, 0.49240386, 0.0], tex_coords: [0.4131759, 0.99240386], }, // A
    Vertex { position: [-0.49513406, 0.06958647, 0.0], tex_coords: [0.0048659444, 0.56958647], }, // B
    Vertex { position: [-0.21918549, -0.44939706, 0.0], tex_coords: [0.28081453, 0.05060294], }, // C
    Vertex { position: [0.35966998, -0.3473291, 0.0], tex_coords: [0.85967, 0.1526709], }, // D
    Vertex { position: [0.44147372, 0.2347359, 0.0], tex_coords: [0.9414737, 0.7347359], }, // E
];


const INDICES: &[u16] = &[
    0, 1, 4,
    1, 2, 4,
    2, 3, 4,
];


// lib.rs
impl Vertex {
    fn desc() -> wgpu::VertexBufferLayout<'static> {
        wgpu::VertexBufferLayout {
            array_stride: std::mem::size_of::<Vertex>() as wgpu::BufferAddress,
            step_mode: wgpu::VertexStepMode::Vertex,
            attributes: &[
                wgpu::VertexAttribute {
                    offset: 0,
                    shader_location: 0,
                    format: wgpu::VertexFormat::Float32x3,
                },
                wgpu::VertexAttribute {
                    offset: std::mem::size_of::<[f32; 3]>() as wgpu::BufferAddress,
                    shader_location: 1,
                    format: wgpu::VertexFormat::Float32x2,
                }
            ]
        }
    }
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipelines: Vec<wgpu::RenderPipeline>,
    pipeline_index: usize,

    vertex_buffer: wgpu::Buffer,
    num_vertices: u32,

    index_buffer: wgpu::Buffer, 
    num_indices: u32,

    texture_bind_group_layout: wgpu::BindGroupLayout,
    diffuse_bind_group: wgpu::BindGroup,
    diffuse_texture: texture::Texture, // NEW
    depth_texture: Texture,
    

    camera: Camera,
    camera_controller: CameraController,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    depth_pass: DepthPass,

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        let diffuse_texture = texture::Texture::from_path(std::path::Path::new(\"happy-tree.png\"), &device, &queue, None).unwrap();
        let diffuse_bind_group = diffuse_texture.create_bind_group(&device, &texture_bind_group_layout);

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");



        let camera = Camera {
            // position the camera 1 unit up and 2 units back
            // +z is out of the screen
            eye: (0.0, 1.0, 2.0).into(),
            // have it look at the origin
            target: (0.0, 0.0, 0.0).into(),
            // which way is \"up\"
            up: cgmath::Vector3::unit_y(),
            aspect: config.width as f32 / config.height as f32,
            fovy: 45.0,
            znear: 0.1,
            zfar: 100.0,
        };

        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera);
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });




        //shader file & render pipeline
        let shader = device.create_shader_module(wgpu::include_wgsl!(\"shader.wgsl\"));
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        let render_pipeline_0 = device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
            label: Some(\"Render Pipeline\"),
            layout: Some(&render_pipeline_layout),
            vertex: wgpu::VertexState {
                module: &shader,
                entry_point: \"vs_main\", // 1.
                buffers: &[
                    Vertex::desc(),
                    InstanceRaw::desc(),
                ], // 2.
            },
            fragment: Some(wgpu::FragmentState { // 3.
                module: &shader,
                entry_point: \"fs_main\",
                targets: &[Some(wgpu::ColorTargetState { // 4.
                    format: config.format,
                    blend: Some(wgpu::BlendState::REPLACE),
                    write_mask: wgpu::ColorWrites::ALL,
                })],
            }),
            // continued ...
            primitive: wgpu::PrimitiveState {
                topology: wgpu::PrimitiveTopology::TriangleList, // 1.
                strip_index_format: None,
                front_face: wgpu::FrontFace::Ccw, // 2.
                cull_mode: Some(wgpu::Face::Back),
                // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
                polygon_mode: wgpu::PolygonMode::Fill,
                // Requires Features::DEPTH_CLIP_CONTROL
                unclipped_depth: false,
                // Requires Features::CONSERVATIVE_RASTERIZATION
                conservative: false,
            },
            // continued ...
            depth_stencil: Some(wgpu::DepthStencilState {
                format: texture::Texture::DEPTH_FORMAT,
                depth_write_enabled: true,
                depth_compare: wgpu::CompareFunction::Less, // 1.
                stencil: wgpu::StencilState::default(), // 2.
                // bias: wgpu::DepthBiasState::default(),
                bias: wgpu::DepthBiasState {
                    constant: 2, // Corresponds to bilinear filtering
                    slope_scale: 2.0,
                    clamp: 0.0,
                },
            }),
            multisample: wgpu::MultisampleState {
                count: 1, // 2.
                mask: !0, // 3.
                alpha_to_coverage_enabled: false, // 4.
            },
            multiview: None, // 5.
        });

        let render_pipelines = vec![render_pipeline_0];

        // new()
        let vertex_buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label: Some(\"Vertex Buffer\"),
                contents: bytemuck::cast_slice(VERTICES),
                usage: wgpu::BufferUsages::VERTEX,
            }
        );
        let num_vertices = VERTICES.len() as u32;

        // NEW!
        let index_buffer = device.create_buffer_init(
            &wgpu::util::BufferInitDescriptor {
                label: Some(\"Index Buffer\"),
                contents: bytemuck::cast_slice(INDICES),
                usage: wgpu::BufferUsages::INDEX,
            }
        );
        let num_indices = INDICES.len() as u32;


        let camera_controller = CameraController::new(0.2);

        use cgmath::prelude::*;
        const NUM_INSTANCES_PER_ROW: u32 = 10;
        const INSTANCE_DISPLACEMENT: cgmath::Vector3<f32> = cgmath::Vector3::new(NUM_INSTANCES_PER_ROW as f32 * 0.5, 0.0, NUM_INSTANCES_PER_ROW as f32 * 0.5);
        
        let instances = (0..NUM_INSTANCES_PER_ROW).flat_map(|z| {
            (0..NUM_INSTANCES_PER_ROW).map(move |x| {
                let position = cgmath::Vector3 { x: x as f32, y: 0.0, z: z as f32 } - INSTANCE_DISPLACEMENT;

                let rotation = if position.is_zero() {
                    // this is needed so an object at (0, 0, 0) won't get scaled to zero
                    // as Quaternions can affect scale if they're not created correctly
                    cgmath::Quaternion::from_axis_angle(cgmath::Vector3::unit_z(), cgmath::Deg(0.0))
                } else {
                    cgmath::Quaternion::from_axis_angle(position.normalize(), cgmath::Deg(45.0))
                };

                let scaling = cgmath::Vector3::new(1.0, 1.0, 1.0);

                Instance {
                    position, rotation, scaling
                }
            })
        }).collect::<Vec<_>>();

        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        let depth_pass = DepthPass::new(&device, &config);
        
        
        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipelines,
            pipeline_index: 0,
            vertex_buffer,
            num_vertices,
            index_buffer,
            num_indices,

            texture_bind_group_layout,
            diffuse_bind_group,
            diffuse_texture, // NEW
            depth_texture,
            
            
            camera,
            camera_controller,

            camera_uniform,
            camera_buffer,
            camera_bind_group,

            instances,
            instance_buffer,

            depth_pass,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
//            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.depth_pass.resize(&self.device, &self.config);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        self.camera_controller.process_events(event)
        // match event {
        //     WindowEvent::KeyboardInput {
        //         event: KeyEvent {
        //             state: ElementState::Pressed,
        //             physical_key: PhysicalKey::Code(KeyCode::Space),
        //             ..
        //         },
        //         ..
        //     } => {
        //         self.instances.iter_mut().for_each(|instance|
        //                                            instance.rotation =
        //                                            cgmath::Quaternion::from_axis_angle(cgmath::Vector3::unit_y(), cgmath::Deg(10.0))
        //                                            * instance.rotation);
        //         true
        //     },
        //     _ => false
        // }
    }

    fn update(&mut self) {
        self.camera_controller.update_camera(&mut self.camera);
        self.camera_uniform.update_view_proj(&self.camera);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        let instance_data = self.instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        self.queue.write_buffer(&self.instance_buffer, 0, bytemuck::cast_slice(&instance_data));

        
    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_pass.texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_pipeline(&self.render_pipelines[0]); // 2.
        
        render_pass.set_bind_group(0, &self.diffuse_bind_group, &[]); // NEW!
        render_pass.set_bind_group(1, &self.camera_bind_group, &[]);
        
        render_pass.set_vertex_buffer(0, self.vertex_buffer.slice(..));
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        render_pass.set_index_buffer(self.index_buffer.slice(..), wgpu::IndexFormat::Uint16); // 1.

        render_pass.draw_indexed(0..self.num_indices, 0, 0..self.instances.len() as _);

        drop(render_pass);

        self.depth_pass.render(&view, &mut encoder);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    state.update();
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },
            Event::AboutToWait => state.window.request_redraw(),
            _ => {}," 1285 1286 (syntax-table (1)) 3079 3080 (syntax-table (1)) 3202 3203 (syntax-table (1)) 14501 14502 (syntax-table (1)) 14635 14636 (syntax-table (1)) 14658 14659 (syntax-table (1)) 15121 15122 (syntax-table (1)) 15289 15297 (fontified t) 15297 15312 (fontified t face font-lock-comment-delimiter-face) 15312 15324 (fontified t face font-lock-comment-face) 15324 15342 (face font-lock-comment-face fontified t) 15342 15350 (fontified t) 15350 15365 (face font-lock-comment-delimiter-face fontified t) 15365 15414 (face font-lock-comment-face fontified t) 15414 15422 (fontified t) 15422 15437 (face font-lock-comment-delimiter-face fontified t) 15437 15440 (face font-lock-comment-face fontified t) 15440 15448 (fontified t) 15448 15459 (face font-lock-comment-delimiter-face fontified t) 15459 15462 (face font-lock-comment-face fontified t) 15462 15470 (fontified t) 15470 15481 (face font-lock-comment-delimiter-face fontified t) 15481 15484 (face font-lock-comment-face fontified t) 15484 15492 (fontified t) 15492 15499 (face font-lock-comment-delimiter-face fontified t) 15499 15502 (face font-lock-comment-face fontified t) 15502 15503 (face font-lock-comment-face syntax-table (1) fontified t) 15503 15506 (face font-lock-comment-face fontified t) 15506 15514 (fontified t) 15514 15525 (face font-lock-comment-delimiter-face fontified t) 15525 15571 (face font-lock-comment-face fontified t) 15571 15579 (fontified t) 15579 15625 (face font-lock-comment-delimiter-face fontified t) 15625 15645 (face font-lock-comment-face fontified t) 15645 15653 (fontified t) 15653 15699 (face font-lock-comment-delimiter-face fontified t) 15699 15781 (face font-lock-comment-face fontified t) 15781 15789 (fontified t) 15789 15835 (face font-lock-comment-delimiter-face fontified t) 15835 15857 (face font-lock-comment-face fontified t) 15857 15865 (fontified t) 15865 15876 (face font-lock-comment-delimiter-face fontified t) 15876 15881 (face font-lock-comment-face fontified t) 15881 15889 (fontified t) 15889 15896 (face font-lock-comment-delimiter-face fontified t) 15896 15899 (face font-lock-comment-face fontified t) 15899 15907 (fontified t) 15907 15914 (face font-lock-comment-delimiter-face fontified t) 15914 15917 (face font-lock-comment-face fontified t) 15917 15918 (face font-lock-comment-face syntax-table (1) fontified t) 15918 15925 (face font-lock-comment-face fontified t) 15925 15933 (fontified t) 15933 15936 (face font-lock-comment-delimiter-face fontified t) 15936 15938 (face font-lock-comment-face fontified t) 15938 15942 (fontified t) 15942 15943 (face (rainbow-delimiters-depth-2-face) fontified t) 15943 15949 (fontified t) 15949 15951 (face font-lock-keyword-face fontified t) 15951 15952 (fontified t) 15952 15958 (face font-lock-function-name-face fontified t) 15958 15959 (face (rainbow-delimiters-depth-2-face) fontified t) 15959 15960 (face rust-ampersand-face fontified t) 15960 15963 (face font-lock-keyword-face fontified t) 15963 15964 (fontified t) 15964 15968 (face font-lock-keyword-face fontified t) 15968 15969 (face (rainbow-delimiters-depth-2-face) fontified t) 15969 15970 (fontified t) 15970 15971 (face (rainbow-delimiters-depth-2-face) fontified t) 15971 15980 (fontified t) 15980 15984 (face font-lock-keyword-face fontified t) 15984 16016 (fontified t) 16016 16017 (face (rainbow-delimiters-depth-3-face) fontified t) 16017 16018 (face rust-ampersand-face fontified t) 16018 16021 (face font-lock-keyword-face fontified t) 16021 16022 (fontified t) 16022 16026 (face font-lock-keyword-face fontified t) 16026 16033 (fontified t) 16033 16034 (face (rainbow-delimiters-depth-3-face) fontified t) 16034 16044 (fontified t) 16044 16048 (face font-lock-keyword-face fontified t) 16048 16080 (fontified t) 16080 16081 (face (rainbow-delimiters-depth-3-face) fontified t) 16081 16082 (face rust-ampersand-face fontified t) 16082 16086 (face font-lock-keyword-face fontified t) 16086 16093 (fontified t) 16093 16094 (face (rainbow-delimiters-depth-3-face) fontified t) 16094 16104 (fontified t) 16104 16108 (face font-lock-keyword-face fontified t) 16108 16127 (fontified t) 16127 16128 (face (rainbow-delimiters-depth-3-face) fontified t) 16128 16129 (face rust-ampersand-face fontified t) 16129 16133 (face font-lock-keyword-face fontified t) 16133 16152 (fontified t) 16152 16160 (face font-lock-constant-face fontified t) 16160 16172 (fontified t) 16172 16173 (face (rainbow-delimiters-depth-4-face) fontified t) 16173 16174 (face rust-ampersand-face fontified t) 16174 16175 (face (rainbow-delimiters-depth-5-face) fontified t) 16175 16179 (face font-lock-keyword-face fontified t) 16179 16194 (fontified t) 16194 16195 (face (rainbow-delimiters-depth-5-face) fontified t) 16195 16196 (face (rainbow-delimiters-depth-4-face) fontified t) 16196 16197 (face (rainbow-delimiters-depth-3-face) fontified t) 16197 16208 (fontified t) 16208 16211 (face font-lock-keyword-face fontified t) 16211 16212 (fontified t) 16212 16225 (face font-lock-variable-name-face fontified t) 16225 16228 (fontified t) 16228 16232 (face font-lock-keyword-face fontified t) 16232 16247 (fontified t) 16247 16248 (face (rainbow-delimiters-depth-3-face) fontified t) 16248 16249 (face (rainbow-delimiters-depth-3-face) fontified t) 16249 16253 (fontified t) 16253 16254 (face (rainbow-delimiters-depth-3-face) fontified t) 16254 16262 (face font-lock-type-face fontified t) 16262 16270 (fontified t) 16270 16271 (face (rainbow-delimiters-depth-3-face) fontified t) 16271 16281 (fontified t) 16281 16282 (face (rainbow-delimiters-depth-3-face) fontified t) 16282 16285 (face font-lock-type-face fontified t) 16285 16286 (face (rainbow-delimiters-depth-4-face) fontified t) 16286 16287 (fontified t) 16287 16288 (face (rainbow-delimiters-depth-4-face) fontified t) 16288 16289 (face (rainbow-delimiters-depth-3-face) fontified t) 16289 16290 (face (rainbow-delimiters-depth-3-face) fontified t) 16290 16291 (face (rainbow-delimiters-depth-3-face) fontified t) 16291 16301 (fontified t) 16301 16305 (face font-lock-keyword-face fontified t) 16305 16324 (fontified t) 16324 16325 (face (rainbow-delimiters-depth-3-face) fontified t) 16325 16326 (face rust-ampersand-face fontified t) 16326 16330 (face font-lock-keyword-face fontified t) 16330 16351 (fontified t) 16351 16359 (face font-lock-constant-face fontified t) 16359 16371 (fontified t) 16371 16372 (face (rainbow-delimiters-depth-4-face) fontified t) 16372 16373 (face rust-ampersand-face fontified t) 16373 16386 (fontified t) 16386 16387 (face (rainbow-delimiters-depth-4-face) fontified t) 16387 16388 (face (rainbow-delimiters-depth-3-face) fontified t) 16388 16404 (fontified t) 16404 16405 (face (rainbow-delimiters-depth-2-face) fontified t) 16405 16411 (fontified t) 16411 16413 (face font-lock-keyword-face fontified t) 16413 16414 (fontified t) 16414 16420 (face font-lock-function-name-face fontified t) 16420 16421 (face (rainbow-delimiters-depth-2-face) fontified t) 16421 16422 (face rust-ampersand-face fontified t) 16422 16425 (face font-lock-keyword-face fontified t) 16425 16426 (fontified t) 16426 16430 (face font-lock-keyword-face fontified t) 16430 16432 (fontified t) 16432 16437 (face font-lock-variable-name-face fontified t) 16437 16439 (fontified t) 16439 16443 (face font-lock-constant-face fontified t) 16443 16445 (fontified t) 16445 16450 (face font-lock-type-face fontified t) 16450 16451 (face (rainbow-delimiters-depth-2-face) fontified t) 16451 16453 (fontified t) 16453 16454 (syntax-table (1) fontified t) 16454 16455 (fontified t) 16455 16461 (face font-lock-type-face fontified t) 16461 16462 (face (rainbow-delimiters-depth-2-face) fontified t) 16462 16463 (face (rainbow-delimiters-depth-3-face) fontified t) 16463 16464 (face (rainbow-delimiters-depth-3-face) fontified t) 16464 16466 (fontified t) 16466 16470 (face font-lock-constant-face fontified t) 16470 16472 (fontified t) 16472 16484 (face font-lock-type-face fontified t) 16484 16485 (face (rainbow-delimiters-depth-2-face) fontified t) 16485 16486 (fontified t) 16486 16487 (face (rainbow-delimiters-depth-2-face) fontified t) 16487 16496 (fontified t) 16496 16499 (face font-lock-keyword-face fontified t) 16499 16500 (fontified t) 16500 16506 (face font-lock-variable-name-face fontified t) 16506 16509 (fontified t) 16509 16513 (face font-lock-keyword-face fontified t) 16513 16541 (fontified t) 16541 16542 (face (rainbow-delimiters-depth-3-face) fontified t) 16542 16543 (face (rainbow-delimiters-depth-3-face) fontified t) 16543 16544 (face rust-question-mark fontified t) 16544 16554 (fontified t) 16554 16557 (face font-lock-keyword-face fontified t) 16557 16558 (fontified t) 16558 16562 (face font-lock-variable-name-face fontified t) 16562 16591 (fontified t) 16591 16592 (face (rainbow-delimiters-depth-3-face) fontified t) 16592 16593 (face rust-ampersand-face fontified t) 16593 16597 (face font-lock-constant-face fontified t) 16597 16599 (fontified t) 16599 16620 (face font-lock-type-face fontified t) 16620 16629 (fontified t) 16629 16630 (face (rainbow-delimiters-depth-4-face) fontified t) 16630 16631 (face (rainbow-delimiters-depth-4-face) fontified t) 16631 16632 (face (rainbow-delimiters-depth-3-face) fontified t) 16632 16642 (fontified t) 16642 16645 (face font-lock-keyword-face fontified t) 16645 16646 (fontified t) 16646 16649 (face font-lock-keyword-face fontified t) 16649 16650 (fontified t) 16650 16657 (face font-lock-variable-name-face fontified t) 16657 16660 (fontified t) 16660 16664 (face font-lock-keyword-face fontified t) 16664 16694 (fontified t) 16694 16695 (face (rainbow-delimiters-depth-3-face) fontified t) 16695 16696 (face rust-ampersand-face fontified t) 16696 16700 (face font-lock-constant-face fontified t) 16700 16702 (fontified t) 16702 16726 (face font-lock-type-face fontified t) 16726 16727 (fontified t) 16727 16728 (face (rainbow-delimiters-depth-4-face) fontified t) 16728 16741 (fontified t) 16741 16746 (face font-lock-variable-name-face fontified t) 16746 16748 (fontified t) 16748 16752 (face font-lock-type-face fontified t) 16752 16753 (face (rainbow-delimiters-depth-5-face) fontified t) 16753 16769 (face font-lock-string-face fontified t) 16769 16770 (face (rainbow-delimiters-depth-5-face) fontified t) 16770 16780 (fontified t) 16780 16781 (face (rainbow-delimiters-depth-4-face) fontified t) 16781 16782 (face (rainbow-delimiters-depth-3-face) fontified t) 16782 16801 (fontified t) 16801 16804 (face font-lock-keyword-face fontified t) 16804 16805 (fontified t) 16805 16808 (face font-lock-keyword-face fontified t) 16808 16809 (fontified t) 16809 16820 (face font-lock-variable-name-face fontified t) 16820 16824 (fontified t) 16824 16848 (fontified t) 16848 16849 (fontified t face (rainbow-delimiters-depth-3-face)) 16849 16850 (fontified t face rust-ampersand-face) 16850 16854 (fontified t face font-lock-constant-face) 16854 16856 (fontified t) 16856 16876 (fontified t face font-lock-type-face) 16876 16877 (fontified t) 16877 16878 (fontified t face (rainbow-delimiters-depth-4-face)) 16878 16879 (fontified t) 16879 16891 (fontified t) 16891 16896 (face font-lock-variable-name-face fontified t) 16896 16898 (fontified t) 16898 16902 (face font-lock-type-face fontified t) 16902 16903 (face (rainbow-delimiters-depth-5-face) fontified t) 16903 16916 (face font-lock-string-face fontified t) 16916 16917 (face (rainbow-delimiters-depth-5-face) fontified t) 16917 16931 (fontified t) 16931 16948 (face font-lock-variable-name-face fontified t) 16948 16950 (fontified t) 16950 16951 (face rust-ampersand-face fontified t) 16951 16952 (face (rainbow-delimiters-depth-5-face) fontified t) 16952 16956 (face font-lock-type-face fontified t) 16956 16957 (face (rainbow-delimiters-depth-6-face) fontified t) 16957 16961 (face font-lock-constant-face fontified t) 16961 16963 (fontified t) 16963 16988 (face font-lock-type-face fontified t) 16988 16989 (fontified t) 16989 16990 (face (rainbow-delimiters-depth-7-face) fontified t) 16990 17007 (fontified t) 17007 17011 (face font-lock-variable-name-face fontified t) 17011 17013 (fontified t) 17013 17014 (face rust-ampersand-face fontified t) 17014 17036 (fontified t) 17036 17050 (face font-lock-variable-name-face fontified t) 17050 17052 (fontified t) 17052 17056 (face font-lock-type-face fontified t) 17056 17074 (fontified t) 17074 17077 (face font-lock-variable-name-face fontified t) 17077 17079 (fontified t) 17079 17083 (face font-lock-constant-face fontified t) 17083 17085 (fontified t) 17085 17095 (face font-lock-type-face fontified t) 17095 17096 (fontified t) 17096 17097 (face (rainbow-delimiters-depth-8-face) fontified t) 17097 17118 (fontified t) 17118 17122 (face font-lock-variable-name-face fontified t) 17122 17124 (fontified t) 17124 17128 (face font-lock-constant-face fontified t) 17128 17130 (fontified t) 17130 17136 (face font-lock-type-face fontified t) 17136 17138 (fontified t) 17138 17143 (face font-lock-type-face fontified t) 17143 17144 (face (rainbow-delimiters-depth-9-face) fontified t) 17144 17149 (fontified t) 17149 17150 (face (rainbow-delimiters-depth-9-face) fontified t) 17150 17172 (fontified t) 17172 17177 (face font-lock-variable-name-face fontified t) 17177 17179 (fontified t) 17179 17183 (face font-lock-constant-face fontified t) 17183 17185 (fontified t) 17185 17192 (face font-lock-type-face fontified t) 17192 17194 (fontified t) 17194 17199 (face font-lock-type-face fontified t) 17199 17217 (fontified t) 17217 17218 (face (rainbow-delimiters-depth-8-face) fontified t) 17218 17232 (fontified t) 17232 17233 (face (rainbow-delimiters-depth-7-face) fontified t) 17233 17234 (face (rainbow-delimiters-depth-6-face) fontified t) 17234 17235 (face (rainbow-delimiters-depth-5-face) fontified t) 17235 17249 (fontified t) 17249 17273 (face font-lock-variable-name-face fontified t) 17273 17275 (fontified t) 17275 17279 (face font-lock-type-face fontified t) 17279 17280 (face (rainbow-delimiters-depth-5-face) fontified t) 17280 17284 (face font-lock-constant-face fontified t) 17284 17286 (fontified t) 17286 17318 (face font-lock-type-face fontified t) 17318 17319 (fontified t) 17319 17320 (face (rainbow-delimiters-depth-6-face) fontified t) 17320 17337 (fontified t) 17337 17341 (face font-lock-variable-name-face fontified t) 17341 17343 (fontified t) 17343 17344 (face rust-ampersand-face fontified t) 17344 17348 (face font-lock-keyword-face fontified t) 17348 17390 (fontified t) 17390 17399 (face font-lock-variable-name-face fontified t) 17399 17401 (fontified t) 17401 17405 (face font-lock-type-face fontified t) 17405 17406 (face (rainbow-delimiters-depth-7-face) fontified t) 17406 17410 (face font-lock-constant-face fontified t) 17410 17412 (fontified t) 17412 17422 (face font-lock-type-face fontified t) 17422 17423 (fontified t) 17423 17424 (face (rainbow-delimiters-depth-8-face) fontified t) 17424 17445 (fontified t) 17445 17449 (face font-lock-variable-name-face fontified t) 17449 17451 (fontified t) 17451 17455 (face font-lock-constant-face fontified t) 17455 17457 (fontified t) 17457 17463 (face font-lock-type-face fontified t) 17463 17465 (fontified t) 17465 17470 (face font-lock-type-face fontified t) 17470 17471 (face (rainbow-delimiters-depth-9-face) fontified t) 17471 17474 (fontified t) 17474 17475 (face (rainbow-delimiters-depth-9-face) fontified t) 17475 17497 (fontified t) 17497 17502 (face font-lock-variable-name-face fontified t) 17502 17504 (fontified t) 17504 17508 (face font-lock-constant-face fontified t) 17508 17510 (fontified t) 17510 17517 (face font-lock-type-face fontified t) 17517 17519 (fontified t) 17519 17524 (face font-lock-type-face fontified t) 17524 17542 (fontified t) 17542 17543 (face (rainbow-delimiters-depth-8-face) fontified t) 17543 17544 (face (rainbow-delimiters-depth-7-face) fontified t) 17544 17562 (fontified t) 17562 17573 (face font-lock-variable-name-face fontified t) 17573 17575 (fontified t) 17575 17579 (face font-lock-type-face fontified t) 17579 17593 (fontified t) 17593 17594 (face (rainbow-delimiters-depth-6-face) fontified t) 17594 17595 (face (rainbow-delimiters-depth-5-face) fontified t) 17595 17609 (fontified t) 17609 17628 (face font-lock-variable-name-face fontified t) 17628 17630 (fontified t) 17630 17634 (face font-lock-type-face fontified t) 17634 17648 (fontified t) 17648 17664 (face font-lock-variable-name-face fontified t) 17664 17666 (fontified t) 17666 17670 (face font-lock-type-face fontified t) 17670 17680 (fontified t) 17680 17681 (face (rainbow-delimiters-depth-4-face) fontified t) 17681 17682 (face (rainbow-delimiters-depth-3-face) fontified t) 17682 17692 (fontified t) 17692 17695 (face font-lock-comment-delimiter-face fontified t) 17695 17700 (face font-lock-comment-face fontified t) 17700 17732 (fontified t) 17732 17733 (face (rainbow-delimiters-depth-3-face) fontified t) 17733 17734 (face rust-ampersand-face fontified t) 17734 17738 (face font-lock-keyword-face fontified t) 17738 17755 (fontified t) 17755 17756 (face (rainbow-delimiters-depth-4-face) fontified t) 17756 17757 (fontified t) 17757 17758 (face (rainbow-delimiters-depth-4-face) fontified t) 17758 17759 (face (rainbow-delimiters-depth-3-face) fontified t) 17759 17761 (fontified t) 17761 17764 (face font-lock-comment-delimiter-face fontified t) 17764 17767 (face font-lock-comment-face fontified t) 17767 17810 (fontified t) 17810 17811 (face (rainbow-delimiters-depth-3-face) fontified t) 17811 17814 (fontified t) 17814 17815 (face rust-ampersand-face fontified t) 17815 17819 (face font-lock-keyword-face fontified t) 17819 17840 (fontified t) 17840 17841 (face rust-ampersand-face fontified t) 17841 17842 (face (rainbow-delimiters-depth-4-face) fontified t) 17842 17843 (face (rainbow-delimiters-depth-4-face) fontified t) 17843 17844 (face (rainbow-delimiters-depth-3-face) fontified t) 17844 17846 (fontified t) 17846 17849 (face font-lock-comment-delimiter-face fontified t) 17849 17854 (face font-lock-comment-face fontified t) 17854 17888 (fontified t) 17888 17889 (face (rainbow-delimiters-depth-3-face) fontified t) 17889 17892 (fontified t) 17892 17893 (face rust-ampersand-face fontified t) 17893 17897 (face font-lock-keyword-face fontified t) 17897 17917 (fontified t) 17917 17918 (face rust-ampersand-face fontified t) 17918 17919 (face (rainbow-delimiters-depth-4-face) fontified t) 17919 17920 (face (rainbow-delimiters-depth-4-face) fontified t) 17920 17921 (face (rainbow-delimiters-depth-3-face) fontified t) 17921 17969 (fontified t) 17969 17970 (face (rainbow-delimiters-depth-3-face) fontified t) 17970 17973 (fontified t) 17973 17977 (face font-lock-keyword-face fontified t) 17977 17997 (fontified t) 17997 17998 (face (rainbow-delimiters-depth-4-face) fontified t) 17998 18000 (fontified t) 18000 18001 (face (rainbow-delimiters-depth-4-face) fontified t) 18001 18002 (face (rainbow-delimiters-depth-3-face) fontified t) 18002 18041 (fontified t) 18041 18042 (face (rainbow-delimiters-depth-3-face) fontified t) 18042 18045 (fontified t) 18045 18049 (face font-lock-keyword-face fontified t) 18049 18071 (fontified t) 18071 18072 (face (rainbow-delimiters-depth-4-face) fontified t) 18072 18074 (fontified t) 18074 18075 (face (rainbow-delimiters-depth-4-face) fontified t) 18075 18076 (face (rainbow-delimiters-depth-3-face) fontified t) 18076 18115 (fontified t) 18115 18116 (face (rainbow-delimiters-depth-3-face) fontified t) 18116 18120 (face font-lock-keyword-face fontified t) 18120 18139 (fontified t) 18139 18140 (face (rainbow-delimiters-depth-4-face) fontified t) 18140 18142 (fontified t) 18142 18143 (face (rainbow-delimiters-depth-4-face) fontified t) 18143 18145 (fontified t) 18145 18149 (face font-lock-constant-face fontified t) 18149 18151 (fontified t) 18151 18162 (face font-lock-type-face fontified t) 18162 18164 (fontified t) 18164 18170 (face font-lock-type-face fontified t) 18170 18171 (face (rainbow-delimiters-depth-3-face) fontified t) 18171 18173 (fontified t) 18173 18176 (face font-lock-comment-delimiter-face fontified t) 18176 18179 (face font-lock-comment-face fontified t) 18179 18212 (fontified t) 18212 18213 (face (rainbow-delimiters-depth-3-face) fontified t) 18213 18216 (fontified t) 18216 18220 (face font-lock-keyword-face fontified t) 18220 18240 (fontified t) 18240 18244 (face font-lock-keyword-face fontified t) 18244 18258 (fontified t) 18258 18259 (face (rainbow-delimiters-depth-4-face) fontified t) 18259 18260 (face (rainbow-delimiters-depth-4-face) fontified t) 18260 18261 (fontified t) 18261 18263 (face font-lock-keyword-face fontified t) 18263 18265 (fontified t) 18265 18266 (face (rainbow-delimiters-depth-3-face) fontified t) 18266 18281 (fontified t) 18281 18282 (face (rainbow-delimiters-depth-3-face) fontified t) 18282 18293 (fontified t) 18293 18294 (face (rainbow-delimiters-depth-3-face) fontified t) 18294 18305 (fontified t) 18305 18309 (face font-lock-keyword-face fontified t) 18309 18327 (fontified t) 18327 18328 (face (rainbow-delimiters-depth-3-face) fontified t) 18328 18329 (face rust-ampersand-face fontified t) 18329 18335 (fontified t) 18335 18336 (face rust-ampersand-face fontified t) 18336 18339 (face font-lock-keyword-face fontified t) 18339 18347 (fontified t) 18347 18348 (face (rainbow-delimiters-depth-3-face) fontified t) 18348 18360 (fontified t) 18360 18363 (face font-lock-comment-delimiter-face fontified t) 18363 18379 (face font-lock-comment-face fontified t) 18379 18416 (fontified t face font-lock-comment-face) 18416 18424 (fontified t) 18424 18428 (face font-lock-keyword-face fontified t) 18428 18441 (fontified t) 18441 18442 (face (rainbow-delimiters-depth-3-face) fontified t) 18442 18445 (face font-lock-constant-face fontified t) 18445 18447 (fontified t) 18447 18451 (face font-lock-constant-face fontified t) 18451 18457 (fontified t) 18457 18458 (face (rainbow-delimiters-depth-4-face) fontified t) 18458 18472 (fontified t) 18472 18473 (face (rainbow-delimiters-depth-5-face) fontified t) 18473 18474 (face (rainbow-delimiters-depth-5-face) fontified t) 18474 18475 (face (rainbow-delimiters-depth-4-face) fontified t) 18475 18476 (face (rainbow-delimiters-depth-3-face) fontified t) 18476 18500 (fontified t) 18500 18501 (face (rainbow-delimiters-depth-3-face) fontified t) 18501 18502 (face (rainbow-delimiters-depth-3-face) fontified t) 18502 18513 (fontified t) 18513 18515 (face font-lock-type-face fontified t) 18515 18516 (face (rainbow-delimiters-depth-3-face) fontified t) 18516 18517 (face (rainbow-delimiters-depth-4-face) fontified t) 18517 18518 (face (rainbow-delimiters-depth-4-face) fontified t) 18518 18519 (face (rainbow-delimiters-depth-3-face) fontified t) 18519 18525 (fontified t) 18525 18526 (face (rainbow-delimiters-depth-2-face) fontified t) 18526 18527 (fontified t) 18527 18528 (face (rainbow-delimiters-depth-1-face) fontified t) 18528 18531 (fontified t) 18531 18534 (face font-lock-keyword-face fontified t) 18534 18535 (fontified t) 18535 18540 (face font-lock-keyword-face fontified t) 18540 18541 (fontified t) 18541 18543 (face font-lock-keyword-face fontified t) 18543 18544 (fontified t) 18544 18547 (face font-lock-function-name-face fontified t) 18547 18548 (face (rainbow-delimiters-depth-1-face) fontified t) 18548 18549 (face (rainbow-delimiters-depth-1-face) fontified t) 18549 18550 (fontified t) 18550 18551 (face (rainbow-delimiters-depth-1-face) fontified t) 18551 18561 (fontified t) 18561 18564 (face font-lock-keyword-face fontified t) 18564 18565 (fontified t) 18565 18575 (face font-lock-variable-name-face fontified t) 18575 18578 (fontified t) 18578 18587 (face font-lock-type-face fontified t) 18587 18592 (fontified t) 18592 18593 (face (rainbow-delimiters-depth-2-face) fontified t) 18593 18594 (face (rainbow-delimiters-depth-2-face) fontified t) 18594 18601 (fontified t) 18601 18602 (face (rainbow-delimiters-depth-2-face) fontified t) 18602 18603 (face (rainbow-delimiters-depth-2-face) fontified t) 18603 18609 (fontified t) 18609 18612 (face font-lock-keyword-face fontified t) 18612 18613 (fontified t) 18613 18619 (face font-lock-variable-name-face fontified t) 18619 18622 (fontified t) 18622 18635 (face font-lock-type-face fontified t) 18635 18640 (fontified t) 18640 18641 (face (rainbow-delimiters-depth-2-face) fontified t) 18641 18642 (face (rainbow-delimiters-depth-2-face) fontified t) 18642 18648 (fontified t) 18648 18649 (face (rainbow-delimiters-depth-2-face) fontified t) 18649 18650 (face rust-ampersand-face fontified t) 18650 18660 (fontified t) 18660 18661 (face (rainbow-delimiters-depth-2-face) fontified t) 18661 18668 (fontified t) 18668 18669 (face (rainbow-delimiters-depth-2-face) fontified t) 18669 18670 (face (rainbow-delimiters-depth-2-face) fontified t) 18670 18677 (fontified t) 18677 18680 (face font-lock-comment-delimiter-face fontified t) 18680 18754 (face font-lock-comment-face fontified t) 18754 18758 (fontified t) 18758 18761 (face font-lock-comment-delimiter-face fontified t) 18761 18834 (face font-lock-comment-face fontified t) 18834 18865 (fontified t) 18865 18866 (face (rainbow-delimiters-depth-2-face) fontified t) 18866 18877 (face font-lock-type-face fontified t) 18877 18879 (fontified t) 18879 18883 (face font-lock-type-face fontified t) 18883 18884 (face (rainbow-delimiters-depth-2-face) fontified t) 18884 18891 (fontified t) 18891 18894 (face font-lock-keyword-face fontified t) 18894 18895 (fontified t) 18895 18898 (face font-lock-keyword-face fontified t) 18898 18899 (fontified t) 18899 18904 (face font-lock-variable-name-face fontified t) 18904 18907 (fontified t) 18907 18912 (face font-lock-type-face fontified t) 18912 18917 (fontified t) 18917 18918 (face (rainbow-delimiters-depth-2-face) fontified t) 18918 18924 (fontified t) 18924 18925 (face (rainbow-delimiters-depth-2-face) fontified t) 18925 18926 (fontified t) 18926 18931 (face font-lock-keyword-face fontified t) 18931 18939 (fontified t) 18939 18942 (face font-lock-comment-delimiter-face fontified t) 18942 18948 (face font-lock-comment-face fontified t) 18948 18966 (fontified t) 18966 18967 (face (rainbow-delimiters-depth-2-face) fontified t) 18967 18971 (face font-lock-keyword-face fontified t) 18971 18986 (fontified t) 18986 18987 (face (rainbow-delimiters-depth-3-face) fontified t) 18987 18996 (fontified t) 18996 19001 (face font-lock-keyword-face fontified t) 19001 19008 (fontified t) 19008 19009 (face (rainbow-delimiters-depth-4-face) fontified t) 19009 19022 (fontified t) 19022 19027 (face font-lock-type-face fontified t) 19027 19029 (fontified t) 19029 19040 (face font-lock-type-face fontified t) 19040 19041 (fontified t) 19041 19042 (face (rainbow-delimiters-depth-5-face) fontified t) 19042 19059 (fontified t) 19059 19062 (face font-lock-keyword-face fontified t) 19062 19063 (fontified t) 19063 19068 (face font-lock-variable-name-face fontified t) 19068 19109 (fontified t) 19109 19110 (face (rainbow-delimiters-depth-5-face) fontified t) 19110 19111 (fontified t) 19111 19113 (face font-lock-keyword-face fontified t) 19113 19139 (fontified t) 19139 19140 (face (rainbow-delimiters-depth-5-face) fontified t) 19140 19141 (face (rainbow-delimiters-depth-5-face) fontified t) 19141 19144 (fontified t) 19144 19145 (face (rainbow-delimiters-depth-5-face) fontified t) 19145 19146 (face (rainbow-delimiters-depth-5-face) fontified t) 19146 19148 (fontified t) 19148 19149 (syntax-table (1) fontified t) 19149 19150 (fontified t) 19150 19151 (face (rainbow-delimiters-depth-5-face) fontified t) 19151 19168 (fontified t) 19168 19170 (face font-lock-keyword-face fontified t) 19170 19183 (fontified t) 19183 19184 (face (rainbow-delimiters-depth-6-face) fontified t) 19184 19189 (fontified t) 19189 19190 (face (rainbow-delimiters-depth-6-face) fontified t) 19190 19191 (fontified t) 19191 19192 (face (rainbow-delimiters-depth-6-face) fontified t) 19192 19193 (fontified t) 19193 19196 (face font-lock-comment-delimiter-face fontified t) 19196 19205 (face font-lock-comment-face fontified t) 19205 19225 (fontified t) 19225 19230 (face font-lock-keyword-face fontified t) 19230 19237 (fontified t) 19237 19238 (face (rainbow-delimiters-depth-7-face) fontified t) 19238 19263 (fontified t) 19263 19274 (face font-lock-type-face fontified t) 19274 19276 (fontified t) 19276 19290 (face font-lock-type-face fontified t) 19290 19321 (fontified t) 19321 19332 (face font-lock-type-face fontified t) 19332 19334 (fontified t) 19334 19347 (face font-lock-type-face fontified t) 19347 19348 (fontified t) 19348 19349 (face (rainbow-delimiters-depth-8-face) fontified t) 19349 19382 (fontified t) 19382 19387 (face font-lock-variable-name-face fontified t) 19387 19421 (fontified t) 19421 19429 (face font-lock-type-face fontified t) 19429 19430 (fontified t) 19430 19431 (face (rainbow-delimiters-depth-9-face) fontified t) 19431 19468 (fontified t) 19468 19473 (face font-lock-variable-name-face fontified t) 19473 19475 (fontified t) 19475 19487 (face font-lock-type-face fontified t) 19487 19489 (fontified t) 19489 19496 (face font-lock-type-face fontified t) 19496 19534 (fontified t) 19534 19546 (face font-lock-variable-name-face fontified t) 19546 19548 (fontified t) 19548 19559 (face font-lock-type-face fontified t) 19559 19561 (fontified t) 19561 19565 (face font-lock-type-face fontified t) 19565 19566 (face (rainbow-delimiters-depth-1-face) fontified t) 19566 19573 (face font-lock-type-face fontified t) 19573 19575 (fontified t) 19575 19581 (face font-lock-type-face fontified t) 19581 19582 (face (rainbow-delimiters-depth-1-face) fontified t) 19582 19655 (fontified t) 19655 19656 (face (rainbow-delimiters-depth-9-face) fontified t) 19656 19721 (fontified t) 19721 19722 (face (rainbow-delimiters-depth-8-face) fontified t) 19722 19724 (fontified t) 19724 19725 (syntax-table (1) fontified t) 19725 19735 (fontified t) 19735 19736 (face (rainbow-delimiters-depth-8-face) fontified t) 19736 19737 (face (rainbow-delimiters-depth-8-face) fontified t) 19737 19763 (fontified t) 19763 19774 (face font-lock-type-face fontified t) 19774 19776 (fontified t) 19776 19783 (face font-lock-type-face fontified t) 19783 19784 (face (rainbow-delimiters-depth-8-face) fontified t) 19784 19797 (fontified t) 19797 19798 (face (rainbow-delimiters-depth-8-face) fontified t) 19798 19800 (fontified t) 19800 19801 (syntax-table (1) fontified t) 19801 19802 (fontified t) 19802 19803 (face (rainbow-delimiters-depth-8-face) fontified t) 19803 19844 (fontified t) 19844 19845 (face (rainbow-delimiters-depth-9-face) fontified t) 19845 19859 (fontified t) 19859 19860 (face (rainbow-delimiters-depth-9-face) fontified t) 19860 19916 (fontified t) 19916 19917 (fontified t) 19917 19918 (fontified t face (rainbow-delimiters-depth-9-face)) 19918 19919 (fontified t face (rainbow-delimiters-depth-9-face)) 19919 19921 (fontified t) 19921 19945 (fontified t) 19945 19946 (face (rainbow-delimiters-depth-8-face) fontified t) 19946 19975 (fontified t) 19975 19976 (fontified t syntax-table (1)) 19976 19977 (fontified t) 19977 19978 (face (rainbow-delimiters-depth-8-face) fontified t) 19978 19979 (face (rainbow-delimiters-depth-8-face) fontified t) 19979 20000 (fontified t) 20000 20001 (face (rainbow-delimiters-depth-7-face) fontified t) 20001 20018 (fontified t) 20018 20019 (face (rainbow-delimiters-depth-6-face) fontified t) 20019 20020 (fontified t) 20020 20024 (face font-lock-keyword-face fontified t) 20024 20025 (fontified t) 20025 20026 (face (rainbow-delimiters-depth-6-face) fontified t) 20026 20074 (fontified t) 20074 20075 (face (rainbow-delimiters-depth-7-face) fontified t) 20075 20076 (face (rainbow-delimiters-depth-7-face) fontified t) 20076 20094 (fontified t) 20094 20095 (face (rainbow-delimiters-depth-6-face) fontified t) 20095 20113 (fontified t) 20113 20115 (face font-lock-keyword-face fontified t) 20115 20126 (fontified t) 20126 20137 (face font-lock-type-face fontified t) 20137 20139 (fontified t) 20139 20154 (face font-lock-type-face fontified t) 20154 20155 (fontified t) 20155 20156 (face (rainbow-delimiters-depth-6-face) fontified t) 20156 20189 (fontified t) 20189 20190 (face (rainbow-delimiters-depth-7-face) fontified t) 20190 20191 (face (rainbow-delimiters-depth-7-face) fontified t) 20191 20193 (fontified t) 20193 20213 (fontified t) 20213 20218 (face font-lock-keyword-face fontified t) 20218 20231 (fontified t) 20231 20232 (face (rainbow-delimiters-depth-7-face) fontified t) 20232 20236 (face font-lock-constant-face fontified t) 20236 20238 (fontified t) 20238 20243 (face font-lock-type-face fontified t) 20243 20245 (fontified t) 20245 20250 (face font-lock-type-face fontified t) 20250 20251 (face (rainbow-delimiters-depth-7-face) fontified t) 20251 20252 (fontified t) 20252 20253 (face (rainbow-delimiters-depth-7-face) fontified t) 20253 20271 (fontified t) 20271 20278 (fontified t) 20278 20280 (face font-lock-type-face fontified t) 20280 20281 (face (rainbow-delimiters-depth-8-face) fontified t) 20281 20282 (fontified t) 20282 20283 (face (rainbow-delimiters-depth-8-face) fontified t) 20283 20285 (fontified t) 20285 20286 (fontified t syntax-table (1)) 20286 20287 (fontified t) 20287 20288 (face (rainbow-delimiters-depth-8-face) fontified t) 20288 20289 (face (rainbow-delimiters-depth-8-face) fontified t) 20289 20290 (fontified t) 20290 20314 (fontified t) 20314 20317 (face font-lock-comment-delimiter-face fontified t) 20317 20349 (face font-lock-comment-face fontified t) 20349 20373 (fontified t) 20373 20376 (face font-lock-type-face fontified t) 20376 20377 (face (rainbow-delimiters-depth-8-face) fontified t) 20377 20381 (face font-lock-constant-face fontified t) 20381 20383 (fontified t) 20383 20395 (face font-lock-type-face fontified t) 20395 20397 (fontified t) 20397 20401 (face font-lock-type-face fontified t) 20401 20402 (face (rainbow-delimiters-depth-8-face) fontified t) 20402 20404 (fontified t) 20404 20405 (fontified t syntax-table (1)) 20405 20418 (fontified t) 20418 20419 (face (rainbow-delimiters-depth-8-face) fontified t) 20419 20429 (fontified t) 20429 20430 (face (rainbow-delimiters-depth-8-face) fontified t) 20430 20456 (fontified t) 20456 20459 (face font-lock-comment-delimiter-face fontified t) 20459 20512 (face font-lock-comment-face fontified t) 20512 20536 (fontified t) 20536 20539 (face font-lock-type-face fontified t) 20539 20540 (face (rainbow-delimiters-depth-8-face) fontified t) 20540 20544 (face font-lock-constant-face fontified t) 20544 20546 (fontified t) 20546 20558 (face font-lock-type-face fontified t) 20558 20560 (fontified t) 20560 20571 (face font-lock-type-face fontified t) 20571 20572 (face (rainbow-delimiters-depth-8-face) fontified t) 20572 20574 (fontified t) 20574 20575 (fontified t syntax-table (1)) 20575 20585 (fontified t) 20585 20586 (face (rainbow-delimiters-depth-8-face) fontified t) 20586 20587 (face (rainbow-delimiters-depth-8-face) fontified t) 20587 20613 (fontified t) 20613 20616 (face font-lock-comment-delimiter-face fontified t) 20616 20690 (face font-lock-comment-face fontified t) 20690 20714 (fontified t) 20714 20717 (face font-lock-type-face fontified t) 20717 20718 (face (rainbow-delimiters-depth-8-face) fontified t) 20718 20719 (fontified t) 20719 20720 (face (rainbow-delimiters-depth-8-face) fontified t) 20720 20722 (fontified t) 20722 20723 (fontified t syntax-table (1)) 20723 20724 (fontified t) 20724 20731 (face font-lock-constant-face fontified t) 20731 20733 (fontified t) 20733 20739 (face font-lock-preprocessor-face fontified t) 20739 20740 (face (rainbow-delimiters-depth-8-face) fontified t) 20740 20746 (face font-lock-string-face fontified t) 20746 20749 (fontified t) 20749 20750 (face (rainbow-delimiters-depth-8-face) fontified t) 20750 20772 (fontified t) 20772 20773 (face (rainbow-delimiters-depth-7-face) fontified t) 20773 20790 (fontified t) 20790 20791 (face (rainbow-delimiters-depth-6-face) fontified t) 20791 20804 (fontified t) 20804 20805 (face (rainbow-delimiters-depth-5-face) fontified t) 20805 20807 (fontified t) 20807 20819 (fontified t) 20819 20824 (face font-lock-type-face fontified t) 20824 20826 (fontified t) 20826 20837 (face font-lock-type-face fontified t) 20837 20839 (fontified t) 20839 20840 (syntax-table (1) fontified t) 20840 20841 (fontified t) 20841 20847 (fontified t) 20847 20854 (fontified t) 20854 20868 (fontified t) 20868 20869 (face (rainbow-delimiters-depth-5-face) fontified t) 20869 20870 (face (rainbow-delimiters-depth-5-face) fontified t) 20870 20871 (fontified t) 20871 20872 (fontified t) 20872 20887 (fontified t) 20887 20888 (syntax-table (1) fontified t) 20888 20889 (fontified t) 20889 20890 (face (rainbow-delimiters-depth-5-face) fontified t) 20890 20891 (face (rainbow-delimiters-depth-5-face) fontified t) 20891 20892 (fontified t)) . -61) (undo-tree-id272 . -18672) (undo-tree-id273 . -20892) (t 26018 21738 204616 161000)) nil (26018 23793 830165 0) 0 nil])
([nil nil ((#("        device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (face rust-ampersand-face fontified t) 41 45 (face font-lock-constant-face fontified t) 45 47 (fontified t) 47 72 (face font-lock-type-face fontified t) 72 73 (fontified t) 73 74 (face (rainbow-delimiters-depth-4-face) fontified t) 74 91 (fontified t) 91 98 (face font-lock-variable-name-face fontified t) 98 100 (fontified t) 100 101 (face rust-ampersand-face fontified t) 101 102 (face (rainbow-delimiters-depth-5-face) fontified t) 102 123 (fontified t) 123 127 (face font-lock-constant-face fontified t) 127 129 (fontified t) 129 149 (face font-lock-type-face fontified t) 149 150 (fontified t) 150 151 (face (rainbow-delimiters-depth-6-face) fontified t) 151 176 (fontified t) 176 183 (face font-lock-variable-name-face fontified t) 183 212 (fontified t) 212 222 (face font-lock-variable-name-face fontified t) 222 224 (fontified t) 224 228 (face font-lock-constant-face fontified t) 228 230 (fontified t) 230 242 (face font-lock-type-face fontified t) 242 244 (fontified t) 244 252 (face font-lock-type-face fontified t) 252 278 (fontified t) 278 280 (face font-lock-variable-name-face fontified t) 280 282 (fontified t) 282 286 (face font-lock-constant-face fontified t) 286 288 (fontified t) 288 299 (face font-lock-type-face fontified t) 299 301 (fontified t) 301 308 (face font-lock-type-face fontified t) 308 309 (fontified t) 309 310 (face (rainbow-delimiters-depth-7-face) fontified t) 310 339 (fontified t) 339 351 (face font-lock-variable-name-face fontified t) 351 353 (fontified t) 353 358 (face font-lock-keyword-face fontified t) 358 388 (fontified t) 388 402 (face font-lock-variable-name-face fontified t) 402 404 (fontified t) 404 408 (face font-lock-constant-face fontified t) 408 410 (fontified t) 410 430 (face font-lock-type-face fontified t) 430 432 (fontified t) 432 434 (face font-lock-type-face fontified t) 434 464 (fontified t) 464 475 (face font-lock-variable-name-face fontified t) 475 477 (fontified t) 477 481 (face font-lock-constant-face fontified t) 481 483 (fontified t) 483 500 (face font-lock-type-face fontified t) 500 502 (fontified t) 502 507 (face font-lock-type-face fontified t) 507 508 (fontified t) 508 509 (face (rainbow-delimiters-depth-8-face) fontified t) 509 510 (fontified t) 510 520 (face font-lock-variable-name-face fontified t) 520 522 (fontified t) 522 526 (face font-lock-keyword-face fontified t) 526 527 (fontified t) 527 528 (face (rainbow-delimiters-depth-8-face) fontified t) 528 554 (fontified t) 554 555 (face (rainbow-delimiters-depth-7-face) fontified t) 555 581 (fontified t) 581 586 (face font-lock-variable-name-face fontified t) 586 588 (fontified t) 588 592 (face font-lock-type-face fontified t) 592 614 (fontified t) 614 615 (face (rainbow-delimiters-depth-6-face) fontified t) 615 637 (fontified t) 637 641 (face font-lock-constant-face fontified t) 641 643 (fontified t) 643 663 (face font-lock-type-face fontified t) 663 664 (fontified t) 664 665 (face (rainbow-delimiters-depth-6-face) fontified t) 665 690 (fontified t) 690 697 (face font-lock-variable-name-face fontified t) 697 726 (fontified t) 726 736 (face font-lock-variable-name-face fontified t) 736 738 (fontified t) 738 742 (face font-lock-constant-face fontified t) 742 744 (fontified t) 744 756 (face font-lock-type-face fontified t) 756 758 (fontified t) 758 766 (face font-lock-type-face fontified t) 766 792 (fontified t) 792 795 (face font-lock-comment-delimiter-face fontified t) 795 841 (face font-lock-comment-face fontified t) 841 865 (fontified t) 865 868 (face font-lock-comment-delimiter-face fontified t) 868 903 (face font-lock-comment-face fontified t) 903 927 (fontified t) 927 929 (face font-lock-variable-name-face fontified t) 929 931 (fontified t) 931 935 (face font-lock-constant-face fontified t) 935 937 (fontified t) 937 948 (face font-lock-type-face fontified t) 948 950 (fontified t) 950 957 (face font-lock-type-face fontified t) 957 958 (face (rainbow-delimiters-depth-7-face) fontified t) 958 962 (face font-lock-constant-face fontified t) 962 964 (fontified t) 964 982 (face font-lock-type-face fontified t) 982 984 (fontified t) 984 993 (face font-lock-type-face fontified t) 993 994 (face (rainbow-delimiters-depth-7-face) fontified t) 994 1020 (fontified t) 1020 1025 (face font-lock-variable-name-face fontified t) 1025 1027 (fontified t) 1027 1031 (face font-lock-type-face fontified t) 1031 1053 (fontified t) 1053 1054 (face (rainbow-delimiters-depth-6-face) fontified t) 1054 1072 (fontified t) 1072 1073 (face (rainbow-delimiters-depth-5-face) fontified t) 1073 1091 (fontified t) 1091 1096 (face font-lock-variable-name-face fontified t) 1096 1098 (fontified t) 1098 1102 (face font-lock-type-face fontified t) 1102 1103 (face (rainbow-delimiters-depth-5-face) fontified t) 1103 1130 (face font-lock-string-face fontified t) 1130 1131 (face (rainbow-delimiters-depth-5-face) fontified t) 1131 1145 (fontified t) 1145 1146 (face (rainbow-delimiters-depth-4-face) fontified t) 1146 1147 (face (rainbow-delimiters-depth-3-face) fontified t) 1147 1148 (fontified t)) . 6314) (undo-tree-id231 . -1148) (undo-tree-id232 . -1148) (undo-tree-id233 . -1148) (undo-tree-id234 . -1148) (undo-tree-id235 . -1148) (undo-tree-id236 . -1148) (undo-tree-id237 . -1148) (undo-tree-id238 . -1096) (undo-tree-id239 . -686) (undo-tree-id240 . -636) (undo-tree-id241 . -575) (undo-tree-id242 . -547) (undo-tree-id243 . -376) (undo-tree-id244 . -269) (undo-tree-id245 . -202) (undo-tree-id246 . -165) (undo-tree-id247 . -114) (undo-tree-id248 . -85) (undo-tree-id249 . -84) (undo-tree-id250 . -4) (undo-tree-id251 . -3) (undo-tree-id252 . -2) (undo-tree-id253 . -1148) (undo-tree-id254 . -1148) (undo-tree-id255 . -1148) (undo-tree-id256 . -1148) (undo-tree-id257 . -1148) (undo-tree-id258 . -1148) (undo-tree-id259 . -1092) (undo-tree-id260 . -1009) (undo-tree-id261 . -777) (undo-tree-id262 . -598) (undo-tree-id263 . -532) (undo-tree-id264 . -437) (undo-tree-id265 . -360) (undo-tree-id266 . -76) (undo-tree-id267 . -77) (undo-tree-id268 . -78) (undo-tree-id269 . -1148) (undo-tree-id270 . -1148) (undo-tree-id271 . -1148) (t 26018 23638 666106 45000)) nil (26018 23793 830160 0) 0 nil])
([nil nil ((6309 . 6312)) nil (26018 23793 830121 0) 0 nil])
([nil nil ((6310 . 6317) (#("te" 0 2 (fontified nil)) . 6310) (6310 . 6312) (#("texture" 0 7 (fontified nil)) . -6310) (6310 . 6317) (#("te" 0 2 (fontified t)) . -6310) (undo-tree-id225 . -2) (undo-tree-id226 . -1) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) 6312) nil (26018 23793 830119 0) 0 nil])
([nil nil ((6317 . 6320)) nil (26018 23793 830111 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 6352 6359 nil nil nil nil #s(yas--exit 6360 nil))) #s(yas--exit 6360 nil) 7 nil #s(yas--field 1 6352 6359 nil nil nil nil #s(yas--exit 6360 nil)) nil nil)) (6319 . 6360) (#("create_texture_bind_group_layout(${1:&device})$0" 0 48 (fontified nil)) . 6319) (6319 . 6367) (#("c" 0 1 (fontified nil)) . 6319) (6319 . 6320) (#("create_texture_bind_group_layout(…)" 0 35 (fontified nil)) . -6319) (6319 . 6354) (#("c" 0 1 (fontified t)) . -6319) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 6320) nil (26018 23793 830108 0) 0 nil])
([nil nil ((apply yas--snippet-revive 6319 6360 #s(yas--snippet nil (#s(yas--field 1 6352 6359 nil nil nil nil #s(yas--exit 6360 nil))) #s(yas--exit 6360 nil) 7 nil #s(yas--field 1 6352 6359 nil nil nil nil #s(yas--exit 6360 nil)) nil nil))) nil (26018 23793 830091 0) 0 nil])
([nil nil ((6360 . 6361)) nil (26018 23793 830086 0) 0 nil])
([nil nil ((#("        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 25 (face font-lock-variable-name-face fontified t) 25 28 (fontified t) 28 35 (face font-lock-constant-face fontified t) 35 37 (fontified t) 37 44 (face font-lock-type-face fontified t) 44 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-3-face) fontified t) 67 68 (face rust-ampersand-face fontified t) 68 76 (fontified t) 76 77 (face rust-ampersand-face fontified t) 77 85 (fontified t) 85 100 (face font-lock-string-face fontified t) 100 101 (face (rainbow-delimiters-depth-3-face) fontified t) 101 103 (fontified t)) . 6548) (undo-tree-id314 . -103) (undo-tree-id315 . -103) (undo-tree-id316 . -103) (undo-tree-id317 . -103) (undo-tree-id318 . -103) (undo-tree-id319 . -103) (undo-tree-id320 . -103) (undo-tree-id321 . -103) (undo-tree-id322 . -102) (undo-tree-id323 . -102) (undo-tree-id324 . -102) (undo-tree-id325 . -103) (undo-tree-id326 . -103) (undo-tree-id327 . -102) (undo-tree-id328 . -103) (undo-tree-id329 . -34) (undo-tree-id330 . -34) (undo-tree-id331 . -34) (undo-tree-id332 . -34) (undo-tree-id333 . -34) (undo-tree-id334 . -34) (undo-tree-id335 . -28) (undo-tree-id336 . -35) (undo-tree-id337 . -35) (undo-tree-id338 . -28) (undo-tree-id339 . -103) (undo-tree-id340 . -28) (undo-tree-id341 . -35) (undo-tree-id342 . -35) (undo-tree-id343 . -103) (undo-tree-id344 . -103) (undo-tree-id345 . -28) (undo-tree-id346 . -103) (undo-tree-id347 . -103) (undo-tree-id348 . -103) (undo-tree-id349 . -103) 6651 (t 26018 23793 890097 982000)) nil (26018 23814 780597 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 6464 . 6465) (nil fontified nil 6463 . 6465) (nil fontified nil 6462 . 6463) (nil fontified nil 6447 . 6462) (nil fontified nil 6439 . 6447) (nil fontified nil 6438 . 6439) (nil fontified nil 6430 . 6438) (nil fontified nil 6429 . 6430) (nil fontified nil 6428 . 6429) (nil fontified nil 6406 . 6428) (nil fontified nil 6399 . 6406) (nil fontified nil 6397 . 6399) (nil fontified nil 6390 . 6397) (nil fontified nil 6387 . 6390) (nil fontified nil 6374 . 6387) (nil fontified nil 6373 . 6374) (nil fontified nil 6370 . 6373) (nil fontified nil 6362 . 6370) (6362 . 6465)) nil (26018 23814 780551 0) 0 nil])
([nil nil ((6465 . 6473) (#("    " 0 4 (fontified t)) . 6465) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4)) nil (26018 23814 780541 0) 0 nil])
([nil nil ((#("buffer" 0 6 (fontified t)) . -7130) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) 7136 (t 26018 23814 841487 31000)) nil (26018 25119 171881 0) 0 nil])
([nil nil ((7130 . 7131)) nil (26018 25119 171867 0) 0 nil])
([nil nil ((7116 . 7147) (#("create_camera_b" 0 15 (fontified nil)) . 7116) (7116 . 7131) (#("create_camera_buffer_bind_group" 0 31 (fontified nil)) . -7116) (7116 . 7147) (#("create_camera_b" 0 15 (fontified t)) . -7116) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -15) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (undo-tree-id406 . -14) (undo-tree-id407 . -14) (undo-tree-id408 . -14) (undo-tree-id409 . -14) (undo-tree-id410 . -14) (undo-tree-id411 . -14) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -14) (undo-tree-id418 . -14) (undo-tree-id419 . -14) (undo-tree-id420 . -15) (undo-tree-id421 . -15) (undo-tree-id422 . -15) (undo-tree-id423 . -15) 7131) nil (26018 25119 171864 0) 0 nil])
([nil nil ((#("camera_buffer" 0 13 (face font-lock-variable-name-face fontified t)) . -7085) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -13) (undo-tree-id360 . -13) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -2) (undo-tree-id381 . -4) (undo-tree-id382 . -5) (undo-tree-id383 . -6) (undo-tree-id384 . -7) (undo-tree-id385 . -8) (undo-tree-id386 . -9) (undo-tree-id387 . -10) (undo-tree-id388 . -11) (undo-tree-id389 . -12) (undo-tree-id390 . -13) (undo-tree-id391 . -13) (undo-tree-id392 . -13) (undo-tree-id393 . -13) (undo-tree-id394 . -13) (undo-tree-id395 . -13) (undo-tree-id396 . -13) 7098) nil (26018 25119 171833 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7144 . 7145) (nil fontified nil 7144 . 7145) (nil fontified nil 7127 . 7144) (nil fontified nil 7101 . 7127) (nil fontified nil 7086 . 7101) (nil fontified nil 7085 . 7086) (7085 . 7145)) nil (26018 25119 171774 0) 0 nil])
([nil nil ((#("
        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });" 0 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 37 (face font-lock-variable-name-face fontified t) 37 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-3-face) fontified t) 72 73 (face rust-ampersand-face fontified t) 73 77 (face font-lock-constant-face fontified t) 77 79 (fontified t) 79 104 (face font-lock-type-face fontified t) 104 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-4-face) fontified t) 106 119 (fontified t) 119 126 (face font-lock-variable-name-face fontified t) 126 128 (fontified t) 128 129 (face rust-ampersand-face fontified t) 129 130 (face (rainbow-delimiters-depth-5-face) fontified t) 130 147 (fontified t) 147 151 (face font-lock-constant-face fontified t) 151 153 (fontified t) 153 173 (face font-lock-type-face fontified t) 173 174 (fontified t) 174 175 (face (rainbow-delimiters-depth-6-face) fontified t) 175 176 (fontified t) 176 196 (fontified t) 196 203 (face font-lock-variable-name-face fontified t) 203 208 (fontified t) 208 228 (fontified t) 228 238 (face font-lock-variable-name-face fontified t) 238 240 (fontified t) 240 244 (face font-lock-constant-face fontified t) 244 246 (fontified t) 246 258 (face font-lock-type-face fontified t) 258 260 (fontified t) 260 266 (face font-lock-type-face fontified t) 266 269 (fontified t) 269 273 (face font-lock-constant-face fontified t) 273 275 (fontified t) 275 287 (face font-lock-type-face fontified t) 287 289 (fontified t) 289 297 (face font-lock-type-face fontified t) 297 319 (fontified t) 319 321 (face font-lock-variable-name-face fontified t) 321 323 (fontified t) 323 327 (face font-lock-constant-face fontified t) 327 329 (fontified t) 329 340 (face font-lock-type-face fontified t) 340 342 (fontified t) 342 348 (face font-lock-type-face fontified t) 348 349 (fontified t) 349 350 (face (rainbow-delimiters-depth-7-face) fontified t) 350 375 (fontified t) 375 377 (face font-lock-variable-name-face fontified t) 377 379 (fontified t) 379 383 (face font-lock-constant-face fontified t) 383 385 (fontified t) 385 402 (face font-lock-type-face fontified t) 402 404 (fontified t) 404 411 (face font-lock-type-face fontified t) 411 437 (fontified t) 437 455 (face font-lock-variable-name-face fontified t) 455 457 (fontified t) 457 462 (face font-lock-keyword-face fontified t) 462 488 (fontified t) 488 504 (face font-lock-variable-name-face fontified t) 504 506 (fontified t) 506 510 (face font-lock-type-face fontified t) 510 532 (fontified t) 532 533 (face (rainbow-delimiters-depth-7-face) fontified t) 533 555 (fontified t) 555 560 (face font-lock-variable-name-face fontified t) 560 562 (fontified t) 562 566 (face font-lock-type-face fontified t) 566 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-6-face) fontified t) 585 598 (fontified t) 598 599 (face (rainbow-delimiters-depth-5-face) fontified t) 599 613 (fontified t) 613 618 (face font-lock-variable-name-face fontified t) 618 620 (fontified t) 620 624 (face font-lock-type-face fontified t) 624 625 (face (rainbow-delimiters-depth-5-face) fontified t) 625 651 (face font-lock-string-face fontified t) 651 652 (face (rainbow-delimiters-depth-5-face) fontified t) 652 662 (fontified t) 662 663 (face (rainbow-delimiters-depth-4-face) fontified t) 663 664 (face (rainbow-delimiters-depth-3-face) fontified t) 664 675 (fontified t) 675 678 (face font-lock-keyword-face fontified t) 678 679 (fontified t) 679 696 (face font-lock-variable-name-face fontified t) 696 718 (fontified t) 718 723 (fontified t) 723 724 (face (rainbow-delimiters-depth-3-face) fontified t) 724 725 (face rust-ampersand-face fontified t) 725 729 (face font-lock-constant-face fontified t) 729 731 (fontified t) 731 750 (face font-lock-type-face fontified t) 750 751 (fontified t) 751 752 (face (rainbow-delimiters-depth-4-face) fontified t) 752 753 (fontified t) 753 765 (fontified t) 765 771 (face font-lock-variable-name-face fontified t) 771 773 (fontified t) 773 774 (face rust-ampersand-face fontified t) 774 812 (fontified t) 812 819 (face font-lock-variable-name-face fontified t) 819 821 (fontified t) 821 822 (face rust-ampersand-face fontified t) 822 823 (face (rainbow-delimiters-depth-5-face) fontified t) 823 826 (fontified t) 826 840 (fontified t) 840 844 (face font-lock-constant-face fontified t) 844 846 (fontified t) 846 860 (face font-lock-type-face fontified t) 860 861 (fontified t) 861 862 (face (rainbow-delimiters-depth-6-face) fontified t) 862 863 (fontified t) 863 883 (fontified t) 883 890 (face font-lock-variable-name-face fontified t) 890 915 (fontified t) 915 923 (face font-lock-variable-name-face fontified t) 923 956 (fontified t) 956 957 (face (rainbow-delimiters-depth-7-face) fontified t) 957 958 (face (rainbow-delimiters-depth-7-face) fontified t) 958 976 (fontified t) 976 977 (face (rainbow-delimiters-depth-6-face) fontified t) 977 990 (fontified t) 990 991 (face (rainbow-delimiters-depth-5-face) fontified t) 991 1005 (fontified t) 1005 1007 (face font-lock-variable-name-face fontified t) 1007 1008 (face font-lock-variable-name-face fontified t) 1008 1010 (face font-lock-variable-name-face fontified t) 1010 1012 (fontified t) 1012 1016 (face font-lock-type-face fontified t) 1016 1017 (face (rainbow-delimiters-depth-5-face) fontified t) 1017 1036 (face font-lock-string-face fontified t) 1036 1037 (face (rainbow-delimiters-depth-5-face) fontified t) 1037 1039 (fontified t) 1039 1047 (fontified t) 1047 1048 (face (rainbow-delimiters-depth-4-face) fontified t) 1048 1049 (face (rainbow-delimiters-depth-3-face) fontified t) 1049 1050 (fontified t)) . 7206) (undo-tree-id484 . -1050) (undo-tree-id485 . -32) (undo-tree-id486 . -665) (undo-tree-id487 . -1050) (undo-tree-id488 . -1050) (undo-tree-id489 . -1050) (undo-tree-id490 . -1007) (undo-tree-id491 . -766) (undo-tree-id492 . -580) (undo-tree-id493 . -219) (undo-tree-id494 . -141) (undo-tree-id495 . -116) (undo-tree-id496 . -9) (undo-tree-id497 . -8) (undo-tree-id498 . -1050) (t 26018 25119 233206 689000)) nil (26018 25125 801552 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7204) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("
" 0 1 (fontified t)) . -7205) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 7206) nil (26018 25125 801531 0) 0 nil])
([nil nil ((7204 . 7213)) nil (26018 25125 801477 0) 0 nil])
([nil nil ((#("    texture_bind_group_layout: wgpu::BindGroupLayout,
" 0 4 (fontified t) 4 29 (face font-lock-variable-name-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-constant-face fontified t) 35 37 (fontified t) 37 52 (face font-lock-type-face fontified t) 52 54 (fontified t)) . -3134) (undo-tree-id554 . -54) (undo-tree-id555 . -54) (undo-tree-id556 . -54) (undo-tree-id557 . -40) (undo-tree-id558 . -40) (undo-tree-id559 . -40) (undo-tree-id560 . -40) (undo-tree-id561 . -40) (undo-tree-id562 . -37) (undo-tree-id563 . -52) (undo-tree-id564 . -52) (undo-tree-id565 . -37) (undo-tree-id566 . -52) (undo-tree-id567 . -52) (undo-tree-id568 . -54) (undo-tree-id569 . -54) (undo-tree-id570 . -37) (undo-tree-id571 . -54) (undo-tree-id572 . -54) (undo-tree-id573 . -54) (undo-tree-id574 . -54) (undo-tree-id575 . -54) (undo-tree-id576 . -54) (undo-tree-id577 . -54) (undo-tree-id578 . -54) (undo-tree-id579 . -54) (undo-tree-id580 . -54) (undo-tree-id581 . -54) 3188 (t 26018 25125 862518 544000)) nil (26018 25258 220905 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3133) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) 3134) nil (26018 25258 220876 0) 0 nil])
([nil nil ((#("            texture_bind_group_layout,
" 0 39 (fontified t)) . -9741) (undo-tree-id499 . -39) (undo-tree-id500 . -39) (undo-tree-id501 . -35) (undo-tree-id502 . -35) (undo-tree-id503 . -35) (undo-tree-id504 . -35) (undo-tree-id505 . -35) (undo-tree-id506 . -31) (undo-tree-id507 . -37) (undo-tree-id508 . -37) (undo-tree-id509 . -31) (undo-tree-id510 . -37) (undo-tree-id511 . -37) (undo-tree-id512 . -37) (undo-tree-id513 . -37) (undo-tree-id514 . -39) (undo-tree-id515 . -39) (undo-tree-id516 . -31) (undo-tree-id517 . -39) (undo-tree-id518 . -39) (undo-tree-id519 . -39) 9780) nil (26018 25258 220840 0) 0 nil])
([nil nil ((433 . 434) (t 26018 25258 282494 455000)) nil (26018 25632 717745 0) 0 nil])
([nil nil ((434 . 439)) nil (26018 25632 717743 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-constant-face fontified t)) . -438) (undo-tree-id585 . -1) (undo-tree-id586 . -1) 439) nil (26018 25632 717742 0) 0 nil])
([nil nil ((438 . 440)) nil (26018 25632 717738 0) 0 nil])
([nil nil ((438 . 449) (#("de" 0 2 (fontified nil)) . 438) (438 . 440) (#("depth_pass;" 0 11 (fontified nil)) . -438) (438 . 449) (#("de" 0 2 (face font-lock-constant-face fontified t)) . -438) (undo-tree-id582 . -2) (undo-tree-id583 . -1) (undo-tree-id584 . -2) 440) nil (26018 25632 717735 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3769 . 3770) (nil fontified nil 3711 . 3770) (3711 . 3770) (t 26018 25632 779561 539000)) nil (26018 26217 40755 0) 0 nil])
([nil nil ((3719 . 3727) (#(" " 0 1 (fontified nil)) . 3718) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("    " 0 4 (fontified nil)) . -3715) (3723 . 3724)) nil (26018 26297 161905 0) 0 nil] [nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -3719) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) 3723) ((3719 . 3723)) (26018 26217 29090 0) 0 nil])
([nil nil ((#("    let" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t)) . 3711)) nil (26018 26297 161902 0) 0 nil])
([nil nil ((#("Buffer,

    
        " 0 6 (face font-lock-type-face fontified t) 6 14 (fontified t) 14 22 (fontified t)) . -3697) (undo-tree-id587 . -14) (undo-tree-id588 . -22) (undo-tree-id589 . -22) (undo-tree-id590 . -14) (undo-tree-id591 . -14) (undo-tree-id592 . -14) (undo-tree-id593 . -14) (undo-tree-id594 . -14) (undo-tree-id595 . -14) (undo-tree-id596 . -14) (undo-tree-id597 . -14) (undo-tree-id598 . -14) (undo-tree-id599 . -14) (undo-tree-id600 . -14) (undo-tree-id601 . -14) (undo-tree-id602 . -22) (undo-tree-id603 . -22) (undo-tree-id604 . -22) (undo-tree-id605 . -22) (undo-tree-id606 . -22) (undo-tree-id607 . -22) (undo-tree-id608 . -22) (undo-tree-id609 . -22) (undo-tree-id610 . -22) (undo-tree-id611 . -22) (undo-tree-id612 . -14) (undo-tree-id613 . -22) (undo-tree-id614 . -22) 3719) ((3697 . 3719)) (26018 26217 28709 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3711)) nil (26018 26297 161901 0) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -3715) (undo-tree-id692 . -4) 3711) nil (26018 26297 161899 0) 0 nil])
([nil nil ((#(" = DepthPass::new(&device, &config);" 0 3 (fontified t) 3 12 (face font-lock-type-face fontified t) 12 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) fontified t) 18 19 (face rust-ampersand-face fontified t) 19 27 (fontified t) 27 28 (face rust-ampersand-face fontified t) 28 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 36 (fontified t)) . 3725)) nil (26018 26297 161897 0) 0 nil])
([nil nil ((3725 . 3726)) nil (26018 26297 161896 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3725) (undo-tree-id691 . -1) 3726) nil (26018 26297 161895 0) 0 nil])
([nil nil ((3725 . 3730)) nil (26018 26297 161893 0) 0 nil])
([nil nil ((3727 . 3737) (#("dep" 0 3 (fontified nil)) . 3727) (3727 . 3730) (#("depth_pass" 0 10 (fontified nil)) . -3727) (3727 . 3737) (#("dep" 0 3 (fontified t)) . -3727) (undo-tree-id690 . -3) 3730) nil (26018 26297 161891 0) 0 nil])
([nil nil ((3737 . 3740)) nil (26018 26297 161887 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3737) (undo-tree-id687 . -1) (#(":" 0 1 (fontified t)) . -3738) (undo-tree-id688 . -1) (#("D" 0 1 (face font-lock-type-face fontified t)) . -3739) (undo-tree-id689 . -1) 3740) nil (26018 26297 161886 0) 0 nil])
([nil nil ((3737 . 3741)) nil (26018 26297 161881 0) 0 nil])
([nil nil ((#("De" 0 2 (face font-lock-type-face fontified t)) . -3739) (undo-tree-id686 . -2) 3741) nil (26018 26297 161880 0) 0 nil])
([nil nil ((#("pass::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -3733) (undo-tree-id685 . -6) 3739) nil (26018 26297 161877 0) 0 nil])
([nil nil ((#("depth_" 0 6 (fontified t)) . -3727) (undo-tree-id684 . -6) 3733) nil (26018 26297 161875 0) 0 nil])
([nil nil ((3727 . 3732)) nil (26018 26297 161873 0) 0 nil])
([nil nil ((#("Depth" 0 5 (face font-lock-type-face fontified t)) . -3727) (undo-tree-id683 . -5) 3732) nil (26018 26297 161871 0) 0 nil])
([nil nil ((3727 . 3736)) nil (26018 26297 161869 0) 0 nil])
([nil nil ((3727 . 3737) (#("DepthPass" 0 9 (fontified nil)) . 3727) (3727 . 3736) (#("depth_pass" 0 10 (fontified nil)) . -3727) (3727 . 3737) (#("DepthPass" 0 9 (face font-lock-type-face fontified t)) . -3727) (undo-tree-id682 . -9) 3736) nil (26018 26297 161868 0) 0 nil])
([nil nil ((3737 . 3747)) nil (26018 26297 161864 0) 0 nil])
([nil nil ((3747 . 3748)) nil (26018 26297 161863 0) 0 nil])
([nil nil ((#("DepthPass" 0 9 (face font-lock-type-face fontified t)) . -3739) (undo-tree-id674 . -9) (undo-tree-id675 . -9) (undo-tree-id676 . -9) (undo-tree-id677 . -9) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -9) (undo-tree-id681 . -9) 3748) nil (26018 26297 161861 0) 0 nil])
([nil nil ((#("pass::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -3733) (undo-tree-id664 . -6) (undo-tree-id665 . -6) (undo-tree-id666 . -6) (undo-tree-id667 . -6) (undo-tree-id668 . -6) (undo-tree-id669 . -6) (undo-tree-id670 . -6) (undo-tree-id671 . -6) (undo-tree-id672 . -6) (undo-tree-id673 . -6) 3739) nil (26018 26297 161852 0) 0 nil])
([nil nil ((#("depth_" 0 6 (fontified t)) . -3727) (undo-tree-id652 . -6) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (undo-tree-id657 . -6) (undo-tree-id658 . -6) (undo-tree-id659 . -6) (undo-tree-id660 . -6) (undo-tree-id661 . -6) (undo-tree-id662 . -6) (undo-tree-id663 . -6) 3733) nil (26018 26297 161841 0) 0 nil])
([nil nil ((3727 . 3729)) nil (26018 26297 161827 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3727) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#("e" 0 1 (fontified t)) . -3728) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 3729) nil (26018 26297 161826 0) 0 nil])
([nil nil ((3727 . 3731)) nil (26018 26297 161813 0) 0 nil])
([nil nil ((77 . 104) (3727 . 3727) (3727 . 3736) (#("Dept" 0 4 (fontified nil)) . 3727) (3727 . 3731) (#("DepthPass (use depth_pass::DepthPass)" 0 37 (fontified nil)) . -3727) (3727 . 3764) (#("Dept" 0 4 (face font-lock-type-face fontified t)) . -3727) (undo-tree-id630 . -4) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -2) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) 3731) nil (26018 26297 161811 0) 0 nil])
([nil nil ((3763 . 3764)) nil (26018 26297 161797 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -3763) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) 3764) nil (26018 26297 161795 0) 0 nil])
([nil nil ((3763 . 3764)) nil (26018 26297 161782 0) 0 nil])
([nil nil ((9603 . 9611) (#("        " 0 8 (fontified nil)) . 9602) (9602 . 9610) (9602 . 9603) (t 26018 26297 224052 67000)) nil (26018 26307 461045 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 9668 . 9669) (nil fontified nil 9611 . 9669) (9611 . 9669)) nil (26018 26307 461042 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -9611) 9669) nil (26018 26307 461037 0) 0 nil])
([nil nil ((9661 . 9670) (t 26018 26307 523052 774000)) nil (26018 26308 891703 0) 0 nil])
([nil nil ((10312 . 10324) (#("            " 0 12 (fontified nil)) . 10311) (undo-tree-id699 . -12) (undo-tree-id700 . -12) (undo-tree-id701 . -12) (10310 . 10324) (t 26018 26308 954454 871000)) nil (26018 26313 3387 0) 0 nil])
([nil nil ((10324 . 10326)) nil (26018 26313 3383 0) 0 nil])
([nil nil ((10324 . 10334) (#("de" 0 2 (fontified nil)) . 10324) (10324 . 10326) (#("depth_pass" 0 10 (fontified nil)) . -10324) (10324 . 10334) (#("de" 0 2 (fontified t)) . -10324) (undo-tree-id695 . -2) (undo-tree-id696 . -1) (undo-tree-id697 . -2) (undo-tree-id698 . -2) 10326) nil (26018 26313 3380 0) 0 nil])
([nil nil ((10334 . 10335)) nil (26018 26313 3365 0) 0 nil])
([nil nil ((10926 . 10938) (t 26018 26313 70485 247000)) nil (26018 26329 813536 0) 0 nil])
([nil nil ((10938 . 10944)) nil (26018 26329 813535 0) 0 nil])
([nil nil ((10943 . 10953) (#("d" 0 1 (fontified nil)) . 10943) (10943 . 10944) (#("depth_pass" 0 10 (fontified nil)) . -10943) (10943 . 10953) (#("d" 0 1 (fontified t)) . -10943) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 10944) nil (26018 26329 813534 0) 0 nil])
([nil nil ((10953 . 10954)) nil (26018 26329 813526 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 10961 10973 nil nil nil t #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) #s(yas--exit 10982 nil) 11 nil #s(yas--field 1 10961 10973 nil nil nil t #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) nil nil)) (10954 . 10976) (#("resize(${1:device}, ${2:config})$0" 0 34 (fontified nil)) . 10954) (10954 . 10988) (#("resize(…)" 0 9 (fontified nil)) . -10954) (10954 . 10963)) nil (26018 26329 813525 0) 0 nil])
([nil nil ((#("device" 0 6 (fontified nil)) . 10962) (undo-tree-id708 . -6) (10961 . 10962)) nil (26018 26329 813829 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10961) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) 10962) nil (26018 26345 800022 0) 0 nil] [nil nil ((#("s" 0 1 (fontified t)) . -10961) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) 10962) ((10961 . 10962)) (26018 26329 813517 0) 0 nil])
([nil nil ((10961 . 10966)) nil (26018 26345 800012 0) 0 nil])
nil
([nil nil ((10961 . 10962) (10966 . 10966) (10966 . 10972) (#("&device" 0 7 (fontified nil)) . -10966) (undo-tree-id785 . -7) (10966 . 10973)) nil (26018 26345 800010 0) 0 nil])
([nil nil ((apply yas--snippet-revive 10954 10982 #s(yas--snippet nil (#s(yas--field 1 10961 10973 nil nil nil t #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) #s(yas--exit 10982 nil) 11 nil #s(yas--field 1 10961 10973 nil nil nil t #s(yas--field 2 10975 10981 nil nil nil nil #s(yas--exit 10982 nil))) nil nil))) nil (26018 26345 800008 0) 0 nil])
([nil nil ((#("config" 0 6 (fontified t)) . -10975) (undo-tree-id773 . -6) (undo-tree-id774 . -6) (undo-tree-id775 . -1) (undo-tree-id776 . -2) (undo-tree-id777 . -3) (undo-tree-id778 . -4) (undo-tree-id779 . -5) (undo-tree-id780 . -6) (undo-tree-id781 . -6) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) 10981) nil (26018 26345 800006 0) 0 nil])
([nil nil ((10975 . 10978)) nil (26018 26345 799993 0) 0 nil])
([nil nil ((10978 . 10979)) nil (26018 26345 799992 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -10976) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("e" 0 1 (fontified t)) . -10977) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#("f" 0 1 (fontified t)) . -10978) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) 10979) nil (26018 26345 799990 0) 0 nil])
([nil nil ((10976 . 10980)) nil (26018 26345 799959 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10977) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#(";" 0 1 (fontified t)) . -10978) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (#("." 0 1 (fontified t)) . -10979) (undo-tree-id742 . -1) (undo-tree-id743 . -1) 10980) nil (26018 26345 799957 0) 0 nil])
([nil nil ((10977 . 10983)) nil (26018 26345 799934 0) 0 nil])
([nil nil ((10975 . 10976) (10980 . 10980) (10980 . 10986) (#("con" 0 3 (fontified nil)) . 10980) (10980 . 10983) (#("&config" 0 7 (fontified nil)) . -10980) (10980 . 10987) (#("con" 0 3 (fontified t)) . -10980) (undo-tree-id714 . -3) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -3) (undo-tree-id720 . -3) 10983) nil (26018 26345 799931 0) 0 nil])
([nil nil ((10988 . 10989)) nil (26018 26345 799910 0) 0 nil])
([nil nil ((14770 . 14778) (t 26018 26345 864676 737000)) nil (26018 26370 901842 0) 0 nil])
([nil nil ((14778 . 14779)) nil (26018 26370 901840 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -14778) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) 14779) nil (26018 26370 901839 0) 0 nil])
([nil nil ((14778 . 14784)) nil (26018 26370 901834 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -14783) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) 14784) nil (26018 26370 901833 0) 0 nil])
([nil nil ((14783 . 14785)) nil (26018 26370 901828 0) 0 nil])
([nil nil ((14783 . 14793) (#("de" 0 2 (fontified nil)) . 14783) (14783 . 14785) (#("depth_pass" 0 10 (fontified nil)) . -14783) (14783 . 14793) (#("de" 0 2 (fontified t)) . -14783) (undo-tree-id872 . -2) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -2) (undo-tree-id876 . -2) 14785) nil (26018 26370 901826 0) 0 nil])
([nil nil ((14793 . 14795)) nil (26018 26370 901814 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -14793) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (#("r" 0 1 (fontified t)) . -14794) (undo-tree-id870 . -1) (undo-tree-id871 . -1) 14795) nil (26018 26370 901813 0) 0 nil])
([nil nil ((14793 . 14796)) nil (26018 26370 901804 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 14801 14820 nil nil nil t #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) #s(yas--exit 14835 nil) 12 nil #s(yas--field 1 14801 14820 nil nil nil t #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) nil nil)) (14794 . 14821) (#("render(${1:&view}, ${2:&mut encoder})$0" 0 39 (fontified nil)) . 14794) (14794 . 14833) (#("re" 0 2 (fontified nil)) . 14794) (14794 . 14796) (#("render(…)" 0 9 (fontified nil)) . -14794) (14794 . 14803) (#("re" 0 2 (fontified t)) . -14794) (undo-tree-id858 . -2) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) 14796) nil (26018 26370 901802 0) 0 nil])
([nil nil ((#("view" 0 4 (fontified t)) . -14802) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -1) (undo-tree-id855 . -2) (undo-tree-id856 . -3) (undo-tree-id857 . -4) 14806) nil (26018 26370 901792 0) 0 nil])
([nil nil ((14802 . 14807)) nil (26018 26370 901784 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14806) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) 14807) nil (26018 26370 901782 0) 0 nil])
([nil nil ((14806 . 14809)) nil (26018 26370 901776 0) 0 nil])
([nil nil ((14807 . 14820) (#("de" 0 2 (fontified nil)) . 14807) (undo-tree-id834 . -2) (14807 . 14809) (#("depth_texture" 0 13 (fontified nil)) . -14807) (undo-tree-id835 . -13) (14807 . 14820) (#("de" 0 2 (fontified t)) . -14807) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) 14809) nil (26018 26370 901774 0) 0 nil])
([nil nil ((apply yas--snippet-revive 14794 14835 #s(yas--snippet nil (#s(yas--field 1 14801 14820 nil nil nil t #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) #s(yas--exit 14835 nil) 12 nil #s(yas--field 1 14801 14820 nil nil nil t #s(yas--field 2 14822 14834 nil nil nil nil #s(yas--exit 14835 nil))) nil nil))) nil (26018 26370 901760 0) 0 nil])
([nil nil ((#("encoder" 0 7 (fontified t)) . -14827) (undo-tree-id824 . -7) (undo-tree-id825 . -7) (undo-tree-id826 . -7) (undo-tree-id827 . -7) (undo-tree-id828 . -7) (undo-tree-id829 . -7) (undo-tree-id830 . -7) (undo-tree-id831 . -7) (undo-tree-id832 . -7) (undo-tree-id833 . -7) 14834) nil (26018 26370 901759 0) 0 nil])
([nil nil ((#("mut " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -14823) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) 14827) nil (26018 26370 902137 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -14822) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) 14823) nil (26018 26382 756010 0) 0 nil] [nil nil ((#("texture, &" 0 7 (fontified t) 7 9 (fontified t) 9 10 (fontified t)) . -14813) (undo-tree-id795 . -10) (undo-tree-id796 . -10) (undo-tree-id797 . -7) (undo-tree-id798 . -7) (undo-tree-id799 . -7) (undo-tree-id800 . -7) (undo-tree-id801 . -7) (undo-tree-id802 . -7) (undo-tree-id803 . -10) (undo-tree-id804 . -10) (undo-tree-id805 . -10) (undo-tree-id806 . -10) (undo-tree-id807 . -10) (undo-tree-id808 . -10) (undo-tree-id809 . -10) (undo-tree-id810 . -10) (undo-tree-id811 . -10) (undo-tree-id812 . -10) 14823) ((14813 . 14823)) (26018 26370 901732 0) 0 nil])
([nil nil ((14822 . 14831)) nil (26018 26382 755991 0) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t)) . -14829) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (#("o" 0 1 (fontified t)) . -14830) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 14831) nil (26018 26382 755988 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -14827) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("n" 0 1 (fontified t)) . -14828) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) 14829) nil (26018 26382 755966 0) 0 nil])
([nil nil ((14827 . 14828)) nil (26018 26382 755917 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -14827) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) 14828) nil (26018 26382 755916 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -14822) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -2) (undo-tree-id897 . -2) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -5) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -5) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) (undo-tree-id915 . -5) (undo-tree-id916 . -5) (undo-tree-id917 . -5) (undo-tree-id918 . -5) (undo-tree-id919 . -5) (undo-tree-id920 . -5) (undo-tree-id921 . -5) (undo-tree-id922 . -5) (undo-tree-id923 . -5) (undo-tree-id924 . -5) (undo-tree-id925 . -5) (undo-tree-id926 . -5) (undo-tree-id927 . -5) (undo-tree-id928 . -5) (undo-tree-id929 . -5) (undo-tree-id930 . -5) (undo-tree-id931 . -5) (undo-tree-id932 . -5) (undo-tree-id933 . -5) (undo-tree-id934 . -5) (undo-tree-id935 . -5) 14827) nil (26018 26382 755906 0) 0 nil])
([nil nil ((14822 . 14823)) nil (26018 26382 755862 0) 0 nil])
([nil nil ((14822 . 14827) (14822 . 14829) (#("e" 0 1 (fontified nil)) . 14822) (14822 . 14823) (#("&mut encoder" 0 12 (fontified nil)) . -14822) (14822 . 14834) (#("e" 0 1 (fontified t)) . -14822) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 14823) nil (26018 26382 755860 0) 0 nil])
([nil nil ((14835 . 14836)) nil (26018 26382 755838 0) 0 nil])
([nil nil ((#("texture" 0 7 (fontified t)) . -14813) (undo-tree-id1055 . -7) (undo-tree-id1056 . -7) (undo-tree-id1057 . -7) (undo-tree-id1058 . -7) (undo-tree-id1059 . -7) (undo-tree-id1060 . -7) (undo-tree-id1061 . -7) (undo-tree-id1062 . -7) (undo-tree-id1063 . -7) (undo-tree-id1064 . -7) 14820 (t 26018 26382 818576 964000)) nil (26018 26398 351599 0) 0 nil])
([nil nil ((#("depth_" 0 6 (fontified t)) . -14807) (undo-tree-id1044 . -6) (undo-tree-id1045 . -6) (undo-tree-id1046 . -6) (undo-tree-id1047 . -6) (undo-tree-id1048 . -6) (undo-tree-id1049 . -6) (undo-tree-id1050 . -6) (undo-tree-id1051 . -6) (undo-tree-id1052 . -6) (undo-tree-id1053 . -6) (undo-tree-id1054 . -6) 14813) nil (26018 26398 351588 0) 0 nil])
([nil nil ((#("self." 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -14802) (undo-tree-id1032 . -5) (undo-tree-id1033 . -5) (undo-tree-id1034 . -5) (undo-tree-id1035 . -5) (undo-tree-id1036 . -5) (undo-tree-id1037 . -5) (undo-tree-id1038 . -5) (undo-tree-id1039 . -5) (undo-tree-id1040 . -5) (undo-tree-id1041 . -5) (undo-tree-id1042 . -5) (undo-tree-id1043 . -5) 14807) nil (26018 26398 351576 0) 0 nil])
([nil nil ((14802 . 14803)) nil (26018 26398 351563 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -14802) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) 14803) nil (26018 26398 351561 0) 0 nil])
([nil nil ((14802 . 14803)) nil (26018 26398 351555 0) 0 nil])
([nil nil ((14802 . 14806) (#("v" 0 1 (fontified nil)) . 14802) (14802 . 14803) (#("view" 0 4 (fontified nil)) . -14802) (14802 . 14806) (#("v" 0 1 (fontified t)) . -14802) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) 14803) nil (26018 26398 351549 0) 0 nil])
([nil nil ((13663 . 13665) (t 26018 26398 414474 657000)) nil (26018 26538 93894 0) 0 nil])
([nil nil ((13729 . 13745) (13663 . 13679) (13712 . 13713)) nil (26018 26538 93893 0) 0 nil])
([nil nil ((13745 . 13746)) nil (26018 26538 93891 0) 0 nil])
([nil nil ((13745 . 13749) (#("v" 0 1 (fontified nil)) . 13745) (13745 . 13746) (#("view" 0 4 (fontified nil)) . -13745) (13745 . 13749) (#("v" 0 1 (fontified t)) . -13745) (undo-tree-id1075 . -1) 13746) nil (26018 26538 93890 0) 0 nil])
([nil nil ((13749 . 13759)) nil (26018 26538 93886 0) 0 nil])
([nil nil ((13757 . 13767) (#("de" 0 2 (fontified nil)) . 13757) (13757 . 13759) (#("depth_pass" 0 10 (fontified nil)) . -13757) (13757 . 13767) (#("de" 0 2 (fontified t)) . -13757) (undo-tree-id1074 . -2) 13759) nil (26018 26538 93885 0) 0 nil])
([nil nil ((13767 . 13770)) nil (26018 26538 93881 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -13769) (undo-tree-id1073 . -1) 13770) nil (26018 26538 93880 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13767) (undo-tree-id1071 . -1) (#("t" 0 1 (fontified t)) . -13768) (undo-tree-id1072 . -1) 13769) nil (26018 26538 93877 0) 0 nil])
([nil nil ((13767 . 13768)) nil (26018 26538 93874 0) 0 nil])
([nil nil ((13768 . 13775) (#("texture" 0 7 (fontified nil)) . -13768) (13768 . 13775)) nil (26018 26538 93873 0) 0 nil])
([nil nil ((13775 . 13777)) nil (26018 26538 93871 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -13776) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 13777) nil (26018 26538 93870 0) 0 nil])
([nil nil ((13776 . 13777)) nil (26018 26538 93866 0) 0 nil])
([nil nil ((13776 . 13780) (#("w" 0 1 (fontified nil)) . 13776) (13776 . 13777) (#("view" 0 4 (fontified nil)) . -13776) (13776 . 13780) (#("w" 0 1 (fontified t)) . -13776) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) 13777) nil (26018 26538 93863 0) 0 nil])
([nil nil ((13780 . 13781)) nil (26018 26538 93848 0) 0 nil])
([nil nil ((476 . 477) (t 26018 26538 156531 891000)) nil (26018 27811 999876 0) 0 nil])
([nil nil ((477 . 479)) nil (26018 27811 999875 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -477) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("i" 0 1 (fontified t)) . -478) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) 479) nil (26018 27811 999873 0) 0 nil])
([nil nil ((477 . 482)) nil (26018 27811 999861 0) 0 nil])
([nil current ((481 . 496) (#("c" 0 1 (fontified nil)) . 481) (481 . 482) (#("compute_shadow;" 0 15 (fontified nil)) . -481) (481 . 496) (#("c" 0 1 (face font-lock-constant-face fontified t)) . -481) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) 482) nil (26018 27811 999857 0) 0 nil])
nil
