(undo-tree-save-format-version . 1)
"64c7ebd017d67e6aaa89e32185ccabaca6cdce02"
[nil nil nil nil (26015 30081 571748 0) 0 nil]
([nil nil ((9947 . 9949) (t 26015 28460 89937 668000)) nil (26015 30161 529191 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9947) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9948) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 9949 (t 26015 30161 532150 935000)) nil (26015 30189 975572 0) 0 nil])
([nil nil ((9947 . 9949) (t 26015 30189 978632 119000)) nil (26015 32657 512214 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9947) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9948) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 9949 (t 26015 32657 515356 138000)) nil (26015 33378 63964 0) 0 nil])
([nil nil ((14473 . 14486) (t 26015 33378 66950 905000)) nil (26015 33840 712071 0) 0 nil])
([nil nil ((14486 . 14491)) nil (26015 33840 712070 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -14486) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("s" 0 1 (fontified t)) . -14487) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t)) . -14488) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("l" 0 1 (fontified t)) . -14489) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("f" 0 1 (fontified t)) . -14490) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 14491) nil (26015 33840 712066 0) 0 nil])
([nil nil ((14486 . 14493)) nil (26015 33840 712008 0) 0 nil])
([nil nil ((14492 . 14508) (#("l" 0 1 (fontified nil)) . 14492) (14492 . 14493) (#("light_bind_group" 0 16 (fontified nil)) . -14492) (14492 . 14508) (#("l" 0 1 (fontified t)) . -14492) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 14493) nil (26015 33840 712003 0) 0 nil])
([nil nil ((14508 . 14509)) nil (26015 33840 711981 0) 0 nil])
([nil nil ((11002 . 11010) (#("        " 0 8 (fontified nil)) . 11001) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (11001 . 11010) (#("        " 0 8 (fontified nil)) . 11000) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (10999 . 11009) (t 26015 33840 715934 273000)) nil (26015 33854 390030 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11667 . 11668) (nil fontified nil 11010 . 11668) (11010 . 11668)) nil (26015 33854 390015 0) 0 nil])
([nil nil ((11809 . 11817) (11795 . 11807) (#("    " 0 4 (fontified t)) . 11795) (11771 . 11787) (#("        " 0 8 (fontified t)) . 11771) (11724 . 11740) (#("        " 0 8 (fontified t)) . 11724) (11670 . 11686) (#("        " 0 8 (fontified t)) . 11670) (11639 . 11655) (#("        " 0 8 (fontified t)) . 11639) (11614 . 11630) (#("        " 0 8 (fontified t)) . 11614) (11589 . 11605) (#("        " 0 8 (fontified t)) . 11589) (11553 . 11565) (#("    " 0 4 (fontified t)) . 11553) (11538 . 11550) (#("    " 0 4 (fontified t)) . 11538) (11453 . 11469) (#("        " 0 8 (fontified t)) . 11453) (11408 . 11424) (#("        " 0 8 (fontified t)) . 11408) (11352 . 11364) (#("    " 0 4 (fontified t)) . 11352) (11336 . 11348) (#("    " 0 4 (fontified t)) . 11336) (11293 . 11309) (#("        " 0 8 (fontified t)) . 11293) (11201 . 11217) (#("        " 0 8 (fontified t)) . 11201) (11147 . 11163) (#("        " 0 8 (fontified t)) . 11147) (11058 . 11070) (#("    " 0 4 (fontified t)) . 11058) (11020 . 11028) 11000) nil (26015 33854 390007 0) 0 nil])
([nil nil ((#("wgpu::ShaderModuleDescriptor {
                label: Some(\"Light Shader\"),
                source: wgpu::ShaderSource::Wgsl(include_str!(\"light.wgsl\").into())," 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t) 6 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-4-face) fontified t) 30 47 (fontified t) 47 52 (face font-lock-variable-name-face fontified t) 52 54 (fontified t) 54 58 (face font-lock-type-face fontified t) 58 59 (face (rainbow-delimiters-depth-5-face) fontified t) 59 73 (face font-lock-string-face fontified t) 73 74 (face (rainbow-delimiters-depth-5-face) fontified t) 74 92 (fontified t) 92 98 (face font-lock-variable-name-face fontified t) 98 100 (fontified t) 100 104 (face font-lock-constant-face fontified t) 104 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 124 (face font-lock-type-face fontified t) 124 125 (face (rainbow-delimiters-depth-5-face) fontified t) 125 137 (face font-lock-preprocessor-face fontified t) 137 138 (face (rainbow-delimiters-depth-6-face) fontified t) 138 150 (face font-lock-string-face fontified t) 150 151 (face (rainbow-delimiters-depth-6-face) fontified t) 151 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-6-face) fontified t) 157 158 (face (rainbow-delimiters-depth-6-face) fontified t) 158 159 (face (rainbow-delimiters-depth-5-face) fontified t) 159 160 (fontified t)) . -11377) (undo-tree-id179 . -160) (undo-tree-id180 . -160) (undo-tree-id181 . -1) (undo-tree-id182 . -2) (undo-tree-id183 . -3) (undo-tree-id184 . -4) (undo-tree-id185 . -7) (undo-tree-id186 . -9) (undo-tree-id187 . -12) (undo-tree-id188 . -15) (undo-tree-id189 . -73) (undo-tree-id190 . -75) (undo-tree-id191 . -132) (undo-tree-id192 . -133) (undo-tree-id193 . -134) (undo-tree-id194 . -136) (undo-tree-id195 . -137) (undo-tree-id196 . -138) (undo-tree-id197 . -139) (undo-tree-id198 . -140) (undo-tree-id199 . -141) (undo-tree-id200 . -142) (undo-tree-id201 . -143) (undo-tree-id202 . -142) (undo-tree-id203 . -141) (undo-tree-id204 . -140) (undo-tree-id205 . -139) (undo-tree-id206 . -137) (undo-tree-id207 . -136) (undo-tree-id208 . -137) (undo-tree-id209 . -138) (undo-tree-id210 . -141) (undo-tree-id211 . -144) (undo-tree-id212 . -146) (undo-tree-id213 . -148) (undo-tree-id214 . -150) (undo-tree-id215 . -151) (undo-tree-id216 . -152) (undo-tree-id217 . -153) (undo-tree-id218 . -154) (undo-tree-id219 . -155) (undo-tree-id220 . -156) (undo-tree-id221 . -157) (undo-tree-id222 . -158) (undo-tree-id223 . -159) (undo-tree-id224 . -160) (undo-tree-id225 . -76) (undo-tree-id226 . -160) (undo-tree-id227 . -160) (undo-tree-id228 . -160) (undo-tree-id229 . -160) (undo-tree-id230 . -160) (undo-tree-id231 . -160) (undo-tree-id232 . -160) (undo-tree-id233 . -160) 11537 (t 26015 33854 393557 760000)) nil (26015 33890 173730 0) 0 nil])
([nil nil ((11377 . 11379)) nil (26015 33890 173674 0) 0 nil])
([nil nil ((11377 . 11381) (#("wp" 0 2 (fontified nil)) . 11377) (11377 . 11379) (#("wgpu" 0 4 (fontified nil)) . -11377) (11377 . 11381) (#("wp" 0 2 (fontified t)) . -11377) (undo-tree-id170 . -2) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) 11379) nil (26015 33890 173672 0) 0 nil])
([nil nil ((11381 . 11387)) nil (26015 33890 173661 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11383 11398 #s(yas--snippet nil nil #s(yas--exit 11397 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11397 nil) 0 nil nil nil nil)) (11383 . 11398) (#("include_wgsl!($0)" 0 17 (fontified nil)) . 11383) (11383 . 11400) (#("incl" 0 4 (fontified nil)) . 11383) (11383 . 11387) (#("include_wgsl!(…)" 0 16 (fontified nil)) . -11383) (11383 . 11399) (#("incl" 0 4 (fontified t)) . -11383) (undo-tree-id157 . -4) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) 11387) nil (26015 33890 173659 0) 0 nil])
([nil nil ((11397 . 11399)) nil (26015 33890 173636 0) 0 nil])
([nil nil ((11398 . 11404)) nil (26015 33890 173635 0) 0 nil])
([nil nil ((11404 . 11408)) nil (26015 33890 173634 0) 0 nil])
([nil nil ((11410 . 11411)) nil (26015 33890 173629 0) 0 nil])
([nil nil ((#("
        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[&camera_bind_group_layout, &light_bind_group_layout],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");
            };
            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };
" 0 1 (fontified t) 1 9 (fontified t) 9 12 (face font-lock-comment-delimiter-face fontified t) 12 19 (face font-lock-comment-face fontified t) 19 27 (fontified t) 27 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 52 (face font-lock-variable-name-face fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 69 (fontified t) 69 72 (face font-lock-keyword-face fontified t) 72 73 (fontified t) 73 79 (face font-lock-variable-name-face fontified t) 79 111 (fontified t) 111 112 (face (rainbow-delimiters-depth-4-face) fontified t) 112 113 (face rust-ampersand-face fontified t) 113 117 (face font-lock-constant-face fontified t) 117 119 (fontified t) 119 143 (face font-lock-type-face fontified t) 143 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-5-face) fontified t) 145 162 (fontified t) 162 167 (face font-lock-variable-name-face fontified t) 167 169 (fontified t) 169 173 (face font-lock-type-face fontified t) 173 174 (face (rainbow-delimiters-depth-6-face) fontified t) 174 197 (face font-lock-string-face fontified t) 197 198 (face (rainbow-delimiters-depth-6-face) fontified t) 198 216 (fontified t) 216 234 (face font-lock-variable-name-face fontified t) 234 236 (fontified t) 236 237 (face rust-ampersand-face fontified t) 237 238 (face (rainbow-delimiters-depth-6-face) fontified t) 238 239 (face rust-ampersand-face fontified t) 239 265 (fontified t) 265 266 (face rust-ampersand-face fontified t) 266 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-6-face) fontified t) 290 308 (fontified t) 308 328 (face font-lock-variable-name-face fontified t) 328 330 (fontified t) 330 331 (face rust-ampersand-face fontified t) 331 332 (face (rainbow-delimiters-depth-6-face) fontified t) 332 333 (face (rainbow-delimiters-depth-6-face) fontified t) 333 347 (fontified t) 347 348 (face (rainbow-delimiters-depth-5-face) fontified t) 348 349 (face (rainbow-delimiters-depth-4-face) fontified t) 349 351 (fontified t) 351 363 (fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 373 (face font-lock-variable-name-face fontified t) 373 376 (fontified t) 376 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 395 (face font-lock-preprocessor-face fontified t) 395 396 (face (rainbow-delimiters-depth-4-face) fontified t) 396 408 (face font-lock-string-face fontified t) 408 409 (face (rainbow-delimiters-depth-4-face) fontified t) 409 410 (fontified t) 410 411 (fontified t) 411 423 (fontified t) 423 424 (face (rainbow-delimiters-depth-3-face) fontified t) 424 438 (fontified t) 438 460 (fontified t) 460 461 (face (rainbow-delimiters-depth-3-face) fontified t) 461 478 (fontified t) 478 479 (face rust-ampersand-face fontified t) 479 503 (fontified t) 503 504 (face rust-ampersand-face fontified t) 504 528 (fontified t) 528 559 (fontified t) 559 563 (face font-lock-type-face fontified t) 563 564 (face (rainbow-delimiters-depth-4-face) fontified t) 564 571 (face font-lock-constant-face fontified t) 571 573 (fontified t) 573 580 (face font-lock-type-face fontified t) 580 582 (fontified t) 582 594 (face font-lock-type-face fontified t) 594 595 (face (rainbow-delimiters-depth-4-face) fontified t) 595 613 (fontified t) 613 614 (face rust-ampersand-face fontified t) 614 615 (face (rainbow-delimiters-depth-4-face) fontified t) 615 620 (face font-lock-constant-face fontified t) 620 622 (fontified t) 622 633 (face font-lock-type-face fontified t) 633 639 (fontified t) 639 640 (face (rainbow-delimiters-depth-5-face) fontified t) 640 641 (face (rainbow-delimiters-depth-5-face) fontified t) 641 642 (face (rainbow-delimiters-depth-4-face) fontified t) 642 660 (fontified t) 660 680 (fontified t) 680 681 (face (rainbow-delimiters-depth-3-face) fontified t) 681 690 (fontified t) 690 691 (face (rainbow-delimiters-depth-2-face) fontified t) 691 692 (fontified t) 692 693 (fontified t rear-nonsticky t)) . 11001) (undo-tree-id298 . -693) (undo-tree-id299 . -9) (undo-tree-id300 . -376) (undo-tree-id301 . -376) (undo-tree-id302 . -376) (undo-tree-id303 . -376) (undo-tree-id304 . -376) (undo-tree-id305 . -376) (undo-tree-id306 . -376) (undo-tree-id307 . -376) (undo-tree-id308 . -376) (undo-tree-id309 . -376) (undo-tree-id310 . -376) (undo-tree-id311 . -376) (undo-tree-id312 . -376) (undo-tree-id313 . -376) (undo-tree-id314 . -376) (undo-tree-id315 . -376) (undo-tree-id316 . -376) (undo-tree-id317 . -376) (undo-tree-id318 . -376) (undo-tree-id319 . -376) (undo-tree-id320 . -376) (undo-tree-id321 . -376) (undo-tree-id322 . -376) (undo-tree-id323 . -376) (undo-tree-id324 . -376) (undo-tree-id325 . -376) (undo-tree-id326 . -376) (undo-tree-id327 . -376) (undo-tree-id328 . -376) (undo-tree-id329 . -376) (undo-tree-id330 . -376) (undo-tree-id331 . -376) (undo-tree-id332 . -376) (undo-tree-id333 . -376) (undo-tree-id334 . -376) (undo-tree-id335 . -376) (undo-tree-id336 . -376) (undo-tree-id337 . -376) (undo-tree-id338 . -376) (undo-tree-id339 . -376) (undo-tree-id340 . -376) (undo-tree-id341 . -376) (undo-tree-id342 . -376) (undo-tree-id343 . -376) (undo-tree-id344 . -376) (undo-tree-id345 . -376) (undo-tree-id346 . -376) (undo-tree-id347 . -376) (undo-tree-id348 . -376) (undo-tree-id349 . -376) (undo-tree-id350 . -376) (undo-tree-id351 . -376) (undo-tree-id352 . -376) (undo-tree-id353 . -376) (undo-tree-id354 . -376) (undo-tree-id355 . -376) (undo-tree-id356 . -376) (undo-tree-id357 . -376) (undo-tree-id358 . -376) (undo-tree-id359 . -376) (undo-tree-id360 . -376) (undo-tree-id361 . -376) (undo-tree-id362 . -382) (undo-tree-id363 . -382) (undo-tree-id364 . -382) (undo-tree-id365 . -382) (undo-tree-id366 . -382) (undo-tree-id367 . -382) (undo-tree-id368 . -382) (undo-tree-id369 . -382) (undo-tree-id370 . -382) (undo-tree-id371 . -382) (undo-tree-id372 . -382) (undo-tree-id373 . -382) (undo-tree-id374 . 286) (undo-tree-id375 . -410) (undo-tree-id376 . -410) (undo-tree-id377 . -410) (undo-tree-id378 . -410) (undo-tree-id379 . -410) (undo-tree-id380 . -410) (undo-tree-id381 . -410) (undo-tree-id382 . -410) (undo-tree-id383 . -410) (undo-tree-id384 . -410) (undo-tree-id385 . -410) (undo-tree-id386 . -410) (undo-tree-id387 . -410) (undo-tree-id388 . -410) (undo-tree-id389 . -410) (undo-tree-id390 . -410) (undo-tree-id391 . -410) (undo-tree-id392 . -410) (undo-tree-id393 . -410) (undo-tree-id394 . -410) (undo-tree-id395 . -410) (undo-tree-id396 . -410) (undo-tree-id397 . -410) (undo-tree-id398 . -410) (undo-tree-id399 . -410) (undo-tree-id400 . -410) (undo-tree-id401 . -410) (undo-tree-id402 . -55) (undo-tree-id403 . -55) (undo-tree-id404 . -55) (undo-tree-id405 . -55) (undo-tree-id406 . -55) (undo-tree-id407 . -55) (undo-tree-id408 . -55) (undo-tree-id409 . -55) (undo-tree-id410 . -55) (undo-tree-id411 . -55) (undo-tree-id412 . -55) (undo-tree-id413 . -55) (undo-tree-id414 . -55) (undo-tree-id415 . -55) (undo-tree-id416 . -55) (undo-tree-id417 . -55) (undo-tree-id418 . -693) (undo-tree-id419 . -693) (undo-tree-id420 . -693) (undo-tree-id421 . -693) (undo-tree-id422 . -693) (undo-tree-id423 . -693) (undo-tree-id424 . -693) (undo-tree-id425 . -693) (undo-tree-id426 . -693) (undo-tree-id427 . -693) (undo-tree-id428 . -692) (undo-tree-id429 . -692) (undo-tree-id430 . -692) (undo-tree-id431 . -692) (undo-tree-id432 . -692) (undo-tree-id433 . -692) (undo-tree-id434 . -692) (undo-tree-id435 . -692) (undo-tree-id436 . -692) (undo-tree-id437 . -692) (undo-tree-id438 . -692) (undo-tree-id439 . -692) (undo-tree-id440 . -693) (undo-tree-id441 . -693) (undo-tree-id442 . -693) (undo-tree-id443 . -657) (undo-tree-id444 . -498) (undo-tree-id445 . -436) (undo-tree-id446 . -420) (undo-tree-id447 . -343) (undo-tree-id448 . -207) (undo-tree-id449 . -25) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -693) (undo-tree-id456 . -376) (undo-tree-id457 . -693) 11007 (t 26015 33890 179487 341000)) nil (26015 33937 829089 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11658 . 11659) (nil fontified nil 11001 . 11659) (11001 . 11659)) nil (26015 33937 828926 0) 0 nil])
([nil nil ((11808 . 11816) (11794 . 11806) (#("    " 0 4 (fontified t)) . 11794) (undo-tree-id295 . -3) (11770 . 11786) (#("        " 0 8 (fontified t)) . 11770) (11723 . 11739) (#("        " 0 8 (fontified t)) . 11723) (11669 . 11685) (#("        " 0 8 (fontified t)) . 11669) (undo-tree-id296 . -2) (11638 . 11654) (#("        " 0 8 (fontified t)) . 11638) (11613 . 11629) (#("        " 0 8 (fontified t)) . 11613) (11588 . 11604) (#("        " 0 8 (fontified t)) . 11588) (11552 . 11564) (#("    " 0 4 (fontified t)) . 11552) (11537 . 11549) (#("    " 0 4 (fontified t)) . 11537) (11452 . 11468) (#("        " 0 8 (fontified t)) . 11452) (11407 . 11423) (#("        " 0 8 (fontified t)) . 11407) (11351 . 11363) (#("    " 0 4 (fontified t)) . 11351) (11335 . 11347) (#("    " 0 4 (fontified t)) . 11335) (11292 . 11308) (#("        " 0 8 (fontified t)) . 11292) (11200 . 11216) (#("        " 0 8 (fontified t)) . 11200) (11146 . 11162) (#("        " 0 8 (fontified t)) . 11146) (undo-tree-id297 . -1) (11057 . 11069) (#("    " 0 4 (fontified t)) . 11057) (11019 . 11027) (11001 . 11009) 11000) nil (26015 33937 828922 0) 0 nil])
([nil nil ((#(" wgpu::ShaderModuleDescriptor {
                label: Some(\"Light Shader\"),
                source: wgpu::ShaderSource::Wgsl(include_str!(\"light.wgsl\").into())," 0 1 (fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 29 (face font-lock-type-face fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-4-face) fontified t) 31 48 (fontified t) 48 53 (face font-lock-variable-name-face fontified t) 53 55 (fontified t) 55 59 (face font-lock-type-face fontified t) 59 60 (face (rainbow-delimiters-depth-5-face) fontified t) 60 74 (face font-lock-string-face fontified t) 74 75 (face (rainbow-delimiters-depth-5-face) fontified t) 75 93 (fontified t) 93 99 (face font-lock-variable-name-face fontified t) 99 101 (fontified t) 101 105 (face font-lock-constant-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 125 (face font-lock-type-face fontified t) 125 126 (face (rainbow-delimiters-depth-5-face) fontified t) 126 138 (face font-lock-preprocessor-face fontified t) 138 139 (face (rainbow-delimiters-depth-6-face) fontified t) 139 151 (face font-lock-string-face fontified t) 151 152 (face (rainbow-delimiters-depth-6-face) fontified t) 152 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-6-face) fontified t) 158 159 (face (rainbow-delimiters-depth-6-face) fontified t) 159 160 (face (rainbow-delimiters-depth-5-face) fontified t) 160 161 (fontified t)) . -11375) (undo-tree-id261 . -154) (undo-tree-id262 . -161) (undo-tree-id263 . -1) (undo-tree-id264 . -5) (undo-tree-id265 . -10) (undo-tree-id266 . -13) (undo-tree-id267 . -16) (undo-tree-id268 . -19) (undo-tree-id269 . -21) (undo-tree-id270 . -23) (undo-tree-id271 . -26) (undo-tree-id272 . -29) (undo-tree-id273 . -30) (undo-tree-id274 . -31) (undo-tree-id275 . -76) (undo-tree-id276 . -152) (undo-tree-id277 . -153) (undo-tree-id278 . -154) (undo-tree-id279 . -154) (undo-tree-id280 . -154) (undo-tree-id281 . -154) (undo-tree-id282 . -154) (undo-tree-id283 . -154) (undo-tree-id284 . -154) (undo-tree-id285 . -155) (undo-tree-id286 . -156) (undo-tree-id287 . -157) (undo-tree-id288 . -158) (undo-tree-id289 . -159) (undo-tree-id290 . -160) (undo-tree-id291 . -161) (undo-tree-id292 . -77) (undo-tree-id293 . -161) (undo-tree-id294 . -161) 11536) nil (26015 33937 828907 0) 0 nil])
([nil nil ((11375 . 11376)) nil (26015 33937 828868 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -11375) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 11376) nil (26015 33937 828867 0) 0 nil])
([nil nil ((11375 . 11378)) nil (26015 33937 828864 0) 0 nil])
([nil nil ((11376 . 11380) (#("wg" 0 2 (fontified nil)) . 11376) (11376 . 11378) (#("wgpu" 0 4 (fontified nil)) . -11376) (11376 . 11380) (#("wg" 0 2 (fontified t)) . -11376) (undo-tree-id250 . -2) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) 11378) nil (26015 33937 828862 0) 0 nil])
([nil nil ((11380 . 11386)) nil (26015 33937 828851 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11382 11397 #s(yas--snippet nil nil #s(yas--exit 11396 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11396 nil) 1 nil nil nil nil)) (11382 . 11397) (#("include_wgsl!($0)" 0 17 (fontified nil)) . 11382) (11382 . 11399) (#("incl" 0 4 (fontified nil)) . 11382) (11382 . 11386) (#("include_wgsl!(…)" 0 16 (fontified nil)) . -11382) (11382 . 11398) (#("incl" 0 4 (fontified t)) . -11382) (undo-tree-id234 . -4) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) 11386) nil (26015 33937 828848 0) 0 nil])
([nil nil ((11396 . 11398)) nil (26015 33937 828819 0) 0 nil])
([nil nil ((11397 . 11407)) nil (26015 33937 828817 0) 0 nil])
([nil nil ((11409 . 11410)) nil (26015 33937 828813 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -11420) (#("            " 0 12 (fontified nil)) . 11411) (11411 . 11423) (11411 . 11412) (t 26015 33937 835708 705000)) nil (26015 33943 651273 0) 0 nil])
([nil nil ((#("};" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (fontified t)) . 11420) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2)) nil (26015 33943 651270 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11420) (undo-tree-id458 . -1)) nil (26015 33943 651255 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -11424) 11420 (t 26015 33943 658025 428000)) nil (26015 33945 388596 0) 0 nil])
([nil nil ((14918 . 14927) (t 26015 33945 395355 314000)) nil (26015 34147 258160 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14919) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -14920) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#(" " 0 1 (fontified t)) . -14921) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#(" " 0 1 (fontified t)) . -14922) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#(" " 0 1 (fontified t)) . -14923) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -14924) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#(" " 0 1 (fontified t)) . -14925) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#(" " 0 1 (fontified t)) . -14926) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) 14927) nil (26015 34147 258155 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14919) (undo-tree-id528 . -1)) nil (26015 34147 258105 0) 0 nil])
([nil nil ((#("        
" 0 9 (fontified t)) . 14919) (undo-tree-id526 . -8) (undo-tree-id527 . -9)) nil (26015 34147 258102 0) 0 nil])
([nil nil ((14994 . 15002) (#("        " 0 8 (fontified nil)) . 14993) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (14992 . 15002)) nil (26015 34147 258099 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15011 . 15012) (nil fontified nil 15003 . 15012) (nil fontified nil 15002 . 15003) (15002 . 15012)) nil (26015 34147 258095 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15021 . 15022) (nil fontified nil 15013 . 15022) (nil fontified nil 15012 . 15013) (15012 . 15022)) nil (26015 34147 258093 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15031 . 15032) (nil fontified nil 15023 . 15032) (nil fontified nil 15022 . 15023) (15022 . 15032)) nil (26015 34147 258091 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15027) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#(" " 0 1 (fontified t)) . -15028) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#(" " 0 1 (fontified t)) . -15029) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (fontified t)) . -15030) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -15031) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 15032) nil (26015 34147 258088 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (rear-nonsticky t fontified t)) . 15003) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9)) nil (26015 34147 258062 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15003) (undo-tree-id491 . -1)) nil (26015 34147 258056 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (rear-nonsticky t fontified t)) . 15003) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9)) nil (26015 34147 258053 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15003) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1)) nil (26015 34147 258045 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15276 . 15277) (nil fontified nil 15003 . 15277) (15003 . 15277)) nil (26015 34147 258040 0) 0 nil])
([nil nil ((15278 . 15286) (#("    " 0 4 (face font-lock-comment-face fontified nil)) . 15278) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (15277 . 15278)) nil (26015 34147 258036 0) 0 nil])
([nil nil ((12201 . 12214) (t 26015 34147 265858 249000)) nil (26015 34181 829166 0) 0 nil])
([nil nil ((12214 . 12216)) nil (26015 34181 829165 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12213) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("l" 0 1 (fontified t)) . -12214) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#("i" 0 1 (fontified t)) . -12215) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 12216) nil (26015 34181 829163 0) 0 nil])
([nil nil ((3547 . 3552)) nil (26015 34181 829149 0) 0 nil])
([nil nil ((3552 . 3553)) nil (26015 34181 829148 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3552) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 3553) nil (26015 34181 829147 0) 0 nil])
([nil nil ((3552 . 3573)) nil (26015 34181 829143 0) 0 nil])
([nil nil ((3573 . 3577)) nil (26015 34181 829142 0) 0 nil])
([nil nil ((3575 . 3579) (#("wp" 0 2 (fontified nil)) . 3575) (3575 . 3577) (#("wgpu" 0 4 (fontified nil)) . -3575) (3575 . 3579) (#("wp" 0 2 (fontified t)) . -3575) (undo-tree-id623 . -2) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) 3577) nil (26015 34181 829140 0) 0 nil])
([nil nil ((3579 . 3584)) nil (26015 34181 829128 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -3583) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) 3584) nil (26015 34181 829126 0) 0 nil])
([nil nil ((3583 . 3584)) nil (26015 34181 829119 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -3583) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 3584) nil (26015 34181 829118 0) 0 nil])
([nil nil ((3583 . 3588)) nil (26015 34181 829113 0) 0 nil])
([nil nil ((3581 . 3595) (#("RenderP" 0 7 (fontified nil)) . 3581) (3581 . 3588) (#("RenderPipeline" 0 14 (fontified nil)) . -3581) (3581 . 3595) (#("RenderP" 0 7 (face font-lock-type-face fontified t)) . -3581) (undo-tree-id581 . -7) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -5) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -7) (undo-tree-id608 . -7) (undo-tree-id609 . -7) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) 3588) nil (26015 34181 829109 0) 0 nil])
([nil nil ((3595 . 3596)) nil (26015 34181 829068 0) 0 nil])
([nil nil ((12250 . 12263) (t 26015 34181 836495 327000)) nil (26015 34187 955539 0) 0 nil])
([nil nil ((12263 . 12264)) nil (26015 34187 955538 0) 0 nil])
([nil nil ((12263 . 12284) (#("l" 0 1 (fontified nil)) . 12263) (12263 . 12264) (#("light_render_pipeline" 0 21 (fontified nil)) . -12263) (12263 . 12284) (#("l" 0 1 (fontified t)) . -12263) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) 12264) nil (26015 34187 955535 0) 0 nil])
([nil nil ((12284 . 12285)) nil (26015 34187 955518 0) 0 nil])
([nil nil ((11287 . 11308) (t 26015 34187 962940 622000)) nil (26015 34363 637298 0) 0 nil])
([nil nil ((11335 . 11355) (#(" " 0 1 (fontified nil)) . 11334) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (11335 . 11336)) nil (26015 34363 637296 0) 0 nil])
([nil nil ((11379 . 11396)) nil (26015 34363 637277 0) 0 nil])
([nil nil ((9996 . 9998) (t 26015 34363 644813 776000)) nil (26015 34387 726273 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9996) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -9997) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) 9998 (t 26015 34387 734378 293000)) nil (26015 34397 966183 0) 0 nil])
([nil nil ((15156 . 15157) (t 26015 34397 973363 76000)) nil (26015 34611 580644 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -15156) (undo-tree-id724 . -1) (undo-tree-id725 . -1) 15157) nil (26015 34611 580643 0) 0 nil])
([nil nil ((15156 . 15160)) nil (26015 34611 580640 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15156 15163 #s(yas--snippet nil nil #s(yas--exit 15162 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15162 nil) 2 nil nil nil nil)) (15156 . 15163) (#("info!($0)" 0 9 (fontified nil)) . 15156) (15156 . 15165) (#("info" 0 4 (fontified nil)) . 15156) (15156 . 15160) (#("info!(…)" 0 8 (fontified nil)) . -15156) (15156 . 15164) (#("info" 0 4 (fontified t)) . -15156) (undo-tree-id714 . -4) (undo-tree-id715 . -1) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) 15160) nil (26015 34611 580638 0) 0 nil])
([nil nil ((15162 . 15164)) nil (26015 34611 580624 0) 0 nil])
([nil nil ((15163 . 15168)) nil (26015 34611 580623 0) 0 nil])
([nil nil ((15168 . 15189)) nil (26015 34611 580622 0) 0 nil])
([nil nil ((15189 . 15190)) nil (26015 34611 580621 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . -15189) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 15190) nil (26015 34611 580620 0) 0 nil])
([nil nil ((15189 . 15190)) nil (26015 34611 580605 0) 0 nil])
([nil nil ((15192 . 15193)) nil (26015 34611 580601 0) 0 nil])
([nil nil ((15470 . 15478) (#("        " 0 8 (fontified nil)) . 15469) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (15477 . 15478) (t 26015 34611 588029 960000)) nil (26015 34691 917332 0) 0 nil])
([nil nil ((15478 . 15482)) nil (26015 34691 917321 0) 0 nil])
([nil nil ((apply yas--snippet-revive 15478 15485 #s(yas--snippet nil nil #s(yas--exit 15484 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 15484 nil) 3 nil nil nil nil)) (15478 . 15485) (#("info!($0)" 0 9 (fontified nil)) . 15478) (15478 . 15487) (#("info" 0 4 (fontified nil)) . 15478) (15478 . 15482) (#("info!(…)" 0 8 (fontified nil)) . -15478) (15478 . 15486) (#("info" 0 4 (fontified t)) . -15478) (undo-tree-id757 . -4) (undo-tree-id758 . -1) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -4) (undo-tree-id764 . -4) 15482) nil (26015 34691 917319 0) 0 nil])
([nil nil ((15484 . 15486)) nil (26015 34691 917308 0) 0 nil])
([nil nil ((15485 . 15490)) nil (26015 34691 917307 0) 0 nil])
([nil nil ((#("        render_pass.set_pipeline(&self.render_pipeline); // 2." 0 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t) 33 34 (face rust-ampersand-face fontified t) 34 38 (face font-lock-keyword-face fontified t) 38 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 57 (fontified t) 57 60 (face font-lock-comment-delimiter-face fontified t) 60 62 (face font-lock-comment-face fontified t)) . 15010) (undo-tree-id750 . -62) (undo-tree-id751 . -62) (undo-tree-id752 . -62) (undo-tree-id753 . -62) (undo-tree-id754 . -62) (undo-tree-id755 . -62) (undo-tree-id756 . -62)) nil (26015 34691 917306 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15010) (undo-tree-id748 . -1) (undo-tree-id749 . -1)) nil (26015 34691 917298 0) 0 nil])
([nil nil ((15429 . 15442)) nil (26015 34691 917296 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 15504 . 15505) (nil fontified nil 15504 . 15505) (nil fontified nil 15502 . 15504) (nil fontified nil 15499 . 15502) (nil fontified nil 15497 . 15499) (nil fontified nil 15496 . 15497) (nil fontified nil 15480 . 15496) (nil fontified nil 15476 . 15480) (nil fontified nil 15475 . 15476) (nil fontified nil 15474 . 15475) (nil fontified nil 15442 . 15474) (15442 . 15505)) nil (26015 34691 917294 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -15442) 15470) nil (26015 34691 917290 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -15496) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) 15497) nil (26015 34691 917288 0) 0 nil])
([nil nil ((15429 . 15430)) nil (26015 34691 917267 0) 0 nil])
([nil nil ((15427 . 15438)) nil (26015 34691 917266 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -15437) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 15438) nil (26015 34691 917264 0) 0 nil])
([nil nil ((15437 . 15449)) nil (26015 34691 917261 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . -15448) (undo-tree-id726 . -1) (undo-tree-id727 . -1) 15449) nil (26015 34691 917259 0) 0 nil])
([nil nil ((15448 . 15449)) nil (26015 34691 917246 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15461) (undo-tree-id775 . -4) 15480 (t 26015 34691 924953 569000)) nil (26015 34693 923314 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 8628 . 8629) (nil fontified nil 8599 . 8629) (8599 . 8629) (t 26015 34693 931229 884000)) nil (26015 37160 302259 0) 0 nil])
([nil nil ((8599 . 8600)) nil (26015 37160 302254 0) 0 nil])
([nil nil ((#("id()" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-5-face) fontified t) 3 4 (face (rainbow-delimiters-depth-5-face) fontified t)) . -16566) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) 16570 (t 26015 37160 311667 742000)) nil (26015 47228 968874 0) 0 nil])
([nil nil ((#("window()." 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-5-face) fontified t) 7 8 (face (rainbow-delimiters-depth-5-face) fontified t) 8 9 (fontified t)) . -16557) (undo-tree-id951 . -9) (undo-tree-id952 . -9) (undo-tree-id953 . -9) (undo-tree-id954 . -9) (undo-tree-id955 . -9) (undo-tree-id956 . -9) (undo-tree-id957 . -9) (undo-tree-id958 . -9) (undo-tree-id959 . -9) (undo-tree-id960 . -9) (undo-tree-id961 . -9) (undo-tree-id962 . -9) (undo-tree-id963 . -9) (undo-tree-id964 . -9) (undo-tree-id965 . -9) (undo-tree-id966 . -9) (undo-tree-id967 . -9) (undo-tree-id968 . -9) (undo-tree-id969 . -9) (undo-tree-id970 . -9) (undo-tree-id971 . -9) 16566) nil (26015 47228 968852 0) 0 nil])
([nil nil ((#("state." 0 6 (fontified t)) . -16551) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (undo-tree-id945 . -6) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id949 . -6) (undo-tree-id950 . -6) 16557) nil (26015 47228 968830 0) 0 nil])
([nil nil ((#("id == " 0 6 (fontified t)) . -16545) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) 16551) nil (26015 47228 968806 0) 0 nil])
([nil nil ((#("window_" 0 7 (fontified t)) . -16538) (undo-tree-id882 . -7) (undo-tree-id883 . -7) (undo-tree-id884 . -7) (undo-tree-id885 . -7) (undo-tree-id886 . -7) (undo-tree-id887 . -7) (undo-tree-id888 . -7) (undo-tree-id889 . -7) (undo-tree-id890 . -7) (undo-tree-id891 . -7) (undo-tree-id892 . -7) (undo-tree-id893 . -7) (undo-tree-id894 . -7) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) 16545) nil (26015 47228 968781 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16534) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#("i" 0 1 (fontified t)) . -16535) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16536) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#(" " 0 1 (fontified t)) . -16537) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) 16538) nil (26015 47228 968750 0) 0 nil])
([nil nil ((#("                window_id," 0 26 (fontified t)) . 16494) (undo-tree-id1002 . -26) (undo-tree-id1003 . -26) (undo-tree-id1004 . -26) (undo-tree-id1005 . -26) (undo-tree-id1006 . -26) (undo-tree-id1007 . -26) (undo-tree-id1008 . -26) (undo-tree-id1009 . -26) (undo-tree-id1010 . -26) (undo-tree-id1011 . -26) (t 26015 47228 979801 284000)) nil (26015 47237 93797 0) 0 nil])
([nil nil ((16494 . 16510)) nil (26015 47237 93785 0) 0 nil])
([nil nil ((16510 . 16512)) nil (26015 47237 93783 0) 0 nil])
([nil nil ((#("。" 0 1 (fontified t)) . -16510) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (#("。" 0 1 (fontified t)) . -16511) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 16512) nil (26015 47237 93781 0) 0 nil])
([nil nil ((16510 . 16512)) nil (26015 47470 437095 0) 0 nil])
([nil nil ((#("    camera: Camera,
    camera_controller: CameraController," 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 12 (fontified t) 12 18 (face font-lock-type-face fontified t) 18 24 (fontified t) 24 41 (face font-lock-variable-name-face fontified t) 41 43 (fontified t) 43 59 (face font-lock-type-face fontified t) 59 60 (fontified t)) . 3273) (undo-tree-id1114 . -60) (undo-tree-id1115 . -19) (undo-tree-id1116 . -19) (undo-tree-id1117 . -19) (undo-tree-id1118 . -19) (undo-tree-id1119 . -19) (undo-tree-id1120 . -60) (undo-tree-id1121 . -60) (undo-tree-id1122 . -60) (undo-tree-id1123 . -59) (undo-tree-id1124 . -50) (undo-tree-id1125 . -45) (undo-tree-id1126 . -40) (undo-tree-id1127 . -36) (undo-tree-id1128 . -33) (undo-tree-id1129 . -30) (undo-tree-id1130 . -29) (undo-tree-id1131 . -7) (undo-tree-id1132 . -6) (undo-tree-id1133 . -5) (undo-tree-id1134 . -4) (undo-tree-id1135 . -3) (undo-tree-id1136 . -2) (undo-tree-id1137 . -60) (t 26015 47471 876906 897000)) nil (26015 48076 886650 0) 0 nil] [nil nil ((17457 . 17478) (t 26015 47237 101366 18000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 17457) (undo-tree-id1083 . -21) (undo-tree-id1084 . -21) (undo-tree-id1085 . -21) (undo-tree-id1086 . -21) (undo-tree-id1087 . -21) (undo-tree-id1088 . -21) (undo-tree-id1089 . -21) (undo-tree-id1090 . -21) (undo-tree-id1091 . -21) (undo-tree-id1092 . -21) (undo-tree-id1093 . -21) (undo-tree-id1094 . -21) (undo-tree-id1095 . -21) (undo-tree-id1096 . -21) (undo-tree-id1097 . -21) (undo-tree-id1098 . -21) (undo-tree-id1099 . -21) (undo-tree-id1100 . -21) (undo-tree-id1101 . -21) (undo-tree-id1102 . -21) (undo-tree-id1103 . -21) (undo-tree-id1104 . -21) (undo-tree-id1105 . -21) (undo-tree-id1106 . -21) (undo-tree-id1107 . -21) (undo-tree-id1108 . -21) (undo-tree-id1109 . -21) (undo-tree-id1110 . -21) (undo-tree-id1111 . -1) (undo-tree-id1112 . -21) (undo-tree-id1113 . -21)) (26015 47470 95553 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3464 . 3465) (nil fontified nil 3273 . 3465) (3273 . 3465)) nil (26015 48076 886610 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 18092 . 18093) (nil fontified nil 18092 . 18093) (nil fontified nil 18070 . 18092) (nil fontified nil 18069 . 18070) (nil fontified nil 18066 . 18069) (nil fontified nil 18060 . 18066) (nil fontified nil 18059 . 18060) (nil fontified nil 18053 . 18059) (nil fontified nil 18051 . 18053) (nil fontified nil 18044 . 18051) (nil fontified nil 18043 . 18044) (nil fontified nil 18042 . 18043) (nil fontified nil 18040 . 18042) (nil fontified nil 18039 . 18040) (nil fontified nil 18038 . 18039) (nil fontified nil 18037 . 18038) (nil fontified nil 18034 . 18037) (nil fontified nil 18010 . 18034) (nil fontified nil 17972 . 18010) (nil fontified nil 17953 . 17972) (nil fontified nil 17936 . 17953) (nil fontified nil 17933 . 17936) (nil fontified nil 17907 . 17933) (nil fontified nil 17906 . 17907) (nil fontified nil 17905 . 17906) (nil fontified nil 17895 . 17905) (nil fontified nil 17894 . 17895) (nil fontified nil 17892 . 17894) (nil fontified nil 17891 . 17892) (nil fontified nil 17880 . 17891) (nil fontified nil 17878 . 17880) (nil fontified nil 17866 . 17878) (nil fontified nil 17864 . 17866) (nil fontified nil 17860 . 17864) (nil fontified nil 17859 . 17860) (nil fontified nil 17856 . 17859) (nil fontified nil 17832 . 17856) (nil fontified nil 17779 . 17832) (nil fontified nil 17776 . 17779) (nil fontified nil 17750 . 17776) (nil fontified nil 17749 . 17750) (nil fontified nil 17739 . 17749) (nil fontified nil 17738 . 17739) (nil fontified nil 17725 . 17738) (nil fontified nil 17724 . 17725) (nil fontified nil 17722 . 17724) (nil fontified nil 17721 . 17722) (nil fontified nil 17717 . 17721) (nil fontified nil 17715 . 17717) (nil fontified nil 17703 . 17715) (nil fontified nil 17701 . 17703) (nil fontified nil 17697 . 17701) (nil fontified nil 17696 . 17697) (nil fontified nil 17693 . 17696) (nil fontified nil 17669 . 17693) (nil fontified nil 17654 . 17669) (nil fontified nil 17637 . 17654) (nil fontified nil 17634 . 17637) (nil fontified nil 17609 . 17634) (nil fontified nil 17608 . 17609) (nil fontified nil 17607 . 17608) (nil fontified nil 17606 . 17607) (nil fontified nil 17605 . 17606) (nil fontified nil 17603 . 17605) (nil fontified nil 17602 . 17603) (nil fontified nil 17601 . 17602) (nil fontified nil 17600 . 17601) (nil fontified nil 17598 . 17600) (nil fontified nil 17573 . 17598) (nil fontified nil 17572 . 17573) (nil fontified nil 17571 . 17572) (nil fontified nil 17570 . 17571) (nil fontified nil 17565 . 17570) (nil fontified nil 17563 . 17565) (nil fontified nil 17558 . 17563) (nil fontified nil 17556 . 17558) (nil fontified nil 17552 . 17556) (nil fontified nil 17551 . 17552) (nil fontified nil 17538 . 17551) (nil fontified nil 17533 . 17538) (nil fontified nil 17513 . 17533) (nil fontified nil 17511 . 17513) (nil fontified nil 17510 . 17511) (nil fontified nil 17509 . 17510) (nil fontified nil 17492 . 17509) (nil fontified nil 17478 . 17492) (17478 . 18093)) ((#("                   state.update();
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }" 0 14 (fontified nil) 14 19 (fontified nil) 19 31 (fontified nil) 31 32 (face (rainbow-delimiters-depth-7-face) fontified nil) 32 33 (face (rainbow-delimiters-depth-7-face) fontified nil) 33 35 (fontified nil) 35 55 (fontified nil) 55 60 (face font-lock-keyword-face fontified nil) 60 73 (fontified nil) 73 74 (face (rainbow-delimiters-depth-7-face) fontified nil) 74 78 (face font-lock-constant-face fontified nil) 78 80 (fontified nil) 80 85 (face font-lock-type-face fontified nil) 85 87 (fontified nil) 87 92 (face font-lock-type-face fontified nil) 92 93 (face (rainbow-delimiters-depth-7-face) fontified nil) 93 94 (fontified nil) 94 95 (face (rainbow-delimiters-depth-7-face) fontified nil) 95 96 (fontified nil) 96 120 (fontified nil) 120 122 (face font-lock-type-face fontified nil) 122 123 (face (rainbow-delimiters-depth-8-face) fontified nil) 123 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-8-face) fontified nil) 125 127 (fontified nil) 127 128 (syntax-table (1) fontified nil) 128 129 (fontified nil) 129 130 (face (rainbow-delimiters-depth-8-face) fontified nil) 130 131 (face (rainbow-delimiters-depth-8-face) fontified nil) 131 132 (fontified nil) 132 156 (fontified nil) 156 159 (face font-lock-comment-delimiter-face fontified nil) 159 176 (face font-lock-comment-face fontified nil) 176 191 (face font-lock-comment-face fontified nil) 191 215 (fontified nil) 215 218 (face font-lock-type-face fontified nil) 218 219 (face (rainbow-delimiters-depth-8-face) fontified nil) 219 223 (face font-lock-constant-face fontified nil) 223 225 (fontified nil) 225 237 (face font-lock-type-face fontified nil) 237 239 (fontified nil) 239 243 (face font-lock-type-face fontified nil) 243 244 (face (rainbow-delimiters-depth-8-face) fontified nil) 244 246 (fontified nil) 246 247 (syntax-table (1) fontified nil) 247 260 (fontified nil) 260 261 (face (rainbow-delimiters-depth-8-face) fontified nil) 261 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-8-face) fontified nil) 272 274 (fontified nil) 274 298 (fontified nil) 298 301 (face font-lock-comment-delimiter-face fontified nil) 301 354 (face font-lock-comment-face fontified nil) 354 378 (fontified nil) 378 381 (face font-lock-type-face fontified nil) 381 382 (face (rainbow-delimiters-depth-8-face) fontified nil) 382 386 (face font-lock-constant-face fontified nil) 386 388 (fontified nil) 388 400 (face font-lock-type-face fontified nil) 400 402 (fontified nil) 402 413 (face font-lock-type-face fontified nil) 413 414 (face (rainbow-delimiters-depth-8-face) fontified nil) 414 416 (fontified nil) 416 417 (syntax-table (1) fontified nil) 417 427 (fontified nil) 427 428 (face (rainbow-delimiters-depth-8-face) fontified nil) 428 429 (face (rainbow-delimiters-depth-8-face) fontified nil) 429 431 (fontified nil) 431 455 (fontified nil) 455 458 (face font-lock-comment-delimiter-face fontified nil) 458 475 (face font-lock-comment-face fontified nil) 475 494 (face font-lock-comment-face fontified nil) 494 532 (face font-lock-comment-face fontified nil) 532 556 (fontified nil) 556 559 (face font-lock-type-face fontified nil) 559 560 (face (rainbow-delimiters-depth-8-face) fontified nil) 560 561 (fontified nil) 561 562 (face (rainbow-delimiters-depth-8-face) fontified nil) 562 564 (fontified nil) 564 565 (syntax-table (1) fontified nil) 565 566 (fontified nil) 566 573 (face font-lock-constant-face fontified nil) 573 575 (fontified nil) 575 581 (face font-lock-preprocessor-face fontified nil) 581 582 (face (rainbow-delimiters-depth-8-face) fontified nil) 582 588 (face font-lock-string-face fontified nil) 588 591 (fontified nil) 591 592 (face (rainbow-delimiters-depth-8-face) fontified nil) 592 594 (fontified nil) 594 614 (fontified nil) 614 615 (face (rainbow-delimiters-depth-7-face) fontified nil rear-nonsticky nil)) . 17478) (undo-tree-id1056 . -474) (undo-tree-id1057 . -31) (undo-tree-id1058 . -474) (undo-tree-id1059 . -474) (undo-tree-id1060 . -474) (undo-tree-id1061 . -474) (undo-tree-id1062 . -474) (undo-tree-id1063 . -474) (undo-tree-id1064 . -474) (undo-tree-id1065 . -474) (undo-tree-id1066 . -474) (undo-tree-id1067 . -474) (undo-tree-id1068 . -474) (undo-tree-id1069 . -474) (undo-tree-id1070 . -474) (undo-tree-id1071 . -474) (undo-tree-id1072 . -474) (undo-tree-id1073 . -474) (undo-tree-id1074 . -474) (undo-tree-id1075 . -474) (undo-tree-id1076 . -474) (undo-tree-id1077 . -474) (undo-tree-id1078 . -474) (undo-tree-id1079 . -474) (undo-tree-id1080 . -474) (undo-tree-id1081 . -474) (undo-tree-id1082 . -31) (nil fontified t 17511 . 17513) (nil fontified t 17573 . 17574) (nil fontified t 17609 . 17610) (nil fontified t 17654 . 17669) (nil fontified t 17750 . 17752) (nil fontified t 17779 . 17832) (nil fontified t 17907 . 17909) (nil fontified t 17972 . 18010) (nil fontified t 18070 . 18072) (nil rear-nonsticky t 18092 . 18093)) (26015 47469 709799 0) 0 nil])
([nil nil ((#("
        let camera = Camera {
            // position the camera 1 unit up and 2 units back
            // +z is out of the screen
            eye: (0.0, 10.0, 2.0).into(),
            // have it look at the origin
            target: (0.0, 5.0, 0.0).into(),
            // which way is \"up\"
            up: cgmath::Vector3::unit_y(),
            aspect: config.width as f32 / config.height as f32,
            fovy: 45.0,
            znear: 0.1,
            zfar: 100.0,
        };
" 0 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 19 (face font-lock-variable-name-face fontified t) 19 22 (fontified t) 22 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-3-face) fontified t) 30 43 (fontified t) 43 46 (face font-lock-comment-delimiter-face fontified t) 46 93 (face font-lock-comment-face fontified t) 93 105 (fontified t) 105 108 (face font-lock-comment-delimiter-face fontified t) 108 132 (face font-lock-comment-face fontified t) 132 144 (fontified t) 144 147 (face font-lock-variable-name-face fontified t) 147 149 (fontified t) 149 150 (face (rainbow-delimiters-depth-4-face) fontified t) 150 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-4-face) fontified t) 165 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-4-face) fontified t) 171 172 (face (rainbow-delimiters-depth-4-face) fontified t) 172 186 (fontified t) 186 189 (face font-lock-comment-delimiter-face fontified t) 189 216 (face font-lock-comment-face fontified t) 216 217 (fontified t) 217 228 (fontified t) 228 234 (fontified t face font-lock-variable-name-face) 234 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-4-face)) 237 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-4-face)) 251 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-4-face)) 257 258 (fontified t face (rainbow-delimiters-depth-4-face)) 258 260 (fontified t) 260 272 (fontified t) 272 275 (face font-lock-comment-delimiter-face fontified t) 275 293 (face font-lock-comment-face fontified t) 293 305 (fontified t) 305 307 (face font-lock-variable-name-face fontified t) 307 309 (fontified t) 309 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 324 (face font-lock-type-face fontified t) 324 332 (fontified t) 332 333 (face (rainbow-delimiters-depth-4-face) fontified t) 333 334 (face (rainbow-delimiters-depth-4-face) fontified t) 334 348 (fontified t) 348 354 (face font-lock-variable-name-face fontified t) 354 369 (fontified t) 369 371 (face font-lock-keyword-face fontified t) 371 372 (fontified t) 372 375 (face font-lock-type-face fontified t) 375 392 (fontified t) 392 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 398 (face font-lock-type-face fontified t) 398 412 (fontified t) 412 416 (face font-lock-variable-name-face fontified t) 416 436 (fontified t) 436 441 (face font-lock-variable-name-face fontified t) 441 460 (fontified t) 460 464 (face font-lock-variable-name-face fontified t) 464 473 (fontified t) 473 481 (fontified t) 481 482 (face (rainbow-delimiters-depth-3-face) fontified t) 482 484 (fontified t)) . 7800) (undo-tree-id1150 . -484) (undo-tree-id1151 . -484) (undo-tree-id1152 . -484) (undo-tree-id1153 . -484) (undo-tree-id1154 . -483) (undo-tree-id1155 . -465) (undo-tree-id1156 . -437) (undo-tree-id1157 . -411) (undo-tree-id1158 . -301) (undo-tree-id1159 . -222) (undo-tree-id1160 . -178) (undo-tree-id1161 . -135) (undo-tree-id1162 . -95) (undo-tree-id1163 . -32) (undo-tree-id1164 . -1) (undo-tree-id1165 . -484) (t 26015 48076 896953 761000)) nil (26015 48096 91638 0) 0 nil])
([nil nil ((#("                   " 0 14 (fontified t) 14 19 (fontified t)) . -17478) 17509) ((17478 . 17497)) (26015 47469 380943 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 8173 . 8174) (nil fontified nil 7800 . 8174) (7800 . 8174)) nil (26015 48096 91622 0) 0 nil])
([nil nil ((17407 . 17409)) ((#(".." 0 1 (fontified t) 1 2 (fontified t)) . 17407) (undo-tree-id1047 . -2) (undo-tree-id1048 . -1) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -2)) (26015 47469 57167 0) 0 nil])
([nil nil ((#("        // ..." 0 8 (fontified t) 8 11 (face font-lock-comment-delimiter-face fontified t) 11 14 (face font-lock-comment-face fontified t)) . 8084) (undo-tree-id1139 . -14) (undo-tree-id1140 . -14) (undo-tree-id1141 . -14) (undo-tree-id1142 . -14) (undo-tree-id1143 . -14) (undo-tree-id1144 . -14) (undo-tree-id1145 . -14) (undo-tree-id1146 . -14) (undo-tree-id1147 . -14) (undo-tree-id1148 . -14) (undo-tree-id1149 . -14)) nil (26015 48096 91619 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -17407) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("." 0 1 (fontified t)) . -17408) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) 17409) ((17407 . 17409)) (26015 47468 696806 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8084) (undo-tree-id1138 . -1)) nil (26015 48096 91604 0) 0 nil])
([nil nil ((17407 . 17409)) ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . 17407) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (t 26015 47426 53605 460000)) (26015 47426 44432 0) 0 nil])
([nil nil ((#("        camera_uniform.update_view_proj(&camera);" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (face rust-ampersand-face fontified t) 41 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-3-face) fontified t) 48 49 (fontified t)) . 8215) (undo-tree-id1174 . -49) (undo-tree-id1175 . -49) (undo-tree-id1176 . -49) (undo-tree-id1177 . -49) (undo-tree-id1178 . -49) (undo-tree-id1179 . -49) (undo-tree-id1180 . -49) (t 26015 48096 100611 30000)) nil (26015 48122 342418 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 8215) (undo-tree-id1173 . -1)) nil (26015 48122 342410 0) 0 nil])
([nil nil ((8215 . 8216)) nil (26015 48122 342408 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -8215) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) 8216) nil (26015 48122 342407 0) 0 nil])
([nil nil ((#("        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (face rust-ampersand-face fontified t) 41 49 (fontified t) 49 50 (face rust-ampersand-face fontified t) 50 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 63 (fontified t) 63 66 (face font-lock-comment-delimiter-face fontified t) 66 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t rear-nonsticky t)) . 8085) (undo-tree-id1166 . -74)) nil (26015 48122 342399 0) 0 nil])
([nil nil ((8140 . 8149)) nil (26015 48122 342382 0) 0 nil])
([nil nil ((nil fontified nil 8222 . 8223) (nil fontified nil 8215 . 8222) (nil fontified nil 8212 . 8215) (nil fontified nil 8210 . 8212) (nil fontified nil 8209 . 8210) (nil fontified nil 8199 . 8209) (nil fontified nil 8198 . 8199) (nil fontified nil 8190 . 8198) (nil fontified nil 8189 . 8190) (nil fontified nil 8188 . 8189) (nil fontified nil 8149 . 8188) (8149 . 8223)) nil (26015 48122 342380 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -8149) 8201) nil (26015 48122 342372 0) 0 nil])
([nil nil ((#("        let camera_controller = CameraController::new(1.0);" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 29 (face font-lock-variable-name-face fontified t) 29 32 (fontified t) 32 48 (face font-lock-type-face fontified t) 48 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-3-face) fontified t) 54 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-3-face) fontified t) 58 59 (fontified t)) . 10520) (undo-tree-id1183 . -59) (undo-tree-id1184 . -59) (undo-tree-id1185 . -59) (undo-tree-id1186 . -59) (undo-tree-id1187 . -59) (undo-tree-id1188 . -59) (undo-tree-id1189 . -59) (t 26015 48122 352339 350000)) nil (26015 48129 761537 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10520) (undo-tree-id1182 . -1)) nil (26015 48129 761529 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10520) (undo-tree-id1181 . -1)) nil (26015 48129 761524 0) 0 nil])
([nil nil ((#("           
            camera,
            camera_controller," 0 16 (fontified t) 16 32 (fontified t) 32 62 (fontified t)) . 12004) (undo-tree-id1220 . -62) (undo-tree-id1221 . -31) (undo-tree-id1222 . -31) (undo-tree-id1223 . -31) (undo-tree-id1224 . -29) (undo-tree-id1225 . -28) (undo-tree-id1226 . -26) (undo-tree-id1227 . -25) (undo-tree-id1228 . -31) (undo-tree-id1229 . -24) (undo-tree-id1230 . -24) (undo-tree-id1231 . -62) (undo-tree-id1232 . -62) (undo-tree-id1233 . -62) (undo-tree-id1234 . -60) (undo-tree-id1235 . -59) (undo-tree-id1236 . -57) (undo-tree-id1237 . -52) (undo-tree-id1238 . -49) (undo-tree-id1239 . -47) (undo-tree-id1240 . -45) (undo-tree-id1241 . -42) (undo-tree-id1242 . -40) (undo-tree-id1243 . -39) (undo-tree-id1244 . -37) (undo-tree-id1245 . -36) (undo-tree-id1246 . -35) (undo-tree-id1247 . -34) (undo-tree-id1248 . -33) (undo-tree-id1249 . -32) (undo-tree-id1250 . -1) (undo-tree-id1251 . -31) (undo-tree-id1252 . -62) 12005 (t 26015 48129 770685 413000)) nil (26015 48151 98327 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12146 . 12147) (nil fontified nil 12004 . 12147) (12004 . 12147)) nil (26015 48151 98290 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12015) 12006) nil (26015 48151 98288 0) 0 nil])
([nil nil ((#(" // NEW!" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 8 (face font-lock-comment-face fontified t)) . 12046) (undo-tree-id1219 . -8)) nil (26015 48151 98287 0) 0 nil])
([nil nil ((#(" // NEW!" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face rear-nonsticky t fontified t)) . 12130) (undo-tree-id1209 . -8) (undo-tree-id1210 . -8) (undo-tree-id1211 . -8) (undo-tree-id1212 . -8) (undo-tree-id1213 . -8) (undo-tree-id1214 . -8) (undo-tree-id1215 . -7) (undo-tree-id1216 . -4) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8)) nil (26015 48151 98284 0) 0 nil])
([nil nil ((#("            // ..." 0 12 (fontified t) 12 15 (face font-lock-comment-delimiter-face fontified t) 15 18 (face font-lock-comment-face fontified t)) . 12078) (undo-tree-id1191 . -18) (undo-tree-id1192 . -18) (undo-tree-id1193 . -17) (undo-tree-id1194 . -15) (undo-tree-id1195 . -14) (undo-tree-id1196 . -13) (undo-tree-id1197 . -12) (undo-tree-id1198 . -11) (undo-tree-id1199 . -10) (undo-tree-id1200 . -18) (undo-tree-id1201 . -18) (undo-tree-id1202 . -18) (undo-tree-id1203 . -18) (undo-tree-id1204 . -18) (undo-tree-id1205 . -18) (undo-tree-id1206 . -18) (undo-tree-id1207 . -18) (undo-tree-id1208 . -18)) nil (26015 48151 98272 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12078) (undo-tree-id1190 . -1)) nil (26015 48151 98253 0) 0 nil])
([nil nil ((12111 . 12124)) nil (26015 48151 98241 0) 0 nil])
([nil nil ((12915 . 12928) (t 26015 48151 109615 892000)) nil (26015 48171 574773 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12988 . 12989) (nil fontified nil 12928 . 12989) (12928 . 12989)) nil (26015 48171 574771 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12928) 12984) nil (26015 48171 574766 0) 0 nil])
([nil nil ((#("        self.camera_controller.process_events(event)" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 36 (fontified t) 36 40 (fontified t) 40 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-3-face) fontified t)) . 13071) (undo-tree-id1322 . -52) (undo-tree-id1323 . -52) (undo-tree-id1324 . -52) (undo-tree-id1325 . -52) (undo-tree-id1326 . -52) (undo-tree-id1327 . -52) (undo-tree-id1328 . -52) (t 26015 48171 586288 598000)) nil (26015 48240 112893 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13071) (undo-tree-id1321 . -1)) nil (26015 48240 112885 0) 0 nil])
([nil nil ((13074 . 13078) (#("        " 0 8 (fontified nil)) . 13073) (13073 . 13081) (#("    " 0 4 (fontified nil)) . 13073) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (13073 . 13078) (#("        " 0 8 (fontified nil)) . 13072) (13072 . 13080) (#("    " 0 4 (fontified nil)) . 13072) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (13076 . 13077) (#("        " 0 8 (fontified nil)) . 13071) (13071 . 13079) (13071 . 13072)) nil (26015 48240 112882 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13752 . 13753) (nil fontified nil 13071 . 13753) (13071 . 13753)) nil (26015 48240 112872 0) 0 nil])
([nil nil ((13820 . 13828) (#("    " 0 4 (fontified t)) . 13820) (13804 . 13808) (13790 . 13794) (13761 . 13777) (#("            " 0 12 (fontified t)) . 13761) (13691 . 13707) (#("            " 0 12 (fontified t)) . 13691) (13680 . 13684) (13653 . 13669) (#("            " 0 12 (fontified t)) . 13653) (undo-tree-id1313 . -9) (13630 . 13646) (#("            " 0 12 (fontified t)) . 13630) (13587 . 13603) (#("            " 0 12 (fontified t)) . 13587) (13557 . 13561) (13543 . 13547) (13514 . 13530) (#("            " 0 12 (fontified t)) . 13514) (undo-tree-id1314 . -8) (13452 . 13468) (#("            " 0 12 (fontified t)) . 13452) (13405 . 13409) (13333 . 13337) (13306 . 13322) (#("            " 0 12 (fontified t)) . 13306) (13134 . 13150) (#("            " 0 12 (fontified t)) . 13134) (13101 . 13105) (13071 . 13079) (#("    " 0 4 (fontified t)) . 13071) 13024) nil (26015 48240 112869 0) 0 nil])
([nil nil ((#("input:" 0 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t)) . -13150) (undo-tree-id1295 . -6) (undo-tree-id1296 . -6) (undo-tree-id1297 . -6) (undo-tree-id1298 . -6) (undo-tree-id1299 . -6) (undo-tree-id1300 . -6) (undo-tree-id1301 . -6) (undo-tree-id1302 . -6) (undo-tree-id1303 . -6) (undo-tree-id1304 . -6) (undo-tree-id1305 . -6) (undo-tree-id1306 . -6) (undo-tree-id1307 . -6) (undo-tree-id1308 . -6) (undo-tree-id1309 . -6) (undo-tree-id1310 . -6) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) 13156) nil (26015 48240 112858 0) 0 nil])
([nil nil ((13150 . 13151)) nil (26015 48240 112840 0) 0 nil])
([nil nil ((13150 . 13155) (#("e" 0 1 (fontified nil)) . 13150) (13150 . 13151) (#("event" 0 5 (fontified nil)) . -13150) (13150 . 13155) (#("e" 0 1 (fontified t)) . -13150) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) 13151) nil (26015 48240 112838 0) 0 nil])
([nil nil ((13155 . 13156)) nil (26015 48240 112831 0) 0 nil])
([nil nil ((#("keycode" 0 7 (face font-lock-variable-name-face fontified t)) . -13217) (undo-tree-id1272 . -7) (undo-tree-id1273 . -7) (undo-tree-id1274 . -7) (undo-tree-id1275 . -7) (undo-tree-id1276 . -7) (undo-tree-id1277 . -7) (undo-tree-id1278 . -7) (undo-tree-id1279 . -7) (undo-tree-id1280 . -7) (undo-tree-id1281 . -7) (undo-tree-id1282 . -7) (undo-tree-id1283 . -7) (undo-tree-id1284 . -7) (undo-tree-id1285 . -7) (undo-tree-id1286 . -7) (undo-tree-id1287 . -7) (undo-tree-id1288 . -7) (undo-tree-id1289 . -7) 13224) nil (26015 48240 112829 0) 0 nil])
([nil nil ((#("virtual_" 0 8 (face font-lock-variable-name-face fontified t)) . -13209) (undo-tree-id1253 . -8) (undo-tree-id1254 . -8) (undo-tree-id1255 . -8) (undo-tree-id1256 . -8) (undo-tree-id1257 . -8) (undo-tree-id1258 . -8) (undo-tree-id1259 . -8) (undo-tree-id1260 . -8) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8) (undo-tree-id1263 . -8) (undo-tree-id1264 . -8) (undo-tree-id1265 . -8) (undo-tree-id1266 . -8) (undo-tree-id1267 . -8) (undo-tree-id1268 . -8) (undo-tree-id1269 . -8) (undo-tree-id1270 . -8) (undo-tree-id1271 . -8) 13217) nil (26015 48240 113123 0) 0 nil])
([nil nil ((13209 . 13211)) nil (26015 48295 581268 0) 0 nil] [nil nil ((13209 . 13210)) ((#("K" 0 1 (face font-lock-variable-name-face fontified t)) . 13209) (undo-tree-id1329 . -1)) (26015 48240 112780 0) 0 nil])
([nil nil ((#("                    p : Some(key)," 0 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (fontified t) 22 24 (fontified t) 24 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-6-face) fontified t) 29 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-6-face) fontified t) 33 34 (fontified t)) . 13189) (undo-tree-id1420 . -20) (undo-tree-id1421 . -20) (undo-tree-id1422 . -20) (undo-tree-id1423 . -20) (undo-tree-id1424 . -20) (undo-tree-id1425 . -20) (undo-tree-id1426 . -20) (undo-tree-id1427 . -20) (undo-tree-id1428 . -20) (undo-tree-id1429 . -20) (undo-tree-id1430 . -20) (undo-tree-id1431 . -20) (undo-tree-id1432 . -20) (undo-tree-id1433 . -20) (undo-tree-id1434 . -20) (undo-tree-id1435 . -20) (undo-tree-id1436 . -20) (undo-tree-id1437 . -20) (undo-tree-id1438 . -20) (undo-tree-id1439 . -21) (undo-tree-id1440 . 12) (undo-tree-id1441 . -21) (undo-tree-id1442 . -21) (undo-tree-id1443 . -21) (undo-tree-id1444 . -21) (undo-tree-id1445 . -22) (undo-tree-id1446 . -22) (undo-tree-id1447 . -22) (undo-tree-id1448 . -34)) nil (26015 48295 581266 0) 0 nil])
nil
([nil nil ((13189 . 13209)) nil (26015 48295 581234 0) 0 nil])
([nil nil ((13209 . 13211)) nil (26015 48295 581233 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -13209) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("h" 0 1 (fontified t)) . -13210) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) 13211) nil (26015 48295 581231 0) 0 nil])
([nil nil ((#("KeyboardInput" 0 13 (face font-lock-type-face fontified t)) . -13173) (undo-tree-id1401 . -13) (undo-tree-id1402 . -13) (undo-tree-id1403 . -11) (undo-tree-id1404 . -11) (undo-tree-id1405 . -11) (undo-tree-id1406 . -11) (undo-tree-id1407 . -11) (undo-tree-id1408 . -13) (undo-tree-id1409 . -13) (undo-tree-id1410 . -13) (undo-tree-id1411 . -13) (undo-tree-id1412 . -13) (undo-tree-id1413 . -13) 13186) nil (26015 48295 581224 0) 0 nil])
([nil nil ((13173 . 13176)) nil (26015 48295 581211 0) 0 nil])
([nil nil ((13173 . 13181) (#("Key" 0 3 (fontified nil)) . 13173) (13173 . 13176) (#("KeyEvent" 0 8 (fontified nil)) . -13173) (13173 . 13181) (#("Key" 0 3 (face font-lock-type-face fontified t)) . -13173) (undo-tree-id1391 . -3) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -3) (undo-tree-id1398 . -3) (undo-tree-id1399 . -3) (undo-tree-id1400 . -3) 13176) nil (26015 48295 581209 0) 0 nil])
([nil nil ((13204 . 13205)) nil (26015 48295 581197 0) 0 nil])
([nil nil ((13204 . 13216) (#("p" 0 1 (fontified nil)) . 13204) (13204 . 13205) (#("physical_key" 0 12 (fontified nil)) . -13204) (13204 . 13216) (#("p" 0 1 (fontified t)) . -13204) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 13205) nil (26015 48295 581195 0) 0 nil])
([nil nil ((13216 . 13219)) nil (26015 48295 581188 0) 0 nil])
([nil nil ((13219 . 13221)) nil (26015 48295 581187 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13218) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -13219) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (#("y" 0 1 (face font-lock-type-face fontified t)) . -13220) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) 13221) nil (26015 48295 581184 0) 0 nil])
([nil nil ((13218 . 13229)) nil (26015 48295 581157 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-type-face fontified t)) . -13226) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -13227) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -13228) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) 13229) nil (26015 48295 581155 0) 0 nil])
([nil nil ((13226 . 13232)) nil (26015 48295 581140 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) 13232) nil (26015 48295 581138 0) 0 nil])
([nil nil ((13231 . 13232)) nil (26015 48295 581130 0) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) 13232) nil (26015 48295 581129 0) 0 nil])
([nil nil ((13231 . 13232)) nil (26015 48295 581126 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil))) #s(yas--exit 13237 nil) 32 nil #s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil)) nil nil)) (13231 . 13237) (#("Code($1)$0" 0 10 (fontified nil)) . 13231) (13231 . 13241) (#("C" 0 1 (fontified nil)) . 13231) (13231 . 13232) (#("Code(…)" 0 7 (fontified nil)) . -13231) (13231 . 13238) (#("C" 0 1 (face font-lock-type-face fontified t)) . -13231) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) 13232) nil (26015 48295 581123 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13231 13237 #s(yas--snippet nil (#s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil))) #s(yas--exit 13237 nil) 32 nil #s(yas--field 1 13236 13236 nil nil nil nil #s(yas--exit 13237 nil)) nil nil))) nil (26015 48295 581111 0) 0 nil])
([nil nil ((13236 . 13239)) nil (26015 48295 581109 0) 0 nil])
([nil nil ((13240 . 13241)) nil (26015 48295 581105 0) 0 nil])
([nil nil ((#("Left" 0 4 (face font-lock-type-face fontified t)) . -13629) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) 13633 (t 26015 48295 593496 717000)) nil (26015 48332 719894 0) 0 nil])
([nil nil ((#("MouseButton::" 0 11 (face font-lock-type-face fontified t) 11 13 (fontified t)) . -13616) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) (undo-tree-id1470 . -6) (undo-tree-id1471 . -6) (undo-tree-id1472 . -6) (undo-tree-id1473 . -6) (undo-tree-id1474 . -6) (undo-tree-id1475 . -6) (undo-tree-id1476 . -11) (undo-tree-id1477 . -11) (undo-tree-id1478 . -11) (undo-tree-id1479 . -11) (undo-tree-id1480 . -11) (undo-tree-id1481 . -11) (undo-tree-id1482 . -11) (undo-tree-id1483 . -11) (undo-tree-id1484 . -11) (undo-tree-id1485 . -11) (undo-tree-id1486 . -11) (undo-tree-id1487 . -11) (undo-tree-id1488 . -11) (undo-tree-id1489 . -13) (undo-tree-id1490 . -13) (undo-tree-id1491 . -13) (undo-tree-id1492 . -13) (undo-tree-id1493 . -13) (undo-tree-id1494 . -13) (undo-tree-id1495 . -13) (undo-tree-id1496 . -13) (undo-tree-id1497 . -13) (undo-tree-id1498 . -13) (undo-tree-id1499 . -13) 13629) nil (26015 48332 719882 0) 0 nil])
([nil nil ((13616 . 13620)) nil (26015 48332 719850 0) 0 nil])
([nil nil ((256 . 269) (13616 . 13616) (13616 . 13627) (#("Mous" 0 4 (fontified nil)) . 13616) (13616 . 13620) (#("MouseButton (use winit::event::MouseButton)" 0 43 (fontified nil)) . -13616) (13616 . 13659) (#("Mous" 0 4 (face font-lock-type-face fontified t)) . -13616) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -3) (undo-tree-id1463 . -3) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) 13620) nil (26015 48332 719848 0) 0 nil])
([nil nil ((13640 . 13643)) nil (26015 48332 719832 0) 0 nil])
([nil nil ((apply yas--snippet-revive 13642 13646 #s(yas--snippet nil nil #s(yas--exit 13646 nil) 33 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 13646 nil) 33 nil nil nil nil)) (13642 . 13646) (#("Left$0" 0 6 (fontified nil)) . 13642) (13642 . 13648) (#("L" 0 1 (fontified nil)) . 13642) (13642 . 13643) (#("Left" 0 4 (fontified nil)) . -13642) (13642 . 13646) (#("L" 0 1 (face font-lock-type-face fontified t)) . -13642) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) 13643) nil (26015 48453 682490 0) 0 nil])
([nil nil ((17184 . 17197)) nil (26015 48468 152177 0) 0 nil] [nil nil ((17282 . 17299) (t 26015 48332 731409 247000)) ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 17282) (undo-tree-id1801 . -17) (undo-tree-id1802 . -17) (undo-tree-id1803 . -17) (undo-tree-id1804 . -17) (undo-tree-id1805 . -17) (undo-tree-id1806 . -17) (undo-tree-id1807 . -17) (undo-tree-id1808 . -17) (undo-tree-id1809 . -17) (undo-tree-id1810 . -17) (undo-tree-id1811 . -17) (undo-tree-id1812 . -17) (undo-tree-id1813 . -17) (undo-tree-id1814 . -17) (undo-tree-id1815 . -17) (undo-tree-id1816 . -17) (undo-tree-id1817 . -17) (undo-tree-id1818 . -17) (undo-tree-id1819 . -17) (undo-tree-id1820 . -17) (undo-tree-id1821 . -17) (undo-tree-id1822 . -17) (undo-tree-id1823 . -17) (undo-tree-id1824 . -17) (undo-tree-id1825 . -17) (undo-tree-id1826 . -17) (undo-tree-id1827 . -17) (undo-tree-id1828 . -17) (undo-tree-id1829 . -17) (undo-tree-id1830 . -17) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -17) (undo-tree-id1841 . -17) (undo-tree-id1842 . -17) (undo-tree-id1843 . -17) (undo-tree-id1844 . -17) (undo-tree-id1845 . -17) (undo-tree-id1846 . -17) (undo-tree-id1847 . -17) (undo-tree-id1848 . -17) (undo-tree-id1849 . -17) (undo-tree-id1850 . -17) (undo-tree-id1851 . -17) (undo-tree-id1852 . -17) (undo-tree-id1853 . -17) (undo-tree-id1854 . -17) (undo-tree-id1855 . -17) (undo-tree-id1856 . -17) (undo-tree-id1857 . -17) (undo-tree-id1858 . -17) (undo-tree-id1859 . -17) (undo-tree-id1860 . -17) (undo-tree-id1861 . -17) (undo-tree-id1862 . -17) (undo-tree-id1863 . -17) (undo-tree-id1864 . -17) (undo-tree-id1865 . -17) (undo-tree-id1866 . -17) (undo-tree-id1867 . -17) (undo-tree-id1868 . -17) (undo-tree-id1869 . -17) (undo-tree-id1870 . -17) (undo-tree-id1871 . -17) (undo-tree-id1872 . -17) (undo-tree-id1873 . -17) (undo-tree-id1874 . -17) (undo-tree-id1875 . -17) (undo-tree-id1876 . -17) (undo-tree-id1877 . -17) (undo-tree-id1878 . -17) (undo-tree-id1879 . -17) (undo-tree-id1880 . -17) (undo-tree-id1881 . -17) (undo-tree-id1882 . -17) (undo-tree-id1883 . -17) (undo-tree-id1884 . -17) (undo-tree-id1885 . -17) (undo-tree-id1886 . -17) (undo-tree-id1887 . -17) (undo-tree-id1888 . -17) (undo-tree-id1889 . -17) (undo-tree-id1890 . -17) (undo-tree-id1891 . -17) (undo-tree-id1892 . -17) (undo-tree-id1893 . -17) (undo-tree-id1894 . -17) (undo-tree-id1895 . -17) (undo-tree-id1896 . -17) (undo-tree-id1897 . -17) (undo-tree-id1898 . -17) (undo-tree-id1899 . -17) (undo-tree-id1900 . -17) (undo-tree-id1901 . -17) (undo-tree-id1902 . -17) (undo-tree-id1903 . -17) (undo-tree-id1904 . -17) (undo-tree-id1905 . -17) (undo-tree-id1906 . -17) (undo-tree-id1907 . -17) (undo-tree-id1908 . -17) (undo-tree-id1909 . -17) (undo-tree-id1910 . -17) (undo-tree-id1911 . -17) (undo-tree-id1912 . -17) (undo-tree-id1913 . -17) (undo-tree-id1914 . -17) (undo-tree-id1915 . -17) (undo-tree-id1916 . -17) (undo-tree-id1917 . -17) (undo-tree-id1918 . -17) (undo-tree-id1919 . -17) (undo-tree-id1920 . -17) (undo-tree-id1921 . -17) (undo-tree-id1922 . -17) (undo-tree-id1923 . -17) (undo-tree-id1924 . -17) (undo-tree-id1925 . -17) (undo-tree-id1926 . -17) (undo-tree-id1927 . -17) (undo-tree-id1928 . -17) (undo-tree-id1929 . -17) (undo-tree-id1930 . -17) (undo-tree-id1931 . -17) (undo-tree-id1932 . -17) (undo-tree-id1933 . -17) (undo-tree-id1934 . -17) (undo-tree-id1935 . -17) (undo-tree-id1936 . -17) (undo-tree-id1937 . -17) (undo-tree-id1938 . -17) (undo-tree-id1939 . -17) (undo-tree-id1940 . -17) (undo-tree-id1941 . -17) (undo-tree-id1942 . -17) (undo-tree-id1943 . -17) (undo-tree-id1944 . -17) (undo-tree-id1945 . -17) (undo-tree-id1946 . -17) (undo-tree-id1947 . -17) (undo-tree-id1948 . -17) (undo-tree-id1949 . -17) (undo-tree-id1950 . -17) (undo-tree-id1951 . -17) (undo-tree-id1952 . -17) (undo-tree-id1953 . -17) (undo-tree-id1954 . -17) (undo-tree-id1955 . -17) (undo-tree-id1956 . -17) (undo-tree-id1957 . -17) (undo-tree-id1958 . -17) (undo-tree-id1959 . -17) (undo-tree-id1960 . -17) (undo-tree-id1961 . -17) (undo-tree-id1962 . -17) (undo-tree-id1963 . -17) (undo-tree-id1964 . -17) (undo-tree-id1965 . -17) (undo-tree-id1966 . -17) (undo-tree-id1967 . -17) (undo-tree-id1968 . -17) (undo-tree-id1969 . -17) (undo-tree-id1970 . -17) (undo-tree-id1971 . -17) (undo-tree-id1972 . -17) (undo-tree-id1973 . -17) (undo-tree-id1974 . -17) (undo-tree-id1975 . -17) (undo-tree-id1976 . -17) (undo-tree-id1977 . -17) (undo-tree-id1978 . -17) (undo-tree-id1979 . -17) (undo-tree-id1980 . -17) (undo-tree-id1981 . -17) (undo-tree-id1982 . -17) (undo-tree-id1983 . -17) (undo-tree-id1984 . -17) (undo-tree-id1985 . -17) (undo-tree-id1986 . -17) (undo-tree-id1987 . -17) (undo-tree-id1988 . -17) (undo-tree-id1989 . -17) (undo-tree-id1990 . -17) (undo-tree-id1991 . -17) (undo-tree-id1992 . -17) (undo-tree-id1993 . -17) (undo-tree-id1994 . -17) (undo-tree-id1995 . -17) (undo-tree-id1996 . -17) (undo-tree-id1997 . -17) (undo-tree-id1998 . -17) (undo-tree-id1999 . -17) (undo-tree-id2000 . -17) (undo-tree-id2001 . -17) (undo-tree-id2002 . -17) (undo-tree-id2003 . -17) (undo-tree-id2004 . -17) (undo-tree-id2005 . -17) (undo-tree-id2006 . -17) (undo-tree-id2007 . -17) (undo-tree-id2008 . -17) (undo-tree-id2009 . -17) (undo-tree-id2010 . -17) (undo-tree-id2011 . -17) (undo-tree-id2012 . -17) (undo-tree-id2013 . -17) (undo-tree-id2014 . -17) (undo-tree-id2015 . -17) (undo-tree-id2016 . -17) (undo-tree-id2017 . -17) (undo-tree-id2018 . -1) (undo-tree-id2019 . -17) (undo-tree-id2020 . -17) (undo-tree-id2021 . -17) (undo-tree-id2022 . -17) (undo-tree-id2023 . -17) (undo-tree-id2024 . -17) (undo-tree-id2025 . -17)) (26015 48452 549809 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17201 . 17202) (nil fontified nil 17197 . 17202) (17197 . 17202)) nil (26015 48468 152176 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17575 . 17576) (nil fontified nil 17299 . 17576) (17299 . 17576)) ((#("            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }" 0 12 (fontified nil) 12 17 (face font-lock-type-face fontified nil) 17 19 (fontified nil) 19 30 (face font-lock-type-face fontified nil) 30 31 (fontified nil) 31 32 (face (rainbow-delimiters-depth-6-face) fontified nil) 32 33 (fontified nil) 33 49 (fontified nil) 49 54 (face font-lock-variable-name-face fontified nil) 54 56 (fontified nil) 56 67 (face font-lock-type-face fontified nil) 67 69 (fontified nil) 69 80 (face font-lock-type-face fontified nil) 80 81 (face (rainbow-delimiters-depth-7-face) fontified nil) 81 89 (fontified nil) 89 90 (face (rainbow-delimiters-depth-7-face) fontified nil) 90 92 (fontified nil) 92 111 (fontified nil) 111 114 (face font-lock-comment-delimiter-face fontified nil) 114 150 (face font-lock-comment-face fontified nil) 150 162 (fontified nil) 162 163 (face (rainbow-delimiters-depth-6-face) fontified nil) 163 165 (fontified nil) 165 166 (syntax-table (1) fontified nil) 166 167 (fontified nil) 167 169 (face font-lock-keyword-face fontified nil) 169 190 (fontified nil) 190 191 (face (rainbow-delimiters-depth-6-face) fontified nil) 191 192 (fontified nil) 192 245 (fontified nil) 245 246 (face (rainbow-delimiters-depth-7-face) fontified nil) 246 262 (fontified nil) 262 263 (face (rainbow-delimiters-depth-7-face) fontified nil) 263 264 (fontified nil) 264 276 (fontified nil) 276 277 (face (rainbow-delimiters-depth-6-face) fontified nil rear-nonsticky nil)) . 17299) (undo-tree-id1638 . -15) (undo-tree-id1639 . -15) (undo-tree-id1640 . -15) (undo-tree-id1641 . -15) (undo-tree-id1642 . -15) (undo-tree-id1643 . -15) (undo-tree-id1644 . -15) (undo-tree-id1645 . -15) (undo-tree-id1646 . -15) (undo-tree-id1647 . -15) (undo-tree-id1648 . -15) (undo-tree-id1649 . -15) (undo-tree-id1650 . -15) (undo-tree-id1651 . -15) (undo-tree-id1652 . -15) (undo-tree-id1653 . -15) (undo-tree-id1654 . -15) (undo-tree-id1655 . -15) (undo-tree-id1656 . -15) (undo-tree-id1657 . -15) (undo-tree-id1658 . -15) (undo-tree-id1659 . -15) (undo-tree-id1660 . -15) (undo-tree-id1661 . -15) (undo-tree-id1662 . -15) (undo-tree-id1663 . -15) (undo-tree-id1664 . -15) (undo-tree-id1665 . -15) (undo-tree-id1666 . -15) (undo-tree-id1667 . -15) (undo-tree-id1668 . -15) (undo-tree-id1669 . -15) (undo-tree-id1670 . -15) (undo-tree-id1671 . -15) (undo-tree-id1672 . -15) (undo-tree-id1673 . -15) (undo-tree-id1674 . -15) (undo-tree-id1675 . -15) (undo-tree-id1676 . -15) (undo-tree-id1677 . -15) (undo-tree-id1678 . -15) (undo-tree-id1679 . -15) (undo-tree-id1680 . -15) (undo-tree-id1681 . -15) (undo-tree-id1682 . -15) (undo-tree-id1683 . -15) (undo-tree-id1684 . -15) (undo-tree-id1685 . -15) (undo-tree-id1686 . -15) (undo-tree-id1687 . -15) (undo-tree-id1688 . -15) (undo-tree-id1689 . -15) (undo-tree-id1690 . -17) (undo-tree-id1691 . -17) (undo-tree-id1692 . -17) (undo-tree-id1693 . -17) (undo-tree-id1694 . -17) (undo-tree-id1695 . -17) (undo-tree-id1696 . -17) (undo-tree-id1697 . -17) (undo-tree-id1698 . -17) (undo-tree-id1699 . -17) (undo-tree-id1700 . -17) (undo-tree-id1701 . -175) (undo-tree-id1702 . -175) (undo-tree-id1703 . -175) (undo-tree-id1704 . -175) (undo-tree-id1705 . -175) (undo-tree-id1706 . -175) (undo-tree-id1707 . -175) (undo-tree-id1708 . -175) (undo-tree-id1709 . -175) (undo-tree-id1710 . -175) (undo-tree-id1711 . -175) (undo-tree-id1712 . -175) (undo-tree-id1713 . -175) (undo-tree-id1714 . -175) (undo-tree-id1715 . -175) (undo-tree-id1716 . -175) (undo-tree-id1717 . -175) (undo-tree-id1718 . -175) (undo-tree-id1719 . -175) (undo-tree-id1720 . -175) (undo-tree-id1721 . -175) (undo-tree-id1722 . -63) (undo-tree-id1723 . -23) (undo-tree-id1724 . -23) (undo-tree-id1725 . -23) (undo-tree-id1726 . -23) (undo-tree-id1727 . -23) (undo-tree-id1728 . -23) (undo-tree-id1729 . -23) (undo-tree-id1730 . -23) (undo-tree-id1731 . -210) (undo-tree-id1732 . -210) (undo-tree-id1733 . -210) (undo-tree-id1734 . -210) (undo-tree-id1735 . -210) (undo-tree-id1736 . -165) (undo-tree-id1737 . -165) (undo-tree-id1738 . -165) (undo-tree-id1739 . -165) (undo-tree-id1740 . -165) (undo-tree-id1741 . -165) (undo-tree-id1742 . -165) (undo-tree-id1743 . -165) (undo-tree-id1744 . -165) (undo-tree-id1745 . -165) (undo-tree-id1746 . -165) (undo-tree-id1747 . -165) (undo-tree-id1748 . -165) (undo-tree-id1749 . -165) (undo-tree-id1750 . -165) (undo-tree-id1751 . -165) (undo-tree-id1752 . -165) (undo-tree-id1753 . -165) (undo-tree-id1754 . -165) (undo-tree-id1755 . -27) (undo-tree-id1756 . -27) (undo-tree-id1757 . -27) (undo-tree-id1758 . -27) (undo-tree-id1759 . -27) (undo-tree-id1760 . -27) (undo-tree-id1761 . -27) (undo-tree-id1762 . -27) (undo-tree-id1763 . -27) (undo-tree-id1764 . -27) (undo-tree-id1765 . -27) (undo-tree-id1766 . -27) (undo-tree-id1767 . -27) (undo-tree-id1768 . -65) (undo-tree-id1769 . -23) (undo-tree-id1770 . -23) (undo-tree-id1771 . -23) (undo-tree-id1772 . -23) (undo-tree-id1773 . -23) (undo-tree-id1774 . -23) (undo-tree-id1775 . -23) (undo-tree-id1776 . -23) (undo-tree-id1777 . -23) (undo-tree-id1778 . -23) (undo-tree-id1779 . -23) (undo-tree-id1780 . -23) (undo-tree-id1781 . -23) (undo-tree-id1782 . -23) (undo-tree-id1783 . -23) (undo-tree-id1784 . -23) (undo-tree-id1785 . -23) (undo-tree-id1786 . -23) (undo-tree-id1787 . -23) (undo-tree-id1788 . -23) (undo-tree-id1789 . -23) (undo-tree-id1790 . -23) (undo-tree-id1791 . -30) (undo-tree-id1792 . -30) (undo-tree-id1793 . -30) (undo-tree-id1794 . -30) (undo-tree-id1795 . -30) (undo-tree-id1796 . -30) (undo-tree-id1797 . -30) (undo-tree-id1798 . -30) (undo-tree-id1799 . -30) (undo-tree-id1800 . -17) (nil fontified t 17562 . 17563) (nil fontified t 17561 . 17562) (nil fontified t 17545 . 17561) (nil fontified t 17544 . 17545) (nil fontified t 17491 . 17544) (nil fontified t 17490 . 17491) (nil fontified t 17489 . 17490) (nil fontified t 17468 . 17489) (nil fontified t 17466 . 17468) (nil fontified t 17465 . 17466) (nil fontified t 17464 . 17465) (nil fontified t 17462 . 17464) (nil fontified t 17461 . 17462) (nil fontified t 17449 . 17461) (nil fontified t 17413 . 17449) (nil fontified t 17410 . 17413) (nil fontified t 17391 . 17410) (nil fontified t 17389 . 17391) (nil fontified t 17388 . 17389) (nil fontified t 17380 . 17388) (nil fontified t 17379 . 17380) (nil fontified t 17368 . 17379) (nil fontified t 17366 . 17368) (nil fontified t 17355 . 17366) (nil fontified t 17353 . 17355) (nil fontified t 17348 . 17353) (nil fontified t 17332 . 17348) (nil fontified t 17331 . 17332) (nil fontified t 17330 . 17331) (nil fontified t 17329 . 17330) (nil fontified t 17318 . 17329) (nil fontified t 17316 . 17318) (nil fontified t 17311 . 17316) (nil fontified t 17299 . 17311) (nil rear-nonsticky t 17575 . 17576)) (26015 48452 306429 0) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -17197) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (#("v" 0 1 (face font-lock-type-face fontified t)) . -17198) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -17199) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -17200) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#("t" 0 1 (face font-lock-type-face rear-nonsticky t fontified t)) . -17201) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) 17202) nil (26015 48468 152171 0) 0 nil])
([nil nil ((17567 . 17583) (#("            " 0 12 (fontified t)) . 17567) (17507 . 17511) (17445 . 17461) (#("            " 0 12 (fontified t)) . 17445) (17399 . 17403) (17336 . 17340) (#("            " 0 12 (fontified t)) . -17299) 17260) ((17299 . 17311) (#("    " 0 4 (fontified t)) . 17336) (#("    " 0 4 (fontified t)) . 17399) (17445 . 17457) (#("                " 0 16 (fontified t)) . 17445) (#("    " 0 4 (fontified t)) . 17507) (17567 . 17579) (#("                " 0 16 (fontified t)) . 17567)) (26015 48452 1603 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17473 . 17474) (nil fontified nil 17197 . 17474) (17197 . 17474)) nil (26015 48468 152110 0) 0 nil])
([nil nil ((#("Event" 0 5 (face font-lock-type-face fontified t)) . -17299) (undo-tree-id1520 . -3) (undo-tree-id1521 . -3) (undo-tree-id1522 . -3) (undo-tree-id1523 . -3) (undo-tree-id1524 . -3) (undo-tree-id1525 . -3) (undo-tree-id1526 . -3) (undo-tree-id1527 . -3) (undo-tree-id1528 . -3) (undo-tree-id1529 . -3) (undo-tree-id1530 . -3) (undo-tree-id1531 . -3) (undo-tree-id1532 . -3) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -3) (undo-tree-id1558 . -3) (undo-tree-id1559 . -3) (undo-tree-id1560 . -3) (undo-tree-id1561 . -3) (undo-tree-id1562 . -3) (undo-tree-id1563 . -3) (undo-tree-id1564 . -3) (undo-tree-id1565 . -3) (undo-tree-id1566 . -3) (undo-tree-id1567 . -3) (undo-tree-id1568 . -3) (undo-tree-id1569 . -3) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -5) (undo-tree-id1573 . -5) (undo-tree-id1574 . -5) (undo-tree-id1575 . -5) (undo-tree-id1576 . -5) (undo-tree-id1577 . -5) (undo-tree-id1578 . -5) (undo-tree-id1579 . -5) (undo-tree-id1580 . -5) (undo-tree-id1581 . -5) (undo-tree-id1582 . -5) (undo-tree-id1583 . -5) (undo-tree-id1584 . -5) (undo-tree-id1585 . -5) 17304 (t 26015 48364 714780 340000)) ((17299 . 17304)) (26015 48451 769766 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -17197) 17181) nil (26015 48468 152108 0) 0 nil])
([nil nil ((17299 . 17300)) ((#("W" 0 1 (face font-lock-type-face fontified t)) . 17299) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1)) (26015 48451 540297 0) 0 nil])
([nil nil ((17462 . 17463)) nil (26015 48468 152102 0) 0 nil])
([nil nil ((17299 . 17310) (#("W" 0 1 (fontified nil)) . 17299) (17299 . 17300) (#("WindowEvent" 0 11 (fontified nil)) . -17299) (17299 . 17310) (#("W" 0 1 (face font-lock-type-face fontified t)) . -17299) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 17300) ((17299 . 17300) (#("WindowEvent" 0 11 (fontified nil)) . 17299) (17299 . 17310) (#("W" 0 1 (fontified nil)) . 17299) (17299 . 17300) (#("WindowEvent" 0 11 (face font-lock-type-face fontified t)) . 17299) (undo-tree-id1586 . -11) (undo-tree-id1587 . -11) (undo-tree-id1588 . -11) (undo-tree-id1589 . -11) (undo-tree-id1590 . -11) (undo-tree-id1591 . -11) (undo-tree-id1592 . -11) (undo-tree-id1593 . -11) (undo-tree-id1594 . -11) (undo-tree-id1595 . -11) (undo-tree-id1596 . -11) (undo-tree-id1597 . -11) (undo-tree-id1598 . -11) (undo-tree-id1599 . -11) (undo-tree-id1600 . -11) (undo-tree-id1601 . -11) (undo-tree-id1602 . -8) (undo-tree-id1603 . -8) (undo-tree-id1604 . -8) (undo-tree-id1605 . -8) (undo-tree-id1606 . -8) (undo-tree-id1607 . -8) (undo-tree-id1608 . -8) (undo-tree-id1609 . -8) (undo-tree-id1610 . -8) (undo-tree-id1611 . -8) (undo-tree-id1612 . -8) (undo-tree-id1613 . -8) (undo-tree-id1614 . -8) (undo-tree-id1615 . -8) (undo-tree-id1616 . -8) (undo-tree-id1617 . -8) (undo-tree-id1618 . -8) (undo-tree-id1619 . -8) (undo-tree-id1620 . -8) (undo-tree-id1621 . -8) (undo-tree-id1622 . -8) (undo-tree-id1623 . -8) (undo-tree-id1624 . -8) (undo-tree-id1625 . -8) (undo-tree-id1626 . -8) (undo-tree-id1627 . -8) (t 26015 48386 124214 65000)) (26015 48386 112707 0) 0 nil])
([nil nil ((#("DeviceEvent" 0 11 (face font-lock-type-face fontified t)) . -17241) (undo-tree-id2098 . -11) (undo-tree-id2099 . -11) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -11) (undo-tree-id2108 . -11) (undo-tree-id2109 . -11) (undo-tree-id2110 . -11) (undo-tree-id2111 . -11) (undo-tree-id2112 . -11) (undo-tree-id2113 . -11) (undo-tree-id2114 . -11) 17252 (t 26015 48468 164103 340000)) nil (26015 48483 278316 0) 0 nil])
nil
([nil nil ((17241 . 17247)) nil (26015 48483 278298 0) 0 nil])
([nil nil ((269 . 282) (17241 . 17241) (17241 . 17252) (#("Device" 0 6 (fontified nil)) . 17241) (17241 . 17247) (#("DeviceEvent (use winit::event::DeviceEvent)" 0 43 (fontified nil)) . -17241) (17241 . 17284) (#("Device" 0 6 (face font-lock-type-face fontified t)) . -17241) (undo-tree-id2081 . -6) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -3) (undo-tree-id2088 . -3) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -5) (undo-tree-id2092 . -5) (undo-tree-id2093 . -6) (undo-tree-id2094 . -6) (undo-tree-id2095 . -6) (undo-tree-id2096 . -6) (undo-tree-id2097 . -6) 17247) nil (26015 48483 278292 0) 0 nil])
([nil nil ((#("        self.camera_controller.update_camera(&mut self.camera);
        self.camera_uniform.update_view_proj(&self.camera);" 0 3 (fontified t) 3 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 37 (fontified t) 37 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-3-face) fontified t) 45 46 (face rust-ampersand-face fontified t) 46 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-3-face) fontified t) 62 64 (fontified t) 64 72 (fontified t) 72 76 (face font-lock-keyword-face fontified t) 76 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-3-face) fontified t) 109 110 (face rust-ampersand-face fontified t) 110 114 (face font-lock-keyword-face fontified t) 114 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-3-face) fontified t) 122 123 (fontified t)) . 13897) (undo-tree-id2115 . -123) (undo-tree-id2116 . -123) (undo-tree-id2117 . -123) (undo-tree-id2118 . -123) (undo-tree-id2119 . -122) (undo-tree-id2120 . -113) (undo-tree-id2121 . -102) (undo-tree-id2122 . -96) (undo-tree-id2123 . -87) (undo-tree-id2124 . -82) (undo-tree-id2125 . -78) (undo-tree-id2126 . -75) (undo-tree-id2127 . -73) (undo-tree-id2128 . -7) (undo-tree-id2129 . -6) (undo-tree-id2130 . -5) (undo-tree-id2131 . -4) (undo-tree-id2132 . -2) (undo-tree-id2133 . -1) (undo-tree-id2134 . -123) (t 26015 48483 290579 350000)) nil (26015 48538 522001 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14033 . 14034) (nil fontified nil 13897 . 14034) (13897 . 14034)) nil (26015 48538 521975 0) 0 nil])
([nil nil ((13961 . 13969) (#("    " 0 4 (fontified t)) . 13961) 14034) nil (26015 48538 521973 0) 0 nil])
([nil nil ((13897 . 13905) (#("    " 0 4 (fontified t)) . 13897) 13918) nil (26015 48538 521967 0) 0 nil])
([nil nil ((#("    fn update(&mut self) {" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t) 14 15 (face rust-ampersand-face fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t)) . 13870) (undo-tree-id2141 . -26) (undo-tree-id2142 . -26) (undo-tree-id2143 . -26) (undo-tree-id2144 . -26) (undo-tree-id2145 . -25) (undo-tree-id2146 . -21) (undo-tree-id2147 . -19) (undo-tree-id2148 . -17) (undo-tree-id2149 . -16) (undo-tree-id2150 . -15) (undo-tree-id2151 . -26) (t 26015 48538 536632 739000)) nil (26015 48558 239985 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13915 . 13916) (nil fontified nil 13870 . 13916) (13870 . 13916)) nil (26015 48558 239972 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -13915) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) 13916) nil (26015 48605 848372 0) 0 nil])
([nil nil ((14446 . 14450) (#("    " 0 4 (fontified nil)) . 14445) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (14445 . 14450) (#("    " 0 4 (fontified nil)) . -14436) (14448 . 14449)) nil (26015 48634 15440 0) 0 nil] [nil nil ((#("        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
             * old_position)
            .into();" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 38 (fontified t) 38 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 66 (face font-lock-type-face fontified t) 66 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-4-face) fontified t) 84 85 (face (rainbow-delimiters-depth-5-face) fontified t) 85 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-5-face) fontified t) 99 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-5-face) fontified t) 105 106 (face (rainbow-delimiters-depth-5-face) fontified t) 106 108 (fontified t) 108 114 (face font-lock-constant-face fontified t) 114 116 (fontified t) 116 119 (face font-lock-type-face fontified t) 119 120 (face (rainbow-delimiters-depth-5-face) fontified t) 120 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-5-face) fontified t) 124 125 (face (rainbow-delimiters-depth-4-face) fontified t) 125 126 (fontified t) 126 137 (fontified t) 137 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-3-face) fontified t) 154 155 (fontified t) 155 171 (fontified t) 171 172 (fontified t) 172 173 (face (rainbow-delimiters-depth-3-face) fontified t) 173 174 (face (rainbow-delimiters-depth-3-face) fontified t) 174 175 (fontified t)) . 14273) (undo-tree-id2159 . -175) (undo-tree-id2160 . -175) (undo-tree-id2161 . -175) (undo-tree-id2162 . -175) (undo-tree-id2163 . -144) (undo-tree-id2164 . -140) (undo-tree-id2165 . -50) (undo-tree-id2166 . -49) (undo-tree-id2167 . -47) (undo-tree-id2168 . -46) (undo-tree-id2169 . -45) (undo-tree-id2170 . -5) (undo-tree-id2171 . -4) (undo-tree-id2172 . -3) (undo-tree-id2173 . -2) (undo-tree-id2174 . -1) (undo-tree-id2175 . -175) (t 26015 48558 251322 677000)) ((14273 . 14448)) (26015 48605 9582 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14622 . 14623) (nil fontified nil 14450 . 14623) (14450 . 14623)) nil (26015 48634 15435 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14445 . 14446) (nil fontified nil 14273 . 14446) (14273 . 14446)) ((#("self.light_uniform.position =
    (cgmath::Quaternion::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
    * old_position).into(); // UPDATED!
" 0 4 (face font-lock-keyword-face fontified nil) 4 30 (fontified nil) 30 34 (fontified nil) 34 35 (face (rainbow-delimiters-depth-3-face) fontified nil) 35 41 (face font-lock-constant-face fontified nil) 41 43 (fontified nil) 43 53 (face font-lock-type-face fontified nil) 53 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-4-face) fontified nil) 71 72 (face (rainbow-delimiters-depth-5-face) fontified nil) 72 85 (fontified nil) 85 86 (face (rainbow-delimiters-depth-5-face) fontified nil) 86 91 (fontified nil) 91 92 (face (rainbow-delimiters-depth-5-face) fontified nil) 92 93 (face (rainbow-delimiters-depth-5-face) fontified nil) 93 95 (fontified nil) 95 101 (face font-lock-constant-face fontified nil) 101 103 (fontified nil) 103 106 (face font-lock-type-face fontified nil) 106 107 (face (rainbow-delimiters-depth-5-face) fontified nil) 107 128 (fontified nil) 128 129 (face (rainbow-delimiters-depth-6-face) fontified nil) 129 130 (face (rainbow-delimiters-depth-6-face) fontified nil) 130 131 (face (rainbow-delimiters-depth-5-face) fontified nil) 131 132 (face (rainbow-delimiters-depth-4-face) fontified nil) 132 133 (fontified nil) 133 137 (fontified nil) 137 151 (fontified nil) 151 152 (face (rainbow-delimiters-depth-3-face) fontified nil) 152 157 (fontified nil) 157 158 (face (rainbow-delimiters-depth-3-face) fontified nil) 158 159 (face (rainbow-delimiters-depth-3-face) fontified nil) 159 161 (fontified nil) 161 164 (face font-lock-comment-delimiter-face fontified nil) 164 172 (face font-lock-comment-face fontified nil) 172 173 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 14273) (undo-tree-id2208 . -133) (undo-tree-id2209 . -135) (undo-tree-id2210 . -133) (undo-tree-id2211 . -133) (undo-tree-id2212 . -133) (undo-tree-id2213 . -133) (undo-tree-id2214 . -133) (undo-tree-id2215 . -133) (undo-tree-id2216 . -133) (undo-tree-id2217 . -133) (undo-tree-id2218 . -133) (undo-tree-id2219 . -133) (undo-tree-id2220 . -133) (undo-tree-id2221 . -133) (undo-tree-id2222 . -133) (undo-tree-id2223 . -133) (undo-tree-id2224 . -133) (undo-tree-id2225 . -133) (undo-tree-id2226 . -133) (undo-tree-id2227 . -133) (undo-tree-id2228 . -133) (undo-tree-id2229 . -133) (undo-tree-id2230 . -133) (undo-tree-id2231 . -133) (undo-tree-id2232 . -133) (undo-tree-id2233 . -133) (undo-tree-id2234 . -133) (undo-tree-id2235 . -133) (undo-tree-id2236 . -133) (undo-tree-id2237 . -133) (undo-tree-id2238 . -133) (undo-tree-id2239 . -133) (nil fontified t 14405 . 14406) (nil fontified t 14404 . 14405) (nil fontified t 14403 . 14404) (nil fontified t 14402 . 14403) (nil fontified t 14401 . 14402) (nil fontified t 14380 . 14401) (nil fontified t 14379 . 14380) (nil fontified t 14376 . 14379) (nil fontified t 14374 . 14376) (nil fontified t 14368 . 14374) (nil fontified t 14366 . 14368) (nil fontified t 14365 . 14366) (nil fontified t 14364 . 14365) (nil fontified t 14359 . 14364) (nil fontified t 14358 . 14359) (nil fontified t 14345 . 14358) (nil fontified t 14344 . 14345) (nil fontified t 14343 . 14344) (nil fontified t 14326 . 14343) (nil fontified t 14316 . 14326) (nil fontified t 14314 . 14316) (nil fontified t 14308 . 14314) (nil fontified t 14307 . 14308) (nil fontified t 14303 . 14307) (nil fontified t 14277 . 14303) (nil fontified t 14273 . 14277) (nil rear-nonsticky t 14445 . 14446)) (26015 48604 553799 0) 0 nil])
([nil nil ((14587 . 14596) (#("    " 0 4 (fontified t)) . 14587) (14480 . 14488) (#("    " 0 4 (fontified t)) . 14480) 14464) nil (26015 48634 15433 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14460) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (14410 . 14419) (#("    " 0 4 (fontified t)) . 14410) (undo-tree-id2158 . -2) (14303 . 14311) (#("    " 0 4 (fontified t)) . 14303) (14269 . 14273) (#("    " 0 4 (fontified t)) . -14198) 14194) ((14198 . 14202) (#("    " 0 4 (fontified t)) . 14269) (14303 . 14307) (#("        " 0 8 (fontified t)) . 14303) (14410 . 14414) (#("         " 0 9 (fontified t)) . 14410) (undo-tree-id2176 . -9) (undo-tree-id2177 . -9) (undo-tree-id2178 . -9) (undo-tree-id2179 . -9) (undo-tree-id2180 . -9) (undo-tree-id2181 . -9) (undo-tree-id2182 . -9) (undo-tree-id2183 . -9) (undo-tree-id2184 . -9) (undo-tree-id2185 . -9) (undo-tree-id2186 . -9) (undo-tree-id2187 . -9) (undo-tree-id2188 . -9) (undo-tree-id2189 . -9) (undo-tree-id2190 . -9) (undo-tree-id2191 . -9) (undo-tree-id2192 . -9) (undo-tree-id2193 . -9) (undo-tree-id2194 . -9) (undo-tree-id2195 . -9) (undo-tree-id2196 . -9) (undo-tree-id2197 . -9) (undo-tree-id2198 . -9) (undo-tree-id2199 . -9) (undo-tree-id2200 . -9) (undo-tree-id2201 . -9) (undo-tree-id2202 . -9) (undo-tree-id2203 . -9) (undo-tree-id2204 . -9) (undo-tree-id2205 . -9) (undo-tree-id2206 . -9) (undo-tree-id2207 . -9) (14460 . 14464) (t 26015 48595 548669 749000)) (26015 48595 535377 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14711) (#("    " 0 4 (fontified t)) . -14617) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (#("    " 0 2 (fontified t) 2 4 (fontified t)) . -14392) (#("    " 0 4 (fontified t)) . -14307) (undo-tree-id2259 . -4) (undo-tree-id2260 . -3) (undo-tree-id2261 . -1) (#("    " 0 4 (fontified t)) . -14269) (undo-tree-id2262 . -1) (#("    " 0 4 (fontified t)) . -14194) (#("    " 0 4 (fontified t)) . -14170) 14179) nil (26015 48634 15430 0) 0 nil])
nil
([nil nil ((14755 . 14759) (14653 . 14661) (#("    " 0 4 (fontified t)) . 14653) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (14612 . 14616) (14500 . 14504) (14454 . 14462) (#("    " 0 4 (fontified t)) . 14454) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) (undo-tree-id2248 . -4) (14440 . 14444) (14412 . 14416) (14323 . 14327) (14277 . 14285) (#("    " 0 4 (fontified t)) . 14277) (undo-tree-id2249 . -4) (undo-tree-id2250 . -4) (undo-tree-id2251 . -3) (undo-tree-id2252 . -2) (undo-tree-id2253 . -1) (14198 . 14206) (#("    " 0 4 (fontified t)) . 14198) (14170 . 14178) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . 14170) (13870 . 13874) 13861) nil (26015 48634 15416 0) 0 nil])
([nil nil ((apply -12 14277 14465 undo--wrap-and-run-primitive-undo 14277 14465 ((14449 . 14452) (14417 . 14420) (14326 . 14329) (14285 . 14288) 14277))) nil (26015 48634 15388 0) 0 nil])
([nil nil ((#("Quaternion" 0 10 (face font-lock-type-face fontified t)) . -14525) (undo-tree-id2271 . -10) (undo-tree-id2272 . -10) (undo-tree-id2273 . -10) (undo-tree-id2274 . -10) (undo-tree-id2275 . -10) (undo-tree-id2276 . -10) (undo-tree-id2277 . -10) (undo-tree-id2278 . -10) (undo-tree-id2279 . -10) (undo-tree-id2280 . -10) (undo-tree-id2281 . -10) (undo-tree-id2282 . -10) (undo-tree-id2283 . -10) (undo-tree-id2284 . -10) 14535 (t 26015 48634 28076 304000)) nil (26015 48729 738560 0) 0 nil])
([nil nil ((14525 . 14526)) nil (26015 48729 738545 0) 0 nil])
([nil nil ((14525 . 14532) (#("M" 0 1 (fontified nil)) . 14525) (14525 . 14526) (#("Matrix4" 0 7 (fontified nil)) . -14525) (14525 . 14532) (#("M" 0 1 (face font-lock-type-face fontified t)) . -14525) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) 14526) nil (26015 48729 738536 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17439 . 17440) (nil fontified nil 17375 . 17440) (17375 . 17440) (t 26015 48729 752252 958000)) nil (26015 48791 417923 0) 0 nil])
([nil nil ((#("                    state.update();" 0 15 (fontified t) 15 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-7-face) fontified t) 33 34 (face (rainbow-delimiters-depth-7-face) fontified t) 34 35 (fontified t)) . 18899) (undo-tree-id2285 . -35) (undo-tree-id2286 . -35) (undo-tree-id2287 . -35) (undo-tree-id2288 . -35) (undo-tree-id2289 . -31) (undo-tree-id2290 . -19) (undo-tree-id2291 . -15) (undo-tree-id2292 . -11) (undo-tree-id2293 . -8) (undo-tree-id2294 . -5) (undo-tree-id2295 . -3) (undo-tree-id2296 . -1) (undo-tree-id2297 . -35)) nil (26015 48791 417920 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 19071 . 19072) (nil fontified nil 18899 . 19072) (18899 . 19072)) nil (26015 48791 417893 0) 0 nil])
([nil nil ((19067 . 19071) (19023 . 19027) (18970 . 18974) (18915 . 18919) 18763) nil (26015 48791 417888 0) 0 nil])
([nil nil ((137 . 19804) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.
    event_loop.set_control_flow(ControlFlow::Poll);

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!


    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 74 (face font-lock-constant-face fontified t) 74 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 82 (face font-lock-type-face fontified t) 82 84 (fontified t) 84 95 (face font-lock-type-face fontified t) 95 97 (fontified t) 97 105 (face font-lock-type-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face)) 152 162 (face font-lock-constant-face) 164 165 (face (rainbow-delimiters-depth-2-face)) 165 176 (face font-lock-type-face) 178 187 (face font-lock-type-face) 187 188 (face (rainbow-delimiters-depth-2-face)) 194 200 (face font-lock-constant-face) 202 215 (face font-lock-type-face) 217 225 (face font-lock-constant-face) 227 228 (face (rainbow-delimiters-depth-2-face)) 228 239 (face font-lock-type-face) 241 248 (face font-lock-type-face) 248 249 (face (rainbow-delimiters-depth-2-face)) 251 252 (face (rainbow-delimiters-depth-1-face)) 254 257 (face font-lock-keyword-face) 258 262 (face font-lock-constant-face) 264 268 (face font-lock-constant-face) 270 279 (face font-lock-type-face) 282 285 (face font-lock-keyword-face) 286 293 (face font-lock-constant-face) 295 298 (face font-lock-keyword-face) 299 305 (face font-lock-constant-face) 307 310 (face font-lock-keyword-face) 311 320 (face font-lock-constant-face) 322 325 (face font-lock-keyword-face) 326 334 (face font-lock-constant-face) 336 339 (face font-lock-keyword-face) 340 350 (face font-lock-constant-face) 352 355 (face font-lock-keyword-face) 356 361 (face font-lock-constant-face) 363 366 (face font-lock-keyword-face) 367 372 (face font-lock-constant-face) 374 377 (face font-lock-comment-delimiter-face) 377 384 (face font-lock-comment-face) 384 387 (face font-lock-keyword-face) 388 393 (face font-lock-constant-face) 395 401 (face font-lock-constant-face) 403 409 (face font-lock-type-face) 412 415 (face font-lock-keyword-face) 416 422 (face font-lock-constant-face) 427 430 (face font-lock-keyword-face) 431 439 (face font-lock-constant-face) 444 447 (face font-lock-keyword-face) 448 453 (face font-lock-constant-face) 455 456 (face (rainbow-delimiters-depth-1-face)) 456 465 (face font-lock-type-face) 467 473 (face font-lock-type-face) 473 474 (face (rainbow-delimiters-depth-1-face)) 477 479 (face font-lock-keyword-face) 480 502 (face font-lock-function-name-face) 502 503 (face (rainbow-delimiters-depth-1-face)) 508 514 (face font-lock-variable-name-face) 516 517 (face rust-ampersand-face) 517 521 (face font-lock-constant-face) 523 529 (face font-lock-type-face) 535 541 (face font-lock-variable-name-face) 543 544 (face rust-ampersand-face) 544 548 (face font-lock-constant-face) 550 564 (face font-lock-type-face) 570 582 (face font-lock-variable-name-face) 584 588 (face font-lock-constant-face) 590 603 (face font-lock-type-face) 609 621 (face font-lock-variable-name-face) 623 629 (face font-lock-type-face) 629 630 (face (rainbow-delimiters-depth-2-face)) 630 634 (face font-lock-constant-face) 636 649 (face font-lock-type-face) 649 650 (face (rainbow-delimiters-depth-2-face)) 656 670 (face font-lock-variable-name-face) 672 673 (face rust-ampersand-face) 673 674 (face (rainbow-delimiters-depth-2-face)) 674 678 (face font-lock-constant-face) 680 698 (face font-lock-type-face) 698 699 (face (rainbow-delimiters-depth-2-face)) 705 711 (face font-lock-variable-name-face) 713 717 (face font-lock-constant-face) 719 741 (face font-lock-type-face) 743 744 (face (rainbow-delimiters-depth-1-face)) 746 747 (syntax-table (1)) 748 752 (face font-lock-constant-face) 754 768 (face font-lock-type-face) 769 770 (face (rainbow-delimiters-depth-1-face)) 775 778 (face font-lock-keyword-face) 779 785 (face font-lock-variable-name-face) 815 816 (face (rainbow-delimiters-depth-2-face)) 822 823 (face (rainbow-delimiters-depth-2-face)) 859 860 (face (rainbow-delimiters-depth-2-face)) 860 861 (face rust-ampersand-face) 861 865 (face font-lock-constant-face) 867 891 (face font-lock-type-face) 892 893 (face (rainbow-delimiters-depth-3-face)) 902 907 (face font-lock-variable-name-face) 909 913 (face font-lock-type-face) 913 914 (face (rainbow-delimiters-depth-4-face)) 914 931 (face font-lock-string-face) 931 932 (face (rainbow-delimiters-depth-4-face)) 942 948 (face font-lock-variable-name-face) 950 954 (face font-lock-type-face) 954 955 (face (rainbow-delimiters-depth-4-face)) 961 962 (face (rainbow-delimiters-depth-4-face)) 972 978 (face font-lock-variable-name-face) 980 984 (face font-lock-constant-face) 986 997 (face font-lock-type-face) 998 999 (face (rainbow-delimiters-depth-4-face)) 1012 1018 (face font-lock-variable-name-face) 1020 1021 (face rust-ampersand-face) 1041 1052 (face font-lock-variable-name-face) 1054 1063 (face font-lock-string-face) 1077 1084 (face font-lock-variable-name-face) 1110 1111 (face (rainbow-delimiters-depth-4-face)) 1121 1129 (face font-lock-variable-name-face) 1131 1135 (face font-lock-type-face) 1135 1136 (face (rainbow-delimiters-depth-4-face)) 1136 1140 (face font-lock-constant-face) 1142 1155 (face font-lock-type-face) 1156 1157 (face (rainbow-delimiters-depth-5-face)) 1170 1176 (face font-lock-variable-name-face) 1178 1179 (face rust-ampersand-face) 1199 1210 (face font-lock-variable-name-face) 1212 1221 (face font-lock-string-face) 1235 1242 (face font-lock-variable-name-face) 1244 1245 (face rust-ampersand-face) 1245 1246 (face (rainbow-delimiters-depth-6-face)) 1246 1250 (face font-lock-type-face) 1250 1251 (face (rainbow-delimiters-depth-7-face)) 1251 1255 (face font-lock-constant-face) 1257 1273 (face font-lock-type-face) 1274 1275 (face (rainbow-delimiters-depth-8-face)) 1292 1298 (face font-lock-variable-name-face) 1330 1335 (face font-lock-variable-name-face) 1337 1341 (face font-lock-type-face) 1341 1342 (face (rainbow-delimiters-depth-9-face)) 1342 1346 (face font-lock-constant-face) 1348 1358 (face font-lock-type-face) 1359 1360 (face (rainbow-delimiters-depth-1-face)) 1381 1386 (face font-lock-variable-name-face) 1388 1390 (face font-lock-constant-face) 1390 1392 (face font-lock-constant-face) 1394 1408 (face font-lock-type-face) 1410 1417 (face font-lock-type-face) 1439 1444 (face font-lock-variable-name-face) 1446 1450 (face font-lock-constant-face) 1452 1466 (face font-lock-type-face) 1468 1475 (face font-lock-type-face) 1493 1494 (face (rainbow-delimiters-depth-1-face)) 1494 1495 (face (rainbow-delimiters-depth-9-face)) 1513 1523 (face font-lock-variable-name-face) 1525 1529 (face font-lock-constant-face) 1531 1542 (face font-lock-type-face) 1544 1547 (face font-lock-type-face) 1561 1562 (face (rainbow-delimiters-depth-8-face)) 1562 1563 (face (rainbow-delimiters-depth-7-face)) 1563 1564 (face (rainbow-delimiters-depth-6-face)) 1574 1575 (face (rainbow-delimiters-depth-5-face)) 1575 1576 (face (rainbow-delimiters-depth-4-face)) 1586 1595 (face font-lock-variable-name-face) 1597 1601 (face font-lock-constant-face) 1603 1617 (face font-lock-type-face) 1618 1619 (face (rainbow-delimiters-depth-4-face)) 1632 1640 (face font-lock-variable-name-face) 1642 1646 (face font-lock-constant-face) 1648 1665 (face font-lock-type-face) 1667 1679 (face font-lock-type-face) 1693 1711 (face font-lock-variable-name-face) 1713 1717 (face font-lock-type-face) 1731 1741 (face font-lock-variable-name-face) 1743 1747 (face font-lock-constant-face) 1749 1758 (face font-lock-type-face) 1760 1763 (face font-lock-type-face) 1777 1786 (face font-lock-variable-name-face) 1788 1792 (face font-lock-type-face) 1792 1793 (face (rainbow-delimiters-depth-5-face)) 1793 1797 (face font-lock-constant-face) 1799 1803 (face font-lock-type-face) 1805 1809 (face font-lock-type-face) 1809 1810 (face (rainbow-delimiters-depth-5-face)) 1824 1827 (face font-lock-comment-delimiter-face) 1827 1909 (face font-lock-comment-face) 1921 1933 (face font-lock-variable-name-face) 1935 1939 (face font-lock-constant-face) 1941 1952 (face font-lock-type-face) 1954 1958 (face font-lock-type-face) 1972 1975 (face font-lock-comment-delimiter-face) 1975 2013 (face font-lock-comment-face) 2025 2040 (face font-lock-variable-name-face) 2042 2047 (face font-lock-keyword-face) 2061 2064 (face font-lock-comment-delimiter-face) 2064 2110 (face font-lock-comment-face) 2122 2134 (face font-lock-variable-name-face) 2136 2141 (face font-lock-keyword-face) 2151 2152 (face (rainbow-delimiters-depth-4-face)) 2162 2175 (face font-lock-variable-name-face) 2193 2194 (face (rainbow-delimiters-depth-4-face)) 2203 2207 (face font-lock-constant-face) 2209 2226 (face font-lock-type-face) 2227 2228 (face (rainbow-delimiters-depth-5-face)) 2261 2280 (face font-lock-variable-name-face) 2282 2286 (face font-lock-keyword-face) 2300 2313 (face font-lock-variable-name-face) 2315 2319 (face font-lock-constant-face) 2321 2336 (face font-lock-type-face) 2338 2342 (face font-lock-type-face) 2356 2363 (face font-lock-variable-name-face) 2365 2369 (face font-lock-constant-face) 2371 2383 (face font-lock-type-face) 2392 2393 (face (rainbow-delimiters-depth-6-face)) 2393 2394 (face (rainbow-delimiters-depth-6-face)) 2408 2412 (face font-lock-variable-name-face) 2414 2418 (face font-lock-constant-face) 2420 2434 (face font-lock-type-face) 2443 2444 (face (rainbow-delimiters-depth-6-face)) 2444 2445 (face (rainbow-delimiters-depth-6-face)) 2455 2456 (face (rainbow-delimiters-depth-5-face)) 2456 2457 (face (rainbow-delimiters-depth-4-face)) 2467 2478 (face font-lock-variable-name-face) 2480 2484 (face font-lock-constant-face) 2486 2502 (face font-lock-type-face) 2503 2504 (face (rainbow-delimiters-depth-4-face)) 2517 2522 (face font-lock-variable-name-face) 2539 2543 (face font-lock-variable-name-face) 2561 2586 (face font-lock-variable-name-face) 2588 2593 (face font-lock-keyword-face) 2603 2604 (face (rainbow-delimiters-depth-4-face)) 2614 2623 (face font-lock-variable-name-face) 2625 2629 (face font-lock-type-face) 2635 2636 (face (rainbow-delimiters-depth-3-face)) 2636 2637 (face (rainbow-delimiters-depth-2-face)) 2638 2639 (face (rainbow-delimiters-depth-1-face)) 2642 2648 (face font-lock-keyword-face) 2649 2654 (face font-lock-type-face) 2655 2656 (face (rainbow-delimiters-depth-1-face)) 2661 2668 (face font-lock-variable-name-face) 2670 2674 (face font-lock-constant-face) 2676 2683 (face font-lock-type-face) 2689 2695 (face font-lock-variable-name-face) 2697 2701 (face font-lock-constant-face) 2703 2709 (face font-lock-type-face) 2715 2720 (face font-lock-variable-name-face) 2722 2726 (face font-lock-constant-face) 2728 2733 (face font-lock-type-face) 2739 2745 (face font-lock-variable-name-face) 2747 2751 (face font-lock-constant-face) 2753 2773 (face font-lock-type-face) 2779 2783 (face font-lock-variable-name-face) 2785 2790 (face font-lock-constant-face) 2792 2795 (face font-lock-constant-face) 2797 2809 (face font-lock-type-face) 2809 2810 (face (rainbow-delimiters-depth-2-face)) 2810 2813 (face font-lock-type-face) 2813 2814 (face (rainbow-delimiters-depth-2-face)) 2820 2823 (face font-lock-comment-delimiter-face) 2823 2872 (face font-lock-comment-face) 2876 2879 (face font-lock-comment-delimiter-face) 2879 2919 (face font-lock-comment-face) 2919 2928 (face font-lock-comment-face) 2932 2935 (face font-lock-comment-delimiter-face) 2935 2980 (face font-lock-comment-face) 2984 2990 (face font-lock-variable-name-face) 2992 2998 (face font-lock-type-face) 3004 3019 (face font-lock-variable-name-face) 3021 3025 (face font-lock-constant-face) 3027 3041 (face font-lock-type-face) 3047 3056 (face font-lock-variable-name-face) 3058 3063 (face font-lock-constant-face) 3065 3070 (face font-lock-type-face) 3078 3103 (face font-lock-variable-name-face) 3105 3109 (face font-lock-constant-face) 3111 3126 (face font-lock-type-face) 3132 3145 (face font-lock-variable-name-face) 3147 3154 (face font-lock-type-face) 3166 3172 (face font-lock-variable-name-face) 3174 3180 (face font-lock-constant-face) 3182 3188 (face font-lock-type-face) 3190 3193 (face font-lock-comment-delimiter-face) 3193 3202 (face font-lock-comment-face) 3206 3216 (face font-lock-variable-name-face) 3218 3224 (face font-lock-constant-face) 3226 3236 (face font-lock-type-face) 3238 3241 (face font-lock-comment-delimiter-face) 3241 3246 (face font-lock-comment-face) 3250 3267 (face font-lock-variable-name-face) 3269 3275 (face font-lock-constant-face) 3277 3293 (face font-lock-type-face) 3295 3298 (face font-lock-comment-delimiter-face) 3298 3307 (face font-lock-comment-face) 3311 3314 (face font-lock-comment-delimiter-face) 3314 3318 (face font-lock-comment-face) 3322 3325 (face font-lock-comment-delimiter-face) 3325 3330 (face font-lock-comment-face) 3334 3347 (face font-lock-variable-name-face) 3349 3353 (face font-lock-type-face) 3353 3354 (rear-nonsticky t) 3360 3374 (face font-lock-variable-name-face) 3376 3389 (face font-lock-type-face) 3395 3408 (face font-lock-variable-name-face) 3410 3414 (face font-lock-constant-face) 3416 3422 (face font-lock-type-face) 3428 3445 (face font-lock-variable-name-face) 3447 3451 (face font-lock-constant-face) 3453 3462 (face font-lock-type-face) 3469 3482 (face font-lock-variable-name-face) 3484 3496 (face font-lock-type-face) 3502 3514 (face font-lock-variable-name-face) 3516 3520 (face font-lock-constant-face) 3522 3528 (face font-lock-type-face) 3534 3550 (face font-lock-variable-name-face) 3552 3556 (face font-lock-constant-face) 3558 3567 (face font-lock-type-face) 3573 3594 (face font-lock-variable-name-face) 3596 3600 (face font-lock-constant-face) 3602 3616 (face font-lock-type-face) 3623 3632 (face font-lock-variable-name-face) 3634 3637 (face font-lock-type-face) 3637 3638 (face (rainbow-delimiters-depth-2-face)) 3638 3646 (face font-lock-type-face) 3646 3647 (face (rainbow-delimiters-depth-2-face)) 3653 3668 (face font-lock-variable-name-face) 3670 3674 (face font-lock-constant-face) 3676 3682 (face font-lock-type-face) 3691 3692 (face (rainbow-delimiters-depth-1-face)) 3694 3698 (face font-lock-keyword-face) 3699 3704 (face font-lock-type-face) 3705 3706 (face (rainbow-delimiters-depth-1-face)) 3711 3714 (face font-lock-comment-delimiter-face) 3714 3766 (face font-lock-comment-face) 3770 3775 (face font-lock-keyword-face) 3776 3778 (face font-lock-keyword-face) 3779 3782 (face font-lock-function-name-face) 3782 3783 (face (rainbow-delimiters-depth-2-face)) 3783 3789 (face font-lock-variable-name-face) 3791 3797 (face font-lock-type-face) 3797 3798 (face (rainbow-delimiters-depth-2-face)) 3800 3801 (syntax-table (1)) 3802 3806 (face font-lock-type-face) 3807 3808 (face (rainbow-delimiters-depth-2-face)) 3817 3820 (face font-lock-keyword-face) 3821 3825 (face font-lock-variable-name-face) 3845 3846 (face (rainbow-delimiters-depth-3-face)) 3846 3847 (face (rainbow-delimiters-depth-3-face)) 3858 3861 (face font-lock-comment-delimiter-face) 3861 3897 (face font-lock-comment-face) 3905 3908 (face font-lock-comment-delimiter-face) 3908 3923 (face font-lock-comment-face) 3923 3924 (syntax-table (1) face font-lock-comment-face) 3924 3964 (face font-lock-comment-face) 3972 3975 (face font-lock-keyword-face) 3976 3984 (face font-lock-variable-name-face) 3987 3991 (face font-lock-constant-face) 3993 4001 (face font-lock-type-face) 4006 4007 (face (rainbow-delimiters-depth-3-face)) 4007 4011 (face font-lock-constant-face) 4013 4031 (face font-lock-type-face) 4032 4033 (face (rainbow-delimiters-depth-4-face)) 4046 4054 (face font-lock-variable-name-face) 4056 4060 (face font-lock-constant-face) 4062 4070 (face font-lock-type-face) 4075 4076 (face (rainbow-delimiters-depth-5-face)) 4076 4077 (face (rainbow-delimiters-depth-5-face)) 4093 4100 (face font-lock-type-face) 4109 4110 (face (rainbow-delimiters-depth-5-face)) 4110 4111 (face (rainbow-delimiters-depth-5-face)) 4120 4121 (face (rainbow-delimiters-depth-4-face)) 4121 4122 (face (rainbow-delimiters-depth-3-face)) 4141 4144 (face font-lock-comment-delimiter-face) 4144 4153 (face font-lock-comment-face) 4161 4163 (face font-lock-comment-delimiter-face) 4163 4164 (face font-lock-comment-face) 4172 4175 (face font-lock-comment-delimiter-face) 4175 4240 (face font-lock-comment-face) 4248 4251 (face font-lock-comment-delimiter-face) 4251 4298 (face font-lock-comment-face) 4306 4309 (face font-lock-keyword-face) 4310 4317 (face font-lock-variable-name-face) 4320 4326 (face rust-unsafe) 4327 4328 (face (rainbow-delimiters-depth-3-face)) 4352 4353 (face (rainbow-delimiters-depth-4-face)) 4353 4354 (face rust-ampersand-face) 4360 4361 (face (rainbow-delimiters-depth-4-face)) 4362 4363 (face (rainbow-delimiters-depth-3-face)) 4370 4371 (face (rainbow-delimiters-depth-3-face)) 4371 4372 (face (rainbow-delimiters-depth-3-face)) 4383 4386 (face font-lock-keyword-face) 4387 4394 (face font-lock-variable-name-face) 4421 4422 (face (rainbow-delimiters-depth-3-face)) 4435 4436 (face rust-ampersand-face) 4436 4440 (face font-lock-constant-face) 4442 4463 (face font-lock-type-face) 4464 4465 (face (rainbow-delimiters-depth-4-face)) 4482 4498 (face font-lock-variable-name-face) 4500 4504 (face font-lock-constant-face) 4506 4521 (face font-lock-type-face) 4530 4531 (face (rainbow-delimiters-depth-5-face)) 4531 4532 (face (rainbow-delimiters-depth-5-face)) 4550 4568 (face font-lock-variable-name-face) 4570 4574 (face font-lock-type-face) 4574 4575 (face (rainbow-delimiters-depth-5-face)) 4575 4576 (face rust-ampersand-face) 4583 4584 (face (rainbow-delimiters-depth-5-face)) 4602 4624 (face font-lock-variable-name-face) 4626 4631 (face font-lock-keyword-face) 4645 4646 (face (rainbow-delimiters-depth-4-face)) 4656 4657 (face (rainbow-delimiters-depth-3-face)) 4658 4663 (face font-lock-keyword-face) 4670 4671 (face (rainbow-delimiters-depth-3-face)) 4671 4672 (face (rainbow-delimiters-depth-3-face)) 4683 4686 (face font-lock-keyword-face) 4687 4688 (face (rainbow-delimiters-depth-3-face)) 4701 4702 (face (rainbow-delimiters-depth-3-face)) 4727 4728 (face (rainbow-delimiters-depth-3-face)) 4741 4742 (face rust-ampersand-face) 4742 4746 (face font-lock-constant-face) 4748 4764 (face font-lock-type-face) 4765 4766 (face (rainbow-delimiters-depth-4-face)) 4783 4791 (face font-lock-variable-name-face) 4793 4797 (face font-lock-constant-face) 4799 4807 (face font-lock-type-face) 4814 4815 (face (rainbow-delimiters-depth-5-face)) 4815 4816 (face (rainbow-delimiters-depth-5-face)) 4834 4837 (face font-lock-comment-delimiter-face) 4837 4855 (face font-lock-comment-face) 4855 4889 (face font-lock-comment-face) 4905 4908 (face font-lock-comment-delimiter-face) 4908 4964 (face font-lock-comment-face) 4980 4986 (face font-lock-variable-name-face) 4988 4990 (face font-lock-keyword-face) 4991 4995 (face font-lock-preprocessor-face) 4995 4996 (face (rainbow-delimiters-depth-5-face)) 5010 5018 (face font-lock-string-face) 5018 5019 (face (rainbow-delimiters-depth-5-face)) 5020 5021 (face (rainbow-delimiters-depth-5-face)) 5042 5046 (face font-lock-constant-face) 5048 5054 (face font-lock-type-face) 5081 5082 (face (rainbow-delimiters-depth-6-face)) 5082 5083 (face (rainbow-delimiters-depth-6-face)) 5100 5101 (face (rainbow-delimiters-depth-5-face)) 5102 5106 (face font-lock-keyword-face) 5107 5108 (face (rainbow-delimiters-depth-5-face)) 5129 5133 (face font-lock-constant-face) 5135 5141 (face font-lock-type-face) 5150 5151 (face (rainbow-delimiters-depth-6-face)) 5151 5152 (face (rainbow-delimiters-depth-6-face)) 5169 5170 (face (rainbow-delimiters-depth-5-face)) 5188 5193 (face font-lock-variable-name-face) 5195 5199 (face font-lock-type-face) 5213 5214 (face (rainbow-delimiters-depth-4-face)) 5228 5232 (face font-lock-type-face) 5234 5237 (face font-lock-comment-delimiter-face) 5237 5248 (face font-lock-comment-face) 5256 5257 (face (rainbow-delimiters-depth-3-face)) 5258 5263 (face font-lock-keyword-face) 5270 5271 (face (rainbow-delimiters-depth-3-face)) 5271 5272 (face (rainbow-delimiters-depth-3-face)) 5284 5287 (face font-lock-keyword-face) 5288 5300 (face font-lock-variable-name-face) 5327 5328 (face (rainbow-delimiters-depth-3-face)) 5328 5329 (face rust-ampersand-face) 5336 5337 (face (rainbow-delimiters-depth-3-face)) 5347 5350 (face font-lock-comment-delimiter-face) 5350 5430 (face font-lock-comment-face) 5438 5441 (face font-lock-comment-delimiter-face) 5441 5521 (face font-lock-comment-face) 5529 5532 (face font-lock-comment-delimiter-face) 5532 5606 (face font-lock-comment-face) 5614 5617 (face font-lock-keyword-face) 5618 5632 (face font-lock-variable-name-face) 5660 5661 (face (rainbow-delimiters-depth-3-face)) 5661 5662 (face (rainbow-delimiters-depth-3-face)) 5682 5683 (face (rainbow-delimiters-depth-3-face)) 5683 5684 (face (rainbow-delimiters-depth-3-face)) 5704 5705 (face (rainbow-delimiters-depth-3-face)) 5718 5719 (face (rainbow-delimiters-depth-4-face)) 5719 5720 (face (rainbow-delimiters-depth-4-face)) 5720 5721 (face (rainbow-delimiters-depth-3-face)) 5739 5740 (face (rainbow-delimiters-depth-3-face)) 5740 5741 (face (rainbow-delimiters-depth-3-face)) 5764 5765 (face (rainbow-delimiters-depth-3-face)) 5785 5786 (face (rainbow-delimiters-depth-4-face)) 5787 5788 (face (rainbow-delimiters-depth-4-face)) 5788 5789 (face (rainbow-delimiters-depth-3-face)) 5799 5802 (face font-lock-keyword-face) 5803 5809 (face font-lock-variable-name-face) 5812 5816 (face font-lock-constant-face) 5818 5838 (face font-lock-type-face) 5839 5840 (face (rainbow-delimiters-depth-3-face)) 5853 5858 (face font-lock-variable-name-face) 5860 5864 (face font-lock-constant-face) 5866 5879 (face font-lock-type-face) 5881 5898 (face font-lock-type-face) 5912 5918 (face font-lock-variable-name-face) 5948 5953 (face font-lock-variable-name-face) 5979 5985 (face font-lock-variable-name-face) 6012 6024 (face font-lock-variable-name-face) 6052 6053 (face (rainbow-delimiters-depth-4-face)) 6054 6055 (face (rainbow-delimiters-depth-4-face)) 6069 6079 (face font-lock-variable-name-face) 6105 6106 (face (rainbow-delimiters-depth-4-face)) 6107 6108 (face (rainbow-delimiters-depth-4-face)) 6122 6134 (face font-lock-variable-name-face) 6136 6140 (face font-lock-preprocessor-face) 6140 6141 (face (rainbow-delimiters-depth-4-face)) 6141 6142 (face (rainbow-delimiters-depth-4-face)) 6152 6153 (face (rainbow-delimiters-depth-3-face)) 6180 6181 (face (rainbow-delimiters-depth-3-face)) 6181 6182 (face rust-ampersand-face) 6190 6191 (face rust-ampersand-face) 6197 6198 (face (rainbow-delimiters-depth-3-face)) 6218 6221 (face font-lock-keyword-face) 6222 6247 (face font-lock-variable-name-face) 6293 6294 (face (rainbow-delimiters-depth-3-face)) 6294 6295 (face rust-ampersand-face) 6295 6299 (face font-lock-constant-face) 6301 6326 (face font-lock-type-face) 6327 6328 (face (rainbow-delimiters-depth-4-face)) 6345 6352 (face font-lock-variable-name-face) 6354 6355 (face rust-ampersand-face) 6355 6356 (face (rainbow-delimiters-depth-5-face)) 6377 6381 (face font-lock-constant-face) 6383 6389 (face font-lock-type-face) 6389 6403 (face font-lock-type-face) 6404 6405 (face (rainbow-delimiters-depth-6-face)) 6430 6437 (face font-lock-variable-name-face) 6466 6476 (face font-lock-variable-name-face) 6478 6482 (face font-lock-constant-face) 6484 6496 (face font-lock-type-face) 6498 6506 (face font-lock-type-face) 6532 6534 (face font-lock-variable-name-face) 6536 6540 (face font-lock-constant-face) 6542 6553 (face font-lock-type-face) 6555 6562 (face font-lock-type-face) 6563 6564 (face (rainbow-delimiters-depth-7-face)) 6593 6605 (face font-lock-variable-name-face) 6607 6612 (face font-lock-keyword-face) 6642 6653 (face font-lock-variable-name-face) 6653 6656 (face font-lock-variable-name-face) 6658 6662 (face font-lock-constant-face) 6664 6684 (face font-lock-type-face) 6686 6688 (face font-lock-type-face) 6718 6729 (face font-lock-variable-name-face) 6731 6735 (face font-lock-constant-face) 6737 6754 (face font-lock-type-face) 6756 6761 (face font-lock-type-face) 6762 6763 (face (rainbow-delimiters-depth-8-face)) 6764 6774 (face font-lock-variable-name-face) 6776 6780 (face font-lock-keyword-face) 6781 6782 (face (rainbow-delimiters-depth-8-face)) 6808 6809 (face (rainbow-delimiters-depth-7-face)) 6835 6840 (face font-lock-variable-name-face) 6842 6846 (face font-lock-type-face) 6868 6869 (face (rainbow-delimiters-depth-6-face)) 6891 6895 (face font-lock-constant-face) 6897 6917 (face font-lock-type-face) 6918 6919 (face (rainbow-delimiters-depth-6-face)) 6944 6951 (face font-lock-variable-name-face) 6980 6990 (face font-lock-variable-name-face) 6992 6996 (face font-lock-constant-face) 6998 7010 (face font-lock-type-face) 7012 7020 (face font-lock-type-face) 7046 7049 (face font-lock-comment-delimiter-face) 7049 7095 (face font-lock-comment-face) 7119 7122 (face font-lock-comment-delimiter-face) 7122 7157 (face font-lock-comment-face) 7181 7183 (face font-lock-variable-name-face) 7185 7189 (face font-lock-constant-face) 7191 7202 (face font-lock-type-face) 7204 7211 (face font-lock-type-face) 7211 7212 (face (rainbow-delimiters-depth-7-face)) 7212 7216 (face font-lock-constant-face) 7218 7236 (face font-lock-type-face) 7238 7247 (face font-lock-type-face) 7247 7248 (face (rainbow-delimiters-depth-7-face)) 7274 7279 (face font-lock-variable-name-face) 7281 7285 (face font-lock-type-face) 7307 7308 (face (rainbow-delimiters-depth-6-face)) 7326 7327 (face (rainbow-delimiters-depth-5-face)) 7345 7350 (face font-lock-variable-name-face) 7352 7356 (face font-lock-type-face) 7356 7357 (face (rainbow-delimiters-depth-5-face)) 7357 7384 (face font-lock-string-face) 7384 7385 (face (rainbow-delimiters-depth-5-face)) 7399 7400 (face (rainbow-delimiters-depth-4-face)) 7400 7401 (face (rainbow-delimiters-depth-3-face)) 7412 7417 (face font-lock-preprocessor-face) 7417 7418 (face (rainbow-delimiters-depth-3-face)) 7418 7430 (face font-lock-string-face) 7430 7431 (face (rainbow-delimiters-depth-3-face)) 7441 7444 (face font-lock-keyword-face) 7445 7454 (face font-lock-variable-name-face) 7457 7462 (face font-lock-constant-face) 7472 7473 (face (rainbow-delimiters-depth-3-face)) 7473 7526 (face font-lock-string-face) 7528 7529 (face rust-ampersand-face) 7537 7538 (face rust-ampersand-face) 7545 7546 (face rust-ampersand-face) 7571 7572 (face (rainbow-delimiters-depth-3-face)) 7579 7580 (face (rainbow-delimiters-depth-3-face)) 7580 7581 (face (rainbow-delimiters-depth-3-face)) 7592 7595 (face font-lock-keyword-face) 7596 7609 (face font-lock-variable-name-face) 7612 7619 (face font-lock-constant-face) 7621 7628 (face font-lock-type-face) 7650 7651 (face (rainbow-delimiters-depth-3-face)) 7651 7652 (face rust-ampersand-face) 7660 7661 (face rust-ampersand-face) 7669 7684 (face font-lock-string-face) 7684 7685 (face (rainbow-delimiters-depth-3-face)) 7697 7700 (face font-lock-keyword-face) 7701 7707 (face font-lock-variable-name-face) 7710 7716 (face font-lock-constant-face) 7718 7724 (face font-lock-type-face) 7729 7730 (face (rainbow-delimiters-depth-3-face)) 7730 7731 (face (rainbow-delimiters-depth-4-face)) 7745 7746 (face (rainbow-delimiters-depth-4-face)) 7748 7754 (face font-lock-constant-face) 7756 7759 (face font-lock-type-face) 7759 7760 (face (rainbow-delimiters-depth-4-face)) 7765 7766 (face (rainbow-delimiters-depth-4-face)) 7768 7774 (face font-lock-constant-face) 7776 7779 (face font-lock-type-face) 7779 7780 (face (rainbow-delimiters-depth-4-face)) 7785 7786 (face (rainbow-delimiters-depth-4-face)) 7786 7787 (face (rainbow-delimiters-depth-3-face)) 7797 7800 (face font-lock-keyword-face) 7801 7811 (face font-lock-variable-name-face) 7814 7820 (face font-lock-constant-face) 7822 7832 (face font-lock-type-face) 7837 7838 (face (rainbow-delimiters-depth-3-face)) 7867 7873 (face font-lock-constant-face) 7875 7878 (face font-lock-type-face) 7878 7879 (face (rainbow-delimiters-depth-4-face)) 7883 7884 (face (rainbow-delimiters-depth-4-face)) 7896 7897 (face (rainbow-delimiters-depth-3-face)) 7907 7910 (face font-lock-keyword-face) 7911 7928 (face font-lock-variable-name-face) 7931 7937 (face font-lock-constant-face) 7939 7955 (face font-lock-type-face) 7960 7961 (face (rainbow-delimiters-depth-3-face)) 7969 7970 (face (rainbow-delimiters-depth-3-face)) 7983 7986 (face font-lock-keyword-face) 7987 7990 (face font-lock-keyword-face) 7991 8005 (face font-lock-variable-name-face) 8008 8021 (face font-lock-type-face) 8026 8027 (face (rainbow-delimiters-depth-3-face)) 8027 8028 (face (rainbow-delimiters-depth-3-face)) 8069 8070 (face (rainbow-delimiters-depth-3-face)) 8070 8071 (face rust-ampersand-face) 8079 8080 (face rust-ampersand-face) 8090 8091 (face (rainbow-delimiters-depth-3-face)) 8093 8096 (face font-lock-comment-delimiter-face) 8096 8103 (face font-lock-comment-face) 8103 8104 (face font-lock-comment-face rear-nonsticky t) 8104 8105 (face font-lock-comment-face) 8113 8116 (face font-lock-keyword-face) 8117 8130 (face font-lock-variable-name-face) 8168 8169 (face (rainbow-delimiters-depth-3-face)) 8169 8170 (face rust-ampersand-face) 8176 8177 (face (rainbow-delimiters-depth-3-face)) 8189 8192 (face font-lock-keyword-face) 8193 8217 (face font-lock-variable-name-face) 8251 8252 (face (rainbow-delimiters-depth-3-face)) 8252 8253 (face rust-ampersand-face) 8253 8257 (face font-lock-constant-face) 8259 8284 (face font-lock-type-face) 8285 8286 (face (rainbow-delimiters-depth-4-face)) 8299 8306 (face font-lock-variable-name-face) 8308 8309 (face rust-ampersand-face) 8309 8310 (face (rainbow-delimiters-depth-5-face)) 8327 8331 (face font-lock-constant-face) 8333 8353 (face font-lock-type-face) 8354 8355 (face (rainbow-delimiters-depth-6-face)) 8376 8383 (face font-lock-variable-name-face) 8408 8418 (face font-lock-variable-name-face) 8420 8424 (face font-lock-constant-face) 8426 8438 (face font-lock-type-face) 8440 8446 (face font-lock-type-face) 8449 8453 (face font-lock-constant-face) 8455 8467 (face font-lock-type-face) 8469 8476 (face font-lock-type-face) 8476 8477 (face font-lock-type-face rear-nonsticky t) 8499 8501 (face font-lock-variable-name-face) 8503 8507 (face font-lock-constant-face) 8509 8520 (face font-lock-type-face) 8522 8528 (face font-lock-type-face) 8529 8530 (face (rainbow-delimiters-depth-7-face)) 8555 8557 (face font-lock-variable-name-face) 8559 8563 (face font-lock-constant-face) 8565 8582 (face font-lock-type-face) 8584 8591 (face font-lock-type-face) 8617 8635 (face font-lock-variable-name-face) 8637 8642 (face font-lock-keyword-face) 8668 8684 (face font-lock-variable-name-face) 8686 8690 (face font-lock-type-face) 8712 8713 (face (rainbow-delimiters-depth-7-face)) 8735 8740 (face font-lock-variable-name-face) 8742 8746 (face font-lock-type-face) 8764 8765 (face (rainbow-delimiters-depth-6-face)) 8778 8779 (face (rainbow-delimiters-depth-5-face)) 8793 8798 (face font-lock-variable-name-face) 8800 8804 (face font-lock-type-face) 8804 8805 (face (rainbow-delimiters-depth-5-face)) 8805 8831 (face font-lock-string-face) 8831 8832 (face (rainbow-delimiters-depth-5-face)) 8842 8843 (face (rainbow-delimiters-depth-4-face)) 8843 8844 (face (rainbow-delimiters-depth-3-face)) 8855 8858 (face font-lock-keyword-face) 8859 8876 (face font-lock-variable-name-face) 8903 8904 (face (rainbow-delimiters-depth-3-face)) 8904 8905 (face rust-ampersand-face) 8905 8909 (face font-lock-constant-face) 8911 8930 (face font-lock-type-face) 8931 8932 (face (rainbow-delimiters-depth-4-face)) 8945 8951 (face font-lock-variable-name-face) 8953 8954 (face rust-ampersand-face) 8992 8999 (face font-lock-variable-name-face) 9001 9002 (face rust-ampersand-face) 9002 9003 (face (rainbow-delimiters-depth-5-face)) 9020 9024 (face font-lock-constant-face) 9026 9040 (face font-lock-type-face) 9041 9042 (face (rainbow-delimiters-depth-6-face)) 9063 9070 (face font-lock-variable-name-face) 9095 9103 (face font-lock-variable-name-face) 9136 9137 (face (rainbow-delimiters-depth-7-face)) 9137 9138 (face (rainbow-delimiters-depth-7-face)) 9156 9157 (face (rainbow-delimiters-depth-6-face)) 9170 9171 (face (rainbow-delimiters-depth-5-face)) 9185 9190 (face font-lock-variable-name-face) 9192 9196 (face font-lock-type-face) 9196 9197 (face (rainbow-delimiters-depth-5-face)) 9197 9216 (face font-lock-string-face) 9216 9217 (face (rainbow-delimiters-depth-5-face)) 9227 9228 (face (rainbow-delimiters-depth-4-face)) 9228 9229 (face (rainbow-delimiters-depth-3-face)) 9240 9243 (face font-lock-keyword-face) 9244 9257 (face font-lock-variable-name-face) 9260 9265 (face font-lock-constant-face) 9267 9275 (face font-lock-type-face) 9275 9279 (face font-lock-type-face) 9280 9281 (face (rainbow-delimiters-depth-3-face)) 9294 9302 (face font-lock-variable-name-face) 9304 9305 (face (rainbow-delimiters-depth-4-face)) 9323 9324 (face (rainbow-delimiters-depth-4-face)) 9338 9343 (face font-lock-variable-name-face) 9345 9346 (face (rainbow-delimiters-depth-4-face)) 9364 9365 (face (rainbow-delimiters-depth-4-face)) 9375 9376 (face (rainbow-delimiters-depth-3-face)) 9386 9389 (face font-lock-keyword-face) 9390 9391 (face (rainbow-delimiters-depth-3-face)) 9446 9447 (face (rainbow-delimiters-depth-3-face)) 9462 9467 (face font-lock-constant-face) 9503 9504 (face (rainbow-delimiters-depth-3-face)) 9504 9505 (face rust-ampersand-face) 9513 9514 (face rust-ampersand-face) 9527 9528 (face (rainbow-delimiters-depth-3-face)) 9540 9542 (face font-lock-comment-delimiter-face) 9542 9550 (face font-lock-comment-face) 9550 9572 (face font-lock-comment-face) 9580 9583 (face font-lock-keyword-face) 9584 9586 (face font-lock-variable-name-face) 9586 9604 (face font-lock-variable-name-face) 9604 9605 (face font-lock-variable-name-face) 9605 9606 (face font-lock-variable-name-face) 9650 9651 (face (rainbow-delimiters-depth-3-face)) 9651 9652 (face rust-ampersand-face) 9652 9656 (face font-lock-constant-face) 9658 9679 (face font-lock-type-face) 9679 9682 (face font-lock-type-face) 9683 9684 (face (rainbow-delimiters-depth-4-face)) 9701 9706 (face font-lock-variable-name-face) 9708 9712 (face font-lock-type-face) 9712 9713 (face (rainbow-delimiters-depth-5-face)) 9713 9737 (face font-lock-string-face) 9737 9738 (face (rainbow-delimiters-depth-5-face)) 9756 9774 (face font-lock-variable-name-face) 9776 9777 (face rust-ampersand-face) 9777 9778 (face (rainbow-delimiters-depth-5-face)) 9799 9800 (face rust-ampersand-face) 9847 9848 (face rust-ampersand-face) 9894 9895 (face rust-ampersand-face) 9936 9937 (face (rainbow-delimiters-depth-5-face)) 9955 9975 (face font-lock-variable-name-face) 9977 9978 (face rust-ampersand-face) 9978 9979 (face (rainbow-delimiters-depth-5-face)) 9979 9980 (face (rainbow-delimiters-depth-5-face)) 9994 9995 (face (rainbow-delimiters-depth-4-face)) 9995 9996 (face (rainbow-delimiters-depth-3-face)) 10015 10018 (face font-lock-keyword-face) 10019 10034 (face font-lock-variable-name-face) 10037 10038 (face (rainbow-delimiters-depth-3-face)) 10051 10054 (face font-lock-keyword-face) 10055 10061 (face font-lock-variable-name-face) 10064 10068 (face font-lock-constant-face) 10070 10083 (face font-lock-preprocessor-face) 10083 10084 (face (rainbow-delimiters-depth-4-face)) 10084 10097 (face font-lock-string-face) 10097 10098 (face (rainbow-delimiters-depth-4-face)) 10135 10136 (face (rainbow-delimiters-depth-4-face)) 10153 10154 (face rust-ampersand-face) 10178 10179 (face rust-ampersand-face) 10250 10254 (face font-lock-type-face) 10254 10255 (face (rainbow-delimiters-depth-5-face)) 10255 10262 (face font-lock-constant-face) 10264 10271 (face font-lock-type-face) 10273 10285 (face font-lock-type-face) 10285 10286 (face (rainbow-delimiters-depth-5-face)) 10304 10305 (face rust-ampersand-face) 10305 10306 (face (rainbow-delimiters-depth-5-face)) 10306 10311 (face font-lock-constant-face) 10313 10324 (face font-lock-type-face) 10330 10331 (face (rainbow-delimiters-depth-6-face)) 10331 10332 (face (rainbow-delimiters-depth-6-face)) 10334 10345 (face font-lock-type-face) 10351 10352 (face (rainbow-delimiters-depth-6-face)) 10352 10353 (face (rainbow-delimiters-depth-6-face)) 10353 10354 (face (rainbow-delimiters-depth-5-face)) 10392 10393 (face (rainbow-delimiters-depth-4-face)) 10402 10403 (face (rainbow-delimiters-depth-3-face)) 10426 10429 (face font-lock-keyword-face) 10430 10439 (face font-lock-variable-name-face) 10442 10446 (face font-lock-preprocessor-face) 10446 10447 (face (rainbow-delimiters-depth-3-face)) 10460 10468 (face font-lock-type-face) 10469 10470 (face (rainbow-delimiters-depth-4-face)) 10487 10495 (face font-lock-variable-name-face) 10497 10503 (face font-lock-constant-face) 10505 10512 (face font-lock-type-face) 10518 10519 (face (rainbow-delimiters-depth-5-face)) 10519 10520 (face (rainbow-delimiters-depth-5-face)) 10538 10546 (face font-lock-variable-name-face) 10548 10554 (face font-lock-constant-face) 10556 10566 (face font-lock-type-face) 10580 10581 (face (rainbow-delimiters-depth-5-face)) 10581 10587 (face font-lock-constant-face) 10589 10592 (face font-lock-type-face) 10592 10593 (face (rainbow-delimiters-depth-6-face)) 10596 10597 (face (rainbow-delimiters-depth-6-face)) 10597 10598 (face (rainbow-delimiters-depth-5-face)) 10616 10623 (face font-lock-variable-name-face) 10625 10631 (face font-lock-constant-face) 10633 10640 (face font-lock-type-face) 10645 10646 (face (rainbow-delimiters-depth-5-face)) 10659 10660 (face (rainbow-delimiters-depth-5-face)) 10674 10675 (face (rainbow-delimiters-depth-4-face)) 10685 10686 (face (rainbow-delimiters-depth-3-face)) 10696 10699 (face font-lock-keyword-face) 10700 10713 (face font-lock-variable-name-face) 10730 10731 (face (rainbow-delimiters-depth-3-face)) 10731 10732 (face (rainbow-delimiters-depth-3-face)) 10736 10737 (face (rainbow-delimiters-depth-3-face)) 10737 10745 (face font-lock-type-face) 10753 10754 (face (rainbow-delimiters-depth-3-face)) 10764 10765 (face (rainbow-delimiters-depth-3-face)) 10765 10768 (face font-lock-type-face) 10768 10769 (face (rainbow-delimiters-depth-4-face)) 10770 10771 (face (rainbow-delimiters-depth-4-face)) 10771 10772 (face (rainbow-delimiters-depth-3-face)) 10772 10773 (face (rainbow-delimiters-depth-3-face)) 10773 10774 (face (rainbow-delimiters-depth-3-face)) 10784 10787 (face font-lock-keyword-face) 10788 10803 (face font-lock-variable-name-face) 10806 10814 (face font-lock-constant-face) 10839 10840 (face (rainbow-delimiters-depth-3-face)) 10840 10841 (face rust-ampersand-face) 10849 10850 (face rust-ampersand-face) 10863 10864 (face (rainbow-delimiters-depth-3-face)) 10875 10878 (face font-lock-comment-delimiter-face) 10878 10885 (face font-lock-comment-face) 10893 10896 (face font-lock-keyword-face) 10897 10918 (face font-lock-variable-name-face) 10921 10922 (face (rainbow-delimiters-depth-3-face)) 10935 10938 (face font-lock-keyword-face) 10939 10945 (face font-lock-variable-name-face) 10977 10978 (face (rainbow-delimiters-depth-4-face)) 10978 10979 (face rust-ampersand-face) 10979 10983 (face font-lock-constant-face) 10985 11009 (face font-lock-type-face) 11010 11011 (face (rainbow-delimiters-depth-5-face)) 11028 11033 (face font-lock-variable-name-face) 11035 11039 (face font-lock-type-face) 11039 11040 (face (rainbow-delimiters-depth-6-face)) 11040 11048 (face font-lock-string-face) 11048 11063 (face font-lock-string-face) 11063 11064 (face (rainbow-delimiters-depth-6-face)) 11082 11100 (face font-lock-variable-name-face) 11102 11103 (face rust-ampersand-face) 11103 11104 (face (rainbow-delimiters-depth-6-face)) 11125 11126 (face rust-ampersand-face) 11172 11173 (face rust-ampersand-face) 11213 11214 (face (rainbow-delimiters-depth-6-face)) 11232 11252 (face font-lock-variable-name-face) 11254 11255 (face rust-ampersand-face) 11255 11256 (face (rainbow-delimiters-depth-6-face)) 11256 11257 (face (rainbow-delimiters-depth-6-face)) 11271 11272 (face (rainbow-delimiters-depth-5-face)) 11272 11273 (face (rainbow-delimiters-depth-4-face)) 11287 11290 (face font-lock-keyword-face) 11291 11297 (face font-lock-variable-name-face) 11300 11304 (face font-lock-constant-face) 11306 11319 (face font-lock-preprocessor-face) 11319 11320 (face (rainbow-delimiters-depth-4-face)) 11320 11332 (face font-lock-string-face) 11332 11333 (face (rainbow-delimiters-depth-4-face)) 11370 11371 (face (rainbow-delimiters-depth-4-face)) 11388 11389 (face rust-ampersand-face) 11413 11414 (face rust-ampersand-face) 11469 11473 (face font-lock-type-face) 11473 11474 (face (rainbow-delimiters-depth-5-face)) 11474 11481 (face font-lock-constant-face) 11483 11490 (face font-lock-type-face) 11492 11504 (face font-lock-type-face) 11504 11505 (face (rainbow-delimiters-depth-5-face)) 11523 11524 (face rust-ampersand-face) 11524 11525 (face (rainbow-delimiters-depth-5-face)) 11525 11530 (face font-lock-constant-face) 11532 11543 (face font-lock-type-face) 11549 11550 (face (rainbow-delimiters-depth-6-face)) 11550 11551 (face (rainbow-delimiters-depth-6-face)) 11551 11552 (face (rainbow-delimiters-depth-5-face)) 11590 11591 (face (rainbow-delimiters-depth-4-face)) 11600 11601 (face (rainbow-delimiters-depth-3-face)) 11602 11603 (rear-nonsticky t) 11613 11617 (face font-lock-type-face) 11618 11619 (face (rainbow-delimiters-depth-3-face)) 11979 11992 (face font-lock-variable-name-face) 11994 11999 (face font-lock-keyword-face) 12292 12293 (face (rainbow-delimiters-depth-3-face)) 12299 12300 (face (rainbow-delimiters-depth-2-face)) 12306 12309 (face font-lock-keyword-face) 12310 12312 (face font-lock-keyword-face) 12313 12319 (face font-lock-function-name-face) 12319 12320 (face (rainbow-delimiters-depth-2-face)) 12320 12321 (face rust-ampersand-face) 12321 12325 (face font-lock-keyword-face) 12325 12326 (face (rainbow-delimiters-depth-2-face)) 12328 12329 (syntax-table (1)) 12330 12331 (face rust-ampersand-face) 12331 12337 (face font-lock-type-face) 12338 12339 (face (rainbow-delimiters-depth-2-face)) 12348 12349 (face rust-ampersand-face) 12349 12353 (face font-lock-keyword-face) 12365 12366 (face (rainbow-delimiters-depth-2-face)) 12372 12374 (face font-lock-keyword-face) 12375 12381 (face font-lock-function-name-face) 12381 12382 (face (rainbow-delimiters-depth-2-face)) 12382 12383 (face rust-ampersand-face) 12383 12386 (face font-lock-keyword-face) 12387 12391 (face font-lock-keyword-face) 12393 12401 (face font-lock-variable-name-face) 12403 12408 (face font-lock-constant-face) 12410 12413 (face font-lock-constant-face) 12415 12427 (face font-lock-type-face) 12427 12428 (face (rainbow-delimiters-depth-3-face)) 12428 12431 (face font-lock-type-face) 12431 12432 (face (rainbow-delimiters-depth-3-face)) 12432 12433 (face (rainbow-delimiters-depth-2-face)) 12434 12435 (face (rainbow-delimiters-depth-2-face)) 12444 12446 (face font-lock-keyword-face) 12462 12463 (syntax-table (1)) 12485 12486 (syntax-table (1)) 12489 12490 (face (rainbow-delimiters-depth-3-face)) 12503 12507 (face font-lock-keyword-face) 12537 12541 (face font-lock-keyword-face) 12585 12589 (face font-lock-keyword-face) 12635 12639 (face font-lock-keyword-face) 12657 12658 (face (rainbow-delimiters-depth-4-face)) 12658 12659 (face rust-ampersand-face) 12659 12663 (face font-lock-keyword-face) 12672 12673 (face rust-ampersand-face) 12673 12677 (face font-lock-keyword-face) 12684 12685 (face (rainbow-delimiters-depth-4-face)) 12699 12703 (face font-lock-keyword-face) 12720 12727 (face font-lock-constant-face) 12729 12736 (face font-lock-type-face) 12758 12759 (face (rainbow-delimiters-depth-4-face)) 12759 12760 (face rust-ampersand-face) 12760 12764 (face font-lock-keyword-face) 12773 12774 (face rust-ampersand-face) 12774 12778 (face font-lock-keyword-face) 12787 12802 (face font-lock-string-face) 12802 12803 (face (rainbow-delimiters-depth-4-face)) 12817 12821 (face font-lock-keyword-face) 12839 12840 (face (rainbow-delimiters-depth-4-face)) 12871 12872 (face (rainbow-delimiters-depth-4-face)) 12873 12874 (rear-nonsticky t) 12896 12897 (face (rainbow-delimiters-depth-3-face)) 12902 12903 (face (rainbow-delimiters-depth-2-face)) 12909 12911 (face font-lock-keyword-face) 12912 12917 (face font-lock-function-name-face) 12917 12918 (face (rainbow-delimiters-depth-2-face)) 12918 12919 (face rust-ampersand-face) 12919 12922 (face font-lock-keyword-face) 12923 12927 (face font-lock-keyword-face) 12929 12934 (face font-lock-variable-name-face) 12936 12937 (face rust-ampersand-face) 12937 12948 (face font-lock-type-face) 12948 12949 (face (rainbow-delimiters-depth-2-face)) 12951 12952 (syntax-table (1)) 12953 12957 (face font-lock-type-face) 12958 12959 (face (rainbow-delimiters-depth-2-face)) 12968 12973 (face font-lock-keyword-face) 12980 12981 (face (rainbow-delimiters-depth-3-face)) 12994 13005 (face font-lock-type-face) 13007 13020 (face font-lock-type-face) 13021 13022 (face (rainbow-delimiters-depth-4-face)) 13039 13044 (face font-lock-variable-name-face) 13062 13070 (face font-lock-type-face) 13071 13072 (face (rainbow-delimiters-depth-5-face)) 13093 13105 (face font-lock-variable-name-face) 13107 13118 (face font-lock-type-face) 13120 13124 (face font-lock-type-face) 13124 13125 (face (rainbow-delimiters-depth-6-face)) 13128 13129 (face (rainbow-delimiters-depth-6-face)) 13197 13198 (face (rainbow-delimiters-depth-5-face)) 13231 13232 (face (rainbow-delimiters-depth-4-face)) 13234 13235 (syntax-table (1)) 13236 13240 (face font-lock-keyword-face) 13275 13276 (face (rainbow-delimiters-depth-4-face)) 13288 13289 (face (rainbow-delimiters-depth-4-face)) 13303 13314 (face font-lock-type-face) 13316 13326 (face font-lock-type-face) 13327 13328 (face (rainbow-delimiters-depth-4-face)) 13339 13340 (face (rainbow-delimiters-depth-4-face)) 13342 13343 (syntax-table (1)) 13344 13345 (face (rainbow-delimiters-depth-4-face)) 13362 13366 (face font-lock-keyword-face) 13399 13400 (face (rainbow-delimiters-depth-5-face)) 13405 13406 (face (rainbow-delimiters-depth-5-face)) 13424 13428 (face font-lock-keyword-face) 13441 13442 (face (rainbow-delimiters-depth-4-face)) 13455 13466 (face font-lock-type-face) 13468 13478 (face font-lock-type-face) 13479 13480 (face (rainbow-delimiters-depth-4-face)) 13497 13503 (face font-lock-variable-name-face) 13505 13516 (face font-lock-type-face) 13518 13522 (face font-lock-type-face) 13524 13540 (fontified t) 13540 13547 (fontified t) 13547 13563 (fontified t) 13563 13566 (fontified t) 13566 13578 (fontified t) 13578 13579 (face (rainbow-delimiters-depth-4-face) fontified t) 13579 13581 (fontified t) 13581 13582 (fontified t syntax-table (1)) 13582 13583 (fontified t) 13583 13584 (face (rainbow-delimiters-depth-4-face) fontified t) 13584 13585 (fontified t) 13585 13601 (fontified t) 13601 13605 (face font-lock-keyword-face fontified t) 13605 13632 (fontified t) 13632 13644 (face font-lock-type-face fontified t) 13644 13646 (fontified t) 13646 13653 (face font-lock-type-face fontified t) 13653 13655 (fontified t) 13655 13671 (fontified t) 13671 13675 (face font-lock-keyword-face fontified t) 13675 13676 (fontified t) 13676 13688 (fontified t) 13688 13689 (face (rainbow-delimiters-depth-4-face) fontified t) 13689 13690 (fontified t) 13690 13705 (fontified t) 13705 13706 (fontified t syntax-table (1)) 13706 13707 (fontified t) 13707 13712 (face font-lock-keyword-face fontified t) 13712 13714 (fontified t) 13714 13722 (fontified t) 13722 13723 (face (rainbow-delimiters-depth-3-face) fontified t rear-nonsticky t) 13723 13724 (fontified t) 13724 13725 (fontified t) 13725 13726 (fontified t) 13726 13730 (fontified t) 13730 13731 (face (rainbow-delimiters-depth-2-face) fontified t) 13731 13732 (fontified t) 13732 13733 (fontified t) 13733 13737 (fontified t) 13737 13739 (face font-lock-keyword-face fontified t) 13739 13740 (fontified t) 13740 13746 (face font-lock-function-name-face fontified t) 13746 13747 (face (rainbow-delimiters-depth-2-face) fontified t) 13747 13748 (face rust-ampersand-face fontified t) 13748 13751 (face font-lock-keyword-face fontified t) 13751 13752 (fontified t) 13752 13756 (face font-lock-keyword-face fontified t) 13756 13758 (fontified t) 13758 13760 (face font-lock-variable-name-face fontified t) 13760 13762 (fontified t) 13762 13769 (face font-lock-constant-face fontified t) 13769 13771 (fontified t) 13771 13779 (face font-lock-type-face fontified t) 13779 13780 (face (rainbow-delimiters-depth-2-face) fontified t) 13780 13781 (fontified t) 13781 13782 (face (rainbow-delimiters-depth-2-face) fontified t) 13782 13783 (fontified t) 13783 13791 (fontified t) 13791 13795 (face font-lock-keyword-face fontified t) 13795 13827 (fontified t) 13827 13828 (face (rainbow-delimiters-depth-3-face) fontified t) 13828 13829 (face rust-ampersand-face fontified t) 13829 13832 (face font-lock-keyword-face fontified t) 13832 13833 (fontified t) 13833 13837 (face font-lock-keyword-face fontified t) 13837 13848 (fontified t) 13848 13849 (face (rainbow-delimiters-depth-3-face) fontified t) 13849 13851 (fontified t) 13851 13859 (fontified t) 13859 13863 (face font-lock-keyword-face fontified t) 13863 13895 (fontified t) 13895 13896 (face (rainbow-delimiters-depth-3-face) fontified t) 13896 13897 (face rust-ampersand-face fontified t) 13897 13901 (face font-lock-keyword-face fontified t) 13901 13910 (fontified t) 13910 13911 (face rust-ampersand-face fontified t) 13911 13915 (face font-lock-keyword-face fontified t) 13915 13926 (fontified t) 13926 13927 (face (rainbow-delimiters-depth-3-face) fontified t) 13927 13928 (fontified t rear-nonsticky t) 13928 13929 (fontified t) 13929 13937 (fontified t) 13937 13941 (face font-lock-keyword-face fontified t) 13941 13960 (fontified t) 13960 13961 (face (rainbow-delimiters-depth-3-face) fontified t) 13961 13962 (face rust-ampersand-face fontified t) 13962 13966 (face font-lock-keyword-face fontified t) 13966 13985 (fontified t) 13985 13993 (face font-lock-constant-face fontified t) 13993 14005 (fontified t) 14005 14006 (face (rainbow-delimiters-depth-4-face) fontified t) 14006 14007 (face rust-ampersand-face fontified t) 14007 14008 (face (rainbow-delimiters-depth-5-face) fontified t) 14008 14012 (face font-lock-keyword-face fontified t) 14012 14027 (fontified t) 14027 14028 (face (rainbow-delimiters-depth-5-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-4-face) fontified t) 14029 14030 (face (rainbow-delimiters-depth-3-face) fontified t) 14030 14032 (fontified t) 14032 14033 (fontified t) 14033 14041 (fontified t) 14041 14044 (face font-lock-comment-delimiter-face fontified t) 14044 14061 (face font-lock-comment-face fontified t) 14061 14069 (fontified t) 14069 14072 (face font-lock-keyword-face fontified t) 14072 14073 (fontified t) 14073 14085 (face font-lock-variable-name-face fontified t) 14085 14088 (fontified t) 14088 14094 (face font-lock-constant-face fontified t) 14094 14096 (fontified t) 14096 14103 (face font-lock-type-face fontified t) 14103 14109 (fontified t) 14109 14110 (face (rainbow-delimiters-depth-3-face) fontified t) 14110 14114 (face font-lock-keyword-face fontified t) 14114 14137 (fontified t) 14137 14138 (face (rainbow-delimiters-depth-3-face) fontified t) 14138 14140 (fontified t) 14140 14148 (fontified t) 14148 14151 (face font-lock-comment-delimiter-face fontified t) 14151 14155 (face font-lock-comment-face fontified t) 14155 14181 (face font-lock-comment-face fontified t) 14181 14189 (fontified t) 14189 14192 (face font-lock-comment-delimiter-face fontified t) 14192 14196 (face font-lock-comment-delimiter-face fontified t) 14196 14197 (face font-lock-comment-face fontified t) 14197 14203 (face font-lock-comment-face fontified t) 14203 14205 (face font-lock-comment-face fontified t) 14205 14212 (face font-lock-comment-face fontified t) 14212 14229 (face font-lock-comment-face fontified t) 14229 14230 (face font-lock-comment-face fontified t) 14230 14231 (face font-lock-comment-face fontified t) 14231 14244 (face font-lock-comment-face fontified t) 14244 14245 (face font-lock-comment-face fontified t) 14245 14250 (face font-lock-comment-face fontified t) 14250 14251 (face font-lock-comment-face fontified t) 14251 14252 (face font-lock-comment-face fontified t) 14252 14254 (face font-lock-comment-face fontified t) 14254 14260 (face font-lock-comment-face fontified t) 14260 14262 (face font-lock-comment-face fontified t) 14262 14265 (face font-lock-comment-face fontified t) 14265 14266 (face font-lock-comment-face fontified t) 14266 14269 (face font-lock-comment-face fontified t) 14269 14270 (face font-lock-comment-face fontified t) 14270 14271 (face font-lock-comment-face fontified t) 14271 14272 (face font-lock-comment-face fontified t) 14272 14280 (fontified t) 14280 14283 (face font-lock-comment-delimiter-face fontified t) 14283 14288 (face font-lock-comment-delimiter-face fontified t) 14288 14302 (face font-lock-comment-face fontified t) 14302 14303 (face font-lock-comment-face fontified t) 14303 14304 (face font-lock-comment-face fontified t) 14304 14312 (fontified t) 14312 14315 (face font-lock-comment-delimiter-face fontified t) 14315 14319 (face font-lock-comment-delimiter-face fontified t) 14319 14323 (face font-lock-comment-face fontified t) 14323 14324 (face font-lock-comment-face fontified t) 14324 14325 (face font-lock-comment-face fontified t) 14325 14326 (face font-lock-comment-face fontified t) 14326 14328 (face font-lock-comment-face fontified t) 14328 14329 (fontified t) 14329 14337 (fontified t) 14337 14341 (face font-lock-keyword-face fontified t) 14341 14367 (fontified t) 14367 14379 (fontified t) 14379 14380 (face (rainbow-delimiters-depth-3-face) fontified t) 14380 14386 (face font-lock-constant-face fontified t) 14386 14388 (fontified t) 14388 14395 (face font-lock-type-face fontified t) 14395 14412 (fontified t) 14412 14413 (face (rainbow-delimiters-depth-4-face) fontified t) 14413 14414 (face (rainbow-delimiters-depth-5-face) fontified t) 14414 14427 (fontified t) 14427 14428 (face (rainbow-delimiters-depth-5-face) fontified t) 14428 14433 (fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14435 (face (rainbow-delimiters-depth-5-face) fontified t) 14435 14437 (fontified t) 14437 14443 (face font-lock-constant-face fontified t) 14443 14445 (fontified t) 14445 14448 (face font-lock-type-face fontified t) 14448 14449 (face (rainbow-delimiters-depth-5-face) fontified t) 14449 14470 (fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-6-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-5-face) fontified t) 14473 14474 (face (rainbow-delimiters-depth-4-face) fontified t) 14474 14475 (fontified t) 14475 14488 (fontified t) 14488 14502 (fontified t) 14502 14503 (face (rainbow-delimiters-depth-3-face) fontified t) 14503 14508 (fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14510 (face (rainbow-delimiters-depth-3-face) fontified t) 14510 14512 (fontified t) 14512 14515 (face font-lock-comment-delimiter-face fontified t) 14515 14523 (face font-lock-comment-face fontified t) 14523 14524 (face font-lock-comment-face fontified t rear-nonsticky t) 14524 14525 (fontified t) 14525 14533 (fontified t) 14533 14537 (face font-lock-keyword-face fontified t) 14537 14551 (fontified t) 14551 14556 (fontified t) 14556 14557 (face (rainbow-delimiters-depth-3-face) fontified t) 14557 14558 (face rust-ampersand-face fontified t) 14558 14562 (face font-lock-keyword-face fontified t) 14562 14580 (fontified t) 14580 14588 (face font-lock-constant-face fontified t) 14588 14600 (fontified t) 14600 14601 (face (rainbow-delimiters-depth-4-face) fontified t) 14601 14602 (face rust-ampersand-face fontified t) 14602 14603 (face (rainbow-delimiters-depth-5-face) fontified t) 14603 14607 (face font-lock-keyword-face fontified t) 14607 14621 (fontified t) 14621 14622 (face (rainbow-delimiters-depth-5-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-4-face) fontified t) 14623 14624 (face (rainbow-delimiters-depth-3-face) fontified t) 14624 14626 (fontified t) 14626 14627 (fontified t) 14627 14631 (fontified t) 14631 14632 (face (rainbow-delimiters-depth-2-face) fontified t) 14632 14633 (fontified t) 14633 14634 (fontified t) 14634 14638 (fontified t) 14638 14640 (face font-lock-keyword-face fontified t) 14640 14641 (fontified t) 14641 14647 (face font-lock-function-name-face fontified t) 14647 14648 (face (rainbow-delimiters-depth-2-face) fontified t) 14648 14649 (face rust-ampersand-face fontified t) 14649 14652 (face font-lock-keyword-face fontified t) 14652 14653 (fontified t) 14653 14657 (face font-lock-keyword-face fontified t) 14657 14659 (fontified t) 14659 14664 (face font-lock-variable-name-face fontified t) 14664 14666 (fontified t) 14666 14670 (face font-lock-constant-face fontified t) 14670 14672 (fontified t) 14672 14677 (face font-lock-type-face fontified t) 14677 14678 (face (rainbow-delimiters-depth-2-face) fontified t) 14678 14680 (fontified t) 14680 14681 (fontified t syntax-table (1)) 14681 14682 (fontified t) 14682 14688 (face font-lock-type-face fontified t) 14688 14689 (face (rainbow-delimiters-depth-2-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14691 (face (rainbow-delimiters-depth-3-face) fontified t) 14691 14693 (fontified t) 14693 14697 (face font-lock-constant-face fontified t) 14697 14699 (fontified t) 14699 14711 (face font-lock-type-face fontified t) 14711 14712 (face (rainbow-delimiters-depth-2-face) fontified t) 14712 14713 (fontified t) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified t) 14714 14715 (fontified t) 14715 14723 (fontified t) 14723 14726 (face font-lock-keyword-face fontified t) 14726 14727 (fontified t) 14727 14733 (face font-lock-variable-name-face fontified t) 14733 14736 (fontified t) 14736 14740 (face font-lock-keyword-face fontified t) 14740 14742 (fontified t) 14742 14756 (fontified t) 14756 14768 (fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face (rainbow-delimiters-depth-3-face) fontified t) 14770 14771 (face rust-question-mark fontified t) 14771 14773 (fontified t) 14773 14781 (fontified t) 14781 14784 (face font-lock-keyword-face fontified t) 14784 14785 (fontified t) 14785 14789 (face font-lock-variable-name-face fontified t) 14789 14805 (fontified t) 14805 14818 (fontified t) 14818 14819 (face (rainbow-delimiters-depth-3-face) fontified t) 14819 14820 (face rust-ampersand-face fontified t) 14820 14824 (face font-lock-constant-face fontified t) 14824 14826 (fontified t) 14826 14847 (face font-lock-type-face fontified t) 14847 14850 (fontified t) 14850 14856 (fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-4-face) fontified t) 14858 14859 (face (rainbow-delimiters-depth-3-face) fontified t) 14859 14861 (fontified t) 14861 14864 (fontified t) 14864 14869 (fontified t) 14869 14872 (face font-lock-keyword-face fontified t) 14872 14873 (fontified t) 14873 14876 (face font-lock-keyword-face fontified t) 14876 14877 (fontified t) 14877 14884 (face font-lock-variable-name-face fontified t) 14884 14885 (fontified t) 14885 14887 (fontified t) 14887 14891 (face font-lock-keyword-face fontified t) 14891 14921 (fontified t) 14921 14922 (face (rainbow-delimiters-depth-3-face) fontified t) 14922 14923 (face rust-ampersand-face fontified t) 14923 14927 (face font-lock-constant-face fontified t) 14927 14929 (fontified t) 14929 14953 (face font-lock-type-face fontified t) 14953 14954 (fontified t) 14954 14955 (face (rainbow-delimiters-depth-4-face) fontified t) 14955 14956 (fontified t) 14956 14968 (fontified t) 14968 14973 (face font-lock-variable-name-face fontified t) 14973 14975 (fontified t) 14975 14979 (face font-lock-type-face fontified t) 14979 14980 (face (rainbow-delimiters-depth-5-face) fontified t) 14980 14996 (face font-lock-string-face fontified t) 14996 14997 (face (rainbow-delimiters-depth-5-face) fontified t) 14997 14999 (fontified t) 14999 15007 (fontified t) 15007 15008 (face (rainbow-delimiters-depth-4-face) fontified t) 15008 15009 (face (rainbow-delimiters-depth-3-face) fontified t) 15009 15011 (fontified t) 15011 15020 (fontified t) 15020 15028 (fontified t) 15028 15031 (face font-lock-keyword-face fontified t) 15031 15032 (fontified t) 15032 15035 (face font-lock-keyword-face fontified t) 15035 15036 (fontified t) 15036 15047 (face font-lock-variable-name-face fontified t) 15047 15063 (fontified t) 15063 15075 (fontified t) 15075 15076 (face (rainbow-delimiters-depth-3-face) fontified t) 15076 15077 (face rust-ampersand-face fontified t) 15077 15081 (face font-lock-constant-face fontified t) 15081 15083 (fontified t) 15083 15103 (face font-lock-type-face fontified t) 15103 15104 (fontified t) 15104 15105 (face (rainbow-delimiters-depth-4-face) fontified t) 15105 15106 (fontified t) 15106 15118 (fontified t) 15118 15123 (face font-lock-variable-name-face fontified t) 15123 15125 (fontified t) 15125 15129 (face font-lock-type-face fontified t) 15129 15130 (face (rainbow-delimiters-depth-5-face) fontified t) 15130 15143 (face font-lock-string-face fontified t) 15143 15144 (face (rainbow-delimiters-depth-5-face) fontified t) 15144 15146 (fontified t) 15146 15158 (fontified t) 15158 15175 (face font-lock-variable-name-face fontified t) 15175 15177 (fontified t) 15177 15178 (face rust-ampersand-face fontified t) 15178 15179 (face (rainbow-delimiters-depth-5-face) fontified t) 15179 15183 (face font-lock-type-face fontified t) 15183 15184 (face (rainbow-delimiters-depth-6-face) fontified t) 15184 15188 (face font-lock-constant-face fontified t) 15188 15190 (fontified t) 15190 15215 (face font-lock-type-face fontified t) 15215 15216 (fontified t) 15216 15217 (face (rainbow-delimiters-depth-7-face) fontified t) 15217 15218 (fontified t) 15218 15234 (fontified t) 15234 15238 (face font-lock-variable-name-face fontified t) 15238 15239 (fontified t) 15239 15240 (fontified t) 15240 15241 (face rust-ampersand-face fontified t) 15241 15247 (fontified t) 15247 15252 (fontified t) 15252 15263 (fontified t) 15263 15277 (face font-lock-variable-name-face fontified t) 15277 15278 (fontified t) 15278 15279 (fontified t) 15279 15283 (face font-lock-type-face fontified t) 15283 15285 (fontified t) 15285 15292 (fontified t) 15292 15301 (fontified t) 15301 15304 (face font-lock-variable-name-face fontified t) 15304 15306 (fontified t) 15306 15310 (face font-lock-constant-face fontified t) 15310 15312 (fontified t) 15312 15322 (face font-lock-type-face fontified t) 15322 15323 (fontified t) 15323 15324 (face (rainbow-delimiters-depth-8-face) fontified t) 15324 15325 (fontified t) 15325 15341 (fontified t) 15341 15345 (fontified t) 15345 15349 (face font-lock-variable-name-face fontified t) 15349 15351 (fontified t) 15351 15355 (face font-lock-constant-face fontified t) 15355 15357 (fontified t) 15357 15363 (face font-lock-type-face fontified t) 15363 15365 (fontified t) 15365 15370 (face font-lock-type-face fontified t) 15370 15371 (face (rainbow-delimiters-depth-9-face) fontified t) 15371 15376 (fontified t) 15376 15377 (face (rainbow-delimiters-depth-9-face) fontified t) 15377 15379 (fontified t) 15379 15399 (fontified t) 15399 15404 (face font-lock-variable-name-face fontified t) 15404 15406 (fontified t) 15406 15410 (face font-lock-constant-face fontified t) 15410 15412 (fontified t) 15412 15419 (face font-lock-type-face fontified t) 15419 15421 (fontified t) 15421 15426 (face font-lock-type-face fontified t) 15426 15428 (fontified t) 15428 15444 (fontified t) 15444 15445 (face (rainbow-delimiters-depth-8-face) fontified t) 15445 15447 (fontified t) 15447 15459 (fontified t) 15459 15460 (face (rainbow-delimiters-depth-7-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-6-face) fontified t) 15461 15462 (face (rainbow-delimiters-depth-5-face) fontified t) 15462 15476 (fontified t) 15476 15478 (face font-lock-variable-name-face fontified t) 15478 15479 (face font-lock-variable-name-face fontified t) 15479 15480 (face font-lock-variable-name-face fontified t) 15480 15486 (face font-lock-variable-name-face fontified t) 15486 15492 (face font-lock-variable-name-face fontified t) 15492 15500 (face font-lock-variable-name-face fontified t) 15500 15502 (fontified t) 15502 15506 (face font-lock-type-face fontified t) 15506 15507 (face (rainbow-delimiters-depth-5-face) fontified t) 15507 15511 (face font-lock-constant-face fontified t) 15511 15513 (fontified t) 15513 15514 (face font-lock-type-face fontified t) 15514 15545 (face font-lock-type-face fontified t) 15545 15546 (fontified t) 15546 15547 (face (rainbow-delimiters-depth-6-face) fontified t) 15547 15548 (fontified t) 15548 15560 (fontified t) 15560 15564 (fontified t) 15564 15568 (face font-lock-variable-name-face fontified t) 15568 15570 (fontified t) 15570 15571 (face rust-ampersand-face fontified t) 15571 15575 (face font-lock-keyword-face fontified t) 15575 15578 (fontified t) 15578 15596 (fontified t) 15596 15612 (fontified t) 15612 15621 (face font-lock-variable-name-face fontified t) 15621 15623 (fontified t) 15623 15627 (face font-lock-type-face fontified t) 15627 15628 (face (rainbow-delimiters-depth-7-face) fontified t) 15628 15632 (face font-lock-constant-face fontified t) 15632 15634 (fontified t) 15634 15638 (face font-lock-type-face fontified t) 15638 15644 (face font-lock-type-face fontified t) 15644 15645 (fontified t) 15645 15646 (face (rainbow-delimiters-depth-8-face) fontified t) 15646 15647 (fontified t) 15647 15667 (fontified t) 15667 15671 (face font-lock-variable-name-face fontified t) 15671 15673 (fontified t) 15673 15677 (face font-lock-constant-face fontified t) 15677 15679 (fontified t) 15679 15685 (face font-lock-type-face fontified t) 15685 15687 (fontified t) 15687 15692 (face font-lock-type-face fontified t) 15692 15693 (face (rainbow-delimiters-depth-9-face) fontified t) 15693 15696 (fontified t) 15696 15697 (face (rainbow-delimiters-depth-9-face) fontified t) 15697 15719 (fontified t) 15719 15724 (face font-lock-variable-name-face fontified t) 15724 15726 (fontified t) 15726 15730 (face font-lock-constant-face fontified t) 15730 15732 (fontified t) 15732 15739 (face font-lock-type-face fontified t) 15739 15741 (fontified t) 15741 15746 (face font-lock-type-face fontified t) 15746 15764 (fontified t) 15764 15765 (face (rainbow-delimiters-depth-8-face) fontified t) 15765 15766 (face (rainbow-delimiters-depth-7-face) fontified t) 15766 15784 (fontified t) 15784 15795 (face font-lock-variable-name-face fontified t) 15795 15797 (fontified t) 15797 15801 (face font-lock-type-face fontified t) 15801 15803 (fontified t) 15803 15815 (fontified t) 15815 15816 (face (rainbow-delimiters-depth-6-face) fontified t) 15816 15817 (face (rainbow-delimiters-depth-5-face) fontified t) 15817 15819 (fontified t) 15819 15826 (fontified t) 15826 15831 (fontified t) 15831 15850 (face font-lock-variable-name-face fontified t) 15850 15852 (fontified t) 15852 15856 (face font-lock-type-face fontified t) 15856 15858 (fontified t) 15858 15870 (fontified t) 15870 15874 (face font-lock-variable-name-face fontified t) 15874 15886 (face font-lock-variable-name-face fontified t) 15886 15888 (fontified t) 15888 15892 (face font-lock-type-face fontified t) 15892 15894 (fontified t) 15894 15902 (fontified t) 15902 15903 (face (rainbow-delimiters-depth-4-face) fontified t) 15903 15904 (face (rainbow-delimiters-depth-3-face) fontified t) 15904 15906 (fontified t) 15906 15914 (fontified t) 15914 15917 (face font-lock-comment-delimiter-face fontified t) 15917 15922 (face font-lock-comment-face fontified t) 15922 15959 (fontified t) 15959 15960 (face (rainbow-delimiters-depth-3-face) fontified t) 15960 15963 (fontified t) 15963 15967 (face font-lock-keyword-face fontified t) 15967 15975 (fontified t) 15975 15989 (fontified t) 15989 15990 (fontified t face (rainbow-delimiters-depth-4-face)) 15990 15992 (fontified t) 15992 15993 (fontified t face (rainbow-delimiters-depth-4-face)) 15993 15994 (fontified t face (rainbow-delimiters-depth-3-face)) 15994 15996 (fontified t) 15996 15997 (fontified t) 15997 16005 (fontified t) 16005 16010 (face font-lock-preprocessor-face fontified t) 16010 16011 (face (rainbow-delimiters-depth-3-face) fontified t) 16011 16024 (face font-lock-string-face fontified t) 16024 16025 (face font-lock-string-face fontified t) 16025 16028 (face font-lock-string-face fontified t) 16028 16040 (face font-lock-string-face fontified t) 16040 16041 (face (rainbow-delimiters-depth-3-face) fontified t) 16041 16042 (fontified t) 16042 16043 (fontified t) 16043 16051 (fontified t) 16051 16054 (face font-lock-keyword-face fontified t) 16054 16055 (fontified t) 16055 16060 (face font-lock-keyword-face fontified t) 16060 16062 (fontified t) 16062 16067 (face font-lock-constant-face fontified t) 16067 16069 (fontified t) 16069 16078 (face font-lock-type-face fontified t) 16078 16080 (fontified t) 16080 16083 (face font-lock-comment-delimiter-face fontified t) 16083 16088 (face font-lock-comment-face fontified t) 16088 16120 (fontified t) 16120 16121 (face (rainbow-delimiters-depth-3-face) fontified t) 16121 16122 (face rust-ampersand-face fontified t) 16122 16126 (face font-lock-keyword-face fontified t) 16126 16148 (fontified t) 16148 16149 (face (rainbow-delimiters-depth-3-face) fontified t) 16149 16151 (fontified t) 16151 16154 (face font-lock-comment-delimiter-face fontified t) 16154 16159 (face font-lock-comment-face fontified t) 16159 16195 (fontified t) 16195 16196 (face (rainbow-delimiters-depth-3-face) fontified t) 16196 16197 (fontified t) 16197 16209 (fontified t) 16209 16210 (face rust-ampersand-face fontified t) 16210 16214 (face font-lock-keyword-face fontified t) 16214 16226 (fontified t) 16226 16238 (fontified t) 16238 16239 (face rust-ampersand-face fontified t) 16239 16243 (face font-lock-keyword-face fontified t) 16243 16247 (fontified t) 16247 16263 (fontified t) 16263 16275 (fontified t) 16275 16276 (face rust-ampersand-face fontified t) 16276 16280 (face font-lock-keyword-face fontified t) 16280 16299 (fontified t) 16299 16307 (fontified t) 16307 16308 (face (rainbow-delimiters-depth-3-face) fontified t) 16308 16310 (fontified t) 16310 16313 (face font-lock-comment-delimiter-face fontified t) 16313 16316 (face font-lock-comment-face fontified t) 16316 16317 (face font-lock-comment-face fontified t rear-nonsticky t) 16317 16318 (face font-lock-comment-face fontified t) 16318 16319 (fontified t) 16319 16327 (fontified t) 16327 16332 (face font-lock-preprocessor-face fontified t) 16332 16333 (face (rainbow-delimiters-depth-3-face) fontified t) 16333 16362 (face font-lock-string-face fontified t) 16362 16363 (face (rainbow-delimiters-depth-3-face) fontified t) 16363 16364 (fontified t) 16364 16365 (fontified t) 16365 16373 (fontified t) 16373 16397 (fontified t) 16397 16398 (face (rainbow-delimiters-depth-3-face) fontified t) 16398 16399 (face rust-ampersand-face fontified t) 16399 16403 (face font-lock-keyword-face fontified t) 16403 16419 (fontified t) 16419 16420 (face (rainbow-delimiters-depth-3-face) fontified t) 16420 16422 (fontified t) 16422 16425 (face font-lock-comment-delimiter-face fontified t) 16425 16427 (face font-lock-comment-face fontified t) 16427 16428 (face font-lock-comment-face fontified t) 16428 16468 (fontified t) 16468 16469 (face (rainbow-delimiters-depth-3-face) fontified t) 16469 16470 (fontified t) 16470 16482 (fontified t) 16482 16483 (face rust-ampersand-face fontified t) 16483 16487 (face font-lock-keyword-face fontified t) 16487 16499 (fontified t) 16499 16514 (fontified t) 16514 16518 (face font-lock-keyword-face fontified t) 16518 16532 (fontified t) 16532 16533 (face (rainbow-delimiters-depth-4-face) fontified t) 16533 16534 (face (rainbow-delimiters-depth-4-face) fontified t) 16534 16535 (fontified t) 16535 16537 (face font-lock-keyword-face fontified t) 16537 16538 (fontified t) 16538 16541 (face font-lock-type-face fontified t) 16541 16543 (fontified t) 16543 16555 (fontified t) 16555 16556 (face rust-ampersand-face fontified t) 16556 16560 (face font-lock-keyword-face fontified t) 16560 16580 (fontified t) 16580 16592 (fontified t) 16592 16593 (face rust-ampersand-face fontified t) 16593 16597 (face font-lock-keyword-face fontified t) 16597 16598 (fontified t) 16598 16615 (fontified t) 16615 16616 (fontified t) 16616 16624 (fontified t) 16624 16625 (face (rainbow-delimiters-depth-3-face) fontified t) 16625 16627 (fontified t) 16627 16628 (fontified t) 16628 16640 (fontified t) 16640 16641 (face (rainbow-delimiters-depth-3-face) fontified t) 16641 16652 (fontified t) 16652 16653 (face (rainbow-delimiters-depth-3-face) fontified t) 16653 16655 (fontified t) 16655 16656 (fontified t) 16656 16657 (fontified t) 16657 16665 (fontified t) 16665 16668 (face font-lock-comment-delimiter-face fontified t) 16668 16669 (face font-lock-comment-face fontified t) 16669 16721 (face font-lock-comment-face fontified t) 16721 16729 (fontified t) 16729 16733 (face font-lock-keyword-face fontified t) 16733 16746 (fontified t) 16746 16747 (face (rainbow-delimiters-depth-3-face) fontified t) 16747 16750 (face font-lock-constant-face fontified t) 16750 16752 (fontified t) 16752 16756 (face font-lock-constant-face fontified t) 16756 16762 (fontified t) 16762 16763 (face (rainbow-delimiters-depth-4-face) fontified t) 16763 16777 (fontified t) 16777 16778 (face (rainbow-delimiters-depth-5-face) fontified t) 16778 16779 (face (rainbow-delimiters-depth-5-face) fontified t) 16779 16780 (face (rainbow-delimiters-depth-4-face) fontified t) 16780 16781 (face (rainbow-delimiters-depth-3-face) fontified t) 16781 16783 (fontified t) 16783 16785 (fontified t) 16785 16805 (fontified t) 16805 16806 (face (rainbow-delimiters-depth-3-face) fontified t) 16806 16807 (face (rainbow-delimiters-depth-3-face) fontified t) 16807 16809 (fontified t) 16809 16810 (fontified t) 16810 16818 (fontified t) 16818 16820 (face font-lock-type-face fontified t) 16820 16821 (face (rainbow-delimiters-depth-3-face) fontified t) 16821 16822 (face (rainbow-delimiters-depth-4-face) fontified t) 16822 16823 (face (rainbow-delimiters-depth-4-face) fontified t) 16823 16824 (face (rainbow-delimiters-depth-3-face) fontified t) 16824 16825 (fontified t) 16825 16826 (fontified t) 16826 16830 (fontified t) 16830 16831 (face (rainbow-delimiters-depth-2-face) fontified t) 16831 16832 (fontified t) 16832 16833 (face (rainbow-delimiters-depth-1-face) fontified t) 16833 16834 (fontified t) 16834 16835 (fontified t) 16835 16836 (fontified t) 16836 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16845 (face font-lock-keyword-face fontified t) 16845 16846 (fontified t) 16846 16848 (face font-lock-keyword-face fontified t) 16848 16849 (fontified t) 16849 16852 (face font-lock-function-name-face fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (face (rainbow-delimiters-depth-1-face) fontified t) 16854 16855 (fontified t) 16855 16856 (face (rainbow-delimiters-depth-1-face) fontified t) 16856 16857 (fontified t) 16857 16866 (fontified t) 16866 16869 (face font-lock-keyword-face fontified t) 16869 16870 (fontified t) 16870 16880 (face font-lock-variable-name-face fontified t) 16880 16883 (fontified t) 16883 16892 (face font-lock-type-face fontified t) 16892 16897 (fontified t) 16897 16898 (face (rainbow-delimiters-depth-2-face) fontified t) 16898 16899 (face (rainbow-delimiters-depth-2-face) fontified t) 16899 16906 (fontified t) 16906 16907 (face (rainbow-delimiters-depth-2-face) fontified t) 16907 16908 (face (rainbow-delimiters-depth-2-face) fontified t) 16908 16914 (fontified t) 16914 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16924 (face font-lock-variable-name-face fontified t) 16924 16927 (fontified t) 16927 16940 (face font-lock-type-face fontified t) 16940 16945 (fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16947 (face (rainbow-delimiters-depth-2-face) fontified t) 16947 16953 (fontified t) 16953 16954 (face (rainbow-delimiters-depth-2-face) fontified t) 16954 16955 (face rust-ampersand-face fontified t) 16955 16959 (fontified t) 16959 16965 (fontified t) 16965 16966 (face (rainbow-delimiters-depth-2-face) fontified t) 16966 16973 (fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16975 (face (rainbow-delimiters-depth-2-face) fontified t) 16975 16977 (fontified t) 16977 16982 (fontified t) 16982 16985 (face font-lock-comment-delimiter-face fontified t) 16985 17048 (face font-lock-comment-face fontified t) 17048 17059 (face font-lock-comment-face fontified t) 17059 17063 (fontified t) 17063 17066 (face font-lock-comment-delimiter-face fontified t) 17066 17096 (face font-lock-comment-face fontified t) 17096 17123 (face font-lock-comment-face fontified t) 17123 17139 (face font-lock-comment-face fontified t) 17139 17147 (fontified t) 17147 17170 (fontified t) 17170 17171 (face (rainbow-delimiters-depth-2-face) fontified t) 17171 17182 (face font-lock-type-face fontified t) 17182 17184 (fontified t) 17184 17188 (face font-lock-type-face fontified t) 17188 17189 (face (rainbow-delimiters-depth-2-face) fontified t) 17189 17191 (fontified t) 17191 17196 (fontified t) 17196 17199 (face font-lock-keyword-face fontified t) 17199 17200 (fontified t) 17200 17203 (face font-lock-keyword-face fontified t) 17203 17204 (fontified t) 17204 17209 (face font-lock-variable-name-face fontified t) 17209 17212 (fontified t) 17212 17217 (face font-lock-type-face fontified t) 17217 17222 (fontified t) 17222 17223 (face (rainbow-delimiters-depth-2-face) fontified t) 17223 17229 (fontified t) 17229 17230 (face (rainbow-delimiters-depth-2-face) fontified t) 17230 17231 (fontified t) 17231 17236 (face font-lock-keyword-face fontified t) 17236 17238 (fontified t) 17238 17242 (fontified t) 17242 17245 (face font-lock-keyword-face fontified t) 17245 17246 (fontified t) 17246 17249 (face font-lock-keyword-face fontified t) 17249 17250 (fontified t) 17250 17266 (face font-lock-variable-name-face fontified t) 17266 17269 (fontified t) 17269 17276 (face font-lock-constant-face fontified t) 17276 17278 (fontified t) 17278 17285 (face font-lock-type-face fontified t) 17285 17290 (fontified t) 17290 17291 (face (rainbow-delimiters-depth-2-face) fontified t) 17291 17292 (face (rainbow-delimiters-depth-2-face) fontified t) 17292 17295 (fontified t) 17295 17298 (face font-lock-comment-delimiter-face fontified t) 17298 17302 (face font-lock-comment-face fontified t) 17302 17303 (face font-lock-comment-face rear-nonsticky t fontified t) 17303 17304 (fontified t) 17304 17309 (fontified t) 17309 17312 (face font-lock-comment-delimiter-face fontified t) 17312 17318 (face font-lock-comment-face fontified t) 17318 17336 (fontified t) 17336 17337 (face (rainbow-delimiters-depth-2-face) fontified t) 17337 17341 (face font-lock-keyword-face fontified t) 17341 17356 (fontified t) 17356 17357 (face (rainbow-delimiters-depth-3-face) fontified t) 17357 17358 (fontified t) 17358 17366 (fontified t) 17366 17371 (face font-lock-keyword-face fontified t) 17371 17378 (fontified t) 17378 17379 (face (rainbow-delimiters-depth-4-face) fontified t) 17379 17380 (fontified t) 17380 17392 (fontified t) 17392 17397 (face font-lock-type-face fontified t) 17397 17399 (fontified t) 17399 17410 (face font-lock-type-face fontified t) 17410 17411 (fontified t) 17411 17412 (face (rainbow-delimiters-depth-5-face) fontified t) 17412 17413 (fontified t) 17413 17429 (fontified t) 17429 17434 (face font-lock-variable-name-face fontified t) 17434 17436 (fontified t) 17436 17447 (face font-lock-type-face fontified t) 17447 17449 (fontified t) 17449 17460 (face font-lock-type-face fontified t) 17460 17461 (face (rainbow-delimiters-depth-6-face) fontified t) 17461 17469 (fontified t) 17469 17470 (face (rainbow-delimiters-depth-6-face) fontified t) 17470 17472 (fontified t) 17472 17491 (fontified t) 17491 17494 (face font-lock-comment-delimiter-face fontified t) 17494 17530 (face font-lock-comment-face fontified t) 17530 17542 (fontified t) 17542 17543 (face (rainbow-delimiters-depth-5-face) fontified t) 17543 17545 (fontified t) 17545 17546 (fontified t syntax-table (1)) 17546 17547 (fontified t) 17547 17549 (face font-lock-keyword-face fontified t) 17549 17561 (fontified t) 17561 17570 (fontified t) 17570 17571 (face (rainbow-delimiters-depth-5-face) fontified t) 17571 17572 (fontified t) 17572 17608 (fontified t) 17608 17625 (fontified t) 17625 17626 (face (rainbow-delimiters-depth-6-face) fontified t) 17626 17642 (fontified t) 17642 17643 (face (rainbow-delimiters-depth-6-face) fontified t) 17643 17644 (fontified t) 17644 17656 (fontified t) 17656 17657 (face (rainbow-delimiters-depth-5-face) fontified t rear-nonsticky t) 17657 17658 (fontified t) 17658 17659 (fontified t) 17659 17671 (fontified t) 17671 17676 (face font-lock-type-face fontified t) 17676 17678 (fontified t) 17678 17689 (face font-lock-type-face fontified t) 17689 17690 (fontified t) 17690 17691 (face (rainbow-delimiters-depth-5-face) fontified t) 17691 17708 (fontified t) 17708 17711 (face font-lock-keyword-face fontified t) 17711 17712 (fontified t) 17712 17717 (face font-lock-variable-name-face fontified t) 17717 17719 (fontified t) 17719 17737 (fontified t) 17737 17738 (fontified t) 17738 17744 (fontified t) 17744 17750 (fontified t) 17750 17751 (face (rainbow-delimiters-depth-5-face) fontified t) 17751 17753 (fontified t) 17753 17754 (syntax-table (1) fontified t) 17754 17755 (fontified t) 17755 17756 (face (rainbow-delimiters-depth-5-face) fontified t) 17756 17757 (fontified t) 17757 17773 (fontified t) 17773 17775 (face font-lock-keyword-face fontified t) 17775 17788 (fontified t) 17788 17789 (face (rainbow-delimiters-depth-6-face) fontified t) 17789 17794 (fontified t) 17794 17795 (face (rainbow-delimiters-depth-6-face) fontified t) 17795 17796 (fontified t) 17796 17797 (face (rainbow-delimiters-depth-6-face) fontified t) 17797 17798 (fontified t) 17798 17801 (face font-lock-comment-delimiter-face fontified t) 17801 17810 (face font-lock-comment-face fontified t) 17810 17830 (fontified t) 17830 17835 (face font-lock-keyword-face fontified t) 17835 17842 (fontified t) 17842 17843 (face (rainbow-delimiters-depth-7-face) fontified t) 17843 17868 (fontified t) 17868 17879 (face font-lock-type-face fontified t) 17879 17881 (fontified t) 17881 17882 (face font-lock-type-face fontified t) 17882 17895 (face font-lock-type-face fontified t) 17895 17896 (fontified t) 17896 17926 (fontified t) 17926 17934 (face font-lock-type-face fontified t) 17934 17937 (face font-lock-type-face fontified t) 17937 17939 (fontified t) 17939 17944 (face font-lock-type-face fontified t) 17944 17952 (face font-lock-type-face fontified t) 17952 17953 (fontified t) 17953 17954 (face (rainbow-delimiters-depth-8-face) fontified t) 17954 17955 (fontified t) 17955 17987 (fontified t) 17987 17992 (face font-lock-variable-name-face fontified t) 17992 18026 (fontified t) 18026 18034 (face font-lock-type-face fontified t) 18034 18035 (fontified t) 18035 18036 (face (rainbow-delimiters-depth-9-face) fontified t) 18036 18073 (fontified t) 18073 18078 (face font-lock-variable-name-face fontified t) 18078 18080 (fontified t) 18080 18092 (face font-lock-type-face fontified t) 18092 18094 (fontified t) 18094 18101 (face font-lock-type-face fontified t) 18101 18103 (fontified t) 18103 18139 (fontified t) 18139 18145 (face font-lock-variable-name-face fontified t) 18145 18151 (face font-lock-variable-name-face fontified t) 18151 18153 (fontified t) 18153 18161 (face font-lock-type-face fontified t) 18161 18164 (face font-lock-type-face fontified t) 18164 18166 (fontified t) 18166 18170 (face font-lock-type-face fontified t) 18170 18171 (face (rainbow-delimiters-depth-1-face) fontified t) 18171 18178 (face font-lock-type-face fontified t) 18178 18180 (fontified t) 18180 18186 (face font-lock-type-face fontified t) 18186 18187 (face (rainbow-delimiters-depth-1-face) fontified t) 18187 18189 (fontified t) 18189 18192 (fontified t) 18192 18218 (fontified t) 18218 18228 (fontified t) 18228 18260 (fontified t) 18260 18261 (face (rainbow-delimiters-depth-9-face) fontified t) 18261 18326 (fontified t) 18326 18327 (face (rainbow-delimiters-depth-8-face) fontified t) 18327 18329 (fontified t) 18329 18330 (syntax-table (1) fontified t) 18330 18340 (fontified t) 18340 18341 (face (rainbow-delimiters-depth-8-face) fontified t) 18341 18342 (face (rainbow-delimiters-depth-8-face) fontified t) 18342 18368 (fontified t) 18368 18379 (face font-lock-type-face fontified t) 18379 18381 (fontified t) 18381 18388 (face font-lock-type-face fontified t) 18388 18389 (face (rainbow-delimiters-depth-8-face) fontified t) 18389 18402 (fontified t) 18402 18403 (face (rainbow-delimiters-depth-8-face) fontified t) 18403 18405 (fontified t) 18405 18406 (syntax-table (1) fontified t) 18406 18407 (fontified t) 18407 18408 (face (rainbow-delimiters-depth-8-face) fontified t) 18408 18416 (fontified t) 18416 18422 (fontified t) 18422 18449 (fontified t) 18449 18450 (face (rainbow-delimiters-depth-9-face) fontified t) 18450 18464 (fontified t) 18464 18465 (face (rainbow-delimiters-depth-9-face) fontified t) 18465 18467 (fontified t) 18467 18521 (fontified t) 18521 18522 (fontified t) 18522 18523 (face (rainbow-delimiters-depth-9-face) fontified t) 18523 18524 (face (rainbow-delimiters-depth-9-face) fontified t) 18524 18526 (fontified t) 18526 18550 (fontified t) 18550 18551 (face (rainbow-delimiters-depth-8-face) fontified t) 18551 18580 (fontified t) 18580 18581 (syntax-table (1) fontified t) 18581 18582 (fontified t) 18582 18583 (face (rainbow-delimiters-depth-8-face) fontified t) 18583 18584 (face (rainbow-delimiters-depth-8-face) fontified t) 18584 18605 (fontified t) 18605 18606 (face (rainbow-delimiters-depth-7-face) fontified t) 18606 18623 (fontified t) 18623 18624 (face (rainbow-delimiters-depth-6-face) fontified t) 18624 18625 (fontified t) 18625 18629 (face font-lock-keyword-face fontified t) 18629 18630 (fontified t) 18630 18631 (face (rainbow-delimiters-depth-6-face) fontified t) 18631 18632 (fontified t) 18632 18652 (fontified t) 18652 18653 (fontified t) 18653 18657 (fontified t) 18657 18679 (fontified t) 18679 18680 (face (rainbow-delimiters-depth-7-face) fontified t) 18680 18681 (face (rainbow-delimiters-depth-7-face) fontified t) 18681 18682 (fontified t) 18682 18683 (fontified t) 18683 18699 (fontified t) 18699 18700 (face (rainbow-delimiters-depth-6-face) fontified t) 18700 18718 (fontified t) 18718 18720 (face font-lock-keyword-face fontified t) 18720 18731 (fontified t) 18731 18742 (face font-lock-type-face fontified t) 18742 18744 (fontified t) 18744 18759 (face font-lock-type-face fontified t) 18759 18760 (fontified t) 18760 18761 (face (rainbow-delimiters-depth-6-face) fontified t) 18761 18762 (fontified t) 18762 18782 (fontified t) 18782 18785 (face font-lock-keyword-face fontified t) 18785 18786 (fontified t) 18786 18789 (face font-lock-variable-name-face fontified t) 18789 18792 (fontified t) 18792 18799 (face font-lock-constant-face fontified t) 18799 18801 (fontified t) 18801 18808 (face font-lock-type-face fontified t) 18808 18813 (fontified t) 18813 18814 (face (rainbow-delimiters-depth-7-face) fontified t) 18814 18815 (face (rainbow-delimiters-depth-7-face) fontified t) 18815 18817 (fontified t) 18817 18837 (fontified t) 18837 18840 (face font-lock-keyword-face fontified t) 18840 18841 (fontified t) 18841 18843 (face font-lock-variable-name-face fontified t) 18843 18870 (fontified t) 18870 18914 (fontified t) 18914 18946 (fontified t) 18946 18947 (face (rainbow-delimiters-depth-7-face) fontified t) 18947 18949 (fontified t) 18949 18950 (face (rainbow-delimiters-depth-7-face) fontified t) 18950 18951 (rear-nonsticky t fontified t) 18951 18952 (fontified t) 18952 18958 (fontified t) 18958 18972 (fontified t) 18972 18977 (face font-lock-keyword-face fontified t) 18977 18990 (fontified t) 18990 18991 (face (rainbow-delimiters-depth-7-face) fontified t) 18991 18995 (face font-lock-constant-face fontified t) 18995 18997 (fontified t) 18997 19002 (face font-lock-type-face fontified t) 19002 19004 (fontified t) 19004 19009 (face font-lock-type-face fontified t) 19009 19010 (face (rainbow-delimiters-depth-7-face) fontified t) 19010 19011 (fontified t) 19011 19012 (face (rainbow-delimiters-depth-7-face) fontified t) 19012 19013 (fontified t) 19013 19037 (fontified t) 19037 19039 (face font-lock-type-face fontified t) 19039 19040 (face (rainbow-delimiters-depth-8-face) fontified t) 19040 19041 (fontified t) 19041 19042 (face (rainbow-delimiters-depth-8-face) fontified t) 19042 19044 (fontified t) 19044 19045 (fontified t syntax-table (1)) 19045 19046 (fontified t) 19046 19047 (face (rainbow-delimiters-depth-8-face) fontified t) 19047 19048 (face (rainbow-delimiters-depth-8-face) fontified t) 19048 19067 (fontified t) 19067 19073 (fontified t) 19073 19076 (face font-lock-comment-delimiter-face fontified t) 19076 19093 (face font-lock-comment-face fontified t) 19093 19108 (face font-lock-comment-face fontified t) 19108 19126 (fontified t) 19126 19132 (fontified t) 19132 19135 (face font-lock-type-face fontified t) 19135 19136 (face (rainbow-delimiters-depth-8-face) fontified t) 19136 19140 (face font-lock-constant-face fontified t) 19140 19142 (fontified t) 19142 19146 (face font-lock-type-face fontified t) 19146 19154 (face font-lock-type-face fontified t) 19154 19156 (fontified t) 19156 19160 (face font-lock-type-face fontified t) 19160 19161 (face (rainbow-delimiters-depth-8-face) fontified t) 19161 19163 (fontified t) 19163 19164 (fontified t syntax-table (1)) 19164 19177 (fontified t) 19177 19178 (face (rainbow-delimiters-depth-8-face) fontified t) 19178 19188 (fontified t) 19188 19189 (face (rainbow-delimiters-depth-8-face) fontified t) 19189 19191 (fontified t) 19191 19215 (fontified t) 19215 19218 (face font-lock-comment-delimiter-face fontified t) 19218 19226 (face font-lock-comment-face fontified t) 19226 19271 (face font-lock-comment-face fontified t) 19271 19295 (fontified t) 19295 19298 (face font-lock-type-face fontified t) 19298 19299 (face (rainbow-delimiters-depth-8-face) fontified t) 19299 19303 (face font-lock-constant-face fontified t) 19303 19305 (fontified t) 19305 19313 (face font-lock-type-face fontified t) 19313 19317 (face font-lock-type-face fontified t) 19317 19319 (fontified t) 19319 19330 (face font-lock-type-face fontified t) 19330 19331 (face (rainbow-delimiters-depth-8-face) fontified t) 19331 19333 (fontified t) 19333 19334 (fontified t syntax-table (1)) 19334 19344 (fontified t) 19344 19345 (face (rainbow-delimiters-depth-8-face) fontified t) 19345 19346 (face (rainbow-delimiters-depth-8-face) fontified t) 19346 19348 (fontified t) 19348 19372 (fontified t) 19372 19375 (face font-lock-comment-delimiter-face fontified t) 19375 19392 (face font-lock-comment-face fontified t) 19392 19411 (face font-lock-comment-face fontified t) 19411 19449 (face font-lock-comment-face fontified t) 19449 19473 (fontified t) 19473 19476 (face font-lock-type-face fontified t) 19476 19477 (face (rainbow-delimiters-depth-8-face) fontified t) 19477 19478 (fontified t) 19478 19479 (face (rainbow-delimiters-depth-8-face) fontified t) 19479 19481 (fontified t) 19481 19482 (syntax-table (1) fontified t) 19482 19483 (fontified t) 19483 19490 (face font-lock-constant-face fontified t) 19490 19492 (fontified t) 19492 19498 (face font-lock-preprocessor-face fontified t) 19498 19499 (face (rainbow-delimiters-depth-8-face) fontified t) 19499 19505 (face font-lock-string-face fontified t) 19505 19508 (fontified t) 19508 19509 (face (rainbow-delimiters-depth-8-face) fontified t) 19509 19531 (fontified t) 19531 19532 (face (rainbow-delimiters-depth-7-face) fontified t) 19532 19549 (fontified t) 19549 19550 (face (rainbow-delimiters-depth-6-face) fontified t) 19550 19563 (fontified t) 19563 19564 (face (rainbow-delimiters-depth-5-face) fontified t) 19564 19582 (fontified t) 19582 19583 (syntax-table (1) fontified t) 19583 19584 (fontified t) 19584 19585 (face (rainbow-delimiters-depth-5-face) fontified t) 19585 19586 (face (rainbow-delimiters-depth-5-face) fontified t) 19586 19595 (fontified t) 19595 19596 (face (rainbow-delimiters-depth-4-face) fontified t) 19596 19601 (fontified t) 19601 19602 (face (rainbow-delimiters-depth-3-face) fontified t) 19602 19603 (face (rainbow-delimiters-depth-2-face) fontified t) 19603 19610 (fontified t) 19610 19611 (face (rainbow-delimiters-depth-2-face) fontified t)) . 137) (undo-tree-id2427 . -19225) (undo-tree-id2428 . -17786) (undo-tree-id2429 . -12294) (undo-tree-id2430 . -13130) (undo-tree-id2431 . -17715) (undo-tree-id2432 . -17756) (undo-tree-id2433 . -16656) (undo-tree-id2434 . -17683) (undo-tree-id2435 . -16857) (undo-tree-id2436 . -17684) (undo-tree-id2437 . -18626) (undo-tree-id2438 . -18626) (undo-tree-id2439 . -17358) (undo-tree-id2440 . -17684) (undo-tree-id2441 . -17392) (undo-tree-id2442 . -17780) (undo-tree-id2443 . -13783) (undo-tree-id2444 . -13733) (undo-tree-id2445 . -14140) (undo-tree-id2446 . -14525) (undo-tree-id2447 . -14329) (undo-tree-id2448 . -14524) (undo-tree-id2449 . -14886) (undo-tree-id2450 . -15127) (undo-tree-id2451 . -15360) (undo-tree-id2452 . -14140) (undo-tree-id2453 . -14327) (undo-tree-id2454 . -18762) (undo-tree-id2455 . -18762) (undo-tree-id2456 . -18762) (undo-tree-id2457 . -18762) (undo-tree-id2458 . -18762) (undo-tree-id2459 . -18762) (undo-tree-id2460 . -18762) (undo-tree-id2461 . -18762) (undo-tree-id2462 . -18762) (undo-tree-id2463 . -18762) (undo-tree-id2464 . -18762) (undo-tree-id2465 . -17238) (undo-tree-id2466 . -18762) (undo-tree-id2467 . -18762) (undo-tree-id2468 . -19225) (undo-tree-id2469 . -18626) (undo-tree-id2470 . -18626) (undo-tree-id2471 . -18626) (undo-tree-id2472 . -18626) (undo-tree-id2473 . -18626) (undo-tree-id2474 . -18626) (undo-tree-id2475 . -18626) (undo-tree-id2476 . -18626) (undo-tree-id2477 . -18626) (undo-tree-id2478 . -18626) (undo-tree-id2479 . -18626) (undo-tree-id2480 . -18626) (undo-tree-id2481 . -18626) (undo-tree-id2482 . -18626) (undo-tree-id2483 . -18626) (undo-tree-id2484 . -18626) (undo-tree-id2485 . -18626) (undo-tree-id2486 . -18626) (undo-tree-id2487 . -18626) (undo-tree-id2488 . -18626) (undo-tree-id2489 . -18626) (undo-tree-id2490 . -18626) (undo-tree-id2491 . -18626) (undo-tree-id2492 . -18626) (undo-tree-id2493 . -18626) (undo-tree-id2494 . -18626) (undo-tree-id2495 . -18626) (undo-tree-id2496 . -18626) (undo-tree-id2497 . -18626) (undo-tree-id2498 . -18626) (undo-tree-id2499 . -18626) (undo-tree-id2500 . -18626) (undo-tree-id2501 . -18607) (undo-tree-id2502 . -18626) (undo-tree-id2503 . -18626) (undo-tree-id2504 . -18626) (undo-tree-id2505 . -18626) (undo-tree-id2506 . -18626) (undo-tree-id2507 . -18626) (undo-tree-id2508 . -18626) (undo-tree-id2509 . -18626) (undo-tree-id2510 . -18626) (undo-tree-id2511 . -18626) (undo-tree-id2512 . -18626) (undo-tree-id2513 . -18626) (undo-tree-id2514 . -18626) (undo-tree-id2515 . -18626) (undo-tree-id2516 . -18626) (undo-tree-id2517 . -18626) (undo-tree-id2518 . -18626) (undo-tree-id2519 . -18626) (undo-tree-id2520 . -18626) (undo-tree-id2521 . -18626) (undo-tree-id2522 . -18626) (undo-tree-id2523 . -18626) (undo-tree-id2524 . -18626) (undo-tree-id2525 . -18626) (undo-tree-id2526 . -18626) (undo-tree-id2527 . -18626) (undo-tree-id2528 . -18626) (undo-tree-id2529 . -18626) (undo-tree-id2530 . -18626) (undo-tree-id2531 . -18626) (undo-tree-id2532 . -18626) (undo-tree-id2533 . -18626) (undo-tree-id2534 . -18626) (undo-tree-id2535 . -18626) (undo-tree-id2536 . -18626) (undo-tree-id2537 . -18626) (undo-tree-id2538 . -18626) (undo-tree-id2539 . -18626) (undo-tree-id2540 . -18626) (undo-tree-id2541 . -18626) (undo-tree-id2542 . -18626) (undo-tree-id2543 . -18626) (undo-tree-id2544 . -18626) (undo-tree-id2545 . -18626) (undo-tree-id2546 . -18626) 18763 (t 26015 48791 432758 310000)) nil (26015 50443 565762 0) 0 nil])
([nil nil ((#("obj" 0 3 (face font-lock-string-face fontified t)) . -7639) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) 7642 (t 26015 50394 91322 141000)) nil (26015 50443 565640 0) 0 nil])
([nil nil ((#("CheetaDefault." 0 14 (face font-lock-string-face fontified t)) . -7625) (undo-tree-id2410 . -14) (undo-tree-id2411 . -14) (undo-tree-id2412 . -14) (undo-tree-id2413 . -14) (undo-tree-id2414 . -14) (undo-tree-id2415 . -14) (undo-tree-id2416 . -14) (undo-tree-id2417 . -14) (undo-tree-id2418 . -14) 7639) nil (26015 50443 565630 0) 0 nil])
([nil nil ((#("奇塔/" 0 3 (face font-lock-string-face fontified t)) . -7622) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) 7625) nil (26015 50443 565620 0) 0 nil])
([nil nil ((#("追放】" 0 3 (face font-lock-string-face fontified t)) . -7619) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) 7622) nil (26015 50443 565609 0) 0 nil])
([nil nil ((#("2：" 0 2 (face font-lock-string-face fontified t)) . -7617) (undo-tree-id2377 . -2) (undo-tree-id2378 . -2) (undo-tree-id2379 . -2) (undo-tree-id2380 . -2) (undo-tree-id2381 . -2) (undo-tree-id2382 . -2) (undo-tree-id2383 . -2) (undo-tree-id2384 . -2) (undo-tree-id2385 . -2) (undo-tree-id2386 . -2) (undo-tree-id2387 . -2) (undo-tree-id2388 . -2) 7619) nil (26015 50443 565598 0) 0 nil])
([nil nil ((#("少女前线" 0 4 (face font-lock-string-face fontified t)) . -7613) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) 7617) nil (26015 50443 565585 0) 0 nil])
([nil nil ((#("Downloads/【" 0 11 (face font-lock-string-face fontified t)) . -7602) (undo-tree-id2350 . -11) (undo-tree-id2351 . -11) (undo-tree-id2352 . -11) (undo-tree-id2353 . -11) (undo-tree-id2354 . -11) (undo-tree-id2355 . -11) (undo-tree-id2356 . -11) (undo-tree-id2357 . -11) (undo-tree-id2358 . -11) (undo-tree-id2359 . -11) (undo-tree-id2360 . -11) (undo-tree-id2361 . -11) (undo-tree-id2362 . -11) (undo-tree-id2363 . -11) 7613) nil (26015 50443 565571 0) 0 nil])
([nil nil ((#("zhang/" 0 6 (face font-lock-string-face fontified t)) . -7596) (undo-tree-id2335 . -6) (undo-tree-id2336 . -6) (undo-tree-id2337 . -6) (undo-tree-id2338 . -6) (undo-tree-id2339 . -6) (undo-tree-id2340 . -6) (undo-tree-id2341 . -6) (undo-tree-id2342 . -6) (undo-tree-id2343 . -6) (undo-tree-id2344 . -6) (undo-tree-id2345 . -6) (undo-tree-id2346 . -6) (undo-tree-id2347 . -6) (undo-tree-id2348 . -6) (undo-tree-id2349 . -6) 7602) nil (26015 50443 565556 0) 0 nil])
([nil nil ((#("home/" 0 5 (face font-lock-string-face fontified t)) . -7591) (undo-tree-id2319 . -5) (undo-tree-id2320 . -5) (undo-tree-id2321 . -5) (undo-tree-id2322 . -5) (undo-tree-id2323 . -5) (undo-tree-id2324 . -5) (undo-tree-id2325 . -5) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5) (undo-tree-id2329 . -5) (undo-tree-id2330 . -5) (undo-tree-id2331 . -5) (undo-tree-id2332 . -5) (undo-tree-id2333 . -5) (undo-tree-id2334 . -5) 7596) nil (26015 50443 565541 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -7590) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) 7591) nil (26015 50443 565523 0) 0 nil])
([nil nil ((7590 . 7611)) nil (26015 50443 565504 0) 0 nil])
([nil nil ((7611 . 7616)) nil (26015 50443 565503 0) 0 nil])
([nil nil ((7616 . 7619)) nil (26015 50443 565502 0) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-string-face fontified t)) . -7618) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) 7619) nil (26015 50443 565501 0) 0 nil])
([nil nil ((7618 . 7630)) nil (26015 50443 565490 0) 0 nil])
([nil nil ((7624 . 7629)) nil (26015 50443 565489 0) 0 nil])
([nil nil ((7629 . 7631)) nil (26015 50443 565488 0) 0 nil])
([nil nil ((7637 . 7641)) nil (26015 50443 565483 0) 0 nil])
([nil nil ((#("Default" 0 7 (face font-lock-string-face fontified t)) . -7624) (undo-tree-id2547 . -7) (undo-tree-id2548 . -7) (undo-tree-id2549 . -7) (undo-tree-id2550 . -7) (undo-tree-id2551 . -7) (undo-tree-id2552 . -7) (undo-tree-id2553 . -7) (undo-tree-id2554 . -7) (undo-tree-id2555 . -7) (undo-tree-id2556 . -7) (undo-tree-id2557 . -7) (undo-tree-id2558 . -7) 7631 (t 26015 50443 592397 570000)) nil (26015 50480 204368 0) 0 nil])
([nil nil ((7630 . 7637)) nil (26015 50480 204343 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 27 (face font-lock-constant-face fontified t) 27 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 39 (face font-lock-type-face fontified t) 39 41 (fontified t) 41 57 (face font-lock-type-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 60 (fontified t) 60 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 69 (face font-lock-constant-face fontified t) 69 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 77 (fontified t) 77 82 (face font-lock-constant-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 90 (face font-lock-type-face fontified t) 90 92 (fontified t) 92 103 (face font-lock-type-face fontified t) 103 106 (fontified t) 106 118 (face font-lock-type-face fontified t) 118 120 (fontified t) 120 131 (face font-lock-type-face fontified t) 131 133 (fontified t) 133 144 (face font-lock-type-face fontified t) 144 146 (fontified t) 146 159 (face font-lock-type-face fontified t) 159 161 (fontified t) 161 175 (face font-lock-type-face fontified t) 175 176 (face (rainbow-delimiters-depth-2-face) fontified t) 176 182 (fontified t) 182 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-2-face) fontified t) 195 206 (face font-lock-type-face fontified t) 206 208 (fontified t) 208 217 (face font-lock-type-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 224 (fontified t) 224 230 (face font-lock-constant-face fontified t) 230 232 (fontified t) 232 245 (face font-lock-type-face fontified t) 245 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 249 (fontified t) 249 252 (face font-lock-keyword-face fontified t) 252 253 (fontified t) 253 257 (face font-lock-constant-face fontified t) 257 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 265 (fontified t) 265 274 (face font-lock-type-face fontified t) 274 277 (fontified t) 277 280 (face font-lock-keyword-face fontified t) 280 281 (fontified t) 281 288 (face font-lock-constant-face fontified t) 288 290 (fontified t) 290 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 300 (face font-lock-constant-face fontified t) 300 302 (fontified t) 302 305 (face font-lock-keyword-face fontified t) 305 306 (fontified t) 306 315 (face font-lock-constant-face fontified t) 315 317 (fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-constant-face fontified t) 329 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 340 (face font-lock-constant-face fontified t) 340 342 (fontified t) 342 345 (face font-lock-keyword-face fontified t) 345 346 (fontified t) 346 351 (face font-lock-constant-face fontified t) 351 353 (fontified t) 353 356 (face font-lock-comment-delimiter-face fontified t) 356 363 (face font-lock-comment-face fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 380 (face font-lock-constant-face fontified t) 380 382 (fontified t) 382 388 (face font-lock-type-face fontified t) 388 391 (fontified t) 391 394 (face font-lock-keyword-face fontified t) 394 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 406 (fontified t) 406 409 (face font-lock-keyword-face fontified t) 409 410 (fontified t) 410 418 (face font-lock-constant-face fontified t) 418 423 (fontified t) 423 426 (face font-lock-keyword-face fontified t) 426 427 (fontified t) 427 432 (face font-lock-constant-face fontified t) 432 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 444 (face font-lock-type-face fontified t) 444 446 (fontified t) 446 452 (face font-lock-type-face fontified t) 452 453 (face (rainbow-delimiters-depth-1-face) fontified t) 453 456 (fontified t) 456 458 (face font-lock-keyword-face fontified t) 458 459 (fontified t) 459 481 (face font-lock-function-name-face fontified t) 481 482 (face (rainbow-delimiters-depth-1-face) fontified t) 482 487 (fontified t) 487 493 (face font-lock-variable-name-face fontified t) 493 495 (fontified t) 495 496 (face rust-ampersand-face fontified t) 496 500 (face font-lock-constant-face fontified t) 500 502 (fontified t) 502 508 (face font-lock-type-face fontified t) 508 514 (fontified t) 514 520 (face font-lock-variable-name-face fontified t) 520 522 (fontified t) 522 523 (face rust-ampersand-face fontified t) 523 527 (face font-lock-constant-face fontified t) 527 529 (fontified t) 529 543 (face font-lock-type-face fontified t) 543 549 (fontified t) 549 561 (face font-lock-variable-name-face fontified t) 561 563 (fontified t) 563 567 (face font-lock-constant-face fontified t) 567 569 (fontified t) 569 582 (face font-lock-type-face fontified t) 582 588 (fontified t) 588 600 (face font-lock-variable-name-face fontified t) 600 602 (fontified t) 602 608 (face font-lock-type-face fontified t) 608 609 (face (rainbow-delimiters-depth-2-face) fontified t) 609 613 (face font-lock-constant-face fontified t) 613 615 (fontified t) 615 628 (face font-lock-type-face fontified t) 628 629 (face (rainbow-delimiters-depth-2-face) fontified t) 629 635 (fontified t) 635 649 (face font-lock-variable-name-face fontified t) 649 651 (fontified t) 651 652 (face rust-ampersand-face fontified t) 652 653 (face (rainbow-delimiters-depth-2-face) fontified t) 653 657 (face font-lock-constant-face fontified t) 657 659 (fontified t) 659 677 (face font-lock-type-face fontified t) 677 678 (face (rainbow-delimiters-depth-2-face) fontified t) 678 684 (fontified t) 684 690 (face font-lock-variable-name-face fontified t) 690 692 (fontified t) 692 696 (face font-lock-constant-face fontified t) 696 698 (fontified t) 698 720 (face font-lock-type-face fontified t) 720 722 (fontified t) 722 723 (face (rainbow-delimiters-depth-1-face) fontified t) 723 725 (fontified t) 725 726 (syntax-table (1) fontified t) 726 727 (fontified t) 727 731 (face font-lock-constant-face fontified t) 731 733 (fontified t) 733 747 (face font-lock-type-face fontified t) 747 748 (fontified t) 748 749 (face (rainbow-delimiters-depth-1-face) fontified t) 749 754 (fontified t) 754 757 (face font-lock-keyword-face fontified t) 757 758 (fontified t) 758 764 (face font-lock-variable-name-face fontified t) 764 794 (fontified t) 794 795 (face (rainbow-delimiters-depth-2-face) fontified t) 795 801 (fontified t) 801 802 (face (rainbow-delimiters-depth-2-face) fontified t) 802 838 (fontified t) 838 839 (face (rainbow-delimiters-depth-2-face) fontified t) 839 840 (face rust-ampersand-face fontified t) 840 844 (face font-lock-constant-face fontified t) 844 846 (fontified t) 846 870 (face font-lock-type-face fontified t) 870 871 (fontified t) 871 872 (face (rainbow-delimiters-depth-3-face) fontified t) 872 881 (fontified t) 881 886 (face font-lock-variable-name-face fontified t) 886 888 (fontified t) 888 892 (face font-lock-type-face fontified t) 892 893 (face (rainbow-delimiters-depth-4-face) fontified t) 893 910 (face font-lock-string-face fontified t) 910 911 (face (rainbow-delimiters-depth-4-face) fontified t) 911 921 (fontified t) 921 927 (face font-lock-variable-name-face fontified t) 927 929 (fontified t) 929 933 (face font-lock-type-face fontified t) 933 934 (face (rainbow-delimiters-depth-4-face) fontified t) 934 940 (fontified t) 940 941 (face (rainbow-delimiters-depth-4-face) fontified t) 941 951 (fontified t) 951 957 (face font-lock-variable-name-face fontified t) 957 959 (fontified t) 959 963 (face font-lock-constant-face fontified t) 963 965 (fontified t) 965 976 (face font-lock-type-face fontified t) 976 977 (fontified t) 977 978 (face (rainbow-delimiters-depth-4-face) fontified t) 978 991 (fontified t) 991 997 (face font-lock-variable-name-face fontified t) 997 999 (fontified t) 999 1000 (face rust-ampersand-face fontified t) 1000 1020 (fontified t) 1020 1031 (face font-lock-variable-name-face fontified t) 1031 1033 (fontified t) 1033 1042 (face font-lock-string-face fontified t) 1042 1056 (fontified t) 1056 1063 (face font-lock-variable-name-face fontified t) 1063 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-4-face) fontified t) 1090 1100 (fontified t) 1100 1108 (face font-lock-variable-name-face fontified t) 1108 1110 (fontified t) 1110 1114 (face font-lock-type-face fontified t) 1114 1115 (face (rainbow-delimiters-depth-4-face) fontified t) 1115 1119 (face font-lock-constant-face fontified t) 1119 1121 (fontified t) 1121 1134 (face font-lock-type-face fontified t) 1134 1135 (fontified t) 1135 1136 (face (rainbow-delimiters-depth-5-face) fontified t) 1136 1149 (fontified t) 1149 1155 (face font-lock-variable-name-face fontified t) 1155 1157 (fontified t) 1157 1158 (face rust-ampersand-face fontified t) 1158 1178 (fontified t) 1178 1189 (face font-lock-variable-name-face fontified t) 1189 1191 (fontified t) 1191 1200 (face font-lock-string-face fontified t) 1200 1214 (fontified t) 1214 1221 (face font-lock-variable-name-face fontified t) 1221 1223 (fontified t) 1223 1224 (face rust-ampersand-face fontified t) 1224 1225 (face (rainbow-delimiters-depth-6-face) fontified t) 1225 1229 (face font-lock-type-face fontified t) 1229 1230 (face (rainbow-delimiters-depth-7-face) fontified t) 1230 1234 (face font-lock-constant-face fontified t) 1234 1236 (fontified t) 1236 1252 (face font-lock-type-face fontified t) 1252 1253 (fontified t) 1253 1254 (face (rainbow-delimiters-depth-8-face) fontified t) 1254 1271 (fontified t) 1271 1277 (face font-lock-variable-name-face fontified t) 1277 1309 (fontified t) 1309 1314 (face font-lock-variable-name-face fontified t) 1314 1316 (fontified t) 1316 1320 (face font-lock-type-face fontified t) 1320 1321 (face (rainbow-delimiters-depth-9-face) fontified t) 1321 1325 (face font-lock-constant-face fontified t) 1325 1327 (fontified t) 1327 1337 (face font-lock-type-face fontified t) 1337 1338 (fontified t) 1338 1339 (face (rainbow-delimiters-depth-1-face) fontified t) 1339 1360 (fontified t) 1360 1365 (face font-lock-variable-name-face fontified t) 1365 1367 (fontified t) 1367 1371 (face font-lock-constant-face fontified t) 1371 1373 (fontified t) 1373 1387 (face font-lock-type-face fontified t) 1387 1389 (fontified t) 1389 1396 (face font-lock-type-face fontified t) 1396 1418 (fontified t) 1418 1423 (face font-lock-variable-name-face fontified t) 1423 1425 (fontified t) 1425 1429 (face font-lock-constant-face fontified t) 1429 1431 (fontified t) 1431 1445 (face font-lock-type-face fontified t) 1445 1447 (fontified t) 1447 1454 (face font-lock-type-face fontified t) 1454 1472 (fontified t) 1472 1473 (face (rainbow-delimiters-depth-1-face) fontified t) 1473 1474 (face (rainbow-delimiters-depth-9-face) fontified t) 1474 1492 (fontified t) 1492 1500 (face font-lock-variable-name-face fontified t) 1500 1502 (face font-lock-variable-name-face fontified t) 1502 1504 (fontified t) 1504 1508 (face font-lock-constant-face fontified t) 1508 1510 (fontified t) 1510 1521 (face font-lock-type-face fontified t) 1521 1523 (fontified t) 1523 1526 (face font-lock-type-face fontified t) 1526 1528 (fontified t) 1528 1540 (fontified t) 1540 1541 (face (rainbow-delimiters-depth-8-face) fontified t) 1541 1542 (face (rainbow-delimiters-depth-7-face) fontified t) 1542 1543 (face (rainbow-delimiters-depth-6-face) fontified t) 1543 1553 (fontified t) 1553 1554 (face (rainbow-delimiters-depth-5-face) fontified t) 1554 1555 (face (rainbow-delimiters-depth-4-face) fontified t) 1555 1565 (fontified t) 1565 1574 (face font-lock-variable-name-face fontified t) 1574 1576 (fontified t) 1576 1580 (face font-lock-constant-face fontified t) 1580 1582 (fontified t) 1582 1596 (face font-lock-type-face fontified t) 1596 1597 (fontified t) 1597 1598 (face (rainbow-delimiters-depth-4-face) fontified t) 1598 1611 (fontified t) 1611 1619 (face font-lock-variable-name-face fontified t) 1619 1621 (fontified t) 1621 1625 (face font-lock-constant-face fontified t) 1625 1627 (fontified t) 1627 1644 (face font-lock-type-face fontified t) 1644 1646 (fontified t) 1646 1658 (face font-lock-type-face fontified t) 1658 1672 (fontified t) 1672 1690 (face font-lock-variable-name-face fontified t) 1690 1692 (fontified t) 1692 1696 (face font-lock-type-face fontified t) 1696 1710 (fontified t) 1710 1720 (face font-lock-variable-name-face fontified t) 1720 1722 (fontified t) 1722 1726 (face font-lock-constant-face fontified t) 1726 1728 (fontified t) 1728 1737 (face font-lock-type-face fontified t) 1737 1739 (fontified t) 1739 1742 (face font-lock-type-face fontified t) 1742 1756 (fontified t) 1756 1765 (face font-lock-variable-name-face fontified t) 1765 1767 (fontified t) 1767 1771 (face font-lock-type-face fontified t) 1771 1772 (face (rainbow-delimiters-depth-5-face) fontified t) 1772 1776 (face font-lock-constant-face fontified t) 1776 1778 (fontified t) 1778 1782 (face font-lock-type-face fontified t) 1782 1784 (fontified t) 1784 1788 (face font-lock-type-face fontified t) 1788 1789 (face (rainbow-delimiters-depth-5-face) fontified t) 1789 1803 (fontified t) 1803 1806 (face font-lock-comment-delimiter-face fontified t) 1806 1888 (face font-lock-comment-face fontified t) 1888 1900 (fontified t) 1900 1912 (face font-lock-variable-name-face fontified t) 1912 1914 (fontified t) 1914 1918 (face font-lock-constant-face fontified t) 1918 1920 (fontified t) 1920 1931 (face font-lock-type-face fontified t) 1931 1933 (fontified t) 1933 1937 (face font-lock-type-face fontified t) 1937 1951 (fontified t) 1951 1954 (face font-lock-comment-delimiter-face fontified t) 1954 1992 (face font-lock-comment-face fontified t) 1992 2004 (fontified t) 2004 2019 (face font-lock-variable-name-face fontified t) 2019 2021 (fontified t) 2021 2026 (face font-lock-keyword-face fontified t) 2026 2040 (fontified t) 2040 2043 (face font-lock-comment-delimiter-face fontified t) 2043 2089 (face font-lock-comment-face fontified t) 2089 2101 (fontified t) 2101 2113 (face font-lock-variable-name-face fontified t) 2113 2115 (fontified t) 2115 2120 (face font-lock-keyword-face fontified t) 2120 2130 (fontified t) 2130 2131 (face (rainbow-delimiters-depth-4-face) fontified t) 2131 2141 (fontified t) 2141 2154 (face font-lock-variable-name-face fontified t) 2154 2172 (fontified t) 2172 2173 (face (rainbow-delimiters-depth-4-face) fontified t) 2173 2182 (fontified t) 2182 2186 (face font-lock-constant-face fontified t) 2186 2188 (fontified t) 2188 2205 (face font-lock-type-face fontified t) 2205 2206 (fontified t) 2206 2207 (face (rainbow-delimiters-depth-5-face) fontified t) 2207 2240 (fontified t) 2240 2259 (face font-lock-variable-name-face fontified t) 2259 2261 (fontified t) 2261 2265 (face font-lock-keyword-face fontified t) 2265 2279 (fontified t) 2279 2292 (face font-lock-variable-name-face fontified t) 2292 2294 (fontified t) 2294 2298 (face font-lock-constant-face fontified t) 2298 2300 (fontified t) 2300 2315 (face font-lock-type-face fontified t) 2315 2317 (fontified t) 2317 2321 (face font-lock-type-face fontified t) 2321 2335 (fontified t) 2335 2342 (face font-lock-variable-name-face fontified t) 2342 2344 (fontified t) 2344 2348 (face font-lock-constant-face fontified t) 2348 2350 (fontified t) 2350 2362 (face font-lock-type-face fontified t) 2362 2371 (fontified t) 2371 2372 (face (rainbow-delimiters-depth-6-face) fontified t) 2372 2373 (face (rainbow-delimiters-depth-6-face) fontified t) 2373 2387 (fontified t) 2387 2391 (face font-lock-variable-name-face fontified t) 2391 2393 (fontified t) 2393 2397 (face font-lock-constant-face fontified t) 2397 2399 (fontified t) 2399 2413 (face font-lock-type-face fontified t) 2413 2422 (fontified t) 2422 2423 (face (rainbow-delimiters-depth-6-face) fontified t) 2423 2424 (face (rainbow-delimiters-depth-6-face) fontified t) 2424 2434 (fontified t) 2434 2435 (face (rainbow-delimiters-depth-5-face) fontified t) 2435 2436 (face (rainbow-delimiters-depth-4-face) fontified t) 2436 2446 (fontified t) 2446 2457 (face font-lock-variable-name-face fontified t) 2457 2459 (fontified t) 2459 2463 (face font-lock-constant-face fontified t) 2463 2465 (fontified t) 2465 2481 (face font-lock-type-face fontified t) 2481 2482 (fontified t) 2482 2483 (face (rainbow-delimiters-depth-4-face) fontified t) 2483 2496 (fontified t) 2496 2501 (face font-lock-variable-name-face fontified t) 2501 2518 (fontified t) 2518 2522 (face font-lock-variable-name-face fontified t) 2522 2540 (fontified t) 2540 2565 (face font-lock-variable-name-face fontified t) 2565 2567 (fontified t) 2567 2572 (face font-lock-keyword-face fontified t) 2572 2582 (fontified t) 2582 2583 (face (rainbow-delimiters-depth-4-face) fontified t) 2583 2593 (fontified t) 2593 2602 (face font-lock-variable-name-face fontified t) 2602 2604 (fontified t) 2604 2608 (face font-lock-type-face fontified t) 2608 2614 (fontified t) 2614 2615 (face (rainbow-delimiters-depth-3-face) fontified t) 2615 2616 (face (rainbow-delimiters-depth-2-face) fontified t) 2616 2617 (fontified t) 2617 2618 (face (rainbow-delimiters-depth-1-face) fontified t) 2618 2620 (fontified t) 2620 2626 (face font-lock-keyword-face fontified t) 2626 2627 (fontified t) 2627 2632 (face font-lock-type-face fontified t) 2632 2633 (fontified t) 2633 2634 (face (rainbow-delimiters-depth-1-face) fontified t) 2634 2639 (fontified t) 2639 2646 (face font-lock-variable-name-face fontified t) 2646 2648 (fontified t) 2648 2652 (face font-lock-constant-face fontified t) 2652 2654 (fontified t) 2654 2661 (face font-lock-type-face fontified t) 2661 2667 (fontified t) 2667 2673 (face font-lock-variable-name-face fontified t) 2673 2675 (fontified t) 2675 2679 (face font-lock-constant-face fontified t) 2679 2681 (fontified t) 2681 2687 (face font-lock-type-face fontified t) 2687 2693 (fontified t) 2693 2698 (face font-lock-variable-name-face fontified t) 2698 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2706 (fontified t) 2706 2711 (face font-lock-type-face fontified t) 2711 2717 (fontified t) 2717 2723 (face font-lock-variable-name-face fontified t) 2723 2725 (fontified t) 2725 2729 (face font-lock-constant-face fontified t) 2729 2731 (fontified t) 2731 2751 (face font-lock-type-face fontified t) 2751 2757 (fontified t) 2757 2761 (face font-lock-variable-name-face fontified t) 2761 2763 (fontified t) 2763 2768 (face font-lock-constant-face fontified t) 2768 2770 (fontified t) 2770 2773 (face font-lock-constant-face fontified t) 2773 2775 (fontified t) 2775 2787 (face font-lock-type-face fontified t) 2787 2788 (face (rainbow-delimiters-depth-2-face) fontified t) 2788 2791 (face font-lock-type-face fontified t) 2791 2792 (face (rainbow-delimiters-depth-2-face) fontified t) 2792 2798 (fontified t) 2798 2801 (face font-lock-comment-delimiter-face fontified t) 2801 2850 (face font-lock-comment-face fontified t) 2850 2854 (fontified t) 2854 2857 (face font-lock-comment-delimiter-face fontified t) 2857 2906 (face font-lock-comment-face fontified t) 2906 2910 (fontified t) 2910 2913 (face font-lock-comment-delimiter-face fontified t) 2913 2958 (face font-lock-comment-face fontified t) 2958 2962 (fontified t) 2962 2968 (face font-lock-variable-name-face fontified t) 2968 2970 (fontified t) 2970 2976 (face font-lock-type-face fontified t) 2976 2982 (fontified t) 2982 2997 (face font-lock-variable-name-face fontified t) 2997 2999 (fontified t) 2999 3003 (face font-lock-constant-face fontified t) 3003 3005 (fontified t) 3005 3019 (face font-lock-type-face fontified t) 3019 3025 (fontified t) 3025 3028 (face font-lock-variable-name-face fontified t) 3028 3034 (face font-lock-variable-name-face fontified t) 3034 3036 (fontified t) 3036 3041 (face font-lock-constant-face fontified t) 3041 3043 (fontified t) 3043 3048 (face font-lock-type-face fontified t) 3048 3050 (fontified t) 3050 3056 (fontified t) 3056 3081 (face font-lock-variable-name-face fontified t) 3081 3083 (fontified t) 3083 3087 (face font-lock-constant-face fontified t) 3087 3089 (fontified t) 3089 3104 (face font-lock-type-face fontified t) 3104 3110 (fontified t) 3110 3123 (face font-lock-variable-name-face fontified t) 3123 3125 (fontified t) 3125 3132 (face font-lock-type-face fontified t) 3132 3144 (fontified t) 3144 3150 (face font-lock-variable-name-face fontified t) 3150 3152 (fontified t) 3152 3158 (face font-lock-constant-face fontified t) 3158 3160 (fontified t) 3160 3166 (face font-lock-type-face fontified t) 3166 3168 (fontified t) 3168 3171 (face font-lock-comment-delimiter-face fontified t) 3171 3180 (face font-lock-comment-face fontified t) 3180 3184 (fontified t) 3184 3194 (face font-lock-variable-name-face fontified t) 3194 3196 (fontified t) 3196 3202 (face font-lock-constant-face fontified t) 3202 3204 (fontified t) 3204 3214 (face font-lock-type-face fontified t) 3214 3216 (fontified t) 3216 3219 (face font-lock-comment-delimiter-face fontified t) 3219 3224 (face font-lock-comment-face fontified t) 3224 3228 (fontified t) 3228 3245 (face font-lock-variable-name-face fontified t) 3245 3247 (fontified t) 3247 3253 (face font-lock-constant-face fontified t) 3253 3255 (fontified t) 3255 3271 (face font-lock-type-face fontified t) 3271 3273 (fontified t) 3273 3276 (face font-lock-comment-delimiter-face fontified t) 3276 3285 (face font-lock-comment-face fontified t) 3285 3289 (fontified t) 3289 3292 (face font-lock-comment-delimiter-face fontified t) 3292 3296 (face font-lock-comment-face fontified t) 3296 3300 (fontified t) 3300 3303 (face font-lock-comment-delimiter-face fontified t) 3303 3308 (face font-lock-comment-face fontified t) 3308 3312 (fontified t) 3312 3325 (face font-lock-variable-name-face fontified t) 3325 3327 (fontified t) 3327 3331 (face font-lock-type-face fontified t) 3331 3339 (fontified t) 3339 3353 (face font-lock-variable-name-face fontified t) 3353 3355 (fontified t) 3355 3368 (face font-lock-type-face fontified t) 3368 3374 (fontified t) 3374 3387 (face font-lock-variable-name-face fontified t) 3387 3389 (fontified t) 3389 3393 (face font-lock-constant-face fontified t) 3393 3395 (fontified t) 3395 3401 (face font-lock-type-face fontified t) 3401 3407 (fontified t) 3407 3424 (face font-lock-variable-name-face fontified t) 3424 3426 (fontified t) 3426 3430 (face font-lock-constant-face fontified t) 3430 3432 (fontified t) 3432 3441 (face font-lock-type-face fontified t) 3441 3448 (fontified t) 3448 3461 (face font-lock-variable-name-face fontified t) 3461 3463 (fontified t) 3463 3475 (face font-lock-type-face fontified t) 3475 3481 (fontified t) 3481 3493 (face font-lock-variable-name-face fontified t) 3493 3495 (fontified t) 3495 3499 (face font-lock-constant-face fontified t) 3499 3501 (fontified t) 3501 3507 (face font-lock-type-face fontified t) 3507 3513 (fontified t) 3513 3529 (face font-lock-variable-name-face fontified t) 3529 3531 (fontified t) 3531 3535 (face font-lock-constant-face fontified t) 3535 3537 (fontified t) 3537 3546 (face font-lock-type-face fontified t) 3546 3552 (fontified t) 3552 3573 (face font-lock-variable-name-face fontified t) 3573 3575 (fontified t) 3575 3579 (face font-lock-constant-face fontified t) 3579 3581 (fontified t) 3581 3595 (face font-lock-type-face fontified t) 3595 3602 (fontified t) 3602 3611 (face font-lock-variable-name-face fontified t) 3611 3613 (fontified t) 3613 3616 (face font-lock-type-face fontified t) 3616 3617 (face (rainbow-delimiters-depth-2-face) fontified t) 3617 3625 (face font-lock-type-face fontified t) 3625 3626 (face (rainbow-delimiters-depth-2-face) fontified t) 3626 3632 (fontified t) 3632 3647 (face font-lock-variable-name-face fontified t) 3647 3649 (fontified t) 3649 3653 (face font-lock-constant-face fontified t) 3653 3655 (fontified t) 3655 3661 (face font-lock-type-face fontified t) 3661 3670 (fontified t) 3670 3671 (face (rainbow-delimiters-depth-1-face) fontified t) 3671 3673 (fontified t) 3673 3677 (face font-lock-keyword-face fontified t) 3677 3678 (fontified t) 3678 3683 (face font-lock-type-face fontified t) 3683 3684 (fontified t) 3684 3685 (face (rainbow-delimiters-depth-1-face) fontified t) 3685 3690 (fontified t) 3690 3693 (face font-lock-comment-delimiter-face fontified t) 3693 3745 (face font-lock-comment-face fontified t) 3745 3749 (fontified t) 3749 3754 (face font-lock-keyword-face fontified t) 3754 3755 (fontified t) 3755 3757 (face font-lock-keyword-face fontified t) 3757 3758 (fontified t) 3758 3761 (face font-lock-function-name-face fontified t) 3761 3762 (face (rainbow-delimiters-depth-2-face) fontified t) 3762 3768 (face font-lock-variable-name-face fontified t) 3768 3770 (fontified t) 3770 3776 (face font-lock-type-face fontified t) 3776 3777 (face (rainbow-delimiters-depth-2-face) fontified t) 3777 3779 (fontified t) 3779 3780 (syntax-table (1) fontified t) 3780 3781 (fontified t) 3781 3785 (face font-lock-type-face fontified t) 3785 3786 (fontified t) 3786 3787 (face (rainbow-delimiters-depth-2-face) fontified t) 3787 3796 (fontified t) 3796 3799 (face font-lock-keyword-face fontified t) 3799 3800 (fontified t) 3800 3804 (face font-lock-variable-name-face fontified t) 3804 3824 (fontified t) 3824 3825 (face (rainbow-delimiters-depth-3-face) fontified t) 3825 3826 (face (rainbow-delimiters-depth-3-face) fontified t) 3826 3837 (fontified t) 3837 3840 (face font-lock-comment-delimiter-face fontified t) 3840 3876 (face font-lock-comment-face fontified t) 3876 3884 (fontified t) 3884 3887 (face font-lock-comment-delimiter-face fontified t) 3887 3902 (face font-lock-comment-face fontified t) 3902 3903 (face font-lock-comment-face syntax-table (1) fontified t) 3903 3943 (face font-lock-comment-face fontified t) 3943 3951 (fontified t) 3951 3954 (face font-lock-keyword-face fontified t) 3954 3955 (fontified t) 3955 3963 (face font-lock-variable-name-face fontified t) 3963 3966 (fontified t) 3966 3970 (face font-lock-constant-face fontified t) 3970 3972 (fontified t) 3972 3980 (face font-lock-type-face fontified t) 3980 3985 (fontified t) 3985 3986 (face (rainbow-delimiters-depth-3-face) fontified t) 3986 3990 (face font-lock-constant-face fontified t) 3990 3992 (fontified t) 3992 4010 (face font-lock-type-face fontified t) 4010 4011 (fontified t) 4011 4012 (face (rainbow-delimiters-depth-4-face) fontified t) 4012 4025 (fontified t) 4025 4033 (face font-lock-variable-name-face fontified t) 4033 4035 (fontified t) 4035 4039 (face font-lock-constant-face fontified t) 4039 4041 (fontified t) 4041 4049 (face font-lock-type-face fontified t) 4049 4054 (fontified t) 4054 4055 (face (rainbow-delimiters-depth-5-face) fontified t) 4055 4056 (face (rainbow-delimiters-depth-5-face) fontified t) 4056 4072 (fontified t) 4072 4079 (face font-lock-type-face fontified t) 4079 4088 (fontified t) 4088 4089 (face (rainbow-delimiters-depth-5-face) fontified t) 4089 4090 (face (rainbow-delimiters-depth-5-face) fontified t) 4090 4099 (fontified t) 4099 4100 (face (rainbow-delimiters-depth-4-face) fontified t) 4100 4101 (face (rainbow-delimiters-depth-3-face) fontified t) 4101 4120 (fontified t) 4120 4123 (face font-lock-comment-delimiter-face fontified t) 4123 4132 (face font-lock-comment-face fontified t) 4132 4140 (fontified t) 4140 4142 (face font-lock-comment-delimiter-face fontified t) 4142 4143 (face font-lock-comment-face fontified t) 4143 4151 (fontified t) 4151 4154 (face font-lock-comment-delimiter-face fontified t) 4154 4219 (face font-lock-comment-face fontified t) 4219 4227 (fontified t) 4227 4230 (face font-lock-comment-delimiter-face fontified t) 4230 4277 (face font-lock-comment-face fontified t) 4277 4285 (fontified t) 4285 4288 (face font-lock-keyword-face fontified t) 4288 4289 (fontified t) 4289 4296 (face font-lock-variable-name-face fontified t) 4296 4299 (fontified t) 4299 4305 (face rust-unsafe fontified t) 4305 4306 (fontified t) 4306 4307 (face (rainbow-delimiters-depth-3-face) fontified t) 4307 4331 (fontified t) 4331 4332 (face (rainbow-delimiters-depth-4-face) fontified t) 4332 4333 (face rust-ampersand-face fontified t) 4333 4339 (fontified t) 4339 4340 (face (rainbow-delimiters-depth-4-face) fontified t) 4340 4341 (fontified t) 4341 4342 (face (rainbow-delimiters-depth-3-face) fontified t) 4342 4349 (fontified t) 4349 4350 (face (rainbow-delimiters-depth-3-face) fontified t) 4350 4351 (face (rainbow-delimiters-depth-3-face) fontified t) 4351 4362 (fontified t) 4362 4365 (face font-lock-keyword-face fontified t) 4365 4366 (fontified t) 4366 4373 (face font-lock-variable-name-face fontified t) 4373 4400 (fontified t) 4400 4401 (face (rainbow-delimiters-depth-3-face) fontified t) 4401 4414 (fontified t) 4414 4415 (face rust-ampersand-face fontified t) 4415 4419 (face font-lock-constant-face fontified t) 4419 4421 (fontified t) 4421 4442 (face font-lock-type-face fontified t) 4442 4443 (fontified t) 4443 4444 (face (rainbow-delimiters-depth-4-face) fontified t) 4444 4461 (fontified t) 4461 4477 (face font-lock-variable-name-face fontified t) 4477 4479 (fontified t) 4479 4483 (face font-lock-constant-face fontified t) 4483 4485 (fontified t) 4485 4500 (face font-lock-type-face fontified t) 4500 4509 (fontified t) 4509 4510 (face (rainbow-delimiters-depth-5-face) fontified t) 4510 4511 (face (rainbow-delimiters-depth-5-face) fontified t) 4511 4529 (fontified t) 4529 4547 (face font-lock-variable-name-face fontified t) 4547 4549 (fontified t) 4549 4550 (face font-lock-type-face fontified t) 4550 4553 (fontified t face font-lock-type-face) 4553 4554 (fontified t face (rainbow-delimiters-depth-5-face)) 4554 4555 (fontified t face rust-ampersand-face) 4555 4562 (fontified t) 4562 4563 (fontified t face (rainbow-delimiters-depth-5-face)) 4563 4565 (fontified t) 4565 4581 (fontified t) 4581 4603 (face font-lock-variable-name-face fontified t) 4603 4605 (fontified t) 4605 4610 (face font-lock-keyword-face fontified t) 4610 4624 (fontified t) 4624 4625 (face (rainbow-delimiters-depth-4-face) fontified t) 4625 4635 (fontified t) 4635 4636 (face (rainbow-delimiters-depth-3-face) fontified t) 4636 4637 (fontified t) 4637 4642 (face font-lock-keyword-face fontified t) 4642 4649 (fontified t) 4649 4650 (face (rainbow-delimiters-depth-3-face) fontified t) 4650 4651 (face (rainbow-delimiters-depth-3-face) fontified t) 4651 4662 (fontified t) 4662 4665 (face font-lock-keyword-face fontified t) 4665 4666 (fontified t) 4666 4667 (face (rainbow-delimiters-depth-3-face) fontified t) 4667 4680 (fontified t) 4680 4681 (face (rainbow-delimiters-depth-3-face) fontified t) 4681 4706 (fontified t) 4706 4707 (face (rainbow-delimiters-depth-3-face) fontified t) 4707 4720 (fontified t) 4720 4721 (face rust-ampersand-face fontified t) 4721 4725 (face font-lock-constant-face fontified t) 4725 4727 (fontified t) 4727 4743 (face font-lock-type-face fontified t) 4743 4744 (fontified t) 4744 4745 (face (rainbow-delimiters-depth-4-face) fontified t) 4745 4762 (fontified t) 4762 4770 (face font-lock-variable-name-face fontified t) 4770 4772 (fontified t) 4772 4776 (face font-lock-constant-face fontified t) 4776 4778 (fontified t) 4778 4786 (face font-lock-type-face fontified t) 4786 4793 (fontified t) 4793 4794 (face (rainbow-delimiters-depth-5-face) fontified t) 4794 4795 (face (rainbow-delimiters-depth-5-face) fontified t) 4795 4813 (fontified t) 4813 4816 (face font-lock-comment-delimiter-face fontified t) 4816 4868 (face font-lock-comment-face fontified t) 4868 4884 (fontified t) 4884 4887 (face font-lock-comment-delimiter-face fontified t) 4887 4943 (face font-lock-comment-face fontified t) 4943 4959 (fontified t) 4959 4965 (face font-lock-variable-name-face fontified t) 4965 4967 (fontified t) 4967 4969 (face font-lock-keyword-face fontified t) 4969 4970 (fontified t) 4970 4974 (face font-lock-preprocessor-face fontified t) 4974 4975 (face (rainbow-delimiters-depth-5-face) fontified t) 4975 4989 (fontified t) 4989 4997 (face font-lock-string-face fontified t) 4997 4998 (face (rainbow-delimiters-depth-5-face) fontified t) 4998 4999 (fontified t) 4999 5000 (face (rainbow-delimiters-depth-5-face) fontified t) 5000 5021 (fontified t) 5021 5025 (face font-lock-constant-face fontified t) 5025 5027 (fontified t) 5027 5033 (face font-lock-type-face fontified t) 5033 5060 (fontified t) 5060 5061 (face (rainbow-delimiters-depth-6-face) fontified t) 5061 5062 (face (rainbow-delimiters-depth-6-face) fontified t) 5062 5079 (fontified t) 5079 5080 (face (rainbow-delimiters-depth-5-face) fontified t) 5080 5081 (fontified t) 5081 5085 (face font-lock-keyword-face fontified t) 5085 5086 (fontified t) 5086 5087 (face (rainbow-delimiters-depth-5-face) fontified t) 5087 5108 (fontified t) 5108 5112 (face font-lock-constant-face fontified t) 5112 5114 (fontified t) 5114 5120 (face font-lock-type-face fontified t) 5120 5129 (fontified t) 5129 5130 (face (rainbow-delimiters-depth-6-face) fontified t) 5130 5131 (face (rainbow-delimiters-depth-6-face) fontified t) 5131 5148 (fontified t) 5148 5149 (face (rainbow-delimiters-depth-5-face) fontified t) 5149 5167 (fontified t) 5167 5172 (face font-lock-variable-name-face fontified t) 5172 5174 (fontified t) 5174 5178 (face font-lock-type-face fontified t) 5178 5192 (fontified t) 5192 5193 (face (rainbow-delimiters-depth-4-face) fontified t) 5193 5207 (fontified t) 5207 5211 (face font-lock-type-face fontified t) 5211 5213 (fontified t) 5213 5216 (face font-lock-comment-delimiter-face fontified t) 5216 5227 (face font-lock-comment-face fontified t) 5227 5235 (fontified t) 5235 5236 (face (rainbow-delimiters-depth-3-face) fontified t) 5236 5237 (fontified t) 5237 5242 (face font-lock-keyword-face fontified t) 5242 5249 (fontified t) 5249 5250 (face (rainbow-delimiters-depth-3-face) fontified t) 5250 5251 (face (rainbow-delimiters-depth-3-face) fontified t) 5251 5263 (fontified t) 5263 5266 (face font-lock-keyword-face fontified t) 5266 5267 (fontified t) 5267 5279 (face font-lock-variable-name-face fontified t) 5279 5306 (fontified t) 5306 5307 (face (rainbow-delimiters-depth-3-face) fontified t) 5307 5308 (face rust-ampersand-face fontified t) 5308 5315 (fontified t) 5315 5316 (face (rainbow-delimiters-depth-3-face) fontified t) 5316 5326 (fontified t) 5326 5329 (face font-lock-comment-delimiter-face fontified t) 5329 5409 (face font-lock-comment-face fontified t) 5409 5417 (fontified t) 5417 5420 (face font-lock-comment-delimiter-face fontified t) 5420 5500 (face font-lock-comment-face fontified t) 5500 5508 (fontified t) 5508 5511 (face font-lock-comment-delimiter-face fontified t) 5511 5585 (face font-lock-comment-face fontified t) 5585 5593 (fontified t) 5593 5596 (face font-lock-keyword-face fontified t) 5596 5597 (fontified t) 5597 5611 (face font-lock-variable-name-face fontified t) 5611 5639 (fontified t) 5639 5640 (face (rainbow-delimiters-depth-3-face) fontified t) 5640 5641 (face (rainbow-delimiters-depth-3-face) fontified t) 5641 5661 (fontified t) 5661 5662 (face (rainbow-delimiters-depth-3-face) fontified t) 5662 5663 (face (rainbow-delimiters-depth-3-face) fontified t) 5663 5683 (fontified t) 5683 5684 (face (rainbow-delimiters-depth-3-face) fontified t) 5684 5697 (fontified t) 5697 5698 (face (rainbow-delimiters-depth-4-face) fontified t) 5698 5699 (face (rainbow-delimiters-depth-4-face) fontified t) 5699 5700 (face (rainbow-delimiters-depth-3-face) fontified t) 5700 5718 (fontified t) 5718 5719 (face (rainbow-delimiters-depth-3-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-3-face) fontified t) 5720 5743 (fontified t) 5743 5744 (face (rainbow-delimiters-depth-3-face) fontified t) 5744 5764 (fontified t) 5764 5765 (face (rainbow-delimiters-depth-4-face) fontified t) 5765 5766 (fontified t) 5766 5767 (face (rainbow-delimiters-depth-4-face) fontified t) 5767 5768 (face (rainbow-delimiters-depth-3-face) fontified t) 5768 5778 (fontified t) 5778 5781 (face font-lock-keyword-face fontified t) 5781 5782 (fontified t) 5782 5788 (face font-lock-variable-name-face fontified t) 5788 5791 (fontified t) 5791 5795 (face font-lock-constant-face fontified t) 5795 5797 (fontified t) 5797 5817 (face font-lock-type-face fontified t) 5817 5818 (fontified t) 5818 5819 (face (rainbow-delimiters-depth-3-face) fontified t) 5819 5832 (fontified t) 5832 5837 (face font-lock-variable-name-face fontified t) 5837 5839 (fontified t) 5839 5843 (face font-lock-constant-face fontified t) 5843 5845 (fontified t) 5845 5858 (face font-lock-type-face fontified t) 5858 5860 (fontified t) 5860 5877 (face font-lock-type-face fontified t) 5877 5891 (fontified t) 5891 5897 (face font-lock-variable-name-face fontified t) 5897 5927 (fontified t) 5927 5932 (face font-lock-variable-name-face fontified t) 5932 5958 (fontified t) 5958 5964 (face font-lock-variable-name-face fontified t) 5964 5991 (fontified t) 5991 6003 (face font-lock-variable-name-face fontified t) 6003 6031 (fontified t) 6031 6032 (face (rainbow-delimiters-depth-4-face) fontified t) 6032 6033 (fontified t) 6033 6034 (face (rainbow-delimiters-depth-4-face) fontified t) 6034 6048 (fontified t) 6048 6058 (face font-lock-variable-name-face fontified t) 6058 6065 (fontified t) 6065 6084 (fontified t) 6084 6085 (fontified t face (rainbow-delimiters-depth-4-face)) 6085 6086 (fontified t) 6086 6087 (fontified t face (rainbow-delimiters-depth-4-face)) 6087 6089 (fontified t) 6089 6101 (fontified t) 6101 6113 (face font-lock-variable-name-face fontified t) 6113 6115 (fontified t) 6115 6119 (face font-lock-preprocessor-face fontified t) 6119 6120 (face (rainbow-delimiters-depth-4-face) fontified t) 6120 6121 (face (rainbow-delimiters-depth-4-face) fontified t) 6121 6131 (fontified t) 6131 6132 (face (rainbow-delimiters-depth-3-face) fontified t) 6132 6159 (fontified t) 6159 6160 (face (rainbow-delimiters-depth-3-face) fontified t) 6160 6161 (face rust-ampersand-face fontified t) 6161 6169 (fontified t) 6169 6170 (face rust-ampersand-face fontified t) 6170 6176 (fontified t) 6176 6177 (face (rainbow-delimiters-depth-3-face) fontified t) 6177 6197 (fontified t) 6197 6200 (face font-lock-keyword-face fontified t) 6200 6201 (fontified t) 6201 6226 (face font-lock-variable-name-face fontified t) 6226 6272 (fontified t) 6272 6273 (face (rainbow-delimiters-depth-3-face) fontified t) 6273 6274 (face rust-ampersand-face fontified t) 6274 6278 (face font-lock-constant-face fontified t) 6278 6280 (fontified t) 6280 6305 (face font-lock-type-face fontified t) 6305 6306 (fontified t) 6306 6307 (face (rainbow-delimiters-depth-4-face) fontified t) 6307 6324 (fontified t) 6324 6331 (face font-lock-variable-name-face fontified t) 6331 6333 (fontified t) 6333 6334 (face rust-ampersand-face fontified t) 6334 6335 (face (rainbow-delimiters-depth-5-face) fontified t) 6335 6356 (fontified t) 6356 6360 (face font-lock-constant-face fontified t) 6360 6362 (fontified t) 6362 6382 (face font-lock-type-face fontified t) 6382 6383 (fontified t) 6383 6384 (face (rainbow-delimiters-depth-6-face) fontified t) 6384 6409 (fontified t) 6409 6416 (face font-lock-variable-name-face fontified t) 6416 6445 (fontified t) 6445 6455 (face font-lock-variable-name-face fontified t) 6455 6457 (fontified t) 6457 6461 (face font-lock-constant-face fontified t) 6461 6463 (fontified t) 6463 6475 (face font-lock-type-face fontified t) 6475 6477 (fontified t) 6477 6485 (face font-lock-type-face fontified t) 6485 6511 (fontified t) 6511 6513 (face font-lock-variable-name-face fontified t) 6513 6515 (fontified t) 6515 6519 (face font-lock-constant-face fontified t) 6519 6521 (fontified t) 6521 6532 (face font-lock-type-face fontified t) 6532 6534 (fontified t) 6534 6541 (face font-lock-type-face fontified t) 6541 6542 (fontified t) 6542 6543 (face (rainbow-delimiters-depth-7-face) fontified t) 6543 6572 (fontified t) 6572 6584 (face font-lock-variable-name-face fontified t) 6584 6586 (fontified t) 6586 6591 (face font-lock-keyword-face fontified t) 6591 6621 (fontified t) 6621 6635 (face font-lock-variable-name-face fontified t) 6635 6637 (fontified t) 6637 6641 (face font-lock-constant-face fontified t) 6641 6643 (fontified t) 6643 6663 (face font-lock-type-face fontified t) 6663 6665 (fontified t) 6665 6667 (face font-lock-type-face fontified t) 6667 6697 (fontified t) 6697 6708 (face font-lock-variable-name-face fontified t) 6708 6710 (fontified t) 6710 6714 (face font-lock-constant-face fontified t) 6714 6716 (fontified t) 6716 6733 (face font-lock-type-face fontified t) 6733 6735 (fontified t) 6735 6740 (face font-lock-type-face fontified t) 6740 6741 (fontified t) 6741 6742 (face (rainbow-delimiters-depth-8-face) fontified t) 6742 6743 (fontified t) 6743 6753 (face font-lock-variable-name-face fontified t) 6753 6755 (fontified t) 6755 6759 (face font-lock-keyword-face fontified t) 6759 6760 (fontified t) 6760 6761 (face (rainbow-delimiters-depth-8-face) fontified t) 6761 6787 (fontified t) 6787 6788 (face (rainbow-delimiters-depth-7-face) fontified t) 6788 6814 (fontified t) 6814 6819 (face font-lock-variable-name-face fontified t) 6819 6821 (fontified t) 6821 6825 (face font-lock-type-face fontified t) 6825 6847 (fontified t) 6847 6848 (face (rainbow-delimiters-depth-6-face) fontified t) 6848 6870 (fontified t) 6870 6874 (face font-lock-constant-face fontified t) 6874 6876 (fontified t) 6876 6896 (face font-lock-type-face fontified t) 6896 6897 (fontified t) 6897 6898 (face (rainbow-delimiters-depth-6-face) fontified t) 6898 6923 (fontified t) 6923 6930 (face font-lock-variable-name-face fontified t) 6930 6959 (fontified t) 6959 6969 (face font-lock-variable-name-face fontified t) 6969 6971 (fontified t) 6971 6975 (face font-lock-constant-face fontified t) 6975 6977 (fontified t) 6977 6989 (face font-lock-type-face fontified t) 6989 6991 (fontified t) 6991 6999 (face font-lock-type-face fontified t) 6999 7025 (fontified t) 7025 7028 (face font-lock-comment-delimiter-face fontified t) 7028 7074 (face font-lock-comment-face fontified t) 7074 7098 (fontified t) 7098 7101 (face font-lock-comment-delimiter-face fontified t) 7101 7136 (face font-lock-comment-face fontified t) 7136 7160 (fontified t) 7160 7162 (face font-lock-variable-name-face fontified t) 7162 7164 (fontified t) 7164 7168 (face font-lock-constant-face fontified t) 7168 7170 (fontified t) 7170 7181 (face font-lock-type-face fontified t) 7181 7183 (fontified t) 7183 7190 (face font-lock-type-face fontified t) 7190 7191 (face (rainbow-delimiters-depth-7-face) fontified t) 7191 7195 (face font-lock-constant-face fontified t) 7195 7197 (fontified t) 7197 7215 (face font-lock-type-face fontified t) 7215 7217 (fontified t) 7217 7226 (face font-lock-type-face fontified t) 7226 7227 (face (rainbow-delimiters-depth-7-face) fontified t) 7227 7253 (fontified t) 7253 7258 (face font-lock-variable-name-face fontified t) 7258 7260 (fontified t) 7260 7264 (face font-lock-type-face fontified t) 7264 7286 (fontified t) 7286 7287 (face (rainbow-delimiters-depth-6-face) fontified t) 7287 7305 (fontified t) 7305 7306 (face (rainbow-delimiters-depth-5-face) fontified t) 7306 7324 (fontified t) 7324 7329 (face font-lock-variable-name-face fontified t) 7329 7331 (fontified t) 7331 7335 (face font-lock-type-face fontified t) 7335 7336 (face (rainbow-delimiters-depth-5-face) fontified t) 7336 7363 (face font-lock-string-face fontified t) 7363 7364 (face (rainbow-delimiters-depth-5-face) fontified t) 7364 7378 (fontified t) 7378 7379 (face (rainbow-delimiters-depth-4-face) fontified t) 7379 7380 (face (rainbow-delimiters-depth-3-face) fontified t) 7380 7391 (fontified t) 7391 7396 (face font-lock-preprocessor-face fontified t) 7396 7397 (face (rainbow-delimiters-depth-3-face) fontified t) 7397 7409 (face font-lock-string-face fontified t) 7409 7410 (face (rainbow-delimiters-depth-3-face) fontified t) 7410 7412 (fontified t) 7412 7420 (fontified t) 7420 7423 (face font-lock-keyword-face fontified t) 7423 7424 (fontified t) 7424 7433 (face font-lock-variable-name-face fontified t) 7433 7436 (fontified t) 7436 7441 (face font-lock-constant-face fontified t) 7441 7451 (fontified t) 7451 7452 (face (rainbow-delimiters-depth-3-face) fontified t) 7452 7505 (face font-lock-string-face fontified t) 7505 7507 (fontified t) 7507 7508 (face rust-ampersand-face fontified t) 7508 7516 (fontified t) 7516 7517 (face rust-ampersand-face fontified t) 7517 7524 (fontified t) 7524 7525 (face rust-ampersand-face fontified t) 7525 7550 (fontified t) 7550 7551 (face (rainbow-delimiters-depth-3-face) fontified t) 7551 7558 (fontified t) 7558 7559 (face (rainbow-delimiters-depth-3-face) fontified t) 7559 7560 (face (rainbow-delimiters-depth-3-face) fontified t) 7560 7562 (fontified t) 7562 7571 (fontified t) 7571 7574 (face font-lock-keyword-face fontified t) 7574 7575 (fontified t) 7575 7588 (face font-lock-variable-name-face fontified t) 7588 7591 (fontified t) 7591 7598 (face font-lock-constant-face fontified t) 7598 7600 (fontified t) 7600 7607 (face font-lock-type-face fontified t) 7607 7629 (fontified t) 7629 7630 (face (rainbow-delimiters-depth-3-face) fontified t) 7630 7631 (face rust-ampersand-face fontified t) 7631 7639 (fontified t) 7639 7640 (face rust-ampersand-face fontified t) 7640 7648 (fontified t) 7648 7663 (face font-lock-string-face fontified t) 7663 7664 (face (rainbow-delimiters-depth-3-face) fontified t) 7664 7666 (fontified t) 7666 7676 (fontified t) 7676 7679 (face font-lock-keyword-face fontified t) 7679 7680 (fontified t) 7680 7686 (face font-lock-variable-name-face fontified t) 7686 7689 (fontified t) 7689 7695 (face font-lock-constant-face fontified t) 7695 7697 (fontified t) 7697 7703 (face font-lock-type-face fontified t) 7703 7708 (fontified t) 7708 7709 (face (rainbow-delimiters-depth-3-face) fontified t) 7709 7710 (face (rainbow-delimiters-depth-4-face) fontified t) 7710 7724 (fontified t) 7724 7725 (face (rainbow-delimiters-depth-4-face) fontified t) 7725 7727 (fontified t) 7727 7733 (face font-lock-constant-face fontified t) 7733 7735 (fontified t) 7735 7738 (face font-lock-type-face fontified t) 7738 7739 (face (rainbow-delimiters-depth-4-face) fontified t) 7739 7744 (fontified t) 7744 7745 (face (rainbow-delimiters-depth-4-face) fontified t) 7745 7747 (fontified t) 7747 7753 (face font-lock-constant-face fontified t) 7753 7755 (fontified t) 7755 7758 (face font-lock-type-face fontified t) 7758 7759 (face (rainbow-delimiters-depth-4-face) fontified t) 7759 7764 (fontified t) 7764 7765 (face (rainbow-delimiters-depth-4-face) fontified t) 7765 7766 (face (rainbow-delimiters-depth-3-face) fontified t) 7766 7776 (fontified t) 7776 7779 (face font-lock-keyword-face fontified t) 7779 7780 (fontified t) 7780 7790 (face font-lock-variable-name-face fontified t) 7790 7793 (fontified t) 7793 7799 (face font-lock-constant-face fontified t) 7799 7801 (fontified t) 7801 7811 (face font-lock-type-face fontified t) 7811 7816 (fontified t) 7816 7817 (face (rainbow-delimiters-depth-3-face) fontified t) 7817 7846 (fontified t) 7846 7852 (face font-lock-constant-face fontified t) 7852 7854 (fontified t) 7854 7857 (face font-lock-type-face fontified t) 7857 7858 (face (rainbow-delimiters-depth-4-face) fontified t) 7858 7862 (fontified t) 7862 7863 (face (rainbow-delimiters-depth-4-face) fontified t) 7863 7875 (fontified t) 7875 7876 (face (rainbow-delimiters-depth-3-face) fontified t) 7876 7886 (fontified t) 7886 7889 (face font-lock-keyword-face fontified t) 7889 7890 (fontified t) 7890 7907 (face font-lock-variable-name-face fontified t) 7907 7910 (fontified t) 7910 7916 (face font-lock-constant-face fontified t) 7916 7918 (fontified t) 7918 7934 (face font-lock-type-face fontified t) 7934 7939 (fontified t) 7939 7940 (face (rainbow-delimiters-depth-3-face) fontified t) 7940 7948 (fontified t) 7948 7949 (face (rainbow-delimiters-depth-3-face) fontified t) 7949 7962 (fontified t) 7962 7965 (face font-lock-keyword-face fontified t) 7965 7966 (fontified t) 7966 7969 (face font-lock-keyword-face fontified t) 7969 7970 (fontified t) 7970 7984 (face font-lock-variable-name-face fontified t) 7984 7987 (fontified t) 7987 8000 (face font-lock-type-face fontified t) 8000 8005 (fontified t) 8005 8006 (face (rainbow-delimiters-depth-3-face) fontified t) 8006 8007 (face (rainbow-delimiters-depth-3-face) fontified t) 8007 8048 (fontified t) 8048 8049 (face (rainbow-delimiters-depth-3-face) fontified t) 8049 8050 (face rust-ampersand-face fontified t) 8050 8058 (fontified t) 8058 8059 (face rust-ampersand-face fontified t) 8059 8069 (fontified t) 8069 8070 (face (rainbow-delimiters-depth-3-face) fontified t) 8070 8072 (fontified t) 8072 8075 (face font-lock-comment-delimiter-face fontified t) 8075 8084 (face font-lock-comment-face fontified t) 8084 8092 (fontified t) 8092 8095 (face font-lock-keyword-face fontified t) 8095 8096 (fontified t) 8096 8109 (face font-lock-variable-name-face fontified t) 8109 8147 (fontified t) 8147 8148 (face (rainbow-delimiters-depth-3-face) fontified t) 8148 8149 (face rust-ampersand-face fontified t) 8149 8155 (fontified t) 8155 8156 (face (rainbow-delimiters-depth-3-face) fontified t) 8156 8168 (fontified t) 8168 8171 (face font-lock-keyword-face fontified t) 8171 8172 (fontified t) 8172 8196 (face font-lock-variable-name-face fontified t) 8196 8230 (fontified t) 8230 8231 (face (rainbow-delimiters-depth-3-face) fontified t) 8231 8232 (face rust-ampersand-face fontified t) 8232 8236 (face font-lock-constant-face fontified t) 8236 8238 (fontified t) 8238 8263 (face font-lock-type-face fontified t) 8263 8264 (fontified t) 8264 8265 (face (rainbow-delimiters-depth-4-face) fontified t) 8265 8278 (fontified t) 8278 8285 (face font-lock-variable-name-face fontified t) 8285 8287 (fontified t) 8287 8288 (face rust-ampersand-face fontified t) 8288 8289 (face (rainbow-delimiters-depth-5-face) fontified t) 8289 8306 (fontified t) 8306 8310 (face font-lock-constant-face fontified t) 8310 8312 (fontified t) 8312 8332 (face font-lock-type-face fontified t) 8332 8333 (fontified t) 8333 8334 (face (rainbow-delimiters-depth-6-face) fontified t) 8334 8355 (fontified t) 8355 8362 (face font-lock-variable-name-face fontified t) 8362 8387 (fontified t) 8387 8397 (face font-lock-variable-name-face fontified t) 8397 8399 (fontified t) 8399 8403 (face font-lock-constant-face fontified t) 8403 8405 (fontified t) 8405 8417 (face font-lock-type-face fontified t) 8417 8419 (fontified t) 8419 8425 (face font-lock-type-face fontified t) 8425 8428 (fontified t) 8428 8432 (face font-lock-constant-face fontified t) 8432 8434 (fontified t) 8434 8446 (face font-lock-type-face fontified t) 8446 8448 (fontified t) 8448 8456 (face font-lock-type-face fontified t) 8456 8478 (fontified t) 8478 8480 (face font-lock-variable-name-face fontified t) 8480 8482 (fontified t) 8482 8486 (face font-lock-constant-face fontified t) 8486 8488 (fontified t) 8488 8499 (face font-lock-type-face fontified t) 8499 8501 (fontified t) 8501 8507 (face font-lock-type-face fontified t) 8507 8508 (fontified t) 8508 8509 (face (rainbow-delimiters-depth-7-face) fontified t) 8509 8534 (fontified t) 8534 8536 (face font-lock-variable-name-face fontified t) 8536 8538 (fontified t) 8538 8542 (face font-lock-constant-face fontified t) 8542 8544 (fontified t) 8544 8561 (face font-lock-type-face fontified t) 8561 8563 (fontified t) 8563 8570 (face font-lock-type-face fontified t) 8570 8596 (fontified t) 8596 8614 (face font-lock-variable-name-face fontified t) 8614 8616 (fontified t) 8616 8621 (face font-lock-keyword-face fontified t) 8621 8647 (fontified t) 8647 8663 (face font-lock-variable-name-face fontified t) 8663 8665 (fontified t) 8665 8669 (face font-lock-type-face fontified t) 8669 8691 (fontified t) 8691 8692 (face (rainbow-delimiters-depth-7-face) fontified t) 8692 8714 (fontified t) 8714 8719 (face font-lock-variable-name-face fontified t) 8719 8721 (fontified t) 8721 8725 (face font-lock-type-face fontified t) 8725 8743 (fontified t) 8743 8744 (face (rainbow-delimiters-depth-6-face) fontified t) 8744 8757 (fontified t) 8757 8758 (face (rainbow-delimiters-depth-5-face) fontified t) 8758 8772 (fontified t) 8772 8777 (face font-lock-variable-name-face fontified t) 8777 8779 (fontified t) 8779 8783 (face font-lock-type-face fontified t) 8783 8784 (face (rainbow-delimiters-depth-5-face) fontified t) 8784 8810 (face font-lock-string-face fontified t) 8810 8811 (face (rainbow-delimiters-depth-5-face) fontified t) 8811 8821 (fontified t) 8821 8822 (face (rainbow-delimiters-depth-4-face) fontified t) 8822 8823 (face (rainbow-delimiters-depth-3-face) fontified t) 8823 8834 (fontified t) 8834 8837 (face font-lock-keyword-face fontified t) 8837 8838 (fontified t) 8838 8855 (face font-lock-variable-name-face fontified t) 8855 8882 (fontified t) 8882 8883 (face (rainbow-delimiters-depth-3-face) fontified t) 8883 8884 (face rust-ampersand-face fontified t) 8884 8888 (face font-lock-constant-face fontified t) 8888 8890 (fontified t) 8890 8909 (face font-lock-type-face fontified t) 8909 8910 (fontified t) 8910 8911 (face (rainbow-delimiters-depth-4-face) fontified t) 8911 8924 (fontified t) 8924 8930 (face font-lock-variable-name-face fontified t) 8930 8932 (fontified t) 8932 8933 (face rust-ampersand-face fontified t) 8933 8940 (fontified t) 8940 8959 (fontified t) 8959 8971 (fontified t) 8971 8978 (face font-lock-variable-name-face fontified t) 8978 8980 (fontified t) 8980 8981 (face rust-ampersand-face fontified t) 8981 8982 (face (rainbow-delimiters-depth-5-face) fontified t) 8982 8999 (fontified t) 8999 9003 (face font-lock-constant-face fontified t) 9003 9005 (fontified t) 9005 9019 (face font-lock-type-face fontified t) 9019 9020 (fontified t) 9020 9021 (face (rainbow-delimiters-depth-6-face) fontified t) 9021 9042 (fontified t) 9042 9049 (face font-lock-variable-name-face fontified t) 9049 9062 (fontified t) 9062 9074 (fontified t) 9074 9082 (fontified t face font-lock-variable-name-face) 9082 9115 (fontified t) 9115 9116 (fontified t face (rainbow-delimiters-depth-7-face)) 9116 9117 (fontified t face (rainbow-delimiters-depth-7-face)) 9117 9119 (fontified t) 9119 9135 (fontified t) 9135 9136 (face (rainbow-delimiters-depth-6-face) fontified t) 9136 9149 (fontified t) 9149 9150 (face (rainbow-delimiters-depth-5-face) fontified t) 9150 9164 (fontified t) 9164 9166 (face font-lock-variable-name-face fontified t) 9166 9169 (face font-lock-variable-name-face fontified t) 9169 9171 (fontified t) 9171 9175 (face font-lock-type-face fontified t) 9175 9176 (face (rainbow-delimiters-depth-5-face) fontified t) 9176 9195 (face font-lock-string-face fontified t) 9195 9196 (face (rainbow-delimiters-depth-5-face) fontified t) 9196 9198 (fontified t) 9198 9206 (fontified t) 9206 9207 (face (rainbow-delimiters-depth-4-face) fontified t) 9207 9208 (face (rainbow-delimiters-depth-3-face) fontified t) 9208 9219 (fontified t) 9219 9222 (face font-lock-keyword-face fontified t) 9222 9223 (fontified t) 9223 9236 (face font-lock-variable-name-face fontified t) 9236 9239 (fontified t) 9239 9244 (face font-lock-constant-face fontified t) 9244 9246 (fontified t) 9246 9258 (face font-lock-type-face fontified t) 9258 9259 (fontified t) 9259 9260 (face (rainbow-delimiters-depth-3-face) fontified t) 9260 9273 (fontified t) 9273 9281 (face font-lock-variable-name-face fontified t) 9281 9283 (fontified t) 9283 9284 (face (rainbow-delimiters-depth-4-face) fontified t) 9284 9302 (fontified t) 9302 9303 (face (rainbow-delimiters-depth-4-face) fontified t) 9303 9317 (fontified t) 9317 9322 (face font-lock-variable-name-face fontified t) 9322 9324 (fontified t) 9324 9325 (face (rainbow-delimiters-depth-4-face) fontified t) 9325 9343 (fontified t) 9343 9344 (face (rainbow-delimiters-depth-4-face) fontified t) 9344 9354 (fontified t) 9354 9355 (face (rainbow-delimiters-depth-3-face) fontified t) 9355 9365 (fontified t) 9365 9368 (face font-lock-keyword-face fontified t) 9368 9369 (fontified t) 9369 9370 (face (rainbow-delimiters-depth-3-face) fontified t) 9370 9425 (fontified t) 9425 9426 (face (rainbow-delimiters-depth-3-face) fontified t) 9426 9441 (fontified t) 9441 9446 (face font-lock-constant-face fontified t) 9446 9482 (fontified t) 9482 9483 (face (rainbow-delimiters-depth-3-face) fontified t) 9483 9484 (face rust-ampersand-face fontified t) 9484 9492 (fontified t) 9492 9493 (face rust-ampersand-face fontified t) 9493 9506 (fontified t) 9506 9507 (face (rainbow-delimiters-depth-3-face) fontified t) 9507 9519 (fontified t) 9519 9521 (face font-lock-comment-delimiter-face fontified t) 9521 9551 (face font-lock-comment-face fontified t) 9551 9559 (fontified t) 9559 9562 (face font-lock-keyword-face fontified t) 9562 9563 (fontified t) 9563 9585 (face font-lock-variable-name-face fontified t) 9585 9629 (fontified t) 9629 9630 (face (rainbow-delimiters-depth-3-face) fontified t) 9630 9631 (face rust-ampersand-face fontified t) 9631 9635 (face font-lock-constant-face fontified t) 9635 9637 (fontified t) 9637 9661 (face font-lock-type-face fontified t) 9661 9662 (fontified t) 9662 9663 (face (rainbow-delimiters-depth-4-face) fontified t) 9663 9680 (fontified t) 9680 9685 (face font-lock-variable-name-face fontified t) 9685 9687 (fontified t) 9687 9691 (face font-lock-type-face fontified t) 9691 9692 (face (rainbow-delimiters-depth-5-face) fontified t) 9692 9716 (face font-lock-string-face fontified t) 9716 9717 (face (rainbow-delimiters-depth-5-face) fontified t) 9717 9735 (fontified t) 9735 9753 (face font-lock-variable-name-face fontified t) 9753 9755 (fontified t) 9755 9756 (face rust-ampersand-face fontified t) 9756 9757 (face (rainbow-delimiters-depth-5-face) fontified t) 9757 9778 (fontified t) 9778 9779 (face rust-ampersand-face fontified t) 9779 9826 (fontified t) 9826 9827 (face rust-ampersand-face fontified t) 9827 9873 (fontified t) 9873 9874 (face rust-ampersand-face fontified t) 9874 9915 (fontified t) 9915 9916 (face (rainbow-delimiters-depth-5-face) fontified t) 9916 9934 (fontified t) 9934 9954 (face font-lock-variable-name-face fontified t) 9954 9956 (fontified t) 9956 9957 (face rust-ampersand-face fontified t) 9957 9958 (face (rainbow-delimiters-depth-5-face) fontified t) 9958 9959 (face (rainbow-delimiters-depth-5-face) fontified t) 9959 9973 (fontified t) 9973 9974 (face (rainbow-delimiters-depth-4-face) fontified t) 9974 9975 (face (rainbow-delimiters-depth-3-face) fontified t) 9975 9994 (fontified t) 9994 9997 (face font-lock-keyword-face fontified t) 9997 9998 (fontified t) 9998 10013 (face font-lock-variable-name-face fontified t) 10013 10016 (fontified t) 10016 10017 (face (rainbow-delimiters-depth-3-face) fontified t) 10017 10030 (fontified t) 10030 10033 (face font-lock-keyword-face fontified t) 10033 10034 (fontified t) 10034 10040 (face font-lock-variable-name-face fontified t) 10040 10043 (fontified t) 10043 10047 (face font-lock-constant-face fontified t) 10047 10049 (fontified t) 10049 10062 (face font-lock-preprocessor-face fontified t) 10062 10063 (face (rainbow-delimiters-depth-4-face) fontified t) 10063 10076 (face font-lock-string-face fontified t) 10076 10077 (face (rainbow-delimiters-depth-4-face) fontified t) 10077 10114 (fontified t) 10114 10115 (face (rainbow-delimiters-depth-4-face) fontified t) 10115 10132 (fontified t) 10132 10133 (face rust-ampersand-face fontified t) 10133 10157 (fontified t) 10157 10158 (face rust-ampersand-face fontified t) 10158 10229 (fontified t) 10229 10233 (face font-lock-type-face fontified t) 10233 10234 (face (rainbow-delimiters-depth-5-face) fontified t) 10234 10241 (face font-lock-constant-face fontified t) 10241 10243 (fontified t) 10243 10250 (face font-lock-type-face fontified t) 10250 10252 (fontified t) 10252 10264 (face font-lock-type-face fontified t) 10264 10265 (face (rainbow-delimiters-depth-5-face) fontified t) 10265 10283 (fontified t) 10283 10284 (face rust-ampersand-face fontified t) 10284 10285 (face (rainbow-delimiters-depth-5-face) fontified t) 10285 10290 (face font-lock-constant-face fontified t) 10290 10292 (fontified t) 10292 10303 (face font-lock-type-face fontified t) 10303 10309 (fontified t) 10309 10310 (face (rainbow-delimiters-depth-6-face) fontified t) 10310 10311 (face (rainbow-delimiters-depth-6-face) fontified t) 10311 10313 (fontified t) 10313 10324 (face font-lock-type-face fontified t) 10324 10330 (fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10332 (face (rainbow-delimiters-depth-6-face) fontified t) 10332 10333 (face (rainbow-delimiters-depth-5-face) fontified t) 10333 10371 (fontified t) 10371 10372 (face (rainbow-delimiters-depth-4-face) fontified t) 10372 10381 (fontified t) 10381 10382 (face (rainbow-delimiters-depth-3-face) fontified t) 10382 10405 (fontified t) 10405 10408 (face font-lock-keyword-face fontified t) 10408 10409 (fontified t) 10409 10418 (face font-lock-variable-name-face fontified t) 10418 10421 (fontified t) 10421 10425 (face font-lock-preprocessor-face fontified t) 10425 10426 (face (rainbow-delimiters-depth-3-face) fontified t) 10426 10439 (fontified t) 10439 10447 (face font-lock-type-face fontified t) 10447 10448 (fontified t) 10448 10449 (face (rainbow-delimiters-depth-4-face) fontified t) 10449 10459 (fontified t) 10459 10466 (fontified t) 10466 10474 (face font-lock-variable-name-face fontified t) 10474 10476 (fontified t) 10476 10482 (face font-lock-constant-face fontified t) 10482 10484 (fontified t) 10484 10491 (face font-lock-type-face fontified t) 10491 10497 (fontified t) 10497 10498 (face (rainbow-delimiters-depth-5-face) fontified t) 10498 10499 (face (rainbow-delimiters-depth-5-face) fontified t) 10499 10501 (fontified t) 10501 10517 (fontified t) 10517 10525 (face font-lock-variable-name-face fontified t) 10525 10527 (fontified t) 10527 10533 (face font-lock-constant-face fontified t) 10533 10535 (fontified t) 10535 10545 (face font-lock-type-face fontified t) 10545 10559 (fontified t) 10559 10560 (face (rainbow-delimiters-depth-5-face) fontified t) 10560 10566 (face font-lock-constant-face fontified t) 10566 10568 (fontified t) 10568 10571 (face font-lock-type-face fontified t) 10571 10572 (face (rainbow-delimiters-depth-6-face) fontified t) 10572 10575 (fontified t) 10575 10576 (face (rainbow-delimiters-depth-6-face) fontified t) 10576 10577 (face (rainbow-delimiters-depth-5-face) fontified t) 10577 10595 (fontified t) 10595 10602 (face font-lock-variable-name-face fontified t) 10602 10604 (fontified t) 10604 10610 (face font-lock-constant-face fontified t) 10610 10612 (fontified t) 10612 10619 (face font-lock-type-face fontified t) 10619 10624 (fontified t) 10624 10625 (fontified t face (rainbow-delimiters-depth-5-face)) 10625 10638 (fontified t) 10638 10639 (fontified t face (rainbow-delimiters-depth-5-face)) 10639 10641 (fontified t) 10653 10654 (face (rainbow-delimiters-depth-4-face)) 10664 10665 (face (rainbow-delimiters-depth-3-face)) 10675 10678 (face font-lock-keyword-face) 10679 10692 (face font-lock-variable-name-face) 10709 10710 (face (rainbow-delimiters-depth-3-face)) 10710 10711 (face (rainbow-delimiters-depth-3-face)) 10715 10716 (face (rainbow-delimiters-depth-3-face)) 10716 10724 (face font-lock-type-face) 10732 10733 (face (rainbow-delimiters-depth-3-face)) 10743 10744 (face (rainbow-delimiters-depth-3-face)) 10744 10747 (face font-lock-type-face) 10747 10748 (face (rainbow-delimiters-depth-4-face)) 10749 10750 (face (rainbow-delimiters-depth-4-face)) 10750 10751 (face (rainbow-delimiters-depth-3-face)) 10751 10752 (face (rainbow-delimiters-depth-3-face)) 10752 10753 (face (rainbow-delimiters-depth-3-face)) 12307 12308 (syntax-table (1)) 12441 12442 (syntax-table (1)) 12464 12465 (syntax-table (1))) . 137) (undo-tree-id2568 . -7500) (undo-tree-id2569 . -7500) (undo-tree-id2570 . -6763) (undo-tree-id2571 . 12166) 7637 (t 26015 50480 226860 249000)) nil (26015 51038 368800 0) 0 nil])
([nil nil ((#("    event_loop.set_control_flow(ControlFlow::Poll);
" 0 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 43 (face font-lock-type-face fontified t) 43 45 (fontified t) 45 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) fontified t) 50 52 (fontified t)) . 17276) (undo-tree-id2559 . -52) (undo-tree-id2560 . -52) (undo-tree-id2561 . -35) (undo-tree-id2562 . -24) (undo-tree-id2563 . -19) (undo-tree-id2564 . -42) (undo-tree-id2565 . -52) (undo-tree-id2566 . -28) (undo-tree-id2567 . -27) 17328 (t 26015 50943 946312 589000)) nil (26015 51038 368793 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17440 . 17441) (nil fontified nil 17439 . 17441) (nil fontified nil 17438 . 17439) (nil fontified nil 17434 . 17438) (nil fontified nil 17432 . 17434) (nil fontified nil 17421 . 17432) (nil fontified nil 17420 . 17421) (nil fontified nil 17389 . 17420) (17389 . 17441)) nil (26015 51038 368770 0) 0 nil])
([nil nil ((137 . 19803) (#("info;
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent, KeyEvent, ElementState, MouseButton, DeviceEvent},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder, keyboard::{PhysicalKey, KeyCode},
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod depth_pass;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}


struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,

    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
        match event {
            WindowEvent::KeyboardInput {
                event:
                KeyEvent {
                    physical_key: PhysicalKey::Code(key),
                    state,
                    ..
                },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self, color: wgpu::Color) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(color),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new().unwrap();
    let window = WindowBuilder::new().build(&event_loop).unwrap();

    // ControlFlow::Poll continuously runs the event loop, even if the OS hasn't
    // dispatched any events. This is ideal for games and similar applications.

    let mut state = State::new(window).await;
    let mut last_render_time = instant::Instant::now();  // NEW!

    event_loop.set_control_flow(ControlFlow::Poll);

    // run()
    event_loop.run(move |event, elwh| {
        match event {
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            },
            Event::WindowEvent {
                ref event,
                ..
            } => {
                if !state.input(event) { // UPDATED!
                    match event {
                        WindowEvent::CloseRequested
                            | WindowEvent::KeyboardInput {
                                event:
                                KeyEvent {
                                    state: ElementState::Pressed,
                                    physical_key: PhysicalKey::Code(KeyCode::Escape),
                                    ..
                                },
                                ..
                            } => elwh.exit(),
                        WindowEvent::Resized(physical_size) => {
                            state.resize(*physical_size);
                            state.window.request_redraw();
                        },
                        _ => {}
                    }
                } else {
                    state.window.request_redraw();
                }

                if *event == WindowEvent::RedrawRequested {
                    let now = instant::Instant::now();
                    let dt = now - last_render_time;
                    last_render_time = now;
                    state.update(dt);
                    match state.render(wgpu::Color::BLACK) {
                        Ok(_) => {}
                        // Reconfigure the surface if lost
                        Err(wgpu::SurfaceError::Lost) => state.resize(state.size),
                        // The system is out of memory, we should probably quit
                        Err(wgpu::SurfaceError::OutOfMemory) => elwh.exit(),
                        // All other errors (Outdated, Timeout) should be resolved by the next frame
                        Err(e) => tracing::error!(\"{:?}\", e),
                    }
                }
            },

            _ => {}
        }
    }).unwrap(" 0 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 61 (face font-lock-constant-face fontified t) 61 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 74 (face font-lock-constant-face fontified t) 74 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 82 (face font-lock-type-face fontified t) 82 84 (fontified t) 84 95 (face font-lock-type-face fontified t) 95 97 (fontified t) 97 105 (face font-lock-type-face fontified t) 105 107 (fontified t) 107 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 132 (face font-lock-type-face fontified t) 132 134 (fontified t) 134 145 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) fontified t) 146 152 (fontified t) 152 162 (face font-lock-constant-face fontified t) 162 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-2-face) fontified t) 165 176 (face font-lock-type-face fontified t) 176 178 (fontified t) 178 187 (face font-lock-type-face fontified t) 187 188 (face (rainbow-delimiters-depth-2-face) fontified t) 188 194 (fontified t) 194 200 (face font-lock-constant-face fontified t) 200 202 (fontified t) 202 215 (face font-lock-type-face fontified t) 215 217 (fontified t) 217 225 (face font-lock-constant-face fontified t) 225 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-2-face) fontified t) 228 239 (face font-lock-type-face fontified t) 239 241 (fontified t) 241 248 (face font-lock-type-face fontified t) 248 249 (face (rainbow-delimiters-depth-2-face) fontified t) 249 251 (fontified t) 251 252 (face (rainbow-delimiters-depth-1-face) fontified t) 252 254 (fontified t) 254 257 (face font-lock-keyword-face fontified t) 257 258 (fontified t) 258 262 (face font-lock-constant-face fontified t) 262 264 (fontified t) 264 268 (face font-lock-constant-face fontified t) 268 270 (fontified t) 270 279 (face font-lock-type-face fontified t) 279 282 (fontified t) 282 285 (face font-lock-keyword-face fontified t) 285 286 (fontified t) 286 293 (face font-lock-constant-face fontified t) 293 295 (fontified t) 295 298 (face font-lock-keyword-face fontified t) 298 299 (fontified t) 299 305 (face font-lock-constant-face fontified t) 305 307 (fontified t) 307 310 (face font-lock-keyword-face fontified t) 310 311 (fontified t) 311 320 (face font-lock-constant-face fontified t) 320 322 (fontified t) 322 325 (face font-lock-keyword-face fontified t) 325 326 (fontified t) 326 334 (face font-lock-constant-face fontified t) 334 336 (fontified t) 336 339 (face font-lock-keyword-face fontified t) 339 340 (fontified t) 340 350 (face font-lock-constant-face fontified t) 350 352 (fontified t) 352 355 (face font-lock-keyword-face fontified t) 355 356 (fontified t) 356 361 (face font-lock-constant-face fontified t) 361 363 (fontified t) 363 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 372 (face font-lock-constant-face fontified t) 372 374 (fontified t) 374 377 (face font-lock-comment-delimiter-face fontified t) 377 384 (face font-lock-comment-face fontified t) 384 387 (face font-lock-keyword-face fontified t) 387 388 (fontified t) 388 393 (face font-lock-constant-face fontified t) 393 395 (fontified t) 395 401 (face font-lock-constant-face fontified t) 401 403 (fontified t) 403 409 (face font-lock-type-face fontified t) 409 412 (fontified t) 412 415 (face font-lock-keyword-face fontified t) 415 416 (fontified t) 416 422 (face font-lock-constant-face fontified t) 422 427 (fontified t) 427 430 (face font-lock-keyword-face fontified t) 430 431 (fontified t) 431 439 (face font-lock-constant-face fontified t) 439 444 (fontified t) 444 447 (face font-lock-keyword-face fontified t) 447 448 (fontified t) 448 453 (face font-lock-constant-face fontified t) 453 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-1-face) fontified t) 456 465 (face font-lock-type-face fontified t) 465 467 (fontified t) 467 473 (face font-lock-type-face fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 477 (fontified t) 477 479 (face font-lock-keyword-face fontified t) 479 480 (fontified t) 480 502 (face font-lock-function-name-face fontified t) 502 503 (face (rainbow-delimiters-depth-1-face) fontified t) 503 508 (fontified t) 508 514 (face font-lock-variable-name-face fontified t) 514 516 (fontified t) 516 517 (face rust-ampersand-face fontified t) 517 521 (face font-lock-constant-face fontified t) 521 523 (fontified t) 523 529 (face font-lock-type-face fontified t) 529 535 (fontified t) 535 541 (face font-lock-variable-name-face fontified t) 541 543 (fontified t) 543 544 (face rust-ampersand-face fontified t) 544 548 (face font-lock-constant-face fontified t) 548 550 (fontified t) 550 564 (face font-lock-type-face fontified t) 564 570 (fontified t) 570 582 (face font-lock-variable-name-face fontified t) 582 584 (fontified t) 584 588 (face font-lock-constant-face fontified t) 588 590 (fontified t) 590 603 (face font-lock-type-face fontified t) 603 609 (fontified t) 609 621 (face font-lock-variable-name-face fontified t) 621 623 (fontified t) 623 629 (face font-lock-type-face fontified t) 629 630 (face (rainbow-delimiters-depth-2-face) fontified t) 630 634 (face font-lock-constant-face fontified t) 634 636 (fontified t) 636 649 (face font-lock-type-face fontified t) 649 650 (face (rainbow-delimiters-depth-2-face) fontified t) 650 656 (fontified t) 656 670 (face font-lock-variable-name-face fontified t) 670 672 (fontified t) 672 673 (face rust-ampersand-face fontified t) 673 674 (face (rainbow-delimiters-depth-2-face) fontified t) 674 678 (face font-lock-constant-face fontified t) 678 680 (fontified t) 680 698 (face font-lock-type-face fontified t) 698 699 (face (rainbow-delimiters-depth-2-face) fontified t) 699 705 (fontified t) 705 711 (face font-lock-variable-name-face fontified t) 711 713 (fontified t) 713 717 (face font-lock-constant-face fontified t) 717 719 (fontified t) 719 741 (face font-lock-type-face fontified t) 741 743 (fontified t) 743 744 (face (rainbow-delimiters-depth-1-face) fontified t) 744 746 (fontified t) 746 747 (syntax-table (1) fontified t) 747 748 (fontified t) 748 752 (face font-lock-constant-face fontified t) 752 754 (fontified t) 754 768 (face font-lock-type-face fontified t) 768 769 (fontified t) 769 770 (face (rainbow-delimiters-depth-1-face) fontified t) 770 775 (fontified t) 775 778 (face font-lock-keyword-face fontified t) 778 779 (fontified t) 779 785 (face font-lock-variable-name-face fontified t) 785 815 (fontified t) 815 816 (face (rainbow-delimiters-depth-2-face) fontified t) 816 822 (fontified t) 822 823 (face (rainbow-delimiters-depth-2-face) fontified t) 823 859 (fontified t) 859 860 (face (rainbow-delimiters-depth-2-face) fontified t) 860 861 (face rust-ampersand-face fontified t) 861 865 (face font-lock-constant-face fontified t) 865 867 (fontified t) 867 891 (face font-lock-type-face fontified t) 891 892 (fontified t) 892 893 (face (rainbow-delimiters-depth-3-face) fontified t) 893 902 (fontified t) 902 907 (face font-lock-variable-name-face fontified t) 907 909 (fontified t) 909 913 (face font-lock-type-face fontified t) 913 914 (face (rainbow-delimiters-depth-4-face) fontified t) 914 931 (face font-lock-string-face fontified t) 931 932 (face (rainbow-delimiters-depth-4-face) fontified t) 932 942 (fontified t) 942 948 (face font-lock-variable-name-face fontified t) 948 950 (fontified t) 950 954 (face font-lock-type-face fontified t) 954 955 (face (rainbow-delimiters-depth-4-face) fontified t) 955 961 (fontified t) 961 962 (face (rainbow-delimiters-depth-4-face) fontified t) 962 972 (fontified t) 972 978 (face font-lock-variable-name-face fontified t) 978 980 (fontified t) 980 984 (face font-lock-constant-face fontified t) 984 986 (fontified t) 986 997 (face font-lock-type-face fontified t) 997 998 (fontified t) 998 999 (face (rainbow-delimiters-depth-4-face) fontified t) 999 1012 (fontified t) 1012 1018 (face font-lock-variable-name-face fontified t) 1018 1020 (fontified t) 1020 1021 (face rust-ampersand-face fontified t) 1021 1041 (fontified t) 1041 1052 (face font-lock-variable-name-face fontified t) 1052 1054 (fontified t) 1054 1063 (face font-lock-string-face fontified t) 1063 1077 (fontified t) 1077 1084 (face font-lock-variable-name-face fontified t) 1084 1110 (fontified t) 1110 1111 (face (rainbow-delimiters-depth-4-face) fontified t) 1111 1121 (fontified t) 1121 1129 (face font-lock-variable-name-face fontified t) 1129 1131 (fontified t) 1131 1135 (face font-lock-type-face fontified t) 1135 1136 (face (rainbow-delimiters-depth-4-face) fontified t) 1136 1140 (face font-lock-constant-face fontified t) 1140 1142 (fontified t) 1142 1155 (face font-lock-type-face fontified t) 1155 1156 (fontified t) 1156 1157 (face (rainbow-delimiters-depth-5-face) fontified t) 1157 1170 (fontified t) 1170 1176 (face font-lock-variable-name-face fontified t) 1176 1178 (fontified t) 1178 1179 (face rust-ampersand-face fontified t) 1179 1199 (fontified t) 1199 1210 (face font-lock-variable-name-face fontified t) 1210 1212 (fontified t) 1212 1221 (face font-lock-string-face fontified t) 1221 1235 (fontified t) 1235 1242 (face font-lock-variable-name-face fontified t) 1242 1244 (fontified t) 1244 1245 (face rust-ampersand-face fontified t) 1245 1246 (face (rainbow-delimiters-depth-6-face) fontified t) 1246 1250 (face font-lock-type-face fontified t) 1250 1251 (face (rainbow-delimiters-depth-7-face) fontified t) 1251 1255 (face font-lock-constant-face fontified t) 1255 1257 (fontified t) 1257 1273 (face font-lock-type-face fontified t) 1273 1274 (fontified t) 1274 1275 (face (rainbow-delimiters-depth-8-face) fontified t) 1275 1292 (fontified t) 1292 1298 (face font-lock-variable-name-face fontified t) 1298 1330 (fontified t) 1330 1335 (face font-lock-variable-name-face fontified t) 1335 1337 (fontified t) 1337 1341 (face font-lock-type-face fontified t) 1341 1342 (face (rainbow-delimiters-depth-9-face) fontified t) 1342 1346 (face font-lock-constant-face fontified t) 1346 1348 (fontified t) 1348 1358 (face font-lock-type-face fontified t) 1358 1359 (fontified t) 1359 1360 (face (rainbow-delimiters-depth-1-face) fontified t) 1360 1381 (fontified t) 1381 1386 (face font-lock-variable-name-face fontified t) 1386 1388 (fontified t) 1388 1392 (face font-lock-constant-face fontified t) 1392 1394 (fontified t) 1394 1408 (face font-lock-type-face fontified t) 1408 1410 (fontified t) 1410 1417 (face font-lock-type-face fontified t) 1417 1439 (fontified t) 1439 1444 (face font-lock-variable-name-face fontified t) 1444 1446 (fontified t) 1446 1450 (face font-lock-constant-face fontified t) 1450 1452 (fontified t) 1452 1466 (face font-lock-type-face fontified t) 1466 1468 (fontified t) 1468 1475 (face font-lock-type-face fontified t) 1475 1493 (fontified t) 1493 1494 (face (rainbow-delimiters-depth-1-face) fontified t) 1494 1495 (face (rainbow-delimiters-depth-9-face) fontified t) 1495 1500 (fontified t) 1500 1513 (fontified t) 1513 1523 (face font-lock-variable-name-face fontified t) 1523 1525 (fontified t) 1525 1529 (face font-lock-constant-face fontified t) 1529 1531 (fontified t) 1531 1542 (face font-lock-type-face fontified t) 1542 1544 (fontified t) 1544 1547 (face font-lock-type-face fontified t) 1547 1549 (fontified t) 1549 1561 (fontified t) 1561 1562 (face (rainbow-delimiters-depth-8-face) fontified t) 1562 1563 (face (rainbow-delimiters-depth-7-face) fontified t) 1563 1564 (face (rainbow-delimiters-depth-6-face) fontified t) 1564 1574 (fontified t) 1574 1575 (face (rainbow-delimiters-depth-5-face) fontified t) 1575 1576 (face (rainbow-delimiters-depth-4-face) fontified t) 1576 1586 (fontified t) 1586 1595 (face font-lock-variable-name-face fontified t) 1595 1597 (fontified t) 1597 1601 (face font-lock-constant-face fontified t) 1601 1603 (fontified t) 1603 1617 (face font-lock-type-face fontified t) 1617 1618 (fontified t) 1618 1619 (face (rainbow-delimiters-depth-4-face) fontified t) 1619 1632 (fontified t) 1632 1640 (face font-lock-variable-name-face fontified t) 1640 1642 (fontified t) 1642 1646 (face font-lock-constant-face fontified t) 1646 1648 (fontified t) 1648 1665 (face font-lock-type-face fontified t) 1665 1667 (fontified t) 1667 1679 (face font-lock-type-face fontified t) 1679 1693 (fontified t) 1693 1711 (face font-lock-variable-name-face fontified t) 1711 1713 (fontified t) 1713 1717 (face font-lock-type-face fontified t) 1717 1731 (fontified t) 1731 1741 (face font-lock-variable-name-face fontified t) 1741 1743 (fontified t) 1743 1747 (face font-lock-constant-face fontified t) 1747 1749 (fontified t) 1749 1758 (face font-lock-type-face fontified t) 1758 1760 (fontified t) 1760 1763 (face font-lock-type-face fontified t) 1763 1777 (fontified t) 1777 1786 (face font-lock-variable-name-face fontified t) 1786 1788 (fontified t) 1788 1792 (face font-lock-type-face fontified t) 1792 1793 (face (rainbow-delimiters-depth-5-face) fontified t) 1793 1797 (face font-lock-constant-face fontified t) 1797 1799 (fontified t) 1799 1803 (face font-lock-type-face fontified t) 1803 1805 (fontified t) 1805 1809 (face font-lock-type-face fontified t) 1809 1810 (face (rainbow-delimiters-depth-5-face) fontified t) 1810 1824 (fontified t) 1824 1827 (face font-lock-comment-delimiter-face fontified t) 1827 1909 (face font-lock-comment-face fontified t) 1909 1921 (fontified t) 1921 1933 (face font-lock-variable-name-face fontified t) 1933 1935 (fontified t) 1935 1939 (face font-lock-constant-face fontified t) 1939 1941 (fontified t) 1941 1952 (face font-lock-type-face fontified t) 1952 1954 (fontified t) 1954 1958 (face font-lock-type-face fontified t) 1958 1972 (fontified t) 1972 1975 (face font-lock-comment-delimiter-face fontified t) 1975 2013 (face font-lock-comment-face fontified t) 2013 2025 (fontified t) 2025 2040 (face font-lock-variable-name-face fontified t) 2040 2042 (fontified t) 2042 2047 (face font-lock-keyword-face fontified t) 2047 2061 (fontified t) 2061 2064 (face font-lock-comment-delimiter-face fontified t) 2064 2110 (face font-lock-comment-face fontified t) 2110 2122 (fontified t) 2122 2134 (face font-lock-variable-name-face fontified t) 2134 2136 (fontified t) 2136 2141 (face font-lock-keyword-face fontified t) 2141 2151 (fontified t) 2151 2152 (face (rainbow-delimiters-depth-4-face) fontified t) 2152 2162 (fontified t) 2162 2175 (face font-lock-variable-name-face fontified t) 2175 2193 (fontified t) 2193 2194 (face (rainbow-delimiters-depth-4-face) fontified t) 2194 2203 (fontified t) 2203 2207 (face font-lock-constant-face fontified t) 2207 2209 (fontified t) 2209 2226 (face font-lock-type-face fontified t) 2226 2227 (fontified t) 2227 2228 (face (rainbow-delimiters-depth-5-face) fontified t) 2228 2261 (fontified t) 2261 2280 (face font-lock-variable-name-face fontified t) 2280 2282 (fontified t) 2282 2286 (face font-lock-keyword-face fontified t) 2286 2300 (fontified t) 2300 2313 (face font-lock-variable-name-face fontified t) 2313 2315 (fontified t) 2315 2319 (face font-lock-constant-face fontified t) 2319 2321 (fontified t) 2321 2336 (face font-lock-type-face fontified t) 2336 2338 (fontified t) 2338 2342 (face font-lock-type-face fontified t) 2342 2356 (fontified t) 2356 2363 (face font-lock-variable-name-face fontified t) 2363 2365 (fontified t) 2365 2369 (face font-lock-constant-face fontified t) 2369 2371 (fontified t) 2371 2383 (face font-lock-type-face fontified t) 2383 2392 (fontified t) 2392 2393 (face (rainbow-delimiters-depth-6-face) fontified t) 2393 2394 (face (rainbow-delimiters-depth-6-face) fontified t) 2394 2408 (fontified t) 2408 2412 (face font-lock-variable-name-face fontified t) 2412 2414 (fontified t) 2414 2418 (face font-lock-constant-face fontified t) 2418 2420 (fontified t) 2420 2434 (face font-lock-type-face fontified t) 2434 2443 (fontified t) 2443 2444 (face (rainbow-delimiters-depth-6-face) fontified t) 2444 2445 (face (rainbow-delimiters-depth-6-face) fontified t) 2445 2455 (fontified t) 2455 2456 (face (rainbow-delimiters-depth-5-face) fontified t) 2456 2457 (face (rainbow-delimiters-depth-4-face) fontified t) 2457 2467 (fontified t) 2467 2478 (face font-lock-variable-name-face fontified t) 2478 2480 (fontified t) 2480 2484 (face font-lock-constant-face fontified t) 2484 2486 (fontified t) 2486 2502 (face font-lock-type-face fontified t) 2502 2503 (fontified t) 2503 2504 (face (rainbow-delimiters-depth-4-face) fontified t) 2504 2517 (fontified t) 2517 2522 (face font-lock-variable-name-face fontified t) 2522 2539 (fontified t) 2539 2543 (face font-lock-variable-name-face fontified t) 2543 2561 (fontified t) 2561 2586 (face font-lock-variable-name-face fontified t) 2586 2588 (fontified t) 2588 2593 (face font-lock-keyword-face fontified t) 2593 2603 (fontified t) 2603 2604 (face (rainbow-delimiters-depth-4-face) fontified t) 2604 2614 (fontified t) 2614 2623 (face font-lock-variable-name-face fontified t) 2623 2625 (fontified t) 2625 2629 (face font-lock-type-face fontified t) 2629 2635 (fontified t) 2635 2636 (face (rainbow-delimiters-depth-3-face) fontified t) 2636 2637 (face (rainbow-delimiters-depth-2-face) fontified t) 2637 2638 (fontified t) 2638 2639 (face (rainbow-delimiters-depth-1-face) fontified t) 2639 2642 (fontified t) 2642 2648 (face font-lock-keyword-face fontified t) 2648 2649 (fontified t) 2649 2654 (face font-lock-type-face fontified t) 2654 2655 (fontified t) 2655 2656 (face (rainbow-delimiters-depth-1-face) fontified t) 2656 2661 (fontified t) 2661 2668 (face font-lock-variable-name-face fontified t) 2668 2670 (fontified t) 2670 2674 (face font-lock-constant-face fontified t) 2674 2676 (fontified t) 2676 2683 (face font-lock-type-face fontified t) 2683 2689 (fontified t) 2689 2695 (face font-lock-variable-name-face fontified t) 2695 2697 (fontified t) 2697 2701 (face font-lock-constant-face fontified t) 2701 2703 (fontified t) 2703 2709 (face font-lock-type-face fontified t) 2709 2715 (fontified t) 2715 2720 (face font-lock-variable-name-face fontified t) 2720 2722 (fontified t) 2722 2726 (face font-lock-constant-face fontified t) 2726 2728 (fontified t) 2728 2733 (face font-lock-type-face fontified t) 2733 2739 (fontified t) 2739 2745 (face font-lock-variable-name-face fontified t) 2745 2747 (fontified t) 2747 2751 (face font-lock-constant-face fontified t) 2751 2753 (fontified t) 2753 2773 (face font-lock-type-face fontified t) 2773 2779 (fontified t) 2779 2783 (face font-lock-variable-name-face fontified t) 2783 2785 (fontified t) 2785 2790 (face font-lock-constant-face fontified t) 2790 2792 (fontified t) 2792 2795 (face font-lock-constant-face fontified t) 2795 2797 (fontified t) 2797 2809 (face font-lock-type-face fontified t) 2809 2810 (face (rainbow-delimiters-depth-2-face) fontified t) 2810 2813 (face font-lock-type-face fontified t) 2813 2814 (face (rainbow-delimiters-depth-2-face) fontified t) 2814 2820 (fontified t) 2820 2823 (face font-lock-comment-delimiter-face fontified t) 2823 2872 (face font-lock-comment-face fontified t) 2872 2876 (fontified t) 2876 2879 (face font-lock-comment-delimiter-face fontified t) 2879 2928 (face font-lock-comment-face fontified t) 2928 2932 (fontified t) 2932 2935 (face font-lock-comment-delimiter-face fontified t) 2935 2980 (face font-lock-comment-face fontified t) 2980 2984 (fontified t) 2984 2990 (face font-lock-variable-name-face fontified t) 2990 2992 (fontified t) 2992 2998 (face font-lock-type-face fontified t) 2998 3004 (fontified t) 3004 3019 (face font-lock-variable-name-face fontified t) 3019 3021 (fontified t) 3021 3025 (face font-lock-constant-face fontified t) 3025 3027 (fontified t) 3027 3041 (face font-lock-type-face fontified t) 3041 3047 (fontified t) 3047 3049 (face font-lock-variable-name-face fontified t) 3049 3056 (face font-lock-variable-name-face fontified t) 3056 3058 (fontified t) 3058 3063 (face font-lock-constant-face fontified t) 3063 3065 (fontified t) 3065 3070 (face font-lock-type-face fontified t) 3070 3072 (fontified t) 3072 3078 (fontified t) 3078 3103 (face font-lock-variable-name-face fontified t) 3103 3105 (fontified t) 3105 3109 (face font-lock-constant-face fontified t) 3109 3111 (fontified t) 3111 3126 (face font-lock-type-face fontified t) 3126 3132 (fontified t) 3132 3145 (face font-lock-variable-name-face fontified t) 3145 3147 (fontified t) 3147 3154 (face font-lock-type-face fontified t) 3154 3166 (fontified t) 3166 3172 (face font-lock-variable-name-face fontified t) 3172 3174 (fontified t) 3174 3180 (face font-lock-constant-face fontified t) 3180 3182 (fontified t) 3182 3188 (face font-lock-type-face fontified t) 3188 3190 (fontified t) 3190 3193 (face font-lock-comment-delimiter-face fontified t) 3193 3202 (face font-lock-comment-face fontified t) 3202 3206 (fontified t) 3206 3216 (face font-lock-variable-name-face fontified t) 3216 3218 (fontified t) 3218 3224 (face font-lock-constant-face fontified t) 3224 3226 (fontified t) 3226 3236 (face font-lock-type-face fontified t) 3236 3238 (fontified t) 3238 3241 (face font-lock-comment-delimiter-face fontified t) 3241 3246 (face font-lock-comment-face fontified t) 3246 3250 (fontified t) 3250 3267 (face font-lock-variable-name-face fontified t) 3267 3269 (fontified t) 3269 3275 (face font-lock-constant-face fontified t) 3275 3277 (fontified t) 3277 3293 (face font-lock-type-face fontified t) 3293 3295 (fontified t) 3295 3298 (face font-lock-comment-delimiter-face fontified t) 3298 3307 (face font-lock-comment-face fontified t) 3307 3311 (fontified t) 3311 3314 (face font-lock-comment-delimiter-face fontified t) 3314 3318 (face font-lock-comment-face fontified t) 3318 3322 (fontified t) 3322 3325 (face font-lock-comment-delimiter-face fontified t) 3325 3330 (face font-lock-comment-face fontified t) 3330 3334 (fontified t) 3334 3347 (face font-lock-variable-name-face fontified t) 3347 3349 (fontified t) 3349 3353 (face font-lock-type-face fontified t) 3353 3360 (fontified t) 3360 3374 (face font-lock-variable-name-face fontified t) 3374 3376 (fontified t) 3376 3389 (face font-lock-type-face fontified t) 3389 3395 (fontified t) 3395 3408 (face font-lock-variable-name-face fontified t) 3408 3410 (fontified t) 3410 3414 (face font-lock-constant-face fontified t) 3414 3416 (fontified t) 3416 3422 (face font-lock-type-face fontified t) 3422 3428 (fontified t) 3428 3445 (face font-lock-variable-name-face fontified t) 3445 3447 (fontified t) 3447 3451 (face font-lock-constant-face fontified t) 3451 3453 (fontified t) 3453 3462 (face font-lock-type-face fontified t) 3462 3469 (fontified t) 3469 3482 (face font-lock-variable-name-face fontified t) 3482 3484 (fontified t) 3484 3496 (face font-lock-type-face fontified t) 3496 3502 (fontified t) 3502 3514 (face font-lock-variable-name-face fontified t) 3514 3516 (fontified t) 3516 3520 (face font-lock-constant-face fontified t) 3520 3522 (fontified t) 3522 3528 (face font-lock-type-face fontified t) 3528 3534 (fontified t) 3534 3550 (face font-lock-variable-name-face fontified t) 3550 3552 (fontified t) 3552 3556 (face font-lock-constant-face fontified t) 3556 3558 (fontified t) 3558 3567 (face font-lock-type-face fontified t) 3567 3573 (fontified t) 3573 3594 (face font-lock-variable-name-face fontified t) 3594 3596 (fontified t) 3596 3600 (face font-lock-constant-face fontified t) 3600 3602 (fontified t) 3602 3616 (face font-lock-type-face fontified t) 3616 3623 (fontified t) 3623 3632 (face font-lock-variable-name-face fontified t) 3632 3634 (fontified t) 3634 3637 (face font-lock-type-face fontified t) 3637 3638 (face (rainbow-delimiters-depth-2-face) fontified t) 3638 3646 (face font-lock-type-face fontified t) 3646 3647 (face (rainbow-delimiters-depth-2-face) fontified t) 3647 3653 (fontified t) 3653 3668 (face font-lock-variable-name-face fontified t) 3668 3670 (fontified t) 3670 3674 (face font-lock-constant-face fontified t) 3674 3676 (fontified t) 3676 3682 (face font-lock-type-face fontified t) 3682 3691 (fontified t) 3691 3692 (face (rainbow-delimiters-depth-1-face) fontified t) 3692 3694 (fontified t) 3694 3698 (face font-lock-keyword-face fontified t) 3698 3699 (fontified t) 3699 3704 (face font-lock-type-face fontified t) 3704 3705 (fontified t) 3705 3706 (face (rainbow-delimiters-depth-1-face) fontified t) 3706 3711 (fontified t) 3711 3714 (face font-lock-comment-delimiter-face fontified t) 3714 3766 (face font-lock-comment-face fontified t) 3766 3770 (fontified t) 3770 3775 (face font-lock-keyword-face fontified t) 3775 3776 (fontified t) 3776 3778 (face font-lock-keyword-face fontified t) 3778 3779 (fontified t) 3779 3782 (face font-lock-function-name-face fontified t) 3782 3783 (face (rainbow-delimiters-depth-2-face) fontified t) 3783 3789 (face font-lock-variable-name-face fontified t) 3789 3791 (fontified t) 3791 3797 (face font-lock-type-face fontified t) 3797 3798 (face (rainbow-delimiters-depth-2-face) fontified t) 3798 3800 (fontified t) 3800 3801 (syntax-table (1) fontified t) 3801 3802 (fontified t) 3802 3806 (face font-lock-type-face fontified t) 3806 3807 (fontified t) 3807 3808 (face (rainbow-delimiters-depth-2-face) fontified t) 3808 3817 (fontified t) 3817 3820 (face font-lock-keyword-face fontified t) 3820 3821 (fontified t) 3821 3825 (face font-lock-variable-name-face fontified t) 3825 3845 (fontified t) 3845 3846 (face (rainbow-delimiters-depth-3-face) fontified t) 3846 3847 (face (rainbow-delimiters-depth-3-face) fontified t) 3847 3858 (fontified t) 3858 3861 (face font-lock-comment-delimiter-face fontified t) 3861 3897 (face font-lock-comment-face fontified t) 3897 3905 (fontified t) 3905 3908 (face font-lock-comment-delimiter-face fontified t) 3908 3923 (face font-lock-comment-face fontified t) 3923 3924 (face font-lock-comment-face syntax-table (1) fontified t) 3924 3964 (face font-lock-comment-face fontified t) 3964 3972 (fontified t) 3972 3975 (face font-lock-keyword-face fontified t) 3975 3976 (fontified t) 3976 3984 (face font-lock-variable-name-face fontified t) 3984 3987 (fontified t) 3987 3991 (face font-lock-constant-face fontified t) 3991 3993 (fontified t) 3993 4001 (face font-lock-type-face fontified t) 4001 4006 (fontified t) 4006 4007 (face (rainbow-delimiters-depth-3-face) fontified t) 4007 4011 (face font-lock-constant-face fontified t) 4011 4013 (fontified t) 4013 4031 (face font-lock-type-face fontified t) 4031 4032 (fontified t) 4032 4033 (face (rainbow-delimiters-depth-4-face) fontified t) 4033 4046 (fontified t) 4046 4054 (face font-lock-variable-name-face fontified t) 4054 4056 (fontified t) 4056 4060 (face font-lock-constant-face fontified t) 4060 4062 (fontified t) 4062 4070 (face font-lock-type-face fontified t) 4070 4075 (fontified t) 4075 4076 (face (rainbow-delimiters-depth-5-face) fontified t) 4076 4077 (face (rainbow-delimiters-depth-5-face) fontified t) 4077 4093 (fontified t) 4093 4100 (face font-lock-type-face fontified t) 4100 4109 (fontified t) 4109 4110 (face (rainbow-delimiters-depth-5-face) fontified t) 4110 4111 (face (rainbow-delimiters-depth-5-face) fontified t) 4111 4120 (fontified t) 4120 4121 (face (rainbow-delimiters-depth-4-face) fontified t) 4121 4122 (face (rainbow-delimiters-depth-3-face) fontified t) 4122 4141 (fontified t) 4141 4144 (face font-lock-comment-delimiter-face fontified t) 4144 4153 (face font-lock-comment-face fontified t) 4153 4161 (fontified t) 4161 4163 (face font-lock-comment-delimiter-face fontified t) 4163 4164 (face font-lock-comment-face fontified t) 4164 4172 (fontified t) 4172 4175 (face font-lock-comment-delimiter-face fontified t) 4175 4240 (face font-lock-comment-face fontified t) 4240 4248 (fontified t) 4248 4251 (face font-lock-comment-delimiter-face fontified t) 4251 4298 (face font-lock-comment-face fontified t) 4298 4306 (fontified t) 4306 4309 (face font-lock-keyword-face fontified t) 4309 4310 (fontified t) 4310 4317 (face font-lock-variable-name-face fontified t) 4317 4320 (fontified t) 4320 4326 (face rust-unsafe fontified t) 4326 4327 (fontified t) 4327 4328 (face (rainbow-delimiters-depth-3-face) fontified t) 4328 4352 (fontified t) 4352 4353 (face (rainbow-delimiters-depth-4-face) fontified t) 4353 4354 (face rust-ampersand-face fontified t) 4354 4360 (fontified t) 4360 4361 (face (rainbow-delimiters-depth-4-face) fontified t) 4361 4362 (fontified t) 4362 4363 (face (rainbow-delimiters-depth-3-face) fontified t) 4363 4370 (fontified t) 4370 4371 (face (rainbow-delimiters-depth-3-face) fontified t) 4371 4372 (face (rainbow-delimiters-depth-3-face) fontified t) 4372 4383 (fontified t) 4383 4386 (face font-lock-keyword-face fontified t) 4386 4387 (fontified t) 4387 4394 (face font-lock-variable-name-face fontified t) 4394 4421 (fontified t) 4421 4422 (face (rainbow-delimiters-depth-3-face) fontified t) 4422 4435 (fontified t) 4435 4436 (face rust-ampersand-face fontified t) 4436 4440 (face font-lock-constant-face fontified t) 4440 4442 (fontified t) 4442 4463 (face font-lock-type-face fontified t) 4463 4464 (fontified t) 4464 4465 (face (rainbow-delimiters-depth-4-face) fontified t) 4465 4482 (fontified t) 4482 4498 (face font-lock-variable-name-face fontified t) 4498 4500 (fontified t) 4500 4504 (face font-lock-constant-face fontified t) 4504 4506 (fontified t) 4506 4521 (face font-lock-type-face fontified t) 4521 4530 (fontified t) 4530 4531 (face (rainbow-delimiters-depth-5-face) fontified t) 4531 4532 (face (rainbow-delimiters-depth-5-face) fontified t) 4532 4550 (fontified t) 4550 4568 (face font-lock-variable-name-face fontified t) 4568 4570 (fontified t) 4570 4572 (face font-lock-type-face fontified t) 4572 4574 (fontified t face font-lock-type-face) 4574 4575 (fontified t face (rainbow-delimiters-depth-5-face)) 4575 4576 (fontified t face rust-ampersand-face) 4576 4583 (fontified t) 4583 4584 (fontified t face (rainbow-delimiters-depth-5-face)) 4584 4586 (fontified t) 4586 4602 (fontified t) 4602 4624 (face font-lock-variable-name-face fontified t) 4624 4626 (fontified t) 4626 4631 (face font-lock-keyword-face fontified t) 4631 4645 (fontified t) 4645 4646 (face (rainbow-delimiters-depth-4-face) fontified t) 4646 4656 (fontified t) 4656 4657 (face (rainbow-delimiters-depth-3-face) fontified t) 4657 4658 (fontified t) 4658 4663 (face font-lock-keyword-face fontified t) 4663 4670 (fontified t) 4670 4671 (face (rainbow-delimiters-depth-3-face) fontified t) 4671 4672 (face (rainbow-delimiters-depth-3-face) fontified t) 4672 4683 (fontified t) 4683 4686 (face font-lock-keyword-face fontified t) 4686 4687 (fontified t) 4687 4688 (face (rainbow-delimiters-depth-3-face) fontified t) 4688 4701 (fontified t) 4701 4702 (face (rainbow-delimiters-depth-3-face) fontified t) 4702 4727 (fontified t) 4727 4728 (face (rainbow-delimiters-depth-3-face) fontified t) 4728 4741 (fontified t) 4741 4742 (face rust-ampersand-face fontified t) 4742 4746 (face font-lock-constant-face fontified t) 4746 4748 (fontified t) 4748 4764 (face font-lock-type-face fontified t) 4764 4765 (fontified t) 4765 4766 (face (rainbow-delimiters-depth-4-face) fontified t) 4766 4783 (fontified t) 4783 4791 (face font-lock-variable-name-face fontified t) 4791 4793 (fontified t) 4793 4797 (face font-lock-constant-face fontified t) 4797 4799 (fontified t) 4799 4807 (face font-lock-type-face fontified t) 4807 4814 (fontified t) 4814 4815 (face (rainbow-delimiters-depth-5-face) fontified t) 4815 4816 (face (rainbow-delimiters-depth-5-face) fontified t) 4816 4834 (fontified t) 4834 4837 (face font-lock-comment-delimiter-face fontified t) 4837 4889 (face font-lock-comment-face fontified t) 4889 4905 (fontified t) 4905 4908 (face font-lock-comment-delimiter-face fontified t) 4908 4964 (face font-lock-comment-face fontified t) 4964 4980 (fontified t) 4980 4986 (face font-lock-variable-name-face fontified t) 4986 4988 (fontified t) 4988 4990 (face font-lock-keyword-face fontified t) 4990 4991 (fontified t) 4991 4995 (face font-lock-preprocessor-face fontified t) 4995 4996 (face (rainbow-delimiters-depth-5-face) fontified t) 4996 5010 (fontified t) 5010 5018 (face font-lock-string-face fontified t) 5018 5019 (face (rainbow-delimiters-depth-5-face) fontified t) 5019 5020 (fontified t) 5020 5021 (face (rainbow-delimiters-depth-5-face) fontified t) 5021 5042 (fontified t) 5042 5046 (face font-lock-constant-face fontified t) 5046 5048 (fontified t) 5048 5054 (face font-lock-type-face fontified t) 5054 5081 (fontified t) 5081 5082 (face (rainbow-delimiters-depth-6-face) fontified t) 5082 5083 (face (rainbow-delimiters-depth-6-face) fontified t) 5083 5100 (fontified t) 5100 5101 (face (rainbow-delimiters-depth-5-face) fontified t) 5101 5102 (fontified t) 5102 5106 (face font-lock-keyword-face fontified t) 5106 5107 (fontified t) 5107 5108 (face (rainbow-delimiters-depth-5-face) fontified t) 5108 5129 (fontified t) 5129 5133 (face font-lock-constant-face fontified t) 5133 5135 (fontified t) 5135 5141 (face font-lock-type-face fontified t) 5141 5150 (fontified t) 5150 5151 (face (rainbow-delimiters-depth-6-face) fontified t) 5151 5152 (face (rainbow-delimiters-depth-6-face) fontified t) 5152 5169 (fontified t) 5169 5170 (face (rainbow-delimiters-depth-5-face) fontified t) 5170 5188 (fontified t) 5188 5193 (face font-lock-variable-name-face fontified t) 5193 5195 (fontified t) 5195 5199 (face font-lock-type-face fontified t) 5199 5213 (fontified t) 5213 5214 (face (rainbow-delimiters-depth-4-face) fontified t) 5214 5228 (fontified t) 5228 5232 (face font-lock-type-face fontified t) 5232 5234 (fontified t) 5234 5237 (face font-lock-comment-delimiter-face fontified t) 5237 5248 (face font-lock-comment-face fontified t) 5248 5256 (fontified t) 5256 5257 (face (rainbow-delimiters-depth-3-face) fontified t) 5257 5258 (fontified t) 5258 5263 (face font-lock-keyword-face fontified t) 5263 5270 (fontified t) 5270 5271 (face (rainbow-delimiters-depth-3-face) fontified t) 5271 5272 (face (rainbow-delimiters-depth-3-face) fontified t) 5272 5284 (fontified t) 5284 5287 (face font-lock-keyword-face fontified t) 5287 5288 (fontified t) 5288 5300 (face font-lock-variable-name-face fontified t) 5300 5327 (fontified t) 5327 5328 (face (rainbow-delimiters-depth-3-face) fontified t) 5328 5329 (face rust-ampersand-face fontified t) 5329 5336 (fontified t) 5336 5337 (face (rainbow-delimiters-depth-3-face) fontified t) 5337 5347 (fontified t) 5347 5350 (face font-lock-comment-delimiter-face fontified t) 5350 5430 (face font-lock-comment-face fontified t) 5430 5438 (fontified t) 5438 5441 (face font-lock-comment-delimiter-face fontified t) 5441 5521 (face font-lock-comment-face fontified t) 5521 5529 (fontified t) 5529 5532 (face font-lock-comment-delimiter-face fontified t) 5532 5606 (face font-lock-comment-face fontified t) 5606 5614 (fontified t) 5614 5617 (face font-lock-keyword-face fontified t) 5617 5618 (fontified t) 5618 5632 (face font-lock-variable-name-face fontified t) 5632 5660 (fontified t) 5660 5661 (face (rainbow-delimiters-depth-3-face) fontified t) 5661 5662 (face (rainbow-delimiters-depth-3-face) fontified t) 5662 5682 (fontified t) 5682 5683 (face (rainbow-delimiters-depth-3-face) fontified t) 5683 5684 (face (rainbow-delimiters-depth-3-face) fontified t) 5684 5704 (fontified t) 5704 5705 (face (rainbow-delimiters-depth-3-face) fontified t) 5705 5718 (fontified t) 5718 5719 (face (rainbow-delimiters-depth-4-face) fontified t) 5719 5720 (face (rainbow-delimiters-depth-4-face) fontified t) 5720 5721 (face (rainbow-delimiters-depth-3-face) fontified t) 5721 5739 (fontified t) 5739 5740 (face (rainbow-delimiters-depth-3-face) fontified t) 5740 5741 (face (rainbow-delimiters-depth-3-face) fontified t) 5741 5764 (fontified t) 5764 5765 (face (rainbow-delimiters-depth-3-face) fontified t) 5765 5785 (fontified t) 5785 5786 (face (rainbow-delimiters-depth-4-face) fontified t) 5786 5787 (fontified t) 5787 5788 (face (rainbow-delimiters-depth-4-face) fontified t) 5788 5789 (face (rainbow-delimiters-depth-3-face) fontified t) 5789 5799 (fontified t) 5799 5802 (face font-lock-keyword-face fontified t) 5802 5803 (fontified t) 5803 5809 (face font-lock-variable-name-face fontified t) 5809 5812 (fontified t) 5812 5816 (face font-lock-constant-face fontified t) 5816 5818 (fontified t) 5818 5838 (face font-lock-type-face fontified t) 5838 5839 (fontified t) 5839 5840 (face (rainbow-delimiters-depth-3-face) fontified t) 5840 5853 (fontified t) 5853 5858 (face font-lock-variable-name-face fontified t) 5858 5860 (fontified t) 5860 5864 (face font-lock-constant-face fontified t) 5864 5866 (fontified t) 5866 5879 (face font-lock-type-face fontified t) 5879 5881 (fontified t) 5881 5898 (face font-lock-type-face fontified t) 5898 5912 (fontified t) 5912 5918 (face font-lock-variable-name-face fontified t) 5918 5948 (fontified t) 5948 5953 (face font-lock-variable-name-face fontified t) 5953 5979 (fontified t) 5979 5985 (face font-lock-variable-name-face fontified t) 5985 6012 (fontified t) 6012 6024 (face font-lock-variable-name-face fontified t) 6024 6052 (fontified t) 6052 6053 (face (rainbow-delimiters-depth-4-face) fontified t) 6053 6054 (fontified t) 6054 6055 (face (rainbow-delimiters-depth-4-face) fontified t) 6055 6069 (fontified t) 6069 6079 (face font-lock-variable-name-face fontified t) 6079 6086 (fontified t) 6086 6105 (fontified t) 6105 6106 (fontified t face (rainbow-delimiters-depth-4-face)) 6106 6107 (fontified t) 6107 6108 (fontified t face (rainbow-delimiters-depth-4-face)) 6108 6110 (fontified t) 6110 6122 (fontified t) 6122 6134 (face font-lock-variable-name-face fontified t) 6134 6136 (fontified t) 6136 6140 (face font-lock-preprocessor-face fontified t) 6140 6141 (face (rainbow-delimiters-depth-4-face) fontified t) 6141 6142 (face (rainbow-delimiters-depth-4-face) fontified t) 6142 6152 (fontified t) 6152 6153 (face (rainbow-delimiters-depth-3-face) fontified t) 6153 6180 (fontified t) 6180 6181 (face (rainbow-delimiters-depth-3-face) fontified t) 6181 6182 (face rust-ampersand-face fontified t) 6182 6190 (fontified t) 6190 6191 (face rust-ampersand-face fontified t) 6191 6197 (fontified t) 6197 6198 (face (rainbow-delimiters-depth-3-face) fontified t) 6198 6218 (fontified t) 6218 6221 (face font-lock-keyword-face fontified t) 6221 6222 (fontified t) 6222 6247 (face font-lock-variable-name-face fontified t) 6247 6293 (fontified t) 6293 6294 (face (rainbow-delimiters-depth-3-face) fontified t) 6294 6295 (face rust-ampersand-face fontified t) 6295 6299 (face font-lock-constant-face fontified t) 6299 6301 (fontified t) 6301 6326 (face font-lock-type-face fontified t) 6326 6327 (fontified t) 6327 6328 (face (rainbow-delimiters-depth-4-face) fontified t) 6328 6345 (fontified t) 6345 6352 (face font-lock-variable-name-face fontified t) 6352 6354 (fontified t) 6354 6355 (face rust-ampersand-face fontified t) 6355 6356 (face (rainbow-delimiters-depth-5-face) fontified t) 6356 6377 (fontified t) 6377 6381 (face font-lock-constant-face fontified t) 6381 6383 (fontified t) 6383 6403 (face font-lock-type-face fontified t) 6403 6404 (fontified t) 6404 6405 (face (rainbow-delimiters-depth-6-face) fontified t) 6405 6430 (fontified t) 6430 6437 (face font-lock-variable-name-face fontified t) 6437 6466 (fontified t) 6466 6476 (face font-lock-variable-name-face fontified t) 6476 6478 (fontified t) 6478 6482 (face font-lock-constant-face fontified t) 6482 6484 (fontified t) 6484 6496 (face font-lock-type-face fontified t) 6496 6498 (fontified t) 6498 6506 (face font-lock-type-face fontified t) 6506 6532 (fontified t) 6532 6534 (face font-lock-variable-name-face fontified t) 6534 6536 (fontified t) 6536 6540 (face font-lock-constant-face fontified t) 6540 6542 (fontified t) 6542 6553 (face font-lock-type-face fontified t) 6553 6555 (fontified t) 6555 6562 (face font-lock-type-face fontified t) 6562 6563 (fontified t) 6563 6564 (face (rainbow-delimiters-depth-7-face) fontified t) 6564 6593 (fontified t) 6593 6605 (face font-lock-variable-name-face fontified t) 6605 6607 (fontified t) 6607 6612 (face font-lock-keyword-face fontified t) 6612 6642 (fontified t) 6642 6656 (face font-lock-variable-name-face fontified t) 6656 6658 (fontified t) 6658 6662 (face font-lock-constant-face fontified t) 6662 6664 (fontified t) 6664 6684 (face font-lock-type-face fontified t) 6684 6686 (fontified t) 6686 6688 (face font-lock-type-face fontified t) 6688 6718 (fontified t) 6718 6729 (face font-lock-variable-name-face fontified t) 6729 6731 (fontified t) 6731 6735 (face font-lock-constant-face fontified t) 6735 6737 (fontified t) 6737 6754 (face font-lock-type-face fontified t) 6754 6756 (fontified t) 6756 6761 (face font-lock-type-face fontified t) 6761 6762 (fontified t) 6762 6763 (face (rainbow-delimiters-depth-8-face) fontified t) 6763 6764 (fontified t) 6764 6774 (face font-lock-variable-name-face fontified t) 6774 6776 (fontified t) 6776 6780 (face font-lock-keyword-face fontified t) 6780 6781 (fontified t) 6781 6782 (face (rainbow-delimiters-depth-8-face) fontified t) 6782 6808 (fontified t) 6808 6809 (face (rainbow-delimiters-depth-7-face) fontified t) 6809 6835 (fontified t) 6835 6840 (face font-lock-variable-name-face fontified t) 6840 6842 (fontified t) 6842 6846 (face font-lock-type-face fontified t) 6846 6868 (fontified t) 6868 6869 (face (rainbow-delimiters-depth-6-face) fontified t) 6869 6891 (fontified t) 6891 6895 (face font-lock-constant-face fontified t) 6895 6897 (fontified t) 6897 6917 (face font-lock-type-face fontified t) 6917 6918 (fontified t) 6918 6919 (face (rainbow-delimiters-depth-6-face) fontified t) 6919 6944 (fontified t) 6944 6951 (face font-lock-variable-name-face fontified t) 6951 6980 (fontified t) 6980 6990 (face font-lock-variable-name-face fontified t) 6990 6992 (fontified t) 6992 6996 (face font-lock-constant-face fontified t) 6996 6998 (fontified t) 6998 7010 (face font-lock-type-face fontified t) 7010 7012 (fontified t) 7012 7020 (face font-lock-type-face fontified t) 7020 7046 (fontified t) 7046 7049 (face font-lock-comment-delimiter-face fontified t) 7049 7095 (face font-lock-comment-face fontified t) 7095 7119 (fontified t) 7119 7122 (face font-lock-comment-delimiter-face fontified t) 7122 7157 (face font-lock-comment-face fontified t) 7157 7181 (fontified t) 7181 7183 (face font-lock-variable-name-face fontified t) 7183 7185 (fontified t) 7185 7189 (face font-lock-constant-face fontified t) 7189 7191 (fontified t) 7191 7202 (face font-lock-type-face fontified t) 7202 7204 (fontified t) 7204 7211 (face font-lock-type-face fontified t) 7211 7212 (face (rainbow-delimiters-depth-7-face) fontified t) 7212 7216 (face font-lock-constant-face fontified t) 7216 7218 (fontified t) 7218 7236 (face font-lock-type-face fontified t) 7236 7238 (fontified t) 7238 7247 (face font-lock-type-face fontified t) 7247 7248 (face (rainbow-delimiters-depth-7-face) fontified t) 7248 7274 (fontified t) 7274 7279 (face font-lock-variable-name-face fontified t) 7279 7281 (fontified t) 7281 7285 (face font-lock-type-face fontified t) 7285 7307 (fontified t) 7307 7308 (face (rainbow-delimiters-depth-6-face) fontified t) 7308 7326 (fontified t) 7326 7327 (face (rainbow-delimiters-depth-5-face) fontified t) 7327 7345 (fontified t) 7345 7350 (face font-lock-variable-name-face fontified t) 7350 7352 (fontified t) 7352 7356 (face font-lock-type-face fontified t) 7356 7357 (face (rainbow-delimiters-depth-5-face) fontified t) 7357 7384 (face font-lock-string-face fontified t) 7384 7385 (face (rainbow-delimiters-depth-5-face) fontified t) 7385 7399 (fontified t) 7399 7400 (face (rainbow-delimiters-depth-4-face) fontified t) 7400 7401 (face (rainbow-delimiters-depth-3-face) fontified t) 7401 7412 (fontified t) 7412 7417 (face font-lock-preprocessor-face fontified t) 7417 7418 (face (rainbow-delimiters-depth-3-face) fontified t) 7418 7430 (face font-lock-string-face fontified t) 7430 7431 (face (rainbow-delimiters-depth-3-face) fontified t) 7431 7441 (fontified t) 7441 7444 (face font-lock-keyword-face fontified t) 7444 7445 (fontified t) 7445 7454 (face font-lock-variable-name-face fontified t) 7454 7457 (fontified t) 7457 7462 (face font-lock-constant-face fontified t) 7462 7472 (fontified t) 7472 7473 (face (rainbow-delimiters-depth-3-face) fontified t) 7473 7526 (face font-lock-string-face fontified t) 7526 7528 (fontified t) 7528 7529 (face rust-ampersand-face fontified t) 7529 7537 (fontified t) 7537 7538 (face rust-ampersand-face fontified t) 7538 7545 (fontified t) 7545 7546 (face rust-ampersand-face fontified t) 7546 7571 (fontified t) 7571 7572 (face (rainbow-delimiters-depth-3-face) fontified t) 7572 7579 (fontified t) 7579 7580 (face (rainbow-delimiters-depth-3-face) fontified t) 7580 7581 (face (rainbow-delimiters-depth-3-face) fontified t) 7581 7592 (fontified t) 7592 7595 (face font-lock-keyword-face fontified t) 7595 7596 (fontified t) 7596 7609 (face font-lock-variable-name-face fontified t) 7609 7610 (fontified t) 7610 7612 (fontified t) 7612 7619 (fontified t face font-lock-constant-face) 7619 7621 (fontified t) 7621 7628 (fontified t face font-lock-type-face) 7628 7650 (fontified t) 7650 7651 (fontified t face (rainbow-delimiters-depth-3-face)) 7651 7652 (fontified t face rust-ampersand-face) 7652 7660 (fontified t) 7660 7661 (fontified t face rust-ampersand-face) 7661 7669 (fontified t) 7669 7684 (fontified t face font-lock-string-face) 7684 7685 (fontified t face (rainbow-delimiters-depth-3-face)) 7685 7687 (fontified t) 7687 7697 (fontified t) 7697 7700 (face font-lock-keyword-face fontified t) 7700 7701 (fontified t) 7701 7707 (face font-lock-variable-name-face fontified t) 7707 7710 (fontified t) 7710 7716 (face font-lock-constant-face fontified t) 7716 7718 (fontified t) 7718 7724 (face font-lock-type-face fontified t) 7724 7729 (fontified t) 7729 7730 (face (rainbow-delimiters-depth-3-face) fontified t) 7730 7731 (face (rainbow-delimiters-depth-4-face) fontified t) 7731 7745 (fontified t) 7745 7746 (face (rainbow-delimiters-depth-4-face) fontified t) 7746 7748 (fontified t) 7748 7754 (face font-lock-constant-face fontified t) 7754 7756 (fontified t) 7756 7759 (face font-lock-type-face fontified t) 7759 7760 (face (rainbow-delimiters-depth-4-face) fontified t) 7760 7765 (fontified t) 7765 7766 (face (rainbow-delimiters-depth-4-face) fontified t) 7766 7768 (fontified t) 7768 7774 (face font-lock-constant-face fontified t) 7774 7776 (fontified t) 7776 7779 (face font-lock-type-face fontified t) 7779 7780 (face (rainbow-delimiters-depth-4-face) fontified t) 7780 7785 (fontified t) 7785 7786 (face (rainbow-delimiters-depth-4-face) fontified t) 7786 7787 (face (rainbow-delimiters-depth-3-face) fontified t) 7787 7797 (fontified t) 7797 7800 (face font-lock-keyword-face fontified t) 7800 7801 (fontified t) 7801 7811 (face font-lock-variable-name-face fontified t) 7811 7814 (fontified t) 7814 7820 (face font-lock-constant-face fontified t) 7820 7822 (fontified t) 7822 7832 (face font-lock-type-face fontified t) 7832 7837 (fontified t) 7837 7838 (face (rainbow-delimiters-depth-3-face) fontified t) 7838 7867 (fontified t) 7867 7873 (face font-lock-constant-face fontified t) 7873 7875 (fontified t) 7875 7878 (face font-lock-type-face fontified t) 7878 7879 (face (rainbow-delimiters-depth-4-face) fontified t) 7879 7883 (fontified t) 7883 7884 (face (rainbow-delimiters-depth-4-face) fontified t) 7884 7896 (fontified t) 7896 7897 (face (rainbow-delimiters-depth-3-face) fontified t) 7897 7907 (fontified t) 7907 7910 (face font-lock-keyword-face fontified t) 7910 7911 (fontified t) 7911 7928 (face font-lock-variable-name-face fontified t) 7928 7931 (fontified t) 7931 7937 (face font-lock-constant-face fontified t) 7937 7939 (fontified t) 7939 7955 (face font-lock-type-face fontified t) 7955 7960 (fontified t) 7960 7961 (face (rainbow-delimiters-depth-3-face) fontified t) 7961 7969 (fontified t) 7969 7970 (face (rainbow-delimiters-depth-3-face) fontified t) 7970 7983 (fontified t) 7983 7986 (face font-lock-keyword-face fontified t) 7986 7987 (fontified t) 7987 7990 (face font-lock-keyword-face fontified t) 7990 7991 (fontified t) 7991 8005 (face font-lock-variable-name-face fontified t) 8005 8008 (fontified t) 8008 8021 (face font-lock-type-face fontified t) 8021 8026 (fontified t) 8026 8027 (face (rainbow-delimiters-depth-3-face) fontified t) 8027 8028 (face (rainbow-delimiters-depth-3-face) fontified t) 8028 8069 (fontified t) 8069 8070 (face (rainbow-delimiters-depth-3-face) fontified t) 8070 8071 (face rust-ampersand-face fontified t) 8071 8079 (fontified t) 8079 8080 (face rust-ampersand-face fontified t) 8080 8090 (fontified t) 8090 8091 (face (rainbow-delimiters-depth-3-face) fontified t) 8091 8093 (fontified t) 8093 8096 (face font-lock-comment-delimiter-face fontified t) 8096 8105 (face font-lock-comment-face fontified t) 8105 8113 (fontified t) 8113 8116 (face font-lock-keyword-face fontified t) 8116 8117 (fontified t) 8117 8130 (face font-lock-variable-name-face fontified t) 8130 8168 (fontified t) 8168 8169 (face (rainbow-delimiters-depth-3-face) fontified t) 8169 8170 (face rust-ampersand-face fontified t) 8170 8176 (fontified t) 8176 8177 (face (rainbow-delimiters-depth-3-face) fontified t) 8177 8189 (fontified t) 8189 8192 (face font-lock-keyword-face fontified t) 8192 8193 (fontified t) 8193 8217 (face font-lock-variable-name-face fontified t) 8217 8251 (fontified t) 8251 8252 (face (rainbow-delimiters-depth-3-face) fontified t) 8252 8253 (face rust-ampersand-face fontified t) 8253 8257 (face font-lock-constant-face fontified t) 8257 8259 (fontified t) 8259 8284 (face font-lock-type-face fontified t) 8284 8285 (fontified t) 8285 8286 (face (rainbow-delimiters-depth-4-face) fontified t) 8286 8299 (fontified t) 8299 8306 (face font-lock-variable-name-face fontified t) 8306 8308 (fontified t) 8308 8309 (face rust-ampersand-face fontified t) 8309 8310 (face (rainbow-delimiters-depth-5-face) fontified t) 8310 8327 (fontified t) 8327 8331 (face font-lock-constant-face fontified t) 8331 8333 (fontified t) 8333 8353 (face font-lock-type-face fontified t) 8353 8354 (fontified t) 8354 8355 (face (rainbow-delimiters-depth-6-face) fontified t) 8355 8376 (fontified t) 8376 8383 (face font-lock-variable-name-face fontified t) 8383 8408 (fontified t) 8408 8418 (face font-lock-variable-name-face fontified t) 8418 8420 (fontified t) 8420 8424 (face font-lock-constant-face fontified t) 8424 8426 (fontified t) 8426 8438 (face font-lock-type-face fontified t) 8438 8440 (fontified t) 8440 8446 (face font-lock-type-face fontified t) 8446 8449 (fontified t) 8449 8453 (face font-lock-constant-face fontified t) 8453 8455 (fontified t) 8455 8467 (face font-lock-type-face fontified t) 8467 8469 (fontified t) 8469 8477 (face font-lock-type-face fontified t) 8477 8499 (fontified t) 8499 8501 (face font-lock-variable-name-face fontified t) 8501 8503 (fontified t) 8503 8507 (face font-lock-constant-face fontified t) 8507 8509 (fontified t) 8509 8520 (face font-lock-type-face fontified t) 8520 8522 (fontified t) 8522 8528 (face font-lock-type-face fontified t) 8528 8529 (fontified t) 8529 8530 (face (rainbow-delimiters-depth-7-face) fontified t) 8530 8555 (fontified t) 8555 8557 (face font-lock-variable-name-face fontified t) 8557 8559 (fontified t) 8559 8563 (face font-lock-constant-face fontified t) 8563 8565 (fontified t) 8565 8582 (face font-lock-type-face fontified t) 8582 8584 (fontified t) 8584 8591 (face font-lock-type-face fontified t) 8591 8617 (fontified t) 8617 8635 (face font-lock-variable-name-face fontified t) 8635 8637 (fontified t) 8637 8642 (face font-lock-keyword-face fontified t) 8642 8668 (fontified t) 8668 8684 (face font-lock-variable-name-face fontified t) 8684 8686 (fontified t) 8686 8690 (face font-lock-type-face fontified t) 8690 8712 (fontified t) 8712 8713 (face (rainbow-delimiters-depth-7-face) fontified t) 8713 8735 (fontified t) 8735 8740 (face font-lock-variable-name-face fontified t) 8740 8742 (fontified t) 8742 8746 (face font-lock-type-face fontified t) 8746 8764 (fontified t) 8764 8765 (face (rainbow-delimiters-depth-6-face) fontified t) 8765 8778 (fontified t) 8778 8779 (face (rainbow-delimiters-depth-5-face) fontified t) 8779 8793 (fontified t) 8793 8798 (face font-lock-variable-name-face fontified t) 8798 8800 (fontified t) 8800 8804 (face font-lock-type-face fontified t) 8804 8805 (face (rainbow-delimiters-depth-5-face) fontified t) 8805 8831 (face font-lock-string-face fontified t) 8831 8832 (face (rainbow-delimiters-depth-5-face) fontified t) 8832 8842 (fontified t) 8842 8843 (face (rainbow-delimiters-depth-4-face) fontified t) 8843 8844 (face (rainbow-delimiters-depth-3-face) fontified t) 8844 8855 (fontified t) 8855 8858 (face font-lock-keyword-face fontified t) 8858 8859 (fontified t) 8859 8876 (face font-lock-variable-name-face fontified t) 8876 8903 (fontified t) 8903 8904 (face (rainbow-delimiters-depth-3-face) fontified t) 8904 8905 (face rust-ampersand-face fontified t) 8905 8909 (face font-lock-constant-face fontified t) 8909 8911 (fontified t) 8911 8930 (face font-lock-type-face fontified t) 8930 8931 (fontified t) 8931 8932 (face (rainbow-delimiters-depth-4-face) fontified t) 8932 8945 (fontified t) 8945 8951 (face font-lock-variable-name-face fontified t) 8951 8953 (fontified t) 8953 8954 (face rust-ampersand-face fontified t) 8954 8992 (fontified t) 8992 8999 (face font-lock-variable-name-face fontified t) 8999 9001 (fontified t) 9001 9002 (face rust-ampersand-face fontified t) 9002 9003 (face (rainbow-delimiters-depth-5-face) fontified t) 9003 9020 (fontified t) 9020 9024 (face font-lock-constant-face fontified t) 9024 9026 (fontified t) 9026 9040 (face font-lock-type-face fontified t) 9040 9041 (fontified t) 9041 9042 (face (rainbow-delimiters-depth-6-face) fontified t) 9042 9063 (fontified t) 9063 9070 (face font-lock-variable-name-face fontified t) 9070 9095 (fontified t) 9095 9103 (face font-lock-variable-name-face fontified t) 9103 9136 (fontified t) 9136 9137 (face (rainbow-delimiters-depth-7-face) fontified t) 9137 9138 (face (rainbow-delimiters-depth-7-face) fontified t) 9138 9156 (fontified t) 9156 9157 (face (rainbow-delimiters-depth-6-face) fontified t) 9157 9170 (fontified t) 9170 9171 (face (rainbow-delimiters-depth-5-face) fontified t) 9171 9185 (fontified t) 9185 9187 (face font-lock-variable-name-face fontified t) 9187 9190 (fontified t face font-lock-variable-name-face) 9190 9192 (fontified t) 9192 9196 (fontified t face font-lock-type-face) 9196 9197 (fontified t face (rainbow-delimiters-depth-5-face)) 9197 9216 (fontified t face font-lock-string-face) 9216 9217 (fontified t face (rainbow-delimiters-depth-5-face)) 9217 9219 (fontified t) 9219 9227 (fontified t) 9227 9228 (face (rainbow-delimiters-depth-4-face) fontified t) 9228 9229 (face (rainbow-delimiters-depth-3-face) fontified t) 9229 9240 (fontified t) 9240 9243 (face font-lock-keyword-face fontified t) 9243 9244 (fontified t) 9244 9257 (face font-lock-variable-name-face fontified t) 9257 9260 (fontified t) 9260 9265 (face font-lock-constant-face fontified t) 9265 9267 (fontified t) 9267 9279 (face font-lock-type-face fontified t) 9279 9280 (fontified t) 9280 9281 (face (rainbow-delimiters-depth-3-face) fontified t) 9281 9294 (fontified t) 9294 9302 (face font-lock-variable-name-face fontified t) 9302 9304 (fontified t) 9304 9305 (face (rainbow-delimiters-depth-4-face) fontified t) 9305 9323 (fontified t) 9323 9324 (face (rainbow-delimiters-depth-4-face) fontified t) 9324 9338 (fontified t) 9338 9343 (face font-lock-variable-name-face fontified t) 9343 9345 (fontified t) 9345 9346 (face (rainbow-delimiters-depth-4-face) fontified t) 9346 9364 (fontified t) 9364 9365 (face (rainbow-delimiters-depth-4-face) fontified t) 9365 9375 (fontified t) 9375 9376 (face (rainbow-delimiters-depth-3-face) fontified t) 9376 9386 (fontified t) 9386 9389 (face font-lock-keyword-face fontified t) 9389 9390 (fontified t) 9390 9391 (face (rainbow-delimiters-depth-3-face) fontified t) 9391 9446 (fontified t) 9446 9447 (face (rainbow-delimiters-depth-3-face) fontified t) 9447 9462 (fontified t) 9462 9467 (face font-lock-constant-face fontified t) 9467 9503 (fontified t) 9503 9504 (face (rainbow-delimiters-depth-3-face) fontified t) 9504 9505 (face rust-ampersand-face fontified t) 9505 9513 (fontified t) 9513 9514 (face rust-ampersand-face fontified t) 9514 9527 (fontified t) 9527 9528 (face (rainbow-delimiters-depth-3-face) fontified t) 9528 9540 (fontified t) 9540 9542 (face font-lock-comment-delimiter-face fontified t) 9542 9572 (face font-lock-comment-face fontified t) 9572 9580 (fontified t) 9580 9583 (face font-lock-keyword-face fontified t) 9583 9584 (fontified t) 9584 9606 (face font-lock-variable-name-face fontified t) 9606 9650 (fontified t) 9650 9651 (face (rainbow-delimiters-depth-3-face) fontified t) 9651 9652 (face rust-ampersand-face fontified t) 9652 9656 (face font-lock-constant-face fontified t) 9656 9658 (fontified t) 9658 9682 (face font-lock-type-face fontified t) 9682 9683 (fontified t) 9683 9684 (face (rainbow-delimiters-depth-4-face) fontified t) 9684 9701 (fontified t) 9701 9706 (face font-lock-variable-name-face fontified t) 9706 9708 (fontified t) 9708 9712 (face font-lock-type-face fontified t) 9712 9713 (face (rainbow-delimiters-depth-5-face) fontified t) 9713 9737 (face font-lock-string-face fontified t) 9737 9738 (face (rainbow-delimiters-depth-5-face) fontified t) 9738 9756 (fontified t) 9756 9774 (face font-lock-variable-name-face fontified t) 9774 9776 (fontified t) 9776 9777 (face rust-ampersand-face fontified t) 9777 9778 (face (rainbow-delimiters-depth-5-face) fontified t) 9778 9799 (fontified t) 9799 9800 (face rust-ampersand-face fontified t) 9800 9847 (fontified t) 9847 9848 (face rust-ampersand-face fontified t) 9848 9894 (fontified t) 9894 9895 (face rust-ampersand-face fontified t) 9895 9936 (fontified t) 9936 9937 (face (rainbow-delimiters-depth-5-face) fontified t) 9937 9955 (fontified t) 9955 9975 (face font-lock-variable-name-face fontified t) 9975 9977 (fontified t) 9977 9978 (face rust-ampersand-face fontified t) 9978 9979 (face (rainbow-delimiters-depth-5-face) fontified t) 9979 9980 (face (rainbow-delimiters-depth-5-face) fontified t) 9980 9994 (fontified t) 9994 9995 (face (rainbow-delimiters-depth-4-face) fontified t) 9995 9996 (face (rainbow-delimiters-depth-3-face) fontified t) 9996 10015 (fontified t) 10015 10018 (face font-lock-keyword-face fontified t) 10018 10019 (fontified t) 10019 10034 (face font-lock-variable-name-face fontified t) 10034 10037 (fontified t) 10037 10038 (face (rainbow-delimiters-depth-3-face) fontified t) 10038 10051 (fontified t) 10051 10054 (face font-lock-keyword-face fontified t) 10054 10055 (fontified t) 10055 10061 (face font-lock-variable-name-face fontified t) 10061 10064 (fontified t) 10064 10068 (face font-lock-constant-face fontified t) 10068 10070 (fontified t) 10070 10083 (face font-lock-preprocessor-face fontified t) 10083 10084 (face (rainbow-delimiters-depth-4-face) fontified t) 10084 10097 (face font-lock-string-face fontified t) 10097 10098 (face (rainbow-delimiters-depth-4-face) fontified t) 10098 10135 (fontified t) 10135 10136 (face (rainbow-delimiters-depth-4-face) fontified t) 10136 10153 (fontified t) 10153 10154 (face rust-ampersand-face fontified t) 10154 10178 (fontified t) 10178 10179 (face rust-ampersand-face fontified t) 10179 10250 (fontified t) 10250 10254 (face font-lock-type-face fontified t) 10254 10255 (face (rainbow-delimiters-depth-5-face) fontified t) 10255 10262 (face font-lock-constant-face fontified t) 10262 10264 (fontified t) 10264 10271 (face font-lock-type-face fontified t) 10271 10273 (fontified t) 10273 10285 (face font-lock-type-face fontified t) 10285 10286 (face (rainbow-delimiters-depth-5-face) fontified t) 10286 10304 (fontified t) 10304 10305 (face rust-ampersand-face fontified t) 10305 10306 (face (rainbow-delimiters-depth-5-face) fontified t) 10306 10311 (face font-lock-constant-face fontified t) 10311 10313 (fontified t) 10313 10324 (face font-lock-type-face fontified t) 10324 10330 (fontified t) 10330 10331 (face (rainbow-delimiters-depth-6-face) fontified t) 10331 10332 (face (rainbow-delimiters-depth-6-face) fontified t) 10332 10334 (fontified t) 10334 10345 (face font-lock-type-face fontified t) 10345 10351 (fontified t) 10351 10352 (face (rainbow-delimiters-depth-6-face) fontified t) 10352 10353 (face (rainbow-delimiters-depth-6-face) fontified t) 10353 10354 (face (rainbow-delimiters-depth-5-face) fontified t) 10354 10392 (fontified t) 10392 10393 (face (rainbow-delimiters-depth-4-face) fontified t) 10393 10402 (fontified t) 10402 10403 (face (rainbow-delimiters-depth-3-face) fontified t) 10403 10426 (fontified t) 10426 10429 (face font-lock-keyword-face fontified t) 10429 10430 (fontified t) 10430 10439 (face font-lock-variable-name-face fontified t) 10439 10442 (fontified t) 10442 10446 (face font-lock-preprocessor-face fontified t) 10446 10447 (face (rainbow-delimiters-depth-3-face) fontified t) 10447 10460 (fontified t) 10460 10468 (face font-lock-type-face fontified t) 10468 10469 (fontified t) 10469 10470 (face (rainbow-delimiters-depth-4-face) fontified t) 10470 10487 (fontified t) 10487 10495 (face font-lock-variable-name-face fontified t) 10495 10497 (fontified t) 10497 10503 (face font-lock-constant-face fontified t) 10503 10505 (fontified t) 10505 10512 (face font-lock-type-face fontified t) 10512 10518 (fontified t) 10518 10519 (face (rainbow-delimiters-depth-5-face) fontified t) 10519 10520 (face (rainbow-delimiters-depth-5-face) fontified t) 10520 10538 (fontified t) 10538 10546 (face font-lock-variable-name-face fontified t) 10546 10548 (fontified t) 10548 10554 (face font-lock-constant-face fontified t) 10554 10556 (fontified t) 10556 10566 (face font-lock-type-face fontified t) 10566 10580 (fontified t) 10580 10581 (face (rainbow-delimiters-depth-5-face) fontified t) 10581 10587 (face font-lock-constant-face fontified t) 10587 10589 (fontified t) 10589 10592 (face font-lock-type-face fontified t) 10592 10593 (face (rainbow-delimiters-depth-6-face) fontified t) 10593 10596 (fontified t) 10596 10597 (face (rainbow-delimiters-depth-6-face) fontified t) 10597 10598 (face (rainbow-delimiters-depth-5-face) fontified t) 10598 10616 (fontified t) 10616 10623 (face font-lock-variable-name-face fontified t) 10623 10625 (fontified t) 10625 10631 (face font-lock-constant-face fontified t) 10631 10633 (fontified t) 10633 10640 (face font-lock-type-face fontified t) 10640 10645 (fontified t) 10645 10646 (face (rainbow-delimiters-depth-5-face) fontified t) 10646 10659 (fontified t) 10659 10660 (face (rainbow-delimiters-depth-5-face) fontified t) 10660 10674 (fontified t) 10674 10675 (face (rainbow-delimiters-depth-4-face) fontified t) 10675 10685 (fontified t) 10685 10686 (face (rainbow-delimiters-depth-3-face) fontified t) 10686 10696 (fontified t) 10696 10699 (face font-lock-keyword-face fontified t) 10699 10700 (fontified t) 10700 10713 (face font-lock-variable-name-face fontified t) 10713 10719 (fontified t) 10719 10730 (fontified t) 10730 10731 (fontified t face (rainbow-delimiters-depth-3-face)) 10731 10732 (fontified t face (rainbow-delimiters-depth-3-face)) 10732 10736 (fontified t) 10736 10737 (fontified t face (rainbow-delimiters-depth-3-face)) 10737 10745 (fontified t face font-lock-type-face) 10745 10753 (fontified t) 10753 10754 (fontified t face (rainbow-delimiters-depth-3-face)) 10754 10764 (fontified t) 10764 10765 (fontified t face (rainbow-delimiters-depth-3-face)) 10765 10768 (fontified t face font-lock-type-face) 10768 10769 (fontified t face (rainbow-delimiters-depth-4-face)) 10769 10770 (fontified t) 10770 10771 (fontified t face (rainbow-delimiters-depth-4-face)) 10771 10772 (fontified t face (rainbow-delimiters-depth-3-face)) 10772 10773 (fontified t face (rainbow-delimiters-depth-3-face)) 10773 10774 (fontified t face (rainbow-delimiters-depth-3-face)) 10774 10776 (fontified t) 10776 10784 (fontified t) 10784 10787 (face font-lock-keyword-face fontified t) 10787 10788 (fontified t) 10788 10803 (face font-lock-variable-name-face fontified t) 10803 10806 (fontified t) 10806 10814 (face font-lock-constant-face fontified t) 10814 10839 (fontified t) 10839 10840 (face (rainbow-delimiters-depth-3-face) fontified t) 10840 10841 (face rust-ampersand-face fontified t) 10841 10849 (fontified t) 10849 10850 (face rust-ampersand-face fontified t) 10850 10863 (fontified t) 10863 10864 (face (rainbow-delimiters-depth-3-face) fontified t) 10864 10875 (fontified t) 10875 10878 (face font-lock-comment-delimiter-face fontified t) 10878 10885 (face font-lock-comment-face fontified t) 10885 10893 (fontified t) 10893 10896 (face font-lock-keyword-face fontified t) 10896 10897 (fontified t) 10897 10918 (face font-lock-variable-name-face fontified t) 10918 10921 (fontified t) 10921 10922 (face (rainbow-delimiters-depth-3-face) fontified t) 10922 10935 (fontified t) 10935 10938 (face font-lock-keyword-face fontified t) 10938 10939 (fontified t) 10939 10945 (face font-lock-variable-name-face fontified t) 10945 10977 (fontified t) 10977 10978 (face (rainbow-delimiters-depth-4-face) fontified t) 10978 10979 (face rust-ampersand-face fontified t) 10979 10983 (face font-lock-constant-face fontified t) 10983 10985 (fontified t) 10985 11009 (face font-lock-type-face fontified t) 11009 11010 (fontified t) 11010 11011 (face (rainbow-delimiters-depth-5-face) fontified t) 11011 11028 (fontified t) 11028 11033 (face font-lock-variable-name-face fontified t) 11033 11035 (fontified t) 11035 11039 (face font-lock-type-face fontified t) 11039 11040 (face (rainbow-delimiters-depth-6-face) fontified t) 11040 11063 (face font-lock-string-face fontified t) 11063 11064 (face (rainbow-delimiters-depth-6-face) fontified t) 11064 11082 (fontified t) 11082 11100 (face font-lock-variable-name-face fontified t) 11100 11102 (fontified t) 11102 11103 (face rust-ampersand-face fontified t) 11103 11104 (face (rainbow-delimiters-depth-6-face) fontified t) 11104 11125 (fontified t) 11125 11126 (face rust-ampersand-face fontified t) 11126 11172 (fontified t) 11172 11173 (face rust-ampersand-face fontified t) 11173 11213 (fontified t) 11213 11214 (face (rainbow-delimiters-depth-6-face) fontified t) 11214 11232 (fontified t) 11232 11252 (face font-lock-variable-name-face fontified t) 11252 11254 (fontified t) 11254 11255 (face rust-ampersand-face fontified t) 11255 11256 (face (rainbow-delimiters-depth-6-face) fontified t) 11256 11257 (face (rainbow-delimiters-depth-6-face) fontified t) 11257 11271 (fontified t) 11271 11272 (face (rainbow-delimiters-depth-5-face) fontified t) 11272 11273 (face (rainbow-delimiters-depth-4-face) fontified t) 11273 11287 (fontified t) 11287 11290 (face font-lock-keyword-face fontified t) 11290 11291 (fontified t) 11291 11297 (face font-lock-variable-name-face fontified t) 11297 11300 (fontified t) 11300 11304 (face font-lock-constant-face fontified t) 11304 11306 (fontified t) 11306 11319 (face font-lock-preprocessor-face fontified t) 11319 11320 (face (rainbow-delimiters-depth-4-face) fontified t) 11320 11332 (face font-lock-string-face fontified t) 11332 11333 (face (rainbow-delimiters-depth-4-face) fontified t) 11333 11370 (fontified t) 11370 11371 (face (rainbow-delimiters-depth-4-face) fontified t) 11371 11388 (fontified t) 11388 11389 (face rust-ampersand-face fontified t) 11389 11413 (fontified t) 11413 11414 (face rust-ampersand-face fontified t) 11414 11469 (fontified t) 11469 11473 (face font-lock-type-face fontified t) 11473 11474 (face (rainbow-delimiters-depth-5-face) fontified t) 11474 11481 (face font-lock-constant-face fontified t) 11481 11483 (fontified t) 11483 11490 (face font-lock-type-face fontified t) 11490 11492 (fontified t) 11492 11504 (face font-lock-type-face fontified t) 11504 11505 (face (rainbow-delimiters-depth-5-face) fontified t) 11505 11523 (fontified t) 11523 11524 (face rust-ampersand-face fontified t) 11524 11525 (face (rainbow-delimiters-depth-5-face) fontified t) 11525 11530 (face font-lock-constant-face fontified t) 11530 11532 (fontified t) 11532 11543 (face font-lock-type-face fontified t) 11543 11549 (fontified t) 11549 11550 (face (rainbow-delimiters-depth-6-face) fontified t) 11550 11551 (face (rainbow-delimiters-depth-6-face) fontified t) 11551 11552 (face (rainbow-delimiters-depth-5-face) fontified t) 11552 11590 (fontified t) 11590 11591 (face (rainbow-delimiters-depth-4-face) fontified t) 11591 11600 (fontified t) 11600 11601 (face (rainbow-delimiters-depth-3-face) fontified t) 11601 11613 (fontified t) 11613 11617 (face font-lock-type-face fontified t) 11617 11618 (fontified t) 11618 11619 (face (rainbow-delimiters-depth-3-face) fontified t) 11619 11979 (fontified t) 11979 11992 (face font-lock-variable-name-face fontified t) 11992 11994 (fontified t) 11994 11999 (face font-lock-keyword-face fontified t) 11999 12276 (fontified t) 12276 12284 (fontified t) 12284 12292 (fontified t) 12292 12293 (face (rainbow-delimiters-depth-3-face) fontified t) 12293 12299 (fontified t) 12299 12300 (face (rainbow-delimiters-depth-2-face) fontified t) 12300 12306 (fontified t) 12306 12309 (face font-lock-keyword-face fontified t) 12309 12310 (fontified t) 12310 12312 (face font-lock-keyword-face fontified t) 12312 12313 (fontified t) 12313 12319 (face font-lock-function-name-face fontified t) 12319 12320 (face (rainbow-delimiters-depth-2-face) fontified t) 12320 12321 (face rust-ampersand-face fontified t) 12321 12325 (face font-lock-keyword-face fontified t) 12325 12326 (face (rainbow-delimiters-depth-2-face) fontified t) 12326 12328 (fontified t) 12328 12329 (fontified t syntax-table (1)) 12329 12330 (fontified t) 12330 12331 (face rust-ampersand-face fontified t) 12331 12337 (face font-lock-type-face fontified t) 12337 12338 (fontified t) 12338 12339 (face (rainbow-delimiters-depth-2-face) fontified t) 12339 12348 (fontified t) 12348 12349 (face rust-ampersand-face fontified t) 12349 12353 (face font-lock-keyword-face fontified t) 12353 12365 (fontified t) 12365 12366 (face (rainbow-delimiters-depth-2-face) fontified t) 12366 12372 (fontified t) 12372 12374 (face font-lock-keyword-face fontified t) 12374 12375 (fontified t) 12375 12381 (face font-lock-function-name-face fontified t) 12381 12382 (face (rainbow-delimiters-depth-2-face) fontified t) 12382 12383 (face rust-ampersand-face fontified t) 12383 12386 (face font-lock-keyword-face fontified t) 12386 12387 (fontified t) 12387 12391 (face font-lock-keyword-face fontified t) 12391 12393 (fontified t) 12393 12401 (face font-lock-variable-name-face fontified t) 12401 12403 (fontified t) 12403 12408 (face font-lock-constant-face fontified t) 12408 12410 (fontified t) 12410 12413 (face font-lock-constant-face fontified t) 12413 12415 (fontified t) 12415 12427 (face font-lock-type-face fontified t) 12427 12428 (face (rainbow-delimiters-depth-3-face) fontified t) 12428 12431 (face font-lock-type-face fontified t) 12431 12432 (face (rainbow-delimiters-depth-3-face) fontified t) 12432 12433 (face (rainbow-delimiters-depth-2-face) fontified t) 12433 12434 (fontified t) 12434 12435 (face (rainbow-delimiters-depth-2-face) fontified t) 12435 12444 (fontified t) 12444 12446 (face font-lock-keyword-face fontified t) 12446 12462 (fontified t) 12462 12463 (fontified t syntax-table (1)) 12463 12485 (fontified t) 12485 12486 (fontified t syntax-table (1)) 12486 12489 (fontified t) 12489 12490 (face (rainbow-delimiters-depth-3-face) fontified t) 12490 12503 (fontified t) 12503 12507 (face font-lock-keyword-face fontified t) 12507 12537 (fontified t) 12537 12541 (face font-lock-keyword-face fontified t) 12541 12585 (fontified t) 12585 12589 (face font-lock-keyword-face fontified t) 12589 12635 (fontified t) 12635 12639 (face font-lock-keyword-face fontified t) 12639 12657 (fontified t) 12657 12658 (face (rainbow-delimiters-depth-4-face) fontified t) 12658 12659 (face rust-ampersand-face fontified t) 12659 12663 (face font-lock-keyword-face fontified t) 12663 12672 (fontified t) 12672 12673 (face rust-ampersand-face fontified t) 12673 12677 (face font-lock-keyword-face fontified t) 12677 12684 (fontified t) 12684 12685 (face (rainbow-delimiters-depth-4-face) fontified t) 12685 12699 (fontified t) 12699 12703 (face font-lock-keyword-face fontified t) 12703 12720 (fontified t) 12720 12727 (face font-lock-constant-face fontified t) 12727 12729 (fontified t) 12729 12736 (face font-lock-type-face fontified t) 12736 12758 (fontified t) 12758 12759 (face (rainbow-delimiters-depth-4-face) fontified t) 12759 12760 (face rust-ampersand-face fontified t) 12760 12764 (face font-lock-keyword-face fontified t) 12764 12773 (fontified t) 12773 12774 (face rust-ampersand-face fontified t) 12774 12778 (face font-lock-keyword-face fontified t) 12778 12787 (fontified t) 12787 12802 (face font-lock-string-face fontified t) 12802 12803 (face (rainbow-delimiters-depth-4-face) fontified t) 12803 12817 (fontified t) 12817 12821 (face font-lock-keyword-face fontified t) 12821 12839 (fontified t) 12839 12840 (face (rainbow-delimiters-depth-4-face) fontified t) 12840 12871 (fontified t) 12871 12872 (face (rainbow-delimiters-depth-4-face) fontified t) 12872 12896 (fontified t) 12896 12897 (face (rainbow-delimiters-depth-3-face) fontified t) 12897 12902 (fontified t) 12902 12903 (face (rainbow-delimiters-depth-2-face) fontified t) 12903 12909 (fontified t) 12909 12911 (face font-lock-keyword-face fontified t) 12911 12912 (fontified t) 12912 12917 (face font-lock-function-name-face fontified t) 12917 12918 (face (rainbow-delimiters-depth-2-face) fontified t) 12918 12919 (face rust-ampersand-face fontified t) 12919 12922 (face font-lock-keyword-face fontified t) 12922 12923 (fontified t) 12923 12927 (face font-lock-keyword-face fontified t) 12927 12929 (fontified t) 12929 12934 (face font-lock-variable-name-face fontified t) 12934 12936 (fontified t) 12936 12937 (face rust-ampersand-face fontified t) 12937 12948 (face font-lock-type-face fontified t) 12948 12949 (face (rainbow-delimiters-depth-2-face) fontified t) 12949 12951 (fontified t) 12951 12952 (syntax-table (1) fontified t) 12952 12953 (fontified t) 12953 12957 (face font-lock-type-face fontified t) 12957 12958 (fontified t) 12958 12959 (face (rainbow-delimiters-depth-2-face) fontified t) 12959 12968 (fontified t) 12968 12973 (face font-lock-keyword-face fontified t) 12973 12980 (fontified t) 12980 12981 (face (rainbow-delimiters-depth-3-face) fontified t) 12981 12994 (fontified t) 12994 13005 (face font-lock-type-face fontified t) 13005 13007 (fontified t) 13007 13020 (face font-lock-type-face fontified t) 13020 13021 (fontified t) 13021 13022 (face (rainbow-delimiters-depth-4-face) fontified t) 13022 13039 (fontified t) 13039 13044 (face font-lock-variable-name-face fontified t) 13044 13062 (fontified t) 13062 13070 (face font-lock-type-face fontified t) 13070 13071 (fontified t) 13071 13072 (face (rainbow-delimiters-depth-5-face) fontified t) 13072 13093 (fontified t) 13093 13105 (face font-lock-variable-name-face fontified t) 13105 13107 (fontified t) 13107 13118 (face font-lock-type-face fontified t) 13118 13120 (fontified t) 13120 13124 (face font-lock-type-face fontified t) 13124 13125 (face (rainbow-delimiters-depth-6-face) fontified t) 13125 13128 (fontified t) 13128 13129 (face (rainbow-delimiters-depth-6-face) fontified t) 13129 13197 (fontified t) 13197 13198 (face (rainbow-delimiters-depth-5-face) fontified t) 13198 13231 (fontified t) 13231 13232 (face (rainbow-delimiters-depth-4-face) fontified t) 13232 13234 (fontified t) 13234 13235 (syntax-table (1) fontified t) 13235 13236 (fontified t) 13236 13240 (face font-lock-keyword-face fontified t) 13240 13275 (fontified t) 13275 13276 (face (rainbow-delimiters-depth-4-face) fontified t) 13276 13288 (fontified t) 13288 13289 (face (rainbow-delimiters-depth-4-face) fontified t) 13289 13303 (fontified t) 13303 13314 (face font-lock-type-face fontified t) 13314 13316 (fontified t) 13316 13326 (face font-lock-type-face fontified t) 13326 13327 (fontified t) 13327 13328 (face (rainbow-delimiters-depth-4-face) fontified t) 13328 13339 (fontified t) 13339 13340 (face (rainbow-delimiters-depth-4-face) fontified t) 13340 13342 (fontified t) 13342 13343 (syntax-table (1) fontified t) 13343 13344 (fontified t) 13344 13345 (face (rainbow-delimiters-depth-4-face) fontified t) 13345 13362 (fontified t) 13362 13366 (face font-lock-keyword-face fontified t) 13366 13399 (fontified t) 13399 13400 (face (rainbow-delimiters-depth-5-face) fontified t) 13400 13405 (fontified t) 13405 13406 (face (rainbow-delimiters-depth-5-face) fontified t) 13406 13424 (fontified t) 13424 13428 (face font-lock-keyword-face fontified t) 13428 13441 (fontified t) 13441 13442 (face (rainbow-delimiters-depth-4-face) fontified t) 13442 13455 (fontified t) 13455 13466 (face font-lock-type-face fontified t) 13466 13468 (fontified t) 13468 13478 (face font-lock-type-face fontified t) 13478 13479 (fontified t) 13479 13480 (face (rainbow-delimiters-depth-4-face) fontified t) 13480 13497 (fontified t) 13497 13503 (face font-lock-variable-name-face fontified t) 13503 13505 (fontified t) 13505 13516 (face font-lock-type-face fontified t) 13516 13518 (fontified t) 13518 13522 (face font-lock-type-face fontified t) 13522 13578 (fontified t) 13578 13579 (face (rainbow-delimiters-depth-4-face) fontified t) 13579 13581 (fontified t) 13581 13582 (syntax-table (1) fontified t) 13582 13583 (fontified t) 13583 13584 (face (rainbow-delimiters-depth-4-face) fontified t) 13584 13601 (fontified t) 13601 13605 (face font-lock-keyword-face fontified t) 13605 13632 (fontified t) 13632 13644 (face font-lock-type-face fontified t) 13644 13646 (fontified t) 13646 13653 (face font-lock-type-face fontified t) 13653 13671 (fontified t) 13671 13675 (face font-lock-keyword-face fontified t) 13675 13688 (fontified t) 13688 13689 (face (rainbow-delimiters-depth-4-face) fontified t) 13689 13705 (fontified t) 13705 13706 (syntax-table (1) fontified t) 13706 13707 (fontified t) 13707 13712 (face font-lock-keyword-face fontified t) 13712 13722 (fontified t) 13722 13723 (face (rainbow-delimiters-depth-3-face) fontified t) 13723 13730 (fontified t) 13730 13731 (face (rainbow-delimiters-depth-2-face) fontified t) 13731 13737 (fontified t) 13737 13739 (face font-lock-keyword-face fontified t) 13739 13740 (fontified t) 13740 13746 (face font-lock-function-name-face fontified t) 13746 13747 (face (rainbow-delimiters-depth-2-face) fontified t) 13747 13748 (face rust-ampersand-face fontified t) 13748 13751 (face font-lock-keyword-face fontified t) 13751 13752 (fontified t) 13752 13756 (face font-lock-keyword-face fontified t) 13756 13758 (fontified t) 13758 13760 (face font-lock-variable-name-face fontified t) 13760 13762 (fontified t) 13762 13769 (face font-lock-constant-face fontified t) 13769 13771 (fontified t) 13771 13779 (face font-lock-type-face fontified t) 13779 13780 (face (rainbow-delimiters-depth-2-face) fontified t) 13780 13781 (fontified t) 13781 13782 (face (rainbow-delimiters-depth-2-face) fontified t) 13782 13784 (fontified t) 13784 13791 (fontified t) 13791 13795 (fontified t face font-lock-keyword-face) 13795 13827 (fontified t) 13827 13828 (fontified t face (rainbow-delimiters-depth-3-face)) 13828 13829 (fontified t face rust-ampersand-face) 13829 13832 (fontified t face font-lock-keyword-face) 13832 13833 (fontified t) 13833 13837 (fontified t face font-lock-keyword-face) 13837 13848 (fontified t) 13848 13849 (fontified t face (rainbow-delimiters-depth-3-face)) 13849 13851 (fontified t) 13851 13859 (fontified t) 13859 13863 (face font-lock-keyword-face fontified t) 13863 13895 (fontified t) 13895 13896 (face (rainbow-delimiters-depth-3-face) fontified t) 13896 13897 (face rust-ampersand-face fontified t) 13897 13901 (face font-lock-keyword-face fontified t) 13901 13910 (fontified t) 13910 13911 (face rust-ampersand-face fontified t) 13911 13915 (face font-lock-keyword-face fontified t) 13915 13926 (fontified t) 13926 13927 (face (rainbow-delimiters-depth-3-face) fontified t) 13927 13937 (fontified t) 13937 13941 (face font-lock-keyword-face fontified t) 13941 13960 (fontified t) 13960 13961 (face (rainbow-delimiters-depth-3-face) fontified t) 13961 13962 (face rust-ampersand-face fontified t) 13962 13966 (face font-lock-keyword-face fontified t) 13966 13985 (fontified t) 13985 13993 (face font-lock-constant-face fontified t) 13993 14005 (fontified t) 14005 14006 (face (rainbow-delimiters-depth-4-face) fontified t) 14006 14007 (face rust-ampersand-face fontified t) 14007 14008 (face (rainbow-delimiters-depth-5-face) fontified t) 14008 14012 (face font-lock-keyword-face fontified t) 14012 14027 (fontified t) 14027 14028 (face (rainbow-delimiters-depth-5-face) fontified t) 14028 14029 (face (rainbow-delimiters-depth-4-face) fontified t) 14029 14030 (face (rainbow-delimiters-depth-3-face) fontified t) 14030 14041 (fontified t) 14041 14044 (face font-lock-comment-delimiter-face fontified t) 14044 14061 (face font-lock-comment-face fontified t) 14061 14069 (fontified t) 14069 14072 (face font-lock-keyword-face fontified t) 14072 14073 (fontified t) 14073 14085 (face font-lock-variable-name-face fontified t) 14085 14088 (fontified t) 14088 14094 (face font-lock-constant-face fontified t) 14094 14096 (fontified t) 14096 14103 (face font-lock-type-face fontified t) 14103 14109 (fontified t) 14109 14110 (face (rainbow-delimiters-depth-3-face) fontified t) 14110 14114 (face font-lock-keyword-face fontified t) 14114 14137 (fontified t) 14137 14138 (face (rainbow-delimiters-depth-3-face) fontified t) 14138 14148 (fontified t) 14148 14151 (face font-lock-comment-delimiter-face fontified t) 14151 14181 (face font-lock-comment-face fontified t) 14181 14189 (fontified t) 14189 14196 (face font-lock-comment-delimiter-face fontified t) 14196 14272 (face font-lock-comment-face fontified t) 14272 14280 (fontified t) 14280 14288 (face font-lock-comment-delimiter-face fontified t) 14288 14304 (face font-lock-comment-face fontified t) 14304 14312 (fontified t) 14312 14319 (face font-lock-comment-delimiter-face fontified t) 14319 14328 (face font-lock-comment-face fontified t) 14328 14337 (fontified t) 14337 14341 (face font-lock-keyword-face fontified t) 14341 14379 (fontified t) 14379 14380 (face (rainbow-delimiters-depth-3-face) fontified t) 14380 14386 (face font-lock-constant-face fontified t) 14386 14388 (fontified t) 14388 14395 (face font-lock-type-face fontified t) 14395 14412 (fontified t) 14412 14413 (face (rainbow-delimiters-depth-4-face) fontified t) 14413 14414 (face (rainbow-delimiters-depth-5-face) fontified t) 14414 14427 (fontified t) 14427 14428 (face (rainbow-delimiters-depth-5-face) fontified t) 14428 14433 (fontified t) 14433 14434 (face (rainbow-delimiters-depth-5-face) fontified t) 14434 14435 (face (rainbow-delimiters-depth-5-face) fontified t) 14435 14437 (fontified t) 14437 14443 (face font-lock-constant-face fontified t) 14443 14445 (fontified t) 14445 14448 (face font-lock-type-face fontified t) 14448 14449 (face (rainbow-delimiters-depth-5-face) fontified t) 14449 14470 (fontified t) 14470 14471 (face (rainbow-delimiters-depth-6-face) fontified t) 14471 14472 (face (rainbow-delimiters-depth-6-face) fontified t) 14472 14473 (face (rainbow-delimiters-depth-5-face) fontified t) 14473 14474 (face (rainbow-delimiters-depth-4-face) fontified t) 14474 14502 (fontified t) 14502 14503 (face (rainbow-delimiters-depth-3-face) fontified t) 14503 14508 (fontified t) 14508 14509 (face (rainbow-delimiters-depth-3-face) fontified t) 14509 14510 (face (rainbow-delimiters-depth-3-face) fontified t) 14510 14512 (fontified t) 14512 14515 (face font-lock-comment-delimiter-face fontified t) 14515 14524 (face font-lock-comment-face fontified t) 14524 14533 (fontified t) 14533 14537 (face font-lock-keyword-face fontified t) 14537 14556 (fontified t) 14556 14557 (face (rainbow-delimiters-depth-3-face) fontified t) 14557 14558 (face rust-ampersand-face fontified t) 14558 14562 (face font-lock-keyword-face fontified t) 14562 14580 (fontified t) 14580 14588 (face font-lock-constant-face fontified t) 14588 14600 (fontified t) 14600 14601 (face (rainbow-delimiters-depth-4-face) fontified t) 14601 14602 (face rust-ampersand-face fontified t) 14602 14603 (face (rainbow-delimiters-depth-5-face) fontified t) 14603 14607 (face font-lock-keyword-face fontified t) 14607 14621 (fontified t) 14621 14622 (face (rainbow-delimiters-depth-5-face) fontified t) 14622 14623 (face (rainbow-delimiters-depth-4-face) fontified t) 14623 14624 (face (rainbow-delimiters-depth-3-face) fontified t) 14624 14631 (fontified t) 14631 14632 (face (rainbow-delimiters-depth-2-face) fontified t) 14632 14638 (fontified t) 14638 14640 (face font-lock-keyword-face fontified t) 14640 14641 (fontified t) 14641 14647 (face font-lock-function-name-face fontified t) 14647 14648 (face (rainbow-delimiters-depth-2-face) fontified t) 14648 14649 (face rust-ampersand-face fontified t) 14649 14652 (face font-lock-keyword-face fontified t) 14652 14653 (fontified t) 14653 14657 (face font-lock-keyword-face fontified t) 14657 14659 (fontified t) 14659 14664 (face font-lock-variable-name-face fontified t) 14664 14666 (fontified t) 14666 14670 (face font-lock-constant-face fontified t) 14670 14672 (fontified t) 14672 14677 (face font-lock-type-face fontified t) 14677 14678 (face (rainbow-delimiters-depth-2-face) fontified t) 14678 14680 (fontified t) 14680 14681 (fontified t syntax-table (1)) 14681 14682 (fontified t) 14682 14688 (face font-lock-type-face fontified t) 14688 14689 (face (rainbow-delimiters-depth-2-face) fontified t) 14689 14690 (face (rainbow-delimiters-depth-3-face) fontified t) 14690 14691 (face (rainbow-delimiters-depth-3-face) fontified t) 14691 14693 (fontified t) 14693 14697 (face font-lock-constant-face fontified t) 14697 14699 (fontified t) 14699 14711 (face font-lock-type-face fontified t) 14711 14712 (face (rainbow-delimiters-depth-2-face) fontified t) 14712 14713 (fontified t) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified t) 14714 14723 (fontified t) 14723 14726 (face font-lock-keyword-face fontified t) 14726 14727 (fontified t) 14727 14733 (face font-lock-variable-name-face fontified t) 14733 14736 (fontified t) 14736 14740 (face font-lock-keyword-face fontified t) 14740 14768 (fontified t) 14768 14769 (face (rainbow-delimiters-depth-3-face) fontified t) 14769 14770 (face (rainbow-delimiters-depth-3-face) fontified t) 14770 14771 (face rust-question-mark fontified t) 14771 14781 (fontified t) 14781 14784 (face font-lock-keyword-face fontified t) 14784 14785 (fontified t) 14785 14789 (face font-lock-variable-name-face fontified t) 14789 14818 (fontified t) 14818 14819 (face (rainbow-delimiters-depth-3-face) fontified t) 14819 14820 (face rust-ampersand-face fontified t) 14820 14824 (face font-lock-constant-face fontified t) 14824 14826 (fontified t) 14826 14847 (face font-lock-type-face fontified t) 14847 14856 (fontified t) 14856 14857 (face (rainbow-delimiters-depth-4-face) fontified t) 14857 14858 (face (rainbow-delimiters-depth-4-face) fontified t) 14858 14859 (face (rainbow-delimiters-depth-3-face) fontified t) 14859 14869 (fontified t) 14869 14872 (face font-lock-keyword-face fontified t) 14872 14873 (fontified t) 14873 14876 (face font-lock-keyword-face fontified t) 14876 14877 (fontified t) 14877 14884 (face font-lock-variable-name-face fontified t) 14884 14887 (fontified t) 14887 14891 (face font-lock-keyword-face fontified t) 14891 14921 (fontified t) 14921 14922 (face (rainbow-delimiters-depth-3-face) fontified t) 14922 14923 (face rust-ampersand-face fontified t) 14923 14927 (face font-lock-constant-face fontified t) 14927 14929 (fontified t) 14929 14953 (face font-lock-type-face fontified t) 14953 14954 (fontified t) 14954 14955 (face (rainbow-delimiters-depth-4-face) fontified t) 14955 14968 (fontified t) 14968 14973 (face font-lock-variable-name-face fontified t) 14973 14975 (fontified t) 14975 14979 (face font-lock-type-face fontified t) 14979 14980 (face (rainbow-delimiters-depth-5-face) fontified t) 14980 14996 (face font-lock-string-face fontified t) 14996 14997 (face (rainbow-delimiters-depth-5-face) fontified t) 14997 15007 (fontified t) 15007 15008 (face (rainbow-delimiters-depth-4-face) fontified t) 15008 15009 (face (rainbow-delimiters-depth-3-face) fontified t) 15009 15028 (fontified t) 15028 15031 (face font-lock-keyword-face fontified t) 15031 15032 (fontified t) 15032 15035 (face font-lock-keyword-face fontified t) 15035 15036 (fontified t) 15036 15047 (face font-lock-variable-name-face fontified t) 15047 15075 (fontified t) 15075 15076 (face (rainbow-delimiters-depth-3-face) fontified t) 15076 15077 (face rust-ampersand-face fontified t) 15077 15081 (face font-lock-constant-face fontified t) 15081 15083 (fontified t) 15083 15103 (face font-lock-type-face fontified t) 15103 15104 (fontified t) 15104 15105 (face (rainbow-delimiters-depth-4-face) fontified t) 15105 15118 (fontified t) 15118 15123 (face font-lock-variable-name-face fontified t) 15123 15125 (fontified t) 15125 15129 (face font-lock-type-face fontified t) 15129 15130 (face (rainbow-delimiters-depth-5-face) fontified t) 15130 15143 (face font-lock-string-face fontified t) 15143 15144 (face (rainbow-delimiters-depth-5-face) fontified t) 15144 15158 (fontified t) 15158 15175 (face font-lock-variable-name-face fontified t) 15175 15177 (fontified t) 15177 15178 (face rust-ampersand-face fontified t) 15178 15179 (face (rainbow-delimiters-depth-5-face) fontified t) 15179 15183 (face font-lock-type-face fontified t) 15183 15184 (face (rainbow-delimiters-depth-6-face) fontified t) 15184 15188 (face font-lock-constant-face fontified t) 15188 15190 (fontified t) 15190 15215 (face font-lock-type-face fontified t) 15215 15216 (fontified t) 15216 15217 (face (rainbow-delimiters-depth-7-face) fontified t) 15217 15234 (fontified t) 15234 15238 (face font-lock-variable-name-face fontified t) 15238 15240 (fontified t) 15240 15241 (face rust-ampersand-face fontified t) 15241 15263 (fontified t) 15263 15277 (face font-lock-variable-name-face fontified t) 15277 15279 (fontified t) 15279 15283 (face font-lock-type-face fontified t) 15283 15301 (fontified t) 15301 15304 (face font-lock-variable-name-face fontified t) 15304 15306 (fontified t) 15306 15310 (face font-lock-constant-face fontified t) 15310 15312 (fontified t) 15312 15322 (face font-lock-type-face fontified t) 15322 15323 (fontified t) 15323 15324 (face (rainbow-delimiters-depth-8-face) fontified t) 15324 15345 (fontified t) 15345 15349 (face font-lock-variable-name-face fontified t) 15349 15351 (fontified t) 15351 15355 (fontified t face font-lock-constant-face) 15355 15357 (fontified t) 15357 15363 (fontified t face font-lock-type-face) 15363 15365 (fontified t) 15365 15370 (fontified t face font-lock-type-face) 15370 15371 (fontified t face (rainbow-delimiters-depth-9-face)) 15371 15376 (fontified t) 15376 15377 (fontified t face (rainbow-delimiters-depth-9-face)) 15377 15379 (fontified t) 15379 15399 (fontified t) 15399 15404 (face font-lock-variable-name-face fontified t) 15404 15406 (fontified t) 15406 15410 (face font-lock-constant-face fontified t) 15410 15412 (fontified t) 15412 15419 (face font-lock-type-face fontified t) 15419 15421 (fontified t) 15421 15426 (face font-lock-type-face fontified t) 15426 15444 (fontified t) 15444 15445 (face (rainbow-delimiters-depth-8-face) fontified t) 15445 15459 (fontified t) 15459 15460 (face (rainbow-delimiters-depth-7-face) fontified t) 15460 15461 (face (rainbow-delimiters-depth-6-face) fontified t) 15461 15462 (face (rainbow-delimiters-depth-5-face) fontified t) 15462 15476 (fontified t) 15476 15500 (face font-lock-variable-name-face fontified t) 15500 15502 (fontified t) 15502 15506 (face font-lock-type-face fontified t) 15506 15507 (face (rainbow-delimiters-depth-5-face) fontified t) 15507 15511 (face font-lock-constant-face fontified t) 15511 15513 (fontified t) 15513 15545 (face font-lock-type-face fontified t) 15545 15546 (fontified t) 15546 15547 (face (rainbow-delimiters-depth-6-face) fontified t) 15547 15564 (fontified t) 15564 15568 (face font-lock-variable-name-face fontified t) 15568 15570 (fontified t) 15570 15571 (face rust-ampersand-face fontified t) 15571 15575 (face font-lock-keyword-face fontified t) 15575 15612 (fontified t) 15612 15621 (face font-lock-variable-name-face fontified t) 15621 15623 (fontified t) 15623 15627 (face font-lock-type-face fontified t) 15627 15628 (face (rainbow-delimiters-depth-7-face) fontified t) 15628 15632 (face font-lock-constant-face fontified t) 15632 15634 (fontified t) 15634 15644 (face font-lock-type-face fontified t) 15644 15645 (fontified t) 15645 15646 (face (rainbow-delimiters-depth-8-face) fontified t) 15646 15667 (fontified t) 15667 15671 (face font-lock-variable-name-face fontified t) 15671 15673 (fontified t) 15673 15677 (face font-lock-constant-face fontified t) 15677 15679 (fontified t) 15679 15685 (face font-lock-type-face fontified t) 15685 15687 (fontified t) 15687 15692 (face font-lock-type-face fontified t) 15692 15693 (face (rainbow-delimiters-depth-9-face) fontified t) 15693 15696 (fontified t) 15696 15697 (face (rainbow-delimiters-depth-9-face) fontified t) 15697 15719 (fontified t) 15719 15724 (face font-lock-variable-name-face fontified t) 15724 15726 (fontified t) 15726 15730 (face font-lock-constant-face fontified t) 15730 15732 (fontified t) 15732 15739 (face font-lock-type-face fontified t) 15739 15741 (fontified t) 15741 15746 (face font-lock-type-face fontified t) 15746 15764 (fontified t) 15764 15765 (face (rainbow-delimiters-depth-8-face) fontified t) 15765 15766 (face (rainbow-delimiters-depth-7-face) fontified t) 15766 15784 (fontified t) 15784 15795 (face font-lock-variable-name-face fontified t) 15795 15797 (fontified t) 15797 15801 (face font-lock-type-face fontified t) 15801 15815 (fontified t) 15815 15816 (face (rainbow-delimiters-depth-6-face) fontified t) 15816 15817 (face (rainbow-delimiters-depth-5-face) fontified t) 15817 15831 (fontified t) 15831 15850 (face font-lock-variable-name-face fontified t) 15850 15852 (fontified t) 15852 15856 (face font-lock-type-face fontified t) 15856 15870 (fontified t) 15870 15886 (face font-lock-variable-name-face fontified t) 15886 15888 (fontified t) 15888 15892 (face font-lock-type-face fontified t) 15892 15902 (fontified t) 15902 15903 (face (rainbow-delimiters-depth-4-face) fontified t) 15903 15904 (face (rainbow-delimiters-depth-3-face) fontified t) 15904 15914 (fontified t) 15914 15917 (face font-lock-comment-delimiter-face fontified t) 15917 15922 (face font-lock-comment-face fontified t) 15922 15959 (fontified t) 15959 15960 (face (rainbow-delimiters-depth-3-face) fontified t) 15960 15963 (fontified t) 15963 15967 (face font-lock-keyword-face fontified t) 15967 15989 (fontified t) 15989 15990 (face (rainbow-delimiters-depth-4-face) fontified t) 15990 15992 (fontified t) 15992 15993 (face (rainbow-delimiters-depth-4-face) fontified t) 15993 15994 (face (rainbow-delimiters-depth-3-face) fontified t) 15994 16005 (fontified t) 16005 16010 (face font-lock-preprocessor-face fontified t) 16010 16011 (face (rainbow-delimiters-depth-3-face) fontified t) 16011 16040 (face font-lock-string-face fontified t) 16040 16041 (face (rainbow-delimiters-depth-3-face) fontified t) 16041 16051 (fontified t) 16051 16054 (face font-lock-keyword-face fontified t) 16054 16055 (fontified t) 16055 16060 (face font-lock-keyword-face fontified t) 16060 16062 (fontified t) 16062 16067 (face font-lock-constant-face fontified t) 16067 16069 (fontified t) 16069 16078 (face font-lock-type-face fontified t) 16078 16080 (fontified t) 16080 16083 (face font-lock-comment-delimiter-face fontified t) 16083 16088 (face font-lock-comment-face fontified t) 16088 16120 (fontified t) 16120 16121 (face (rainbow-delimiters-depth-3-face) fontified t) 16121 16122 (face rust-ampersand-face fontified t) 16122 16126 (face font-lock-keyword-face fontified t) 16126 16148 (fontified t) 16148 16149 (face (rainbow-delimiters-depth-3-face) fontified t) 16149 16151 (fontified t) 16151 16154 (face font-lock-comment-delimiter-face fontified t) 16154 16159 (face font-lock-comment-face fontified t) 16159 16195 (fontified t) 16195 16196 (face (rainbow-delimiters-depth-3-face) fontified t) 16196 16209 (fontified t) 16209 16210 (face rust-ampersand-face fontified t) 16210 16214 (face font-lock-keyword-face fontified t) 16214 16238 (fontified t) 16238 16239 (face rust-ampersand-face fontified t) 16239 16243 (face font-lock-keyword-face fontified t) 16243 16275 (fontified t) 16275 16276 (face rust-ampersand-face fontified t) 16276 16280 (face font-lock-keyword-face fontified t) 16280 16307 (fontified t) 16307 16308 (face (rainbow-delimiters-depth-3-face) fontified t) 16308 16310 (fontified t) 16310 16313 (face font-lock-comment-delimiter-face fontified t) 16313 16318 (face font-lock-comment-face fontified t) 16318 16327 (fontified t) 16327 16332 (face font-lock-preprocessor-face fontified t) 16332 16333 (face (rainbow-delimiters-depth-3-face) fontified t) 16333 16362 (face font-lock-string-face fontified t) 16362 16363 (face (rainbow-delimiters-depth-3-face) fontified t) 16363 16397 (fontified t) 16397 16398 (face (rainbow-delimiters-depth-3-face) fontified t) 16398 16399 (face rust-ampersand-face fontified t) 16399 16403 (face font-lock-keyword-face fontified t) 16403 16419 (fontified t) 16419 16420 (face (rainbow-delimiters-depth-3-face) fontified t) 16420 16422 (fontified t) 16422 16425 (face font-lock-comment-delimiter-face fontified t) 16425 16428 (face font-lock-comment-face fontified t) 16428 16468 (fontified t) 16468 16469 (face (rainbow-delimiters-depth-3-face) fontified t) 16469 16482 (fontified t) 16482 16483 (face rust-ampersand-face fontified t) 16483 16487 (face font-lock-keyword-face fontified t) 16487 16514 (fontified t) 16514 16518 (face font-lock-keyword-face fontified t) 16518 16532 (fontified t) 16532 16533 (face (rainbow-delimiters-depth-4-face) fontified t) 16533 16534 (face (rainbow-delimiters-depth-4-face) fontified t) 16534 16535 (fontified t) 16535 16537 (face font-lock-keyword-face fontified t) 16537 16538 (fontified t) 16538 16541 (face font-lock-type-face fontified t) 16541 16555 (fontified t) 16555 16556 (face rust-ampersand-face fontified t) 16556 16560 (face font-lock-keyword-face fontified t) 16560 16592 (fontified t) 16592 16593 (face rust-ampersand-face fontified t) 16593 16597 (face font-lock-keyword-face fontified t) 16597 16624 (fontified t) 16624 16625 (face (rainbow-delimiters-depth-3-face) fontified t) 16625 16640 (fontified t) 16640 16641 (face (rainbow-delimiters-depth-3-face) fontified t) 16641 16652 (fontified t) 16652 16653 (face (rainbow-delimiters-depth-3-face) fontified t) 16653 16665 (fontified t) 16665 16668 (face font-lock-comment-delimiter-face fontified t) 16668 16721 (face font-lock-comment-face fontified t) 16721 16729 (fontified t) 16729 16733 (face font-lock-keyword-face fontified t) 16733 16746 (fontified t) 16746 16747 (face (rainbow-delimiters-depth-3-face) fontified t) 16747 16750 (face font-lock-constant-face fontified t) 16750 16752 (fontified t) 16752 16756 (face font-lock-constant-face fontified t) 16756 16762 (fontified t) 16762 16763 (face (rainbow-delimiters-depth-4-face) fontified t) 16763 16777 (fontified t) 16777 16778 (face (rainbow-delimiters-depth-5-face) fontified t) 16778 16779 (face (rainbow-delimiters-depth-5-face) fontified t) 16779 16780 (face (rainbow-delimiters-depth-4-face) fontified t) 16780 16781 (face (rainbow-delimiters-depth-3-face) fontified t) 16781 16805 (fontified t) 16805 16806 (face (rainbow-delimiters-depth-3-face) fontified t) 16806 16807 (face (rainbow-delimiters-depth-3-face) fontified t) 16807 16818 (fontified t) 16818 16820 (face font-lock-type-face fontified t) 16820 16821 (face (rainbow-delimiters-depth-3-face) fontified t) 16821 16822 (face (rainbow-delimiters-depth-4-face) fontified t) 16822 16823 (face (rainbow-delimiters-depth-4-face) fontified t) 16823 16824 (face (rainbow-delimiters-depth-3-face) fontified t) 16824 16830 (fontified t) 16830 16831 (face (rainbow-delimiters-depth-2-face) fontified t) 16831 16832 (fontified t) 16832 16833 (face (rainbow-delimiters-depth-1-face) fontified t) 16833 16836 (fontified t) 16836 16839 (face font-lock-keyword-face fontified t) 16839 16840 (fontified t) 16840 16845 (face font-lock-keyword-face fontified t) 16845 16846 (fontified t) 16846 16848 (face font-lock-keyword-face fontified t) 16848 16849 (fontified t) 16849 16852 (face font-lock-function-name-face fontified t) 16852 16853 (face (rainbow-delimiters-depth-1-face) fontified t) 16853 16854 (face (rainbow-delimiters-depth-1-face) fontified t) 16854 16855 (fontified t) 16855 16856 (face (rainbow-delimiters-depth-1-face) fontified t) 16856 16866 (fontified t) 16866 16869 (face font-lock-keyword-face fontified t) 16869 16870 (fontified t) 16870 16879 (face font-lock-variable-name-face fontified t) 16879 16880 (fontified t face font-lock-variable-name-face) 16880 16883 (fontified t) 16883 16892 (fontified t face font-lock-type-face) 16892 16897 (fontified t) 16897 16898 (fontified t face (rainbow-delimiters-depth-2-face)) 16898 16899 (fontified t face (rainbow-delimiters-depth-2-face)) 16899 16906 (fontified t) 16906 16907 (fontified t face (rainbow-delimiters-depth-2-face)) 16907 16908 (fontified t face (rainbow-delimiters-depth-2-face)) 16908 16910 (fontified t) 16910 16914 (fontified t) 16914 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16924 (face font-lock-variable-name-face fontified t) 16924 16927 (fontified t) 16927 16940 (face font-lock-type-face fontified t) 16940 16945 (fontified t) 16945 16946 (face (rainbow-delimiters-depth-2-face) fontified t) 16946 16947 (face (rainbow-delimiters-depth-2-face) fontified t) 16947 16953 (fontified t) 16953 16954 (face (rainbow-delimiters-depth-2-face) fontified t) 16954 16955 (face rust-ampersand-face fontified t) 16955 16965 (fontified t) 16965 16966 (face (rainbow-delimiters-depth-2-face) fontified t) 16966 16973 (fontified t) 16973 16974 (face (rainbow-delimiters-depth-2-face) fontified t) 16974 16975 (face (rainbow-delimiters-depth-2-face) fontified t) 16975 16982 (fontified t) 16982 16985 (face font-lock-comment-delimiter-face fontified t) 16985 17059 (face font-lock-comment-face fontified t) 17059 17063 (fontified t) 17063 17066 (face font-lock-comment-delimiter-face fontified t) 17066 17139 (face font-lock-comment-face fontified t) 17139 17140 (fontified t) 17140 17144 (fontified t) 17144 17147 (face font-lock-keyword-face fontified t) 17147 17148 (fontified t) 17148 17151 (face font-lock-keyword-face fontified t) 17151 17152 (fontified t) 17152 17157 (face font-lock-variable-name-face fontified t) 17157 17160 (fontified t) 17160 17165 (face font-lock-type-face fontified t) 17165 17170 (fontified t) 17170 17171 (face (rainbow-delimiters-depth-2-face) fontified t) 17171 17177 (fontified t) 17177 17178 (face (rainbow-delimiters-depth-2-face) fontified t) 17178 17179 (fontified t) 17179 17184 (face font-lock-keyword-face fontified t) 17184 17190 (fontified t) 17190 17193 (face font-lock-keyword-face fontified t) 17193 17194 (fontified t) 17194 17197 (face font-lock-keyword-face fontified t) 17197 17198 (fontified t) 17198 17214 (face font-lock-variable-name-face fontified t) 17214 17217 (fontified t) 17217 17224 (face font-lock-constant-face fontified t) 17224 17226 (fontified t) 17226 17233 (face font-lock-type-face fontified t) 17233 17238 (fontified t) 17238 17239 (face (rainbow-delimiters-depth-2-face) fontified t) 17239 17240 (face (rainbow-delimiters-depth-2-face) fontified t) 17240 17243 (fontified t) 17243 17246 (face font-lock-comment-delimiter-face fontified t) 17246 17251 (face font-lock-comment-face fontified t) 17251 17252 (fontified t) 17252 17283 (fontified t) 17283 17284 (face (rainbow-delimiters-depth-2-face) fontified t) 17284 17295 (face font-lock-type-face fontified t) 17295 17297 (fontified t) 17297 17301 (face font-lock-type-face fontified t) 17301 17302 (face (rainbow-delimiters-depth-2-face) fontified t) 17302 17303 (fontified t) 17303 17304 (fontified t rear-nonsticky t) 17304 17305 (fontified t) 17305 17309 (fontified t) 17309 17312 (face font-lock-comment-delimiter-face fontified t) 17312 17318 (face font-lock-comment-face fontified t) 17318 17336 (fontified t) 17336 17337 (face (rainbow-delimiters-depth-2-face) fontified t) 17337 17341 (face font-lock-keyword-face fontified t) 17341 17356 (fontified t) 17356 17357 (face (rainbow-delimiters-depth-3-face) fontified t) 17357 17366 (fontified t) 17366 17371 (face font-lock-keyword-face fontified t) 17371 17378 (fontified t) 17378 17379 (face (rainbow-delimiters-depth-4-face) fontified t) 17379 17392 (fontified t) 17392 17397 (face font-lock-type-face fontified t) 17397 17399 (fontified t) 17399 17410 (face font-lock-type-face fontified t) 17410 17411 (fontified t) 17411 17412 (face (rainbow-delimiters-depth-5-face) fontified t) 17412 17429 (fontified t) 17429 17434 (face font-lock-variable-name-face fontified t) 17434 17436 (fontified t) 17436 17447 (face font-lock-type-face fontified t) 17447 17449 (fontified t) 17449 17460 (face font-lock-type-face fontified t) 17460 17461 (face (rainbow-delimiters-depth-6-face) fontified t) 17461 17469 (fontified t) 17469 17470 (face (rainbow-delimiters-depth-6-face) fontified t) 17470 17491 (fontified t) 17491 17494 (face font-lock-comment-delimiter-face fontified t) 17494 17530 (face font-lock-comment-face fontified t) 17530 17542 (fontified t) 17542 17543 (face (rainbow-delimiters-depth-5-face) fontified t) 17543 17545 (fontified t) 17545 17546 (fontified t syntax-table (1)) 17546 17547 (fontified t) 17547 17549 (face font-lock-keyword-face fontified t) 17549 17570 (fontified t) 17570 17571 (face (rainbow-delimiters-depth-5-face) fontified t) 17571 17625 (fontified t) 17625 17626 (face (rainbow-delimiters-depth-6-face) fontified t) 17626 17642 (fontified t) 17642 17643 (face (rainbow-delimiters-depth-6-face) fontified t) 17643 17656 (fontified t) 17656 17657 (face (rainbow-delimiters-depth-5-face) fontified t) 17657 17671 (fontified t) 17671 17676 (face font-lock-type-face fontified t) 17676 17678 (fontified t) 17678 17689 (face font-lock-type-face fontified t) 17689 17690 (fontified t) 17690 17691 (face (rainbow-delimiters-depth-5-face) fontified t) 17691 17708 (fontified t) 17708 17711 (face font-lock-keyword-face fontified t) 17711 17712 (fontified t) 17712 17717 (face font-lock-variable-name-face fontified t) 17717 17750 (fontified t) 17750 17751 (face (rainbow-delimiters-depth-5-face) fontified t) 17751 17753 (fontified t) 17753 17754 (fontified t syntax-table (1)) 17754 17755 (fontified t) 17755 17756 (face (rainbow-delimiters-depth-5-face) fontified t) 17756 17773 (fontified t) 17773 17775 (face font-lock-keyword-face fontified t) 17775 17788 (fontified t) 17788 17789 (face (rainbow-delimiters-depth-6-face) fontified t) 17789 17794 (fontified t) 17794 17795 (face (rainbow-delimiters-depth-6-face) fontified t) 17795 17796 (fontified t) 17796 17797 (face (rainbow-delimiters-depth-6-face) fontified t) 17797 17798 (fontified t) 17798 17801 (face font-lock-comment-delimiter-face fontified t) 17801 17810 (face font-lock-comment-face fontified t) 17810 17830 (fontified t) 17830 17835 (face font-lock-keyword-face fontified t) 17835 17842 (fontified t) 17842 17843 (face (rainbow-delimiters-depth-7-face) fontified t) 17843 17868 (fontified t) 17868 17879 (face font-lock-type-face fontified t) 17879 17881 (fontified t) 17881 17895 (face font-lock-type-face fontified t) 17895 17926 (fontified t) 17926 17937 (face font-lock-type-face fontified t) 17937 17939 (fontified t) 17939 17952 (face font-lock-type-face fontified t) 17952 17953 (fontified t) 17953 17954 (face (rainbow-delimiters-depth-8-face) fontified t) 17954 17987 (fontified t) 17987 17992 (face font-lock-variable-name-face fontified t) 17992 18026 (fontified t) 18026 18034 (face font-lock-type-face fontified t) 18034 18035 (fontified t) 18035 18036 (face (rainbow-delimiters-depth-9-face) fontified t) 18036 18073 (fontified t) 18073 18078 (face font-lock-variable-name-face fontified t) 18078 18080 (fontified t) 18080 18092 (face font-lock-type-face fontified t) 18092 18094 (fontified t) 18094 18101 (face font-lock-type-face fontified t) 18101 18139 (fontified t) 18139 18151 (face font-lock-variable-name-face fontified t) 18151 18153 (fontified t) 18153 18164 (face font-lock-type-face fontified t) 18164 18166 (fontified t) 18166 18170 (face font-lock-type-face fontified t) 18170 18171 (face (rainbow-delimiters-depth-1-face) fontified t) 18171 18178 (face font-lock-type-face fontified t) 18178 18180 (fontified t) 18180 18186 (face font-lock-type-face fontified t) 18186 18187 (face (rainbow-delimiters-depth-1-face) fontified t) 18187 18260 (fontified t) 18260 18261 (face (rainbow-delimiters-depth-9-face) fontified t) 18261 18326 (fontified t) 18326 18327 (face (rainbow-delimiters-depth-8-face) fontified t) 18327 18329 (fontified t) 18329 18330 (syntax-table (1) fontified t) 18330 18340 (fontified t) 18340 18341 (face (rainbow-delimiters-depth-8-face) fontified t) 18341 18342 (face (rainbow-delimiters-depth-8-face) fontified t) 18342 18368 (fontified t) 18368 18379 (face font-lock-type-face fontified t) 18379 18381 (fontified t) 18381 18388 (face font-lock-type-face fontified t) 18388 18389 (face (rainbow-delimiters-depth-8-face) fontified t) 18389 18402 (fontified t) 18402 18403 (face (rainbow-delimiters-depth-8-face) fontified t) 18403 18405 (fontified t) 18405 18406 (syntax-table (1) fontified t) 18406 18407 (fontified t) 18407 18408 (face (rainbow-delimiters-depth-8-face) fontified t) 18408 18410 (fontified t) 18410 18449 (fontified t) 18449 18450 (face (rainbow-delimiters-depth-9-face) fontified t) 18450 18464 (fontified t) 18464 18465 (face (rainbow-delimiters-depth-9-face) fontified t) 18465 18467 (fontified t) 18467 18522 (fontified t) 18522 18523 (face (rainbow-delimiters-depth-9-face) fontified t) 18523 18524 (face (rainbow-delimiters-depth-9-face) fontified t) 18524 18550 (fontified t) 18550 18551 (face (rainbow-delimiters-depth-8-face) fontified t) 18551 18580 (fontified t) 18580 18581 (syntax-table (1) fontified t) 18581 18582 (fontified t) 18582 18583 (face (rainbow-delimiters-depth-8-face) fontified t) 18583 18584 (face (rainbow-delimiters-depth-8-face) fontified t) 18584 18605 (fontified t) 18605 18606 (face (rainbow-delimiters-depth-7-face) fontified t) 18606 18623 (fontified t) 18623 18624 (face (rainbow-delimiters-depth-6-face) fontified t) 18624 18625 (fontified t) 18625 18629 (face font-lock-keyword-face fontified t) 18629 18630 (fontified t) 18630 18631 (face (rainbow-delimiters-depth-6-face) fontified t) 18631 18640 (fontified t) 18640 18679 (fontified t) 18679 18680 (fontified t face (rainbow-delimiters-depth-7-face)) 18680 18681 (fontified t face (rainbow-delimiters-depth-7-face)) 18681 18683 (fontified t) 18683 18699 (fontified t) 18699 18700 (face (rainbow-delimiters-depth-6-face) fontified t) 18700 18718 (fontified t) 18718 18720 (face font-lock-keyword-face fontified t) 18720 18731 (fontified t) 18731 18742 (face font-lock-type-face fontified t) 18742 18744 (fontified t) 18744 18759 (face font-lock-type-face fontified t) 18759 18760 (fontified t) 18760 18761 (face (rainbow-delimiters-depth-6-face) fontified t) 18761 18782 (fontified t) 18782 18785 (face font-lock-keyword-face fontified t) 18785 18786 (fontified t) 18786 18789 (face font-lock-variable-name-face fontified t) 18789 18792 (fontified t) 18792 18799 (face font-lock-constant-face fontified t) 18799 18801 (fontified t) 18801 18808 (face font-lock-type-face fontified t) 18808 18813 (fontified t) 18813 18814 (face (rainbow-delimiters-depth-7-face) fontified t) 18814 18815 (face (rainbow-delimiters-depth-7-face) fontified t) 18815 18837 (fontified t) 18837 18840 (face font-lock-keyword-face fontified t) 18840 18841 (fontified t) 18841 18843 (face font-lock-variable-name-face fontified t) 18843 18946 (fontified t) 18946 18947 (face (rainbow-delimiters-depth-7-face) fontified t) 18947 18949 (fontified t) 18949 18950 (face (rainbow-delimiters-depth-7-face) fontified t) 18950 18972 (fontified t) 18972 18977 (face font-lock-keyword-face fontified t) 18977 18990 (fontified t) 18990 18991 (face (rainbow-delimiters-depth-7-face) fontified t) 18991 18995 (face font-lock-constant-face fontified t) 18995 18997 (fontified t) 18997 19002 (face font-lock-type-face fontified t) 19002 19004 (fontified t) 19004 19009 (face font-lock-type-face fontified t) 19009 19010 (face (rainbow-delimiters-depth-7-face) fontified t) 19010 19011 (fontified t) 19011 19012 (face (rainbow-delimiters-depth-7-face) fontified t) 19012 19037 (fontified t) 19037 19039 (face font-lock-type-face fontified t) 19039 19040 (face (rainbow-delimiters-depth-8-face) fontified t) 19040 19041 (fontified t) 19041 19042 (face (rainbow-delimiters-depth-8-face) fontified t) 19042 19044 (fontified t) 19044 19045 (fontified t syntax-table (1)) 19045 19046 (fontified t) 19046 19047 (face (rainbow-delimiters-depth-8-face) fontified t) 19047 19048 (face (rainbow-delimiters-depth-8-face) fontified t) 19048 19073 (fontified t) 19073 19076 (face font-lock-comment-delimiter-face fontified t) 19076 19108 (face font-lock-comment-face fontified t) 19108 19132 (fontified t) 19132 19135 (face font-lock-type-face fontified t) 19135 19136 (face (rainbow-delimiters-depth-8-face) fontified t) 19136 19140 (face font-lock-constant-face fontified t) 19140 19142 (fontified t) 19142 19154 (face font-lock-type-face fontified t) 19154 19156 (fontified t) 19156 19160 (face font-lock-type-face fontified t) 19160 19161 (face (rainbow-delimiters-depth-8-face) fontified t) 19161 19163 (fontified t) 19163 19164 (fontified t syntax-table (1)) 19164 19177 (fontified t) 19177 19178 (face (rainbow-delimiters-depth-8-face) fontified t) 19178 19188 (fontified t) 19188 19189 (face (rainbow-delimiters-depth-8-face) fontified t) 19189 19215 (fontified t) 19215 19218 (face font-lock-comment-delimiter-face fontified t) 19218 19271 (face font-lock-comment-face fontified t) 19271 19295 (fontified t) 19295 19298 (face font-lock-type-face fontified t) 19298 19299 (face (rainbow-delimiters-depth-8-face) fontified t) 19299 19303 (face font-lock-constant-face fontified t) 19303 19305 (fontified t) 19305 19317 (face font-lock-type-face fontified t) 19317 19319 (fontified t) 19319 19330 (face font-lock-type-face fontified t) 19330 19331 (face (rainbow-delimiters-depth-8-face) fontified t) 19331 19333 (fontified t) 19333 19334 (fontified t syntax-table (1)) 19334 19344 (fontified t) 19344 19345 (face (rainbow-delimiters-depth-8-face) fontified t) 19345 19346 (face (rainbow-delimiters-depth-8-face) fontified t) 19346 19372 (fontified t) 19372 19375 (face font-lock-comment-delimiter-face fontified t) 19375 19449 (face font-lock-comment-face fontified t) 19449 19473 (fontified t) 19473 19476 (face font-lock-type-face fontified t) 19476 19477 (face (rainbow-delimiters-depth-8-face) fontified t) 19477 19478 (fontified t) 19478 19479 (face (rainbow-delimiters-depth-8-face) fontified t) 19479 19481 (fontified t) 19481 19482 (fontified t syntax-table (1)) 19482 19483 (fontified t) 19483 19490 (face font-lock-constant-face fontified t) 19490 19492 (fontified t) 19492 19498 (face font-lock-preprocessor-face fontified t) 19498 19499 (face (rainbow-delimiters-depth-8-face) fontified t) 19499 19505 (face font-lock-string-face fontified t) 19505 19508 (fontified t) 19508 19509 (face (rainbow-delimiters-depth-8-face) fontified t) 19509 19531 (fontified t) 19531 19532 (face (rainbow-delimiters-depth-7-face) fontified t) 19532 19549 (fontified t) 19549 19550 (face (rainbow-delimiters-depth-6-face) fontified t) 19550 19563 (fontified t) 19563 19564 (face (rainbow-delimiters-depth-5-face) fontified t) 19564 19582 (fontified t) 19582 19583 (fontified t syntax-table (1)) 19583 19584 (fontified t) 19584 19585 (face (rainbow-delimiters-depth-5-face) fontified t) 19585 19586 (face (rainbow-delimiters-depth-5-face) fontified t) 19586 19595 (fontified t) 19595 19596 (face (rainbow-delimiters-depth-4-face) fontified t) 19596 19601 (fontified t) 19601 19602 (face (rainbow-delimiters-depth-3-face) fontified t) 19602 19603 (face (rainbow-delimiters-depth-2-face) fontified t) 19603 19610 (fontified t) 19610 19611 (face (rainbow-delimiters-depth-2-face) fontified t)) . 137) (undo-tree-id2573 . -17252) (undo-tree-id2574 . -16862) (undo-tree-id2575 . -17281) (undo-tree-id2576 . -17352) (undo-tree-id2577 . -18668) (undo-tree-id2578 . -17169) (undo-tree-id2579 . -17217) (undo-tree-id2580 . -17718) (undo-tree-id2581 . -17139) (undo-tree-id2582 . -17281) (undo-tree-id2583 . -17281) (undo-tree-id2584 . -17281) (t 26015 51038 394011 219000)) nil (26015 51265 483920 0) 0 nil])
([nil nil ((137 . 19748) (#("{info, warn};
use transform::{Transform, TransformUniform};
use winit::{
    event::{Event, WindowEvent,  ElementState, MouseButton, DeviceEvent, KeyboardInput, VirtualKeyCode},
    event_loop::{ControlFlow, EventLoop},
    window::WindowBuilder
};
use wgpu::util::DeviceExt;

mod texture;
mod camera;
mod transform;
mod instance;
mod model;
mod light;
// lib.rs
use winit::window::Window;

use camera::*;
use instance::*;
use model::{DrawModel, Vertex};

fn create_render_pipeline(
    device: &wgpu::Device,
    layout: &wgpu::PipelineLayout,
    color_format: wgpu::TextureFormat,
    depth_format: Option<wgpu::TextureFormat>,
    vertex_layouts: &[wgpu::VertexBufferLayout],
    shader: wgpu::ShaderModuleDescriptor,
) -> wgpu::RenderPipeline {
    let shader = device.create_shader_module(shader);

    device.create_render_pipeline(&wgpu::RenderPipelineDescriptor {
        label: Some(\"Render Pipeline\"),
        layout: Some(layout),
        vertex: wgpu::VertexState {
            module: &shader,
            entry_point: \"vs_main\",
            buffers: vertex_layouts,
        },
        fragment: Some(wgpu::FragmentState {
            module: &shader,
            entry_point: \"fs_main\",
            targets: &[Some(wgpu::ColorTargetState {
                format: color_format,
                blend: Some(wgpu::BlendState {
                    alpha: wgpu::BlendComponent::REPLACE,
                    color: wgpu::BlendComponent::REPLACE,
                }),
                write_mask: wgpu::ColorWrites::ALL,
            })],
        }),
        primitive: wgpu::PrimitiveState {
            topology: wgpu::PrimitiveTopology::TriangleList,
            strip_index_format: None,
            front_face: wgpu::FrontFace::Ccw,
            cull_mode: Some(wgpu::Face::Back),
            // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
            polygon_mode: wgpu::PolygonMode::Fill,
            // Requires Features::DEPTH_CLIP_CONTROL
            unclipped_depth: false,
            // Requires Features::CONSERVATIVE_RASTERIZATION
            conservative: false,
        },
        depth_stencil: depth_format.map(|format| wgpu::DepthStencilState {
            format,
            depth_write_enabled: true,
            depth_compare: wgpu::CompareFunction::Less,
            stencil: wgpu::StencilState::default(),
            bias: wgpu::DepthBiasState::default(),
        }),
        multisample: wgpu::MultisampleState {
            count: 1,
            mask: !0,
            alpha_to_coverage_enabled: false,
        },
        multiview: None,
    })
}

struct State {
    surface: wgpu::Surface,
    device: wgpu::Device,
    queue: wgpu::Queue,
    config: wgpu::SurfaceConfiguration,
    size: winit::dpi::PhysicalSize<u32>,
    // The window must be declared after the surface so
    // it gets dropped after it as the surface contains
    // unsafe references to the window's resources.
    window: Window,
    render_pipeline: wgpu::RenderPipeline,
    obj_model: model::Model,


    texture_bind_group_layout: wgpu::BindGroupLayout,
    depth_texture: Texture,
    

    camera: camera::Camera, // UPDATED!
    projection: camera::Projection, // NEW!
    camera_controller: camera::CameraController, // UPDATED!
    // ...
    // NEW!
    mouse_pressed: bool,


    camera_uniform: CameraUniform,
    camera_buffer: wgpu::Buffer,
    camera_bind_group: wgpu::BindGroup,

    light_uniform: LightUniform,
    light_buffer: wgpu::Buffer,
    light_bind_group: wgpu::BindGroup,
    light_render_pipeline: wgpu::RenderPipeline,

    instances: Vec<Instance>,
    instance_buffer: wgpu::Buffer,

    

}

impl State {
    // Creating some of the wgpu types requires async code
    async fn new(window: Window) -> Self {
        let size = window.inner_size();

        // The instance is a handle to our GPU
        // Backends::all => Vulkan + Metal + DX12 + Browser WebGPU
        let instance = wgpu::Instance::new(wgpu::InstanceDescriptor {
            backends: wgpu::Backends::all(),
            ..Default::default()
        });
        
        // # Safety
        //
        // The surface needs to live as long as the window that created it.
        // State owns the window, so this should be safe.
        let surface = unsafe { instance.create_surface(&window) }.unwrap();

        let adapter = instance.request_adapter(
            &wgpu::RequestAdapterOptions {
                power_preference: wgpu::PowerPreference::default(),
                compatible_surface: Some(&surface),
                force_fallback_adapter: false,
            },
        ).await.unwrap();

        let (device, queue) = adapter.request_device(
            &wgpu::DeviceDescriptor {
                features: wgpu::Features::empty(),
                // WebGL doesn't support all of wgpu's features, so if
                // we're building for the web, we'll have to disable some.
                limits: if cfg!(target_arch = \"wasm32\") {
                    wgpu::Limits::downlevel_webgl2_defaults()
                } else {
                    wgpu::Limits::default()
                },
                label: None,
            },
            None, // Trace path
        ).await.unwrap();


        let surface_caps = surface.get_capabilities(&adapter);
        // Shader code in this tutorial assumes an sRGB surface texture. Using a different
        // one will result in all the colors coming out darker. If you want to support non
        // sRGB surfaces, you'll need to account for that when drawing to the frame.
        let surface_format = surface_caps.formats.iter()
            .copied()
            .filter(|f| f.is_srgb())
            .next()
            .unwrap_or(surface_caps.formats[0]);
        let config = wgpu::SurfaceConfiguration {
            usage: wgpu::TextureUsages::RENDER_ATTACHMENT,
            format: surface_format,
            width: size.width,
            height: size.height,
            present_mode: surface_caps.present_modes[0],
            alpha_mode: surface_caps.alpha_modes[0],
            view_formats: vec![],
        };
        surface.configure(&device, &config);
        

        let texture_bind_group_layout =
            device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
                entries: &[
                    wgpu::BindGroupLayoutEntry {
                        binding: 0,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        ty: wgpu::BindingType::Texture {
                            multisampled: false,
                            view_dimension: wgpu::TextureViewDimension::D2,
                            sample_type: wgpu::TextureSampleType::Float { filterable: true },
                        },
                        count: None,
                    },
                    wgpu::BindGroupLayoutEntry {
                        binding: 1,
                        visibility: wgpu::ShaderStages::FRAGMENT,
                        // This should match the filterable field of the
                        // corresponding Texture entry above.
                        ty: wgpu::BindingType::Sampler(wgpu::SamplerBindingType::Filtering),
                        count: None,
                    },
                ],
                label: Some(\"texture_bind_group_layout\"),
            });

        info!(\"Load model\");
        let obj_model = model::load_obj(\"/Users/zhang/Downloads/GF2_Cheeta/CheetaDefault.obj\", &device, &queue, &texture_bind_group_layout).unwrap();

        let depth_texture = texture::Texture::create_depth_texture(&device, &config, \"depth_texture\");


        let camera = camera::Camera::new((0.0, 5.0, 10.0), cgmath::Deg(-90.0), cgmath::Deg(-20.0));
        let projection = camera::Projection::new(config.width, config.height, cgmath::Deg(45.0), 0.1, 100.0);
        let camera_controller = camera::CameraController::new(4.0, 0.4);



        let mut camera_uniform = CameraUniform::new();
        camera_uniform.update_view_proj(&camera, &projection); // UPDATED!
        let camera_buffer = camera_uniform.create_camera_buffer(&device);


        let camera_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
            entries: &[
                wgpu::BindGroupLayoutEntry {
                    binding: 0,
                    visibility: wgpu::ShaderStages::VERTEX | wgpu::ShaderStages::FRAGMENT,
                    ty: wgpu::BindingType::Buffer {
                        ty: wgpu::BufferBindingType::Uniform,
                        has_dynamic_offset: false,
                        min_binding_size: None,
                    },
                    count: None,
                }
            ],
            label: Some(\"camera_bind_group_layout\"),
        });

        let camera_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
            layout: &camera_bind_group_layout,
            entries: &[
                wgpu::BindGroupEntry {
                    binding: 0,
                    resource: camera_buffer.as_entire_binding(),
                }
            ],
            label: Some(\"camera_bind_group\"),
        });

        let light_uniform = light::LightUniform {
            position: [2.0, 2.0, 2.0, 1.0],
            color: [1.0, 1.0, 1.0, 1.0],
        };
        let (light_buffer, light_bind_group_layout, light_bind_group) =
            light::create_light_buffer_and_bind_group(&device, &light_uniform);


        //shader file & render pipeline
        let render_pipeline_layout =
            device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Render Pipeline Layout\"),
                bind_group_layouts: &[
                    &texture_bind_group_layout,
                    &camera_bind_group_layout,
                    &light_bind_group_layout,
                ],
                push_constant_ranges: &[],
            });
        
        let render_pipeline = {
            let shader = wgpu::include_wgsl!(\"shader.wgsl\");

            create_render_pipeline(
                &device,
                &render_pipeline_layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc(), InstanceRaw::desc()],
                shader,
            )
        };

  
        
        let instances = vec![
            Instance {
                position: cgmath::Vector3::zero(),
                rotation: cgmath::Quaternion::from_angle_y(cgmath::Deg(0.0)),
                scaling: cgmath::Vector3::new(1.0, 1.0, 1.0),
            },
        ];
        let instance_data = instances.iter().map(Instance::to_raw).collect::<Vec<_>>();
        let instance_buffer = instance::create_instances_buffer(&device, &instance_data);

        // lib.rs
        let light_render_pipeline = {
            let layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
                label: Some(\"Light Pipeline Layout\"),
                bind_group_layouts: &[
                    &camera_bind_group_layout,
                    &light_bind_group_layout
                ],
                push_constant_ranges: &[],
            });
            let shader = wgpu::include_wgsl!(\"light.wgsl\");

            create_render_pipeline(
                &device,
                &layout,
                config.format,
                Some(texture::Texture::DEPTH_FORMAT),
                &[model::ModelVertex::desc()],
                shader,
            )
        };


        Self {
            window,
            surface,
            device,
            queue,
            config,
            size,
            render_pipeline,
        

            obj_model,
            
            texture_bind_group_layout,
            depth_texture,
            
            camera,
            projection,
            camera_controller,
            mouse_pressed: false,
            
            camera_uniform,
            camera_buffer,
            camera_bind_group,

            light_uniform,
            light_buffer,
            light_bind_group,
            light_render_pipeline,
           

            instances,
            instance_buffer,
        }

    }

    pub fn window(&self) -> &Window {
        &self.window
    }

    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {
        if new_size.width > 0 && new_size.height > 0 {
            self.size = new_size;
            self.config.width = new_size.width;
            self.config.height = new_size.height;
            self.surface.configure(&self.device, &self.config);
            self.depth_texture = texture::Texture::create_depth_texture(&self.device, &self.config, \"depth_texture\");
            self.projection.resize(new_size.width, new_size.height);

            
        }
    }

    fn input(&mut self, event: &WindowEvent) -> bool {
          match event {
            WindowEvent::KeyboardInput {
                input:
                    KeyboardInput {
                        virtual_keycode: Some(key),
                        state,
                        ..
                    },
                ..
            } => self.camera_controller.process_keyboard(*key, *state),
            WindowEvent::MouseWheel { delta, .. } => {
                self.camera_controller.process_scroll(delta);
                true
            }
            WindowEvent::MouseInput {
                button: MouseButton::Left,
                state,
                ..
            } => {
                self.mouse_pressed = *state == ElementState::Pressed;
                true
            }
            _ => false,
        }


    }

    fn update(&mut self, dt: instant::Duration) {
        self.camera_controller.update_camera(&mut self.camera, dt);
        self.camera_uniform.update_view_proj(&self.camera, &self.projection);
        self.queue.write_buffer(&self.camera_buffer, 0, bytemuck::cast_slice(&[self.camera_uniform]));

        // Update the light
        let old_position = cgmath::Vector4::from(self.light_uniform.position);
        // self.light_uniform.position =
        //     (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(1.0))
        //      * old_position)
        //     .into();

        self.light_uniform.position =
            (cgmath::Matrix4::from_axis_angle((0.0, 1.0, 0.0).into(), cgmath::Deg(60.0 * dt.as_secs_f32()))
             * old_position).into(); // UPDATED!

        self.queue.write_buffer(&self.light_buffer, 0, bytemuck::cast_slice(&[self.light_uniform]));

    }

    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {
        let output = self.surface.get_current_texture()?;
        let view = output.texture.create_view(&wgpu::TextureViewDescriptor::default());
        let mut encoder = self.device.create_command_encoder(&wgpu::CommandEncoderDescriptor {
            label: Some(\"Render Encoder\"),
        });
        
        let mut render_pass = encoder.begin_render_pass(&wgpu::RenderPassDescriptor {
            label: Some(\"Render Pass\"),
            color_attachments: &[Some(wgpu::RenderPassColorAttachment {
                view: &view,
                resolve_target: None,
                ops: wgpu::Operations {
                    load: wgpu::LoadOp::Clear(wgpu::Color::BLACK ),
                    store: wgpu::StoreOp::Store,
                },
            })],
            depth_stencil_attachment: Some(wgpu::RenderPassDepthStencilAttachment {
                view: &self.depth_texture.view,
                depth_ops: Some(wgpu::Operations {
                    load: wgpu::LoadOp::Clear(1.0),
                    store: wgpu::StoreOp::Store,
                }),
                stencil_ops: None,
            }),
            occlusion_query_set: None,
            timestamp_writes: None,
        });
        // NEW!
        render_pass.set_vertex_buffer(1, self.instance_buffer.slice(..));

//        info!(\"start light render pipeline\");
        use crate::model::DrawLight; // NEW!
        render_pass.set_pipeline(&self.light_render_pipeline); // NEW!
        render_pass.draw_light_model(
            &self.obj_model,
            &self.camera_bind_group,
            &self.light_bind_group,
        ); // NEW!

//        info!(\"start model render pipeline\");
        render_pass.set_pipeline(&self.render_pipeline); // 2.
        render_pass.draw_model_instanced(
            &self.obj_model,
            0..self.instances.len() as u32,
            &self.camera_bind_group,
            &self.light_bind_group,
        );

        drop(render_pass);


        // submit will accept anything that implements IntoIter
        self.queue.submit(std::iter::once(encoder.finish()));
        output.present();

        Ok(())

    }
}


pub async fn run() {
    
    let event_loop = EventLoop::new();
    let title = env!(\"CARGO_PKG_NAME\");
    let window = winit::window::WindowBuilder::new()
        .with_title(title)
        .build(&event_loop)
        .unwrap();
    
     let mut state = State::new(window).await; // NEW!
    let mut last_render_time = instant::Instant::now();
    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Poll;
        match event {
            Event::MainEventsCleared => state.window().request_redraw(),
            // NEW!
            Event::DeviceEvent {
                event: DeviceEvent::MouseMotion{ delta, },
                .. // We're not using device_id currently
            } => if state.mouse_pressed {
                state.camera_controller.process_mouse(delta.0, delta.1)
            }
            // UPDATED!
            Event::WindowEvent {
                ref event,
                window_id,
            } if window_id == state.window().id() && !state.input(event) => {
                match event {
                    #[cfg(not(target_arch=\"wasm32\"))]
                    WindowEvent::CloseRequested
                    | WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                virtual_keycode: Some(VirtualKeyCode::Escape),
                                ..
                            },
                        ..
                    } => *control_flow = ControlFlow::Exit,
                    WindowEvent::Resized(physical_size) => {
                        state.resize(*physical_size);
                    }
                    WindowEvent::ScaleFactorChanged { new_inner_size, .. } => {
                        state.resize(**new_inner_size);
                    }
                    _ => {}
                }
            }
            // UPDATED!
            Event::RedrawRequested(window_id) if window_id == state.window().id() => {
                let now = instant::Instant::now();
                let dt = now - last_render_time;
                last_render_time = now;
                state.update(dt);
                match state.render() {
                    Ok(_) => {}
                    // Reconfigure the surface if it's lost or outdated
                    Err(wgpu::SurfaceError::Lost | wgpu::SurfaceError::Outdated) => state.resize(state.size),
                    // The system is out of memory, we should probably quit
                    Err(wgpu::SurfaceError::OutOfMemory) => *control_flow = ControlFlow::Exit,
                    // We're ignoring timeouts
                    Err(wgpu::SurfaceError::Timeout) => warn!(\"Surface timeout\"),
                }
            }
            _ => {}
        }
    }" 0 19666 (fontified nil)) . 137) (undo-tree-id2572 . -17329) (t 26015 51164 210548 797000)) nil (26015 51265 483906 0) 0 nil])
([nil nil ((17516 . 17529) (t 26015 51181 933535 608000)) nil (26015 51265 483894 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 17934 . 17935) (nil fontified nil 17529 . 17935) (17529 . 17935)) nil (26015 51265 483892 0) 0 nil])
([nil nil ((17953 . 17957) (17904 . 17920) (#("            " 0 12 (fontified t)) . 17904) (17860 . 17876) (#("            " 0 12 (fontified t)) . 17860) (17761 . 17777) (#("            " 0 12 (fontified t)) . 17761) (17667 . 17683) (#("            " 0 12 (fontified t)) . 17667) (17648 . 17664) (#("            " 0 12 (fontified t)) . 17648) (17598 . 17614) (#("            " 0 12 (fontified t)) . 17598) (17553 . 17569) (#("            " 0 12 (fontified t)) . 17553) (#("        " 0 8 (fontified t)) . -17529) 17507) nil (26015 51265 483885 0) 0 nil])
([nil nil ((#("window" 0 6 (fontified t)) . -17920) (undo-tree-id2593 . -6) (undo-tree-id2594 . -6) (undo-tree-id2595 . -6) (undo-tree-id2596 . -6) (undo-tree-id2597 . -6) (undo-tree-id2598 . -6) (undo-tree-id2599 . -6) (undo-tree-id2600 . -6) (undo-tree-id2601 . -6) (undo-tree-id2602 . -6) (undo-tree-id2603 . -6) (undo-tree-id2604 . -6) (undo-tree-id2605 . -6) (undo-tree-id2606 . -6) (undo-tree-id2607 . -6) (undo-tree-id2608 . -6) (undo-tree-id2609 . -6) (undo-tree-id2610 . -6) (undo-tree-id2611 . -6) (undo-tree-id2612 . -6) (undo-tree-id2613 . -6) (undo-tree-id2614 . -6) (undo-tree-id2615 . -6) (undo-tree-id2616 . -6) 17926 (t 26015 51265 517822 485000)) nil (26015 51297 489543 0) 0 nil])
([nil nil ((17920 . 17929)) nil (26015 51297 489518 0) 0 nil])
([nil current ((17926 . 17932) (#("win" 0 3 (fontified nil)) . 17926) (17926 . 17929) (#("window" 0 6 (fontified nil)) . -17926) (17926 . 17932) (#("win" 0 3 (fontified t)) . -17926) (undo-tree-id2585 . -3) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -2) (undo-tree-id2590 . -2) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) 17929) nil (26015 51297 489510 0) 0 nil])
nil
